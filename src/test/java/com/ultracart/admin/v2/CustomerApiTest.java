/**
 * UltraCart Rest API V2
 * This is the next generation UltraCart REST API...
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.ultracart.admin.v2;

import com.ultracart.admin.v2.swagger.ApiException;
import com.ultracart.admin.v2.models.CustomerResponse;
import com.ultracart.admin.v2.models.ErrorResponse;
import com.ultracart.admin.v2.models.Customer;
import com.ultracart.admin.v2.models.CustomersResponse;
import org.junit.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CustomerApi
 */
public class CustomerApiTest {

    private final CustomerApi api = new CustomerApi();

    
    /**
     * Retrieve a customer
     *
     * Retrieves a single customer using the specified customer profile oid. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void customerCustomersCustomerProfileOidGetTest() throws ApiException {
        Integer customerProfileOid = null;
        String expand = null;
        // CustomerResponse response = api.customerCustomersCustomerProfileOidGet(customerProfileOid, expand);

        // TODO: test validations
    }
    
    /**
     * Update a customer
     *
     * Update a customer on the UltraCart account. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void customerCustomersCustomerProfileOidPutTest() throws ApiException {
        Customer customer = null;
        Integer customerProfileOid = null;
        // CustomerResponse response = api.customerCustomersCustomerProfileOidPut(customer, customerProfileOid);

        // TODO: test validations
    }
    
    /**
     * Retrieve customers
     *
     * Retrieves customers from the account.  If no parameters are specified, all customers will be returned.  You will need to make multiple API calls in order to retrieve the entire result set since this API performs result set pagination. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void customerCustomersGetTest() throws ApiException {
        String email = null;
        String qbClass = null;
        String quickbooksCode = null;
        String lastModifiedDtsStart = null;
        String lastModifiedDtsEnd = null;
        String signupDtsStart = null;
        String signupDtsEnd = null;
        String billingFirstName = null;
        String billingLastName = null;
        String billingCompany = null;
        String billingCity = null;
        String billingState = null;
        String billingPostalCode = null;
        String billingCountryCode = null;
        String billingDayPhone = null;
        String billingEveningPhone = null;
        String shippingFirstName = null;
        String shippingLastName = null;
        String shippingCompany = null;
        String shippingCity = null;
        String shippingState = null;
        String shippingPostalCode = null;
        String shippingCountryCode = null;
        String shippingDayPhone = null;
        String shippingEveningPhone = null;
        Integer pricingTierOid = null;
        String pricingTierName = null;
        Integer limit = null;
        Integer offset = null;
        String since = null;
        String sort = null;
        String expand = null;
        // CustomersResponse response = api.customerCustomersGet(email, qbClass, quickbooksCode, lastModifiedDtsStart, lastModifiedDtsEnd, signupDtsStart, signupDtsEnd, billingFirstName, billingLastName, billingCompany, billingCity, billingState, billingPostalCode, billingCountryCode, billingDayPhone, billingEveningPhone, shippingFirstName, shippingLastName, shippingCompany, shippingCity, shippingState, shippingPostalCode, shippingCountryCode, shippingDayPhone, shippingEveningPhone, pricingTierOid, pricingTierName, limit, offset, since, sort, expand);

        // TODO: test validations
    }
    
}
