/*
 * UltraCart Rest API V2
 * This is the next generation UltraCart REST API...
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2;

import com.ultracart.admin.v2.swagger.ApiException;
import com.ultracart.admin.v2.models.Customer;
import com.ultracart.admin.v2.models.CustomerEditorValues;
import com.ultracart.admin.v2.models.CustomerQuery;
import com.ultracart.admin.v2.models.CustomerResponse;
import com.ultracart.admin.v2.models.CustomersResponse;
import com.ultracart.admin.v2.models.ErrorResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CustomerApi
 */
@Ignore
public class CustomerApiTest {

    private final CustomerApi api = new CustomerApi();

    
    /**
     * Delete a customer
     *
     * Delete a customer on the UltraCart account. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteCustomerTest() throws ApiException {
        Integer customerProfileOid = null;
        CustomerResponse response = api.deleteCustomer(customerProfileOid);

        // TODO: test validations
    }
    
    /**
     * Retrieve a customer
     *
     * Retrieves a single customer using the specified customer profile oid. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCustomerTest() throws ApiException {
        Integer customerProfileOid = null;
        String expand = null;
        CustomerResponse response = api.getCustomer(customerProfileOid, expand);

        // TODO: test validations
    }
    
    /**
     * Retrieve customers
     *
     * Retrieves customers from the account.  If no parameters are specified, all customers will be returned.  You will need to make multiple API calls in order to retrieve the entire result set since this API performs result set pagination. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCustomersTest() throws ApiException {
        String email = null;
        String qbClass = null;
        String quickbooksCode = null;
        String lastModifiedDtsStart = null;
        String lastModifiedDtsEnd = null;
        String signupDtsStart = null;
        String signupDtsEnd = null;
        String billingFirstName = null;
        String billingLastName = null;
        String billingCompany = null;
        String billingCity = null;
        String billingState = null;
        String billingPostalCode = null;
        String billingCountryCode = null;
        String billingDayPhone = null;
        String billingEveningPhone = null;
        String shippingFirstName = null;
        String shippingLastName = null;
        String shippingCompany = null;
        String shippingCity = null;
        String shippingState = null;
        String shippingPostalCode = null;
        String shippingCountryCode = null;
        String shippingDayPhone = null;
        String shippingEveningPhone = null;
        Integer pricingTierOid = null;
        String pricingTierName = null;
        Integer limit = null;
        Integer offset = null;
        String since = null;
        String sort = null;
        String expand = null;
        CustomersResponse response = api.getCustomers(email, qbClass, quickbooksCode, lastModifiedDtsStart, lastModifiedDtsEnd, signupDtsStart, signupDtsEnd, billingFirstName, billingLastName, billingCompany, billingCity, billingState, billingPostalCode, billingCountryCode, billingDayPhone, billingEveningPhone, shippingFirstName, shippingLastName, shippingCompany, shippingCity, shippingState, shippingPostalCode, shippingCountryCode, shippingDayPhone, shippingEveningPhone, pricingTierOid, pricingTierName, limit, offset, since, sort, expand);

        // TODO: test validations
    }
    
    /**
     * Retrieve customers by query
     *
     * Retrieves customers from the account.  If no parameters are specified, all customers will be returned.  You will need to make multiple API calls in order to retrieve the entire result set since this API performs result set pagination. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCustomersByQueryTest() throws ApiException {
        CustomerQuery customerQuery = null;
        Integer limit = null;
        Integer offset = null;
        String since = null;
        String sort = null;
        String expand = null;
        CustomersResponse response = api.getCustomersByQuery(customerQuery, limit, offset, since, sort, expand);

        // TODO: test validations
    }
    
    /**
     * Retrieve values needed for a customer profile editor
     *
     * Retrieve values needed for a customer profile editor. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getEditorValuesTest() throws ApiException {
        CustomerEditorValues response = api.getEditorValues();

        // TODO: test validations
    }
    
    /**
     * Insert a customer
     *
     * Insert a customer on the UltraCart account. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void insertCustomerTest() throws ApiException {
        Customer customer = null;
        String expand = null;
        CustomerResponse response = api.insertCustomer(customer, expand);

        // TODO: test validations
    }
    
    /**
     * Update a customer
     *
     * Update a customer on the UltraCart account. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateCustomerTest() throws ApiException {
        Customer customer = null;
        Integer customerProfileOid = null;
        String expand = null;
        CustomerResponse response = api.updateCustomer(customer, customerProfileOid, expand);

        // TODO: test validations
    }
    
}
