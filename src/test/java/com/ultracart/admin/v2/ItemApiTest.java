/**
 * UltraCart Rest API V2
 * This is the next generation UltraCart REST API...
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.ultracart.admin.v2;

import com.ultracart.admin.v2.swagger.ApiException;
import com.ultracart.admin.v2.models.ErrorResponse;
import com.ultracart.admin.v2.models.ItemResponse;
import com.ultracart.admin.v2.models.ItemsResponse;
import com.ultracart.admin.v2.models.Item;
import com.ultracart.admin.v2.models.TempMultimediaResponse;
import java.io.File;
import org.junit.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ItemApi
 */
public class ItemApiTest {

    private final ItemApi api = new ItemApi();

    
    /**
     * Delete an item
     *
     * Delete an item on the UltraCart account. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteItemTest() throws ApiException {
        Integer merchantItemOid = null;
        // api.deleteItem(merchantItemOid);

        // TODO: test validations
    }
    
    /**
     * Retrieve an item
     *
     * Retrieves a single item using the specified item oid. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getItemTest() throws ApiException {
        Integer merchantItemOid = null;
        String expand = null;
        Boolean placeholders = null;
        // ItemResponse response = api.getItem(merchantItemOid, expand, placeholders);

        // TODO: test validations
    }
    
    /**
     * Retrieve items
     *
     * Retrieves a group of items from the account.  If no parameters are specified, all items will be returned.  You will need to make multiple API calls in order to retrieve the entire result set since this API performs result set pagination. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getItemsTest() throws ApiException {
        Integer parentCategoryId = null;
        String parentCategoryPath = null;
        Integer limit = null;
        Integer offset = null;
        String since = null;
        String sort = null;
        String expand = null;
        Boolean placeholders = null;
        // ItemsResponse response = api.getItems(parentCategoryId, parentCategoryPath, limit, offset, since, sort, expand, placeholders);

        // TODO: test validations
    }
    
    /**
     * Create an item
     *
     * Create a new item on the UltraCart account. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void insertItemTest() throws ApiException {
        Item item = null;
        String expand = null;
        Boolean placeholders = null;
        // ItemResponse response = api.insertItem(item, expand, placeholders);

        // TODO: test validations
    }
    
    /**
     * Update an item
     *
     * Update a new item on the UltraCart account. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateItemTest() throws ApiException {
        Item item = null;
        Integer merchantItemOid = null;
        String expand = null;
        Boolean placeholders = null;
        // ItemResponse response = api.updateItem(item, merchantItemOid, expand, placeholders);

        // TODO: test validations
    }
    
    /**
     * Upload an image to the temporary multimedia.
     *
     * Uploads an image and returns back meta information about the image as well as the identifier needed for the item update. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void uploadTemporaryMultimediaTest() throws ApiException {
        File file = null;
        // TempMultimediaResponse response = api.uploadTemporaryMultimedia(file);

        // TODO: test validations
    }
    
}
