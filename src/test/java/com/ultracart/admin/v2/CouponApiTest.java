/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2;

import com.ultracart.admin.v2.swagger.ApiException;
import com.ultracart.admin.v2.models.Coupon;
import com.ultracart.admin.v2.models.CouponCodesRequest;
import com.ultracart.admin.v2.models.CouponCodesResponse;
import com.ultracart.admin.v2.models.CouponEditorValues;
import com.ultracart.admin.v2.models.CouponQuery;
import com.ultracart.admin.v2.models.CouponResponse;
import com.ultracart.admin.v2.models.CouponsResponse;
import com.ultracart.admin.v2.models.ErrorResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CouponApi
 */
@Ignore
public class CouponApiTest {

    private final CouponApi api = new CouponApi();

    
    /**
     * Delete a coupon
     *
     * Delete a coupon on the UltraCart account. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteCouponTest() throws ApiException {
        Integer couponOid = null;
        CouponResponse response = api.deleteCoupon(couponOid);

        // TODO: test validations
    }
    
    /**
     * Generates one time codes for a coupon
     *
     * Generate one time codes for a coupon 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void generateCouponCodesTest() throws ApiException {
        Integer couponOid = null;
        CouponCodesRequest couponCodesRequest = null;
        CouponCodesResponse response = api.generateCouponCodes(couponOid, couponCodesRequest);

        // TODO: test validations
    }
    
    /**
     * Generates one time codes by merchant code
     *
     * Generate one time codes by merchant code 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void generateOneTimeCodesByMerchantCodeTest() throws ApiException {
        String merchantCode = null;
        CouponCodesRequest couponCodesRequest = null;
        CouponCodesResponse response = api.generateOneTimeCodesByMerchantCode(merchantCode, couponCodesRequest);

        // TODO: test validations
    }
    
    /**
     * Retrieve a coupon
     *
     * Retrieves a single coupon using the specified coupon profile oid. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCouponTest() throws ApiException {
        Integer couponOid = null;
        String expand = null;
        CouponResponse response = api.getCoupon(couponOid, expand);

        // TODO: test validations
    }
    
    /**
     * Retrieve a coupon by merchant code
     *
     * Retrieves a single coupon using the specified merchant code. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCouponByMerchantCodeTest() throws ApiException {
        String merchantCode = null;
        String expand = null;
        CouponResponse response = api.getCouponByMerchantCode(merchantCode, expand);

        // TODO: test validations
    }
    
    /**
     * Retrieve coupons
     *
     * Retrieves coupons for this account.  If no parameters are specified, all coupons will be returned.  You will need to make multiple API calls in order to retrieve the entire result set since this API performs result set pagination. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCouponsTest() throws ApiException {
        String merchantCode = null;
        String description = null;
        String couponType = null;
        String startDateBegin = null;
        String startDateEnd = null;
        String expirationDateBegin = null;
        String expirationDateEnd = null;
        Integer affiliateOid = null;
        Boolean excludeExpired = null;
        Integer limit = null;
        Integer offset = null;
        String sort = null;
        String expand = null;
        CouponsResponse response = api.getCoupons(merchantCode, description, couponType, startDateBegin, startDateEnd, expirationDateBegin, expirationDateEnd, affiliateOid, excludeExpired, limit, offset, sort, expand);

        // TODO: test validations
    }
    
    /**
     * Retrieve coupons by query
     *
     * Retrieves coupons from the account.  If no parameters are specified, all coupons will be returned.  You will need to make multiple API calls in order to retrieve the entire result set since this API performs result set pagination. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCouponsByQueryTest() throws ApiException {
        CouponQuery couponQuery = null;
        Integer limit = null;
        Integer offset = null;
        String sort = null;
        String expand = null;
        CouponsResponse response = api.getCouponsByQuery(couponQuery, limit, offset, sort, expand);

        // TODO: test validations
    }
    
    /**
     * Retrieve values needed for a coupon editor
     *
     * Retrieve values needed for a coupon editor 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getEditorValuesTest() throws ApiException {
        CouponEditorValues response = api.getEditorValues();

        // TODO: test validations
    }
    
    /**
     * Insert a coupon
     *
     * Insert a coupon on the UltraCart account. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void insertCouponTest() throws ApiException {
        Coupon coupon = null;
        String expand = null;
        CouponResponse response = api.insertCoupon(coupon, expand);

        // TODO: test validations
    }
    
    /**
     * Update a coupon
     *
     * Update a coupon on the UltraCart account. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateCouponTest() throws ApiException {
        Coupon coupon = null;
        Integer couponOid = null;
        String expand = null;
        CouponResponse response = api.updateCoupon(coupon, couponOid, expand);

        // TODO: test validations
    }
    
}
