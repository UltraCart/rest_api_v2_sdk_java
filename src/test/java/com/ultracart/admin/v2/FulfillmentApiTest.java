/**
 * UltraCart Rest API V2
 * This is the next generation UltraCart REST API...
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.ultracart.admin.v2;

import com.ultracart.admin.v2.swagger.ApiException;
import com.ultracart.admin.v2.models.ErrorResponse;
import com.ultracart.admin.v2.models.FulfillmentInventory;
import com.ultracart.admin.v2.models.OrdersResponse;
import com.ultracart.admin.v2.models.FulfillmentShipment;
import com.ultracart.admin.v2.models.DistributionCentersResponse;
import org.junit.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for FulfillmentApi
 */
public class FulfillmentApiTest {

    private final FulfillmentApi api = new FulfillmentApi();

    
    /**
     * Acknowledge receipt of orders.
     *
     * Acknowledge receipt of orders so that they are removed from the fulfillment queue.  This method must be called after receiving and order (via webhook) or retrieving (via retrieve orders method). 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fulfillmentDistributionCentersDistributionCenterCodeAcknowledgementsPutTest() throws ApiException {
        String distributionCenterCode = null;
        List<String> orderIds = null;
        // api.fulfillmentDistributionCentersDistributionCenterCodeAcknowledgementsPut(distributionCenterCode, orderIds);

        // TODO: test validations
    }
    
    /**
     * Update inventory
     *
     * Update the inventory for items associated with this distribution center 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fulfillmentDistributionCentersDistributionCenterCodeInventoryPostTest() throws ApiException {
        String distributionCenterCode = null;
        List<FulfillmentInventory> inventories = null;
        // api.fulfillmentDistributionCentersDistributionCenterCodeInventoryPost(distributionCenterCode, inventories);

        // TODO: test validations
    }
    
    /**
     * Retrieve orders queued up for this distribution center.
     *
     * Retrieves up to 100 orders that are queued up in this distribution center.  You must acknowledge them before additional new orders will be returned.  The orders that are returned contain only items for this distribution center and are expanded with billing, buysafe, channel_partner, checkout, coupons, customer_profile, edi, gift, gift_certificate, internal, items, payment, shipping, summary, taxes. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fulfillmentDistributionCentersDistributionCenterCodeOrdersGetTest() throws ApiException {
        String distributionCenterCode = null;
        // OrdersResponse response = api.fulfillmentDistributionCentersDistributionCenterCodeOrdersGet(distributionCenterCode);

        // TODO: test validations
    }
    
    /**
     * Mark orders as shipped
     *
     * Store the tracking information and mark the order shipped for this distribution center. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fulfillmentDistributionCentersDistributionCenterCodeShipmentsPostTest() throws ApiException {
        String distributionCenterCode = null;
        List<FulfillmentShipment> shipments = null;
        // api.fulfillmentDistributionCentersDistributionCenterCodeShipmentsPost(distributionCenterCode, shipments);

        // TODO: test validations
    }
    
    /**
     * Retrieve distribution centers
     *
     * Retrieves the distribution centers that this user has access to. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fulfillmentDistributionCentersGetTest() throws ApiException {
        // DistributionCentersResponse response = api.fulfillmentDistributionCentersGet();

        // TODO: test validations
    }
    
}
