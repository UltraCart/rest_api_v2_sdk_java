/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2;

import com.ultracart.admin.v2.swagger.ApiException;
import com.ultracart.admin.v2.models.ChargebackDispute;
import com.ultracart.admin.v2.models.ChargebackDisputeResponse;
import com.ultracart.admin.v2.models.ChargebackDisputesResponse;
import com.ultracart.admin.v2.models.ErrorResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ChargebackApi
 */
@Ignore
public class ChargebackApiTest {

    private final ChargebackApi api = new ChargebackApi();

    
    /**
     * Delete a chargeback
     *
     * Delete a chargeback on the UltraCart account. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteChargebackTest() throws ApiException {
        Integer chargebackDisputeOid = null;
        ChargebackDisputeResponse response = api.deleteChargeback(chargebackDisputeOid);

        // TODO: test validations
    }
    
    /**
     * Retrieve a chargeback
     *
     * Retrieves a single chargeback using the specified chargeback dispute oid. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getChargebackDisputeTest() throws ApiException {
        Integer chargebackDisputeOid = null;
        String expand = null;
        ChargebackDisputeResponse response = api.getChargebackDispute(chargebackDisputeOid, expand);

        // TODO: test validations
    }
    
    /**
     * Retrieve chargebacks
     *
     * Retrieves chargebacks from the account.  If no parameters are specified, all chargebacks will be returned.  You will need to make multiple API calls in order to retrieve the entire result set since this API performs result set pagination. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getChargebackDisputesTest() throws ApiException {
        String orderId = null;
        String caseNumber = null;
        String status = null;
        String expirationDtsStart = null;
        String expirationDtsEnd = null;
        String chargebackDtsStart = null;
        String chargebackDtsEnd = null;
        Integer limit = null;
        Integer offset = null;
        String since = null;
        String sort = null;
        String expand = null;
        ChargebackDisputesResponse response = api.getChargebackDisputes(orderId, caseNumber, status, expirationDtsStart, expirationDtsEnd, chargebackDtsStart, chargebackDtsEnd, limit, offset, since, sort, expand);

        // TODO: test validations
    }
    
    /**
     * Insert a chargeback
     *
     * Insert a chargeback on the UltraCart account. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void insertChargebackTest() throws ApiException {
        ChargebackDispute chargeback = null;
        String expand = null;
        ChargebackDisputeResponse response = api.insertChargeback(chargeback, expand);

        // TODO: test validations
    }
    
    /**
     * Update a chargeback
     *
     * Update a chargeback on the UltraCart account. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateChargebackTest() throws ApiException {
        ChargebackDispute chargeback = null;
        Integer chargebackDisputeOid = null;
        String expand = null;
        ChargebackDisputeResponse response = api.updateChargeback(chargeback, chargebackDisputeOid, expand);

        // TODO: test validations
    }
    
}
