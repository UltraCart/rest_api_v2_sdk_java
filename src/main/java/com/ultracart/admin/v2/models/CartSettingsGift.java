/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.CartSettingsGiftWrap;
import com.ultracart.admin.v2.models.Currency;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * CartSettingsGift
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-08-24T15:03:26.736-04:00")



public class CartSettingsGift {
  @SerializedName("allow_gifts")
  private Boolean allowGifts = null;

  @SerializedName("gift_charge")
  private Currency giftCharge = null;

  @SerializedName("gift_wraps")
  private List<CartSettingsGiftWrap> giftWraps = null;

  @SerializedName("max_message_length")
  private Integer maxMessageLength = null;

  public CartSettingsGift allowGifts(Boolean allowGifts) {
    this.allowGifts = allowGifts;
    return this;
  }

   /**
   * True if this checkout supports gift giving
   * @return allowGifts
  **/
  @ApiModelProperty(value = "True if this checkout supports gift giving")
  public Boolean isAllowGifts() {
    return allowGifts;
  }

  public void setAllowGifts(Boolean allowGifts) {
    this.allowGifts = allowGifts;
  }

  public CartSettingsGift giftCharge(Currency giftCharge) {
    this.giftCharge = giftCharge;
    return this;
  }

   /**
   * Get giftCharge
   * @return giftCharge
  **/
  @ApiModelProperty(value = "")
  public Currency getGiftCharge() {
    return giftCharge;
  }

  public void setGiftCharge(Currency giftCharge) {
    this.giftCharge = giftCharge;
  }

  public CartSettingsGift giftWraps(List<CartSettingsGiftWrap> giftWraps) {
    this.giftWraps = giftWraps;
    return this;
  }

  public CartSettingsGift addGiftWrapsItem(CartSettingsGiftWrap giftWrapsItem) {
    if (this.giftWraps == null) {
      this.giftWraps = new ArrayList<CartSettingsGiftWrap>();
    }
    this.giftWraps.add(giftWrapsItem);
    return this;
  }

   /**
   * The gift wraps available for the customer to select from
   * @return giftWraps
  **/
  @ApiModelProperty(value = "The gift wraps available for the customer to select from")
  public List<CartSettingsGiftWrap> getGiftWraps() {
    return giftWraps;
  }

  public void setGiftWraps(List<CartSettingsGiftWrap> giftWraps) {
    this.giftWraps = giftWraps;
  }

  public CartSettingsGift maxMessageLength(Integer maxMessageLength) {
    this.maxMessageLength = maxMessageLength;
    return this;
  }

   /**
   * The maximum length of the gift message the giver can enter
   * @return maxMessageLength
  **/
  @ApiModelProperty(value = "The maximum length of the gift message the giver can enter")
  public Integer getMaxMessageLength() {
    return maxMessageLength;
  }

  public void setMaxMessageLength(Integer maxMessageLength) {
    this.maxMessageLength = maxMessageLength;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CartSettingsGift cartSettingsGift = (CartSettingsGift) o;
    return Objects.equals(this.allowGifts, cartSettingsGift.allowGifts) &&
        Objects.equals(this.giftCharge, cartSettingsGift.giftCharge) &&
        Objects.equals(this.giftWraps, cartSettingsGift.giftWraps) &&
        Objects.equals(this.maxMessageLength, cartSettingsGift.maxMessageLength);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowGifts, giftCharge, giftWraps, maxMessageLength);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CartSettingsGift {\n");
    
    sb.append("    allowGifts: ").append(toIndentedString(allowGifts)).append("\n");
    sb.append("    giftCharge: ").append(toIndentedString(giftCharge)).append("\n");
    sb.append("    giftWraps: ").append(toIndentedString(giftWraps)).append("\n");
    sb.append("    maxMessageLength: ").append(toIndentedString(maxMessageLength)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

