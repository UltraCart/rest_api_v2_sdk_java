/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * AdjustInternalCertificateRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-07-20T11:18:45.077-04:00[America/Indianapolis]")
public class AdjustInternalCertificateRequest {
  public static final String SERIALIZED_NAME_ADJUSTMENT_AMOUNT = "adjustment_amount";
  @SerializedName(SERIALIZED_NAME_ADJUSTMENT_AMOUNT)
  private BigDecimal adjustmentAmount;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_ENTRY_DTS = "entry_dts";
  @SerializedName(SERIALIZED_NAME_ENTRY_DTS)
  private String entryDts;

  public static final String SERIALIZED_NAME_EXPIRATION_DAYS = "expiration_days";
  @SerializedName(SERIALIZED_NAME_EXPIRATION_DAYS)
  private Integer expirationDays;

  public static final String SERIALIZED_NAME_ORDER_ID = "order_id";
  @SerializedName(SERIALIZED_NAME_ORDER_ID)
  private String orderId;

  public static final String SERIALIZED_NAME_VESTING_DAYS = "vesting_days";
  @SerializedName(SERIALIZED_NAME_VESTING_DAYS)
  private Integer vestingDays;

  public AdjustInternalCertificateRequest() { 
  }

  public AdjustInternalCertificateRequest adjustmentAmount(BigDecimal adjustmentAmount) {
    
    this.adjustmentAmount = adjustmentAmount;
    return this;
  }

   /**
   * The adjustment amount
   * @return adjustmentAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The adjustment amount")

  public BigDecimal getAdjustmentAmount() {
    return adjustmentAmount;
  }


  public void setAdjustmentAmount(BigDecimal adjustmentAmount) {
    this.adjustmentAmount = adjustmentAmount;
  }


  public AdjustInternalCertificateRequest description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Description of this adjustment, 50 characters max
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Description of this adjustment, 50 characters max")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public AdjustInternalCertificateRequest entryDts(String entryDts) {
    
    this.entryDts = entryDts;
    return this;
  }

   /**
   * Optional timestamp for the adjustment, defaults to current time
   * @return entryDts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Optional timestamp for the adjustment, defaults to current time")

  public String getEntryDts() {
    return entryDts;
  }


  public void setEntryDts(String entryDts) {
    this.entryDts = entryDts;
  }


  public AdjustInternalCertificateRequest expirationDays(Integer expirationDays) {
    
    this.expirationDays = expirationDays;
    return this;
  }

   /**
   * Optional expiration days from the entry_dts when these adjustment becomes worthless
   * @return expirationDays
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Optional expiration days from the entry_dts when these adjustment becomes worthless")

  public Integer getExpirationDays() {
    return expirationDays;
  }


  public void setExpirationDays(Integer expirationDays) {
    this.expirationDays = expirationDays;
  }


  public AdjustInternalCertificateRequest orderId(String orderId) {
    
    this.orderId = orderId;
    return this;
  }

   /**
   * Optional order id if this adjustment is related to a particular order
   * @return orderId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Optional order id if this adjustment is related to a particular order")

  public String getOrderId() {
    return orderId;
  }


  public void setOrderId(String orderId) {
    this.orderId = orderId;
  }


  public AdjustInternalCertificateRequest vestingDays(Integer vestingDays) {
    
    this.vestingDays = vestingDays;
    return this;
  }

   /**
   * Optional days required for this adjustment to vest
   * @return vestingDays
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Optional days required for this adjustment to vest")

  public Integer getVestingDays() {
    return vestingDays;
  }


  public void setVestingDays(Integer vestingDays) {
    this.vestingDays = vestingDays;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AdjustInternalCertificateRequest adjustInternalCertificateRequest = (AdjustInternalCertificateRequest) o;
    return Objects.equals(this.adjustmentAmount, adjustInternalCertificateRequest.adjustmentAmount) &&
        Objects.equals(this.description, adjustInternalCertificateRequest.description) &&
        Objects.equals(this.entryDts, adjustInternalCertificateRequest.entryDts) &&
        Objects.equals(this.expirationDays, adjustInternalCertificateRequest.expirationDays) &&
        Objects.equals(this.orderId, adjustInternalCertificateRequest.orderId) &&
        Objects.equals(this.vestingDays, adjustInternalCertificateRequest.vestingDays);
  }

  @Override
  public int hashCode() {
    return Objects.hash(adjustmentAmount, description, entryDts, expirationDays, orderId, vestingDays);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AdjustInternalCertificateRequest {\n");
    sb.append("    adjustmentAmount: ").append(toIndentedString(adjustmentAmount)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    entryDts: ").append(toIndentedString(entryDts)).append("\n");
    sb.append("    expirationDays: ").append(toIndentedString(expirationDays)).append("\n");
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    vestingDays: ").append(toIndentedString(vestingDays)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("adjustment_amount");
    openapiFields.add("description");
    openapiFields.add("entry_dts");
    openapiFields.add("expiration_days");
    openapiFields.add("order_id");
    openapiFields.add("vesting_days");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to AdjustInternalCertificateRequest
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (AdjustInternalCertificateRequest.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in AdjustInternalCertificateRequest is not found in the empty JSON string", AdjustInternalCertificateRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!AdjustInternalCertificateRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AdjustInternalCertificateRequest` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("description") != null && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if (jsonObj.get("entry_dts") != null && !jsonObj.get("entry_dts").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `entry_dts` to be a primitive type in the JSON string but got `%s`", jsonObj.get("entry_dts").toString()));
      }
      if (jsonObj.get("order_id") != null && !jsonObj.get("order_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `order_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("order_id").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AdjustInternalCertificateRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AdjustInternalCertificateRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AdjustInternalCertificateRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AdjustInternalCertificateRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<AdjustInternalCertificateRequest>() {
           @Override
           public void write(JsonWriter out, AdjustInternalCertificateRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AdjustInternalCertificateRequest read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AdjustInternalCertificateRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AdjustInternalCertificateRequest
  * @throws IOException if the JSON string is invalid with respect to AdjustInternalCertificateRequest
  */
  public static AdjustInternalCertificateRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AdjustInternalCertificateRequest.class);
  }

 /**
  * Convert an instance of AdjustInternalCertificateRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

