/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.ExperimentVariationStat;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

/**
 * ExperimentVariation
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2025-08-04T16:21:10.809-04:00")



public class ExperimentVariation {
  @SerializedName("add_to_cart_count")
  private Integer addToCartCount = null;

  @SerializedName("average_duration_seconds")
  private Integer averageDurationSeconds = null;

  @SerializedName("average_objective_per_session")
  private BigDecimal averageObjectivePerSession = null;

  @SerializedName("average_order_value")
  private BigDecimal averageOrderValue = null;

  @SerializedName("bounce_count")
  private Integer bounceCount = null;

  @SerializedName("conversion_rate")
  private BigDecimal conversionRate = null;

  @SerializedName("daily_statistics")
  private List<ExperimentVariationStat> dailyStatistics = null;

  @SerializedName("duration_seconds_sum")
  private Long durationSecondsSum = null;

  @SerializedName("event_count")
  private Integer eventCount = null;

  @SerializedName("initiate_checkout_count")
  private Integer initiateCheckoutCount = null;

  @SerializedName("order_count")
  private Integer orderCount = null;

  @SerializedName("order_item_count")
  private Integer orderItemCount = null;

  @SerializedName("original_traffic_percentage")
  private BigDecimal originalTrafficPercentage = null;

  @SerializedName("page_view_count")
  private Integer pageViewCount = null;

  @SerializedName("paused")
  private Boolean paused = null;

  @SerializedName("revenue")
  private BigDecimal revenue = null;

  @SerializedName("session_count")
  private Integer sessionCount = null;

  @SerializedName("sms_opt_ins")
  private Integer smsOptIns = null;

  @SerializedName("traffic_percentage")
  private BigDecimal trafficPercentage = null;

  @SerializedName("url")
  private String url = null;

  @SerializedName("variation_name")
  private String variationName = null;

  @SerializedName("variation_number")
  private Integer variationNumber = null;

  @SerializedName("winner")
  private Boolean winner = null;

  public ExperimentVariation addToCartCount(Integer addToCartCount) {
    this.addToCartCount = addToCartCount;
    return this;
  }

   /**
   * Total add to cart count for this variation
   * @return addToCartCount
  **/
  @ApiModelProperty(value = "Total add to cart count for this variation")
  public Integer getAddToCartCount() {
    return addToCartCount;
  }

  public void setAddToCartCount(Integer addToCartCount) {
    this.addToCartCount = addToCartCount;
  }

  public ExperimentVariation averageDurationSeconds(Integer averageDurationSeconds) {
    this.averageDurationSeconds = averageDurationSeconds;
    return this;
  }

   /**
   * Average duration seconds per session for this variation
   * @return averageDurationSeconds
  **/
  @ApiModelProperty(value = "Average duration seconds per session for this variation")
  public Integer getAverageDurationSeconds() {
    return averageDurationSeconds;
  }

  public void setAverageDurationSeconds(Integer averageDurationSeconds) {
    this.averageDurationSeconds = averageDurationSeconds;
  }

  public ExperimentVariation averageObjectivePerSession(BigDecimal averageObjectivePerSession) {
    this.averageObjectivePerSession = averageObjectivePerSession;
    return this;
  }

   /**
   * Average objective value per session for this variation
   * @return averageObjectivePerSession
  **/
  @ApiModelProperty(value = "Average objective value per session for this variation")
  public BigDecimal getAverageObjectivePerSession() {
    return averageObjectivePerSession;
  }

  public void setAverageObjectivePerSession(BigDecimal averageObjectivePerSession) {
    this.averageObjectivePerSession = averageObjectivePerSession;
  }

  public ExperimentVariation averageOrderValue(BigDecimal averageOrderValue) {
    this.averageOrderValue = averageOrderValue;
    return this;
  }

   /**
   * Average order value for this variation
   * @return averageOrderValue
  **/
  @ApiModelProperty(value = "Average order value for this variation")
  public BigDecimal getAverageOrderValue() {
    return averageOrderValue;
  }

  public void setAverageOrderValue(BigDecimal averageOrderValue) {
    this.averageOrderValue = averageOrderValue;
  }

  public ExperimentVariation bounceCount(Integer bounceCount) {
    this.bounceCount = bounceCount;
    return this;
  }

   /**
   * Total bounce count for this variation
   * @return bounceCount
  **/
  @ApiModelProperty(value = "Total bounce count for this variation")
  public Integer getBounceCount() {
    return bounceCount;
  }

  public void setBounceCount(Integer bounceCount) {
    this.bounceCount = bounceCount;
  }

  public ExperimentVariation conversionRate(BigDecimal conversionRate) {
    this.conversionRate = conversionRate;
    return this;
  }

   /**
   * Conversion rate for this variation
   * @return conversionRate
  **/
  @ApiModelProperty(value = "Conversion rate for this variation")
  public BigDecimal getConversionRate() {
    return conversionRate;
  }

  public void setConversionRate(BigDecimal conversionRate) {
    this.conversionRate = conversionRate;
  }

  public ExperimentVariation dailyStatistics(List<ExperimentVariationStat> dailyStatistics) {
    this.dailyStatistics = dailyStatistics;
    return this;
  }

  public ExperimentVariation addDailyStatisticsItem(ExperimentVariationStat dailyStatisticsItem) {
    if (this.dailyStatistics == null) {
      this.dailyStatistics = new ArrayList<ExperimentVariationStat>();
    }
    this.dailyStatistics.add(dailyStatisticsItem);
    return this;
  }

   /**
   * Array of daily statistics for this variation
   * @return dailyStatistics
  **/
  @ApiModelProperty(value = "Array of daily statistics for this variation")
  public List<ExperimentVariationStat> getDailyStatistics() {
    return dailyStatistics;
  }

  public void setDailyStatistics(List<ExperimentVariationStat> dailyStatistics) {
    this.dailyStatistics = dailyStatistics;
  }

  public ExperimentVariation durationSecondsSum(Long durationSecondsSum) {
    this.durationSecondsSum = durationSecondsSum;
    return this;
  }

   /**
   * Total number of seconds spent on the site for this variation
   * @return durationSecondsSum
  **/
  @ApiModelProperty(value = "Total number of seconds spent on the site for this variation")
  public Long getDurationSecondsSum() {
    return durationSecondsSum;
  }

  public void setDurationSecondsSum(Long durationSecondsSum) {
    this.durationSecondsSum = durationSecondsSum;
  }

  public ExperimentVariation eventCount(Integer eventCount) {
    this.eventCount = eventCount;
    return this;
  }

   /**
   * Total event ocunt for this variation
   * @return eventCount
  **/
  @ApiModelProperty(value = "Total event ocunt for this variation")
  public Integer getEventCount() {
    return eventCount;
  }

  public void setEventCount(Integer eventCount) {
    this.eventCount = eventCount;
  }

  public ExperimentVariation initiateCheckoutCount(Integer initiateCheckoutCount) {
    this.initiateCheckoutCount = initiateCheckoutCount;
    return this;
  }

   /**
   * Total initiate checkout count for this variation
   * @return initiateCheckoutCount
  **/
  @ApiModelProperty(value = "Total initiate checkout count for this variation")
  public Integer getInitiateCheckoutCount() {
    return initiateCheckoutCount;
  }

  public void setInitiateCheckoutCount(Integer initiateCheckoutCount) {
    this.initiateCheckoutCount = initiateCheckoutCount;
  }

  public ExperimentVariation orderCount(Integer orderCount) {
    this.orderCount = orderCount;
    return this;
  }

   /**
   * Total order count for this variation
   * @return orderCount
  **/
  @ApiModelProperty(value = "Total order count for this variation")
  public Integer getOrderCount() {
    return orderCount;
  }

  public void setOrderCount(Integer orderCount) {
    this.orderCount = orderCount;
  }

  public ExperimentVariation orderItemCount(Integer orderItemCount) {
    this.orderItemCount = orderItemCount;
    return this;
  }

   /**
   * Total order item count for this variation
   * @return orderItemCount
  **/
  @ApiModelProperty(value = "Total order item count for this variation")
  public Integer getOrderItemCount() {
    return orderItemCount;
  }

  public void setOrderItemCount(Integer orderItemCount) {
    this.orderItemCount = orderItemCount;
  }

  public ExperimentVariation originalTrafficPercentage(BigDecimal originalTrafficPercentage) {
    this.originalTrafficPercentage = originalTrafficPercentage;
    return this;
  }

   /**
   * Percentage of the traffic the variation originally started out with
   * @return originalTrafficPercentage
  **/
  @ApiModelProperty(value = "Percentage of the traffic the variation originally started out with")
  public BigDecimal getOriginalTrafficPercentage() {
    return originalTrafficPercentage;
  }

  public void setOriginalTrafficPercentage(BigDecimal originalTrafficPercentage) {
    this.originalTrafficPercentage = originalTrafficPercentage;
  }

  public ExperimentVariation pageViewCount(Integer pageViewCount) {
    this.pageViewCount = pageViewCount;
    return this;
  }

   /**
   * Total page view count for this variation
   * @return pageViewCount
  **/
  @ApiModelProperty(value = "Total page view count for this variation")
  public Integer getPageViewCount() {
    return pageViewCount;
  }

  public void setPageViewCount(Integer pageViewCount) {
    this.pageViewCount = pageViewCount;
  }

  public ExperimentVariation paused(Boolean paused) {
    this.paused = paused;
    return this;
  }

   /**
   * True if traffic should be paused to this variation
   * @return paused
  **/
  @ApiModelProperty(value = "True if traffic should be paused to this variation")
  public Boolean isPaused() {
    return paused;
  }

  public void setPaused(Boolean paused) {
    this.paused = paused;
  }

  public ExperimentVariation revenue(BigDecimal revenue) {
    this.revenue = revenue;
    return this;
  }

   /**
   * Total revenue for this variation
   * @return revenue
  **/
  @ApiModelProperty(value = "Total revenue for this variation")
  public BigDecimal getRevenue() {
    return revenue;
  }

  public void setRevenue(BigDecimal revenue) {
    this.revenue = revenue;
  }

  public ExperimentVariation sessionCount(Integer sessionCount) {
    this.sessionCount = sessionCount;
    return this;
  }

   /**
   * Total sessions for this variation
   * @return sessionCount
  **/
  @ApiModelProperty(value = "Total sessions for this variation")
  public Integer getSessionCount() {
    return sessionCount;
  }

  public void setSessionCount(Integer sessionCount) {
    this.sessionCount = sessionCount;
  }

  public ExperimentVariation smsOptIns(Integer smsOptIns) {
    this.smsOptIns = smsOptIns;
    return this;
  }

   /**
   * SMS Opt Ins for this variation
   * @return smsOptIns
  **/
  @ApiModelProperty(value = "SMS Opt Ins for this variation")
  public Integer getSmsOptIns() {
    return smsOptIns;
  }

  public void setSmsOptIns(Integer smsOptIns) {
    this.smsOptIns = smsOptIns;
  }

  public ExperimentVariation trafficPercentage(BigDecimal trafficPercentage) {
    this.trafficPercentage = trafficPercentage;
    return this;
  }

   /**
   * Percentage of the traffic this variation is currently receiving
   * @return trafficPercentage
  **/
  @ApiModelProperty(value = "Percentage of the traffic this variation is currently receiving")
  public BigDecimal getTrafficPercentage() {
    return trafficPercentage;
  }

  public void setTrafficPercentage(BigDecimal trafficPercentage) {
    this.trafficPercentage = trafficPercentage;
  }

  public ExperimentVariation url(String url) {
    this.url = url;
    return this;
  }

   /**
   * Url of the variation if this experiment is a url experiment.
   * @return url
  **/
  @ApiModelProperty(value = "Url of the variation if this experiment is a url experiment.")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public ExperimentVariation variationName(String variationName) {
    this.variationName = variationName;
    return this;
  }

   /**
   * Name of the variation
   * @return variationName
  **/
  @ApiModelProperty(value = "Name of the variation")
  public String getVariationName() {
    return variationName;
  }

  public void setVariationName(String variationName) {
    this.variationName = variationName;
  }

  public ExperimentVariation variationNumber(Integer variationNumber) {
    this.variationNumber = variationNumber;
    return this;
  }

   /**
   * Variation number
   * @return variationNumber
  **/
  @ApiModelProperty(value = "Variation number")
  public Integer getVariationNumber() {
    return variationNumber;
  }

  public void setVariationNumber(Integer variationNumber) {
    this.variationNumber = variationNumber;
  }

  public ExperimentVariation winner(Boolean winner) {
    this.winner = winner;
    return this;
  }

   /**
   * True if this variation has been declared the winner
   * @return winner
  **/
  @ApiModelProperty(value = "True if this variation has been declared the winner")
  public Boolean isWinner() {
    return winner;
  }

  public void setWinner(Boolean winner) {
    this.winner = winner;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExperimentVariation experimentVariation = (ExperimentVariation) o;
    return Objects.equals(this.addToCartCount, experimentVariation.addToCartCount) &&
        Objects.equals(this.averageDurationSeconds, experimentVariation.averageDurationSeconds) &&
        Objects.equals(this.averageObjectivePerSession, experimentVariation.averageObjectivePerSession) &&
        Objects.equals(this.averageOrderValue, experimentVariation.averageOrderValue) &&
        Objects.equals(this.bounceCount, experimentVariation.bounceCount) &&
        Objects.equals(this.conversionRate, experimentVariation.conversionRate) &&
        Objects.equals(this.dailyStatistics, experimentVariation.dailyStatistics) &&
        Objects.equals(this.durationSecondsSum, experimentVariation.durationSecondsSum) &&
        Objects.equals(this.eventCount, experimentVariation.eventCount) &&
        Objects.equals(this.initiateCheckoutCount, experimentVariation.initiateCheckoutCount) &&
        Objects.equals(this.orderCount, experimentVariation.orderCount) &&
        Objects.equals(this.orderItemCount, experimentVariation.orderItemCount) &&
        Objects.equals(this.originalTrafficPercentage, experimentVariation.originalTrafficPercentage) &&
        Objects.equals(this.pageViewCount, experimentVariation.pageViewCount) &&
        Objects.equals(this.paused, experimentVariation.paused) &&
        Objects.equals(this.revenue, experimentVariation.revenue) &&
        Objects.equals(this.sessionCount, experimentVariation.sessionCount) &&
        Objects.equals(this.smsOptIns, experimentVariation.smsOptIns) &&
        Objects.equals(this.trafficPercentage, experimentVariation.trafficPercentage) &&
        Objects.equals(this.url, experimentVariation.url) &&
        Objects.equals(this.variationName, experimentVariation.variationName) &&
        Objects.equals(this.variationNumber, experimentVariation.variationNumber) &&
        Objects.equals(this.winner, experimentVariation.winner);
  }

  @Override
  public int hashCode() {
    return Objects.hash(addToCartCount, averageDurationSeconds, averageObjectivePerSession, averageOrderValue, bounceCount, conversionRate, dailyStatistics, durationSecondsSum, eventCount, initiateCheckoutCount, orderCount, orderItemCount, originalTrafficPercentage, pageViewCount, paused, revenue, sessionCount, smsOptIns, trafficPercentage, url, variationName, variationNumber, winner);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExperimentVariation {\n");
    
    sb.append("    addToCartCount: ").append(toIndentedString(addToCartCount)).append("\n");
    sb.append("    averageDurationSeconds: ").append(toIndentedString(averageDurationSeconds)).append("\n");
    sb.append("    averageObjectivePerSession: ").append(toIndentedString(averageObjectivePerSession)).append("\n");
    sb.append("    averageOrderValue: ").append(toIndentedString(averageOrderValue)).append("\n");
    sb.append("    bounceCount: ").append(toIndentedString(bounceCount)).append("\n");
    sb.append("    conversionRate: ").append(toIndentedString(conversionRate)).append("\n");
    sb.append("    dailyStatistics: ").append(toIndentedString(dailyStatistics)).append("\n");
    sb.append("    durationSecondsSum: ").append(toIndentedString(durationSecondsSum)).append("\n");
    sb.append("    eventCount: ").append(toIndentedString(eventCount)).append("\n");
    sb.append("    initiateCheckoutCount: ").append(toIndentedString(initiateCheckoutCount)).append("\n");
    sb.append("    orderCount: ").append(toIndentedString(orderCount)).append("\n");
    sb.append("    orderItemCount: ").append(toIndentedString(orderItemCount)).append("\n");
    sb.append("    originalTrafficPercentage: ").append(toIndentedString(originalTrafficPercentage)).append("\n");
    sb.append("    pageViewCount: ").append(toIndentedString(pageViewCount)).append("\n");
    sb.append("    paused: ").append(toIndentedString(paused)).append("\n");
    sb.append("    revenue: ").append(toIndentedString(revenue)).append("\n");
    sb.append("    sessionCount: ").append(toIndentedString(sessionCount)).append("\n");
    sb.append("    smsOptIns: ").append(toIndentedString(smsOptIns)).append("\n");
    sb.append("    trafficPercentage: ").append(toIndentedString(trafficPercentage)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    variationName: ").append(toIndentedString(variationName)).append("\n");
    sb.append("    variationNumber: ").append(toIndentedString(variationNumber)).append("\n");
    sb.append("    winner: ").append(toIndentedString(winner)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

