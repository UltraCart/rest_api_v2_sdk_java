/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * TaxPostalCode
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-02-02T10:03:38.886-05:00")



public class TaxPostalCode {
  @SerializedName("accounting_code")
  private String accountingCode = null;

  @SerializedName("city_oid")
  private Integer cityOid = null;

  @SerializedName("dont_collect_postal_code")
  private Boolean dontCollectPostalCode = null;

  @SerializedName("postal_code")
  private String postalCode = null;

  @SerializedName("postal_code_oid")
  private Integer postalCodeOid = null;

  @SerializedName("tax_rate")
  private BigDecimal taxRate = null;

  @SerializedName("tax_rate_formatted")
  private String taxRateFormatted = null;

  public TaxPostalCode accountingCode(String accountingCode) {
    this.accountingCode = accountingCode;
    return this;
  }

   /**
   * Accounting code for programs such as QuickBooks
   * @return accountingCode
  **/
  @ApiModelProperty(value = "Accounting code for programs such as QuickBooks")
  public String getAccountingCode() {
    return accountingCode;
  }

  public void setAccountingCode(String accountingCode) {
    this.accountingCode = accountingCode;
  }

  public TaxPostalCode cityOid(Integer cityOid) {
    this.cityOid = cityOid;
    return this;
  }

   /**
   * Tax record object identifier used internally by database
   * @return cityOid
  **/
  @ApiModelProperty(value = "Tax record object identifier used internally by database")
  public Integer getCityOid() {
    return cityOid;
  }

  public void setCityOid(Integer cityOid) {
    this.cityOid = cityOid;
  }

  public TaxPostalCode dontCollectPostalCode(Boolean dontCollectPostalCode) {
    this.dontCollectPostalCode = dontCollectPostalCode;
    return this;
  }

   /**
   * Flag instructing engine to not collect postal code tax for this postal code
   * @return dontCollectPostalCode
  **/
  @ApiModelProperty(value = "Flag instructing engine to not collect postal code tax for this postal code")
  public Boolean isDontCollectPostalCode() {
    return dontCollectPostalCode;
  }

  public void setDontCollectPostalCode(Boolean dontCollectPostalCode) {
    this.dontCollectPostalCode = dontCollectPostalCode;
  }

  public TaxPostalCode postalCode(String postalCode) {
    this.postalCode = postalCode;
    return this;
  }

   /**
   * Postal Code (5 digits)
   * @return postalCode
  **/
  @ApiModelProperty(value = "Postal Code (5 digits)")
  public String getPostalCode() {
    return postalCode;
  }

  public void setPostalCode(String postalCode) {
    this.postalCode = postalCode;
  }

  public TaxPostalCode postalCodeOid(Integer postalCodeOid) {
    this.postalCodeOid = postalCodeOid;
    return this;
  }

   /**
   * Tax record object identifier used internally by database
   * @return postalCodeOid
  **/
  @ApiModelProperty(value = "Tax record object identifier used internally by database")
  public Integer getPostalCodeOid() {
    return postalCodeOid;
  }

  public void setPostalCodeOid(Integer postalCodeOid) {
    this.postalCodeOid = postalCodeOid;
  }

  public TaxPostalCode taxRate(BigDecimal taxRate) {
    this.taxRate = taxRate;
    return this;
  }

   /**
   * Tax Rate
   * @return taxRate
  **/
  @ApiModelProperty(value = "Tax Rate")
  public BigDecimal getTaxRate() {
    return taxRate;
  }

  public void setTaxRate(BigDecimal taxRate) {
    this.taxRate = taxRate;
  }

  public TaxPostalCode taxRateFormatted(String taxRateFormatted) {
    this.taxRateFormatted = taxRateFormatted;
    return this;
  }

   /**
   * Tax rate formatted
   * @return taxRateFormatted
  **/
  @ApiModelProperty(value = "Tax rate formatted")
  public String getTaxRateFormatted() {
    return taxRateFormatted;
  }

  public void setTaxRateFormatted(String taxRateFormatted) {
    this.taxRateFormatted = taxRateFormatted;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TaxPostalCode taxPostalCode = (TaxPostalCode) o;
    return Objects.equals(this.accountingCode, taxPostalCode.accountingCode) &&
        Objects.equals(this.cityOid, taxPostalCode.cityOid) &&
        Objects.equals(this.dontCollectPostalCode, taxPostalCode.dontCollectPostalCode) &&
        Objects.equals(this.postalCode, taxPostalCode.postalCode) &&
        Objects.equals(this.postalCodeOid, taxPostalCode.postalCodeOid) &&
        Objects.equals(this.taxRate, taxPostalCode.taxRate) &&
        Objects.equals(this.taxRateFormatted, taxPostalCode.taxRateFormatted);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountingCode, cityOid, dontCollectPostalCode, postalCode, postalCodeOid, taxRate, taxRateFormatted);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TaxPostalCode {\n");
    
    sb.append("    accountingCode: ").append(toIndentedString(accountingCode)).append("\n");
    sb.append("    cityOid: ").append(toIndentedString(cityOid)).append("\n");
    sb.append("    dontCollectPostalCode: ").append(toIndentedString(dontCollectPostalCode)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("    postalCodeOid: ").append(toIndentedString(postalCodeOid)).append("\n");
    sb.append("    taxRate: ").append(toIndentedString(taxRate)).append("\n");
    sb.append("    taxRateFormatted: ").append(toIndentedString(taxRateFormatted)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

