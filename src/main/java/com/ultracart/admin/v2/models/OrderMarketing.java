/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * OrderMarketing
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-04T10:02:29.437-04:00[America/Indianapolis]")
public class OrderMarketing {
  public static final String SERIALIZED_NAME_ADVERTISING_SOURCE = "advertising_source";
  @SerializedName(SERIALIZED_NAME_ADVERTISING_SOURCE)
  private String advertisingSource;

  public static final String SERIALIZED_NAME_CELL_PHONE_OPT_IN = "cell_phone_opt_in";
  @SerializedName(SERIALIZED_NAME_CELL_PHONE_OPT_IN)
  private Boolean cellPhoneOptIn;

  public static final String SERIALIZED_NAME_MAILING_LIST = "mailing_list";
  @SerializedName(SERIALIZED_NAME_MAILING_LIST)
  private Boolean mailingList;

  public static final String SERIALIZED_NAME_REFERRAL_CODE = "referral_code";
  @SerializedName(SERIALIZED_NAME_REFERRAL_CODE)
  private String referralCode;

  public OrderMarketing() { 
  }

  public OrderMarketing advertisingSource(String advertisingSource) {
    
    this.advertisingSource = advertisingSource;
    return this;
  }

   /**
   * Advertising source
   * @return advertisingSource
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Advertising source")

  public String getAdvertisingSource() {
    return advertisingSource;
  }


  public void setAdvertisingSource(String advertisingSource) {
    this.advertisingSource = advertisingSource;
  }


  public OrderMarketing cellPhoneOptIn(Boolean cellPhoneOptIn) {
    
    this.cellPhoneOptIn = cellPhoneOptIn;
    return this;
  }

   /**
   * True if the customer has opted into SMS marketing
   * @return cellPhoneOptIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if the customer has opted into SMS marketing")

  public Boolean getCellPhoneOptIn() {
    return cellPhoneOptIn;
  }


  public void setCellPhoneOptIn(Boolean cellPhoneOptIn) {
    this.cellPhoneOptIn = cellPhoneOptIn;
  }


  public OrderMarketing mailingList(Boolean mailingList) {
    
    this.mailingList = mailingList;
    return this;
  }

   /**
   * True if the customer has opted into mailing list subscription
   * @return mailingList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if the customer has opted into mailing list subscription")

  public Boolean getMailingList() {
    return mailingList;
  }


  public void setMailingList(Boolean mailingList) {
    this.mailingList = mailingList;
  }


  public OrderMarketing referralCode(String referralCode) {
    
    this.referralCode = referralCode;
    return this;
  }

   /**
   * Referral code
   * @return referralCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Referral code")

  public String getReferralCode() {
    return referralCode;
  }


  public void setReferralCode(String referralCode) {
    this.referralCode = referralCode;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderMarketing orderMarketing = (OrderMarketing) o;
    return Objects.equals(this.advertisingSource, orderMarketing.advertisingSource) &&
        Objects.equals(this.cellPhoneOptIn, orderMarketing.cellPhoneOptIn) &&
        Objects.equals(this.mailingList, orderMarketing.mailingList) &&
        Objects.equals(this.referralCode, orderMarketing.referralCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(advertisingSource, cellPhoneOptIn, mailingList, referralCode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderMarketing {\n");
    sb.append("    advertisingSource: ").append(toIndentedString(advertisingSource)).append("\n");
    sb.append("    cellPhoneOptIn: ").append(toIndentedString(cellPhoneOptIn)).append("\n");
    sb.append("    mailingList: ").append(toIndentedString(mailingList)).append("\n");
    sb.append("    referralCode: ").append(toIndentedString(referralCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("advertising_source");
    openapiFields.add("cell_phone_opt_in");
    openapiFields.add("mailing_list");
    openapiFields.add("referral_code");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to OrderMarketing
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (OrderMarketing.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in OrderMarketing is not found in the empty JSON string", OrderMarketing.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!OrderMarketing.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OrderMarketing` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("advertising_source") != null && !jsonObj.get("advertising_source").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `advertising_source` to be a primitive type in the JSON string but got `%s`", jsonObj.get("advertising_source").toString()));
      }
      if (jsonObj.get("referral_code") != null && !jsonObj.get("referral_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `referral_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("referral_code").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OrderMarketing.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OrderMarketing' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OrderMarketing> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OrderMarketing.class));

       return (TypeAdapter<T>) new TypeAdapter<OrderMarketing>() {
           @Override
           public void write(JsonWriter out, OrderMarketing value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OrderMarketing read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of OrderMarketing given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of OrderMarketing
  * @throws IOException if the JSON string is invalid with respect to OrderMarketing
  */
  public static OrderMarketing fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OrderMarketing.class);
  }

 /**
  * Convert an instance of OrderMarketing to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

