/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.swagger.JSON;

/**
 * CouponDeletesRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-22T23:12:18.213-04:00[America/Indianapolis]")
public class CouponDeletesRequest {
  public static final String SERIALIZED_NAME_COUPON_CODES = "coupon_codes";
  @SerializedName(SERIALIZED_NAME_COUPON_CODES)
  private List<String> couponCodes = null;

  public static final String SERIALIZED_NAME_COUPON_OIDS = "coupon_oids";
  @SerializedName(SERIALIZED_NAME_COUPON_OIDS)
  private List<Integer> couponOids = null;

  public CouponDeletesRequest() { 
  }

  public CouponDeletesRequest couponCodes(List<String> couponCodes) {
    
    this.couponCodes = couponCodes;
    return this;
  }

  public CouponDeletesRequest addCouponCodesItem(String couponCodesItem) {
    if (this.couponCodes == null) {
      this.couponCodes = new ArrayList<>();
    }
    this.couponCodes.add(couponCodesItem);
    return this;
  }

   /**
   * Coupon codes
   * @return couponCodes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Coupon codes")

  public List<String> getCouponCodes() {
    return couponCodes;
  }


  public void setCouponCodes(List<String> couponCodes) {
    this.couponCodes = couponCodes;
  }


  public CouponDeletesRequest couponOids(List<Integer> couponOids) {
    
    this.couponOids = couponOids;
    return this;
  }

  public CouponDeletesRequest addCouponOidsItem(Integer couponOidsItem) {
    if (this.couponOids == null) {
      this.couponOids = new ArrayList<>();
    }
    this.couponOids.add(couponOidsItem);
    return this;
  }

   /**
   * Coupon oids
   * @return couponOids
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Coupon oids")

  public List<Integer> getCouponOids() {
    return couponOids;
  }


  public void setCouponOids(List<Integer> couponOids) {
    this.couponOids = couponOids;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CouponDeletesRequest couponDeletesRequest = (CouponDeletesRequest) o;
    return Objects.equals(this.couponCodes, couponDeletesRequest.couponCodes) &&
        Objects.equals(this.couponOids, couponDeletesRequest.couponOids);
  }

  @Override
  public int hashCode() {
    return Objects.hash(couponCodes, couponOids);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CouponDeletesRequest {\n");
    sb.append("    couponCodes: ").append(toIndentedString(couponCodes)).append("\n");
    sb.append("    couponOids: ").append(toIndentedString(couponOids)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("coupon_codes");
    openapiFields.add("coupon_oids");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CouponDeletesRequest
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (CouponDeletesRequest.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in CouponDeletesRequest is not found in the empty JSON string", CouponDeletesRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!CouponDeletesRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CouponDeletesRequest` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      // ensure the json data is an array
      if (jsonObj.get("coupon_codes") != null && !jsonObj.get("coupon_codes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `coupon_codes` to be an array in the JSON string but got `%s`", jsonObj.get("coupon_codes").toString()));
      }
      // ensure the json data is an array
      if (jsonObj.get("coupon_oids") != null && !jsonObj.get("coupon_oids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `coupon_oids` to be an array in the JSON string but got `%s`", jsonObj.get("coupon_oids").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CouponDeletesRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CouponDeletesRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CouponDeletesRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CouponDeletesRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<CouponDeletesRequest>() {
           @Override
           public void write(JsonWriter out, CouponDeletesRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CouponDeletesRequest read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CouponDeletesRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CouponDeletesRequest
  * @throws IOException if the JSON string is invalid with respect to CouponDeletesRequest
  */
  public static CouponDeletesRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CouponDeletesRequest.class);
  }

 /**
  * Convert an instance of CouponDeletesRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

