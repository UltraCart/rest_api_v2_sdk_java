/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.Order;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * ChargebackDispute
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-09-29T15:24:19.342-04:00[America/Indianapolis]")
public class ChargebackDispute {
  public static final String SERIALIZED_NAME_ACCOUNT_NUMBER = "account_number";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_NUMBER)
  private String accountNumber;

  public static final String SERIALIZED_NAME_ADJUSTMENT_REQUEST_TEXT = "adjustment_request_text";
  @SerializedName(SERIALIZED_NAME_ADJUSTMENT_REQUEST_TEXT)
  private String adjustmentRequestText;

  public static final String SERIALIZED_NAME_AMOUNT = "amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  private BigDecimal amount;

  public static final String SERIALIZED_NAME_AUTH_CODE = "auth_code";
  @SerializedName(SERIALIZED_NAME_AUTH_CODE)
  private String authCode;

  public static final String SERIALIZED_NAME_CASE_NUMBER = "case_number";
  @SerializedName(SERIALIZED_NAME_CASE_NUMBER)
  private String caseNumber;

  public static final String SERIALIZED_NAME_CHARGEBACK_DISPUTE_OID = "chargeback_dispute_oid";
  @SerializedName(SERIALIZED_NAME_CHARGEBACK_DISPUTE_OID)
  private Integer chargebackDisputeOid;

  public static final String SERIALIZED_NAME_CHARGEBACK_DTS = "chargeback_dts";
  @SerializedName(SERIALIZED_NAME_CHARGEBACK_DTS)
  private String chargebackDts;

  public static final String SERIALIZED_NAME_CURRENCY = "currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  private String currency;

  public static final String SERIALIZED_NAME_CUSTOMER_CARE_NOTES = "customer_care_notes";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_CARE_NOTES)
  private String customerCareNotes;

  public static final String SERIALIZED_NAME_ENCRYPTION_KEY = "encryption_key";
  @SerializedName(SERIALIZED_NAME_ENCRYPTION_KEY)
  private String encryptionKey;

  public static final String SERIALIZED_NAME_EXPIRATION_DTS = "expiration_dts";
  @SerializedName(SERIALIZED_NAME_EXPIRATION_DTS)
  private String expirationDts;

  public static final String SERIALIZED_NAME_FAX_FAILURE_REASON = "fax_failure_reason";
  @SerializedName(SERIALIZED_NAME_FAX_FAILURE_REASON)
  private String faxFailureReason;

  public static final String SERIALIZED_NAME_FAX_NUMBER = "fax_number";
  @SerializedName(SERIALIZED_NAME_FAX_NUMBER)
  private String faxNumber;

  public static final String SERIALIZED_NAME_FAX_TRANSACTION_ID = "fax_transaction_id";
  @SerializedName(SERIALIZED_NAME_FAX_TRANSACTION_ID)
  private Long faxTransactionId;

  public static final String SERIALIZED_NAME_ICSID = "icsid";
  @SerializedName(SERIALIZED_NAME_ICSID)
  private String icsid;

  public static final String SERIALIZED_NAME_MERCHANT_ACCOUNT_PROFILE_OID = "merchant_account_profile_oid";
  @SerializedName(SERIALIZED_NAME_MERCHANT_ACCOUNT_PROFILE_OID)
  private Integer merchantAccountProfileOid;

  public static final String SERIALIZED_NAME_ORDER = "order";
  @SerializedName(SERIALIZED_NAME_ORDER)
  private Order order;

  public static final String SERIALIZED_NAME_ORDER_ID = "order_id";
  @SerializedName(SERIALIZED_NAME_ORDER_ID)
  private String orderId;

  public static final String SERIALIZED_NAME_PARTIAL_CARD_NUMBER = "partial_card_number";
  @SerializedName(SERIALIZED_NAME_PARTIAL_CARD_NUMBER)
  private String partialCardNumber;

  public static final String SERIALIZED_NAME_PDF_FILE_OID = "pdf_file_oid";
  @SerializedName(SERIALIZED_NAME_PDF_FILE_OID)
  private String pdfFileOid;

  public static final String SERIALIZED_NAME_REASON_CODE = "reason_code";
  @SerializedName(SERIALIZED_NAME_REASON_CODE)
  private String reasonCode;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_WEBSITE_URL = "website_url";
  @SerializedName(SERIALIZED_NAME_WEBSITE_URL)
  private String websiteUrl;

  public ChargebackDispute() { 
  }

  public ChargebackDispute accountNumber(String accountNumber) {
    
    this.accountNumber = accountNumber;
    return this;
  }

   /**
   * Account number
   * @return accountNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Account number")

  public String getAccountNumber() {
    return accountNumber;
  }


  public void setAccountNumber(String accountNumber) {
    this.accountNumber = accountNumber;
  }


  public ChargebackDispute adjustmentRequestText(String adjustmentRequestText) {
    
    this.adjustmentRequestText = adjustmentRequestText;
    return this;
  }

   /**
   * Adjustment request text
   * @return adjustmentRequestText
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Adjustment request text")

  public String getAdjustmentRequestText() {
    return adjustmentRequestText;
  }


  public void setAdjustmentRequestText(String adjustmentRequestText) {
    this.adjustmentRequestText = adjustmentRequestText;
  }


  public ChargebackDispute amount(BigDecimal amount) {
    
    this.amount = amount;
    return this;
  }

   /**
   * Amount
   * @return amount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Amount")

  public BigDecimal getAmount() {
    return amount;
  }


  public void setAmount(BigDecimal amount) {
    this.amount = amount;
  }


  public ChargebackDispute authCode(String authCode) {
    
    this.authCode = authCode;
    return this;
  }

   /**
   * Auth code
   * @return authCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Auth code")

  public String getAuthCode() {
    return authCode;
  }


  public void setAuthCode(String authCode) {
    this.authCode = authCode;
  }


  public ChargebackDispute caseNumber(String caseNumber) {
    
    this.caseNumber = caseNumber;
    return this;
  }

   /**
   * Case number
   * @return caseNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Case number")

  public String getCaseNumber() {
    return caseNumber;
  }


  public void setCaseNumber(String caseNumber) {
    this.caseNumber = caseNumber;
  }


  public ChargebackDispute chargebackDisputeOid(Integer chargebackDisputeOid) {
    
    this.chargebackDisputeOid = chargebackDisputeOid;
    return this;
  }

   /**
   * Chargeback Dispute Oid
   * @return chargebackDisputeOid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Chargeback Dispute Oid")

  public Integer getChargebackDisputeOid() {
    return chargebackDisputeOid;
  }


  public void setChargebackDisputeOid(Integer chargebackDisputeOid) {
    this.chargebackDisputeOid = chargebackDisputeOid;
  }


  public ChargebackDispute chargebackDts(String chargebackDts) {
    
    this.chargebackDts = chargebackDts;
    return this;
  }

   /**
   * Chargeback dts
   * @return chargebackDts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Chargeback dts")

  public String getChargebackDts() {
    return chargebackDts;
  }


  public void setChargebackDts(String chargebackDts) {
    this.chargebackDts = chargebackDts;
  }


  public ChargebackDispute currency(String currency) {
    
    this.currency = currency;
    return this;
  }

   /**
   * Currency
   * @return currency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Currency")

  public String getCurrency() {
    return currency;
  }


  public void setCurrency(String currency) {
    this.currency = currency;
  }


  public ChargebackDispute customerCareNotes(String customerCareNotes) {
    
    this.customerCareNotes = customerCareNotes;
    return this;
  }

   /**
   * Customer care notes
   * @return customerCareNotes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Customer care notes")

  public String getCustomerCareNotes() {
    return customerCareNotes;
  }


  public void setCustomerCareNotes(String customerCareNotes) {
    this.customerCareNotes = customerCareNotes;
  }


  public ChargebackDispute encryptionKey(String encryptionKey) {
    
    this.encryptionKey = encryptionKey;
    return this;
  }

   /**
   * Encryption key
   * @return encryptionKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Encryption key")

  public String getEncryptionKey() {
    return encryptionKey;
  }


  public void setEncryptionKey(String encryptionKey) {
    this.encryptionKey = encryptionKey;
  }


  public ChargebackDispute expirationDts(String expirationDts) {
    
    this.expirationDts = expirationDts;
    return this;
  }

   /**
   * Expiration Dts
   * @return expirationDts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Expiration Dts")

  public String getExpirationDts() {
    return expirationDts;
  }


  public void setExpirationDts(String expirationDts) {
    this.expirationDts = expirationDts;
  }


  public ChargebackDispute faxFailureReason(String faxFailureReason) {
    
    this.faxFailureReason = faxFailureReason;
    return this;
  }

   /**
   * Fax failure reason
   * @return faxFailureReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Fax failure reason")

  public String getFaxFailureReason() {
    return faxFailureReason;
  }


  public void setFaxFailureReason(String faxFailureReason) {
    this.faxFailureReason = faxFailureReason;
  }


  public ChargebackDispute faxNumber(String faxNumber) {
    
    this.faxNumber = faxNumber;
    return this;
  }

   /**
   * Fax number
   * @return faxNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Fax number")

  public String getFaxNumber() {
    return faxNumber;
  }


  public void setFaxNumber(String faxNumber) {
    this.faxNumber = faxNumber;
  }


  public ChargebackDispute faxTransactionId(Long faxTransactionId) {
    
    this.faxTransactionId = faxTransactionId;
    return this;
  }

   /**
   * Fax transaction id
   * @return faxTransactionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Fax transaction id")

  public Long getFaxTransactionId() {
    return faxTransactionId;
  }


  public void setFaxTransactionId(Long faxTransactionId) {
    this.faxTransactionId = faxTransactionId;
  }


  public ChargebackDispute icsid(String icsid) {
    
    this.icsid = icsid;
    return this;
  }

   /**
   * icsid
   * @return icsid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "icsid")

  public String getIcsid() {
    return icsid;
  }


  public void setIcsid(String icsid) {
    this.icsid = icsid;
  }


  public ChargebackDispute merchantAccountProfileOid(Integer merchantAccountProfileOid) {
    
    this.merchantAccountProfileOid = merchantAccountProfileOid;
    return this;
  }

   /**
   * Merchant account profile oid
   * @return merchantAccountProfileOid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Merchant account profile oid")

  public Integer getMerchantAccountProfileOid() {
    return merchantAccountProfileOid;
  }


  public void setMerchantAccountProfileOid(Integer merchantAccountProfileOid) {
    this.merchantAccountProfileOid = merchantAccountProfileOid;
  }


  public ChargebackDispute order(Order order) {
    
    this.order = order;
    return this;
  }

   /**
   * Get order
   * @return order
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Order getOrder() {
    return order;
  }


  public void setOrder(Order order) {
    this.order = order;
  }


  public ChargebackDispute orderId(String orderId) {
    
    this.orderId = orderId;
    return this;
  }

   /**
   * Order Id
   * @return orderId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Order Id")

  public String getOrderId() {
    return orderId;
  }


  public void setOrderId(String orderId) {
    this.orderId = orderId;
  }


  public ChargebackDispute partialCardNumber(String partialCardNumber) {
    
    this.partialCardNumber = partialCardNumber;
    return this;
  }

   /**
   * Partial card number
   * @return partialCardNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Partial card number")

  public String getPartialCardNumber() {
    return partialCardNumber;
  }


  public void setPartialCardNumber(String partialCardNumber) {
    this.partialCardNumber = partialCardNumber;
  }


  public ChargebackDispute pdfFileOid(String pdfFileOid) {
    
    this.pdfFileOid = pdfFileOid;
    return this;
  }

   /**
   * PDF file oid
   * @return pdfFileOid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "PDF file oid")

  public String getPdfFileOid() {
    return pdfFileOid;
  }


  public void setPdfFileOid(String pdfFileOid) {
    this.pdfFileOid = pdfFileOid;
  }


  public ChargebackDispute reasonCode(String reasonCode) {
    
    this.reasonCode = reasonCode;
    return this;
  }

   /**
   * Reason code
   * @return reasonCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Reason code")

  public String getReasonCode() {
    return reasonCode;
  }


  public void setReasonCode(String reasonCode) {
    this.reasonCode = reasonCode;
  }


  public ChargebackDispute status(String status) {
    
    this.status = status;
    return this;
  }

   /**
   * Status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Status")

  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    this.status = status;
  }


  public ChargebackDispute websiteUrl(String websiteUrl) {
    
    this.websiteUrl = websiteUrl;
    return this;
  }

   /**
   * Website URL
   * @return websiteUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Website URL")

  public String getWebsiteUrl() {
    return websiteUrl;
  }


  public void setWebsiteUrl(String websiteUrl) {
    this.websiteUrl = websiteUrl;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChargebackDispute chargebackDispute = (ChargebackDispute) o;
    return Objects.equals(this.accountNumber, chargebackDispute.accountNumber) &&
        Objects.equals(this.adjustmentRequestText, chargebackDispute.adjustmentRequestText) &&
        Objects.equals(this.amount, chargebackDispute.amount) &&
        Objects.equals(this.authCode, chargebackDispute.authCode) &&
        Objects.equals(this.caseNumber, chargebackDispute.caseNumber) &&
        Objects.equals(this.chargebackDisputeOid, chargebackDispute.chargebackDisputeOid) &&
        Objects.equals(this.chargebackDts, chargebackDispute.chargebackDts) &&
        Objects.equals(this.currency, chargebackDispute.currency) &&
        Objects.equals(this.customerCareNotes, chargebackDispute.customerCareNotes) &&
        Objects.equals(this.encryptionKey, chargebackDispute.encryptionKey) &&
        Objects.equals(this.expirationDts, chargebackDispute.expirationDts) &&
        Objects.equals(this.faxFailureReason, chargebackDispute.faxFailureReason) &&
        Objects.equals(this.faxNumber, chargebackDispute.faxNumber) &&
        Objects.equals(this.faxTransactionId, chargebackDispute.faxTransactionId) &&
        Objects.equals(this.icsid, chargebackDispute.icsid) &&
        Objects.equals(this.merchantAccountProfileOid, chargebackDispute.merchantAccountProfileOid) &&
        Objects.equals(this.order, chargebackDispute.order) &&
        Objects.equals(this.orderId, chargebackDispute.orderId) &&
        Objects.equals(this.partialCardNumber, chargebackDispute.partialCardNumber) &&
        Objects.equals(this.pdfFileOid, chargebackDispute.pdfFileOid) &&
        Objects.equals(this.reasonCode, chargebackDispute.reasonCode) &&
        Objects.equals(this.status, chargebackDispute.status) &&
        Objects.equals(this.websiteUrl, chargebackDispute.websiteUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountNumber, adjustmentRequestText, amount, authCode, caseNumber, chargebackDisputeOid, chargebackDts, currency, customerCareNotes, encryptionKey, expirationDts, faxFailureReason, faxNumber, faxTransactionId, icsid, merchantAccountProfileOid, order, orderId, partialCardNumber, pdfFileOid, reasonCode, status, websiteUrl);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChargebackDispute {\n");
    sb.append("    accountNumber: ").append(toIndentedString(accountNumber)).append("\n");
    sb.append("    adjustmentRequestText: ").append(toIndentedString(adjustmentRequestText)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    authCode: ").append(toIndentedString(authCode)).append("\n");
    sb.append("    caseNumber: ").append(toIndentedString(caseNumber)).append("\n");
    sb.append("    chargebackDisputeOid: ").append(toIndentedString(chargebackDisputeOid)).append("\n");
    sb.append("    chargebackDts: ").append(toIndentedString(chargebackDts)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    customerCareNotes: ").append(toIndentedString(customerCareNotes)).append("\n");
    sb.append("    encryptionKey: ").append(toIndentedString(encryptionKey)).append("\n");
    sb.append("    expirationDts: ").append(toIndentedString(expirationDts)).append("\n");
    sb.append("    faxFailureReason: ").append(toIndentedString(faxFailureReason)).append("\n");
    sb.append("    faxNumber: ").append(toIndentedString(faxNumber)).append("\n");
    sb.append("    faxTransactionId: ").append(toIndentedString(faxTransactionId)).append("\n");
    sb.append("    icsid: ").append(toIndentedString(icsid)).append("\n");
    sb.append("    merchantAccountProfileOid: ").append(toIndentedString(merchantAccountProfileOid)).append("\n");
    sb.append("    order: ").append(toIndentedString(order)).append("\n");
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    partialCardNumber: ").append(toIndentedString(partialCardNumber)).append("\n");
    sb.append("    pdfFileOid: ").append(toIndentedString(pdfFileOid)).append("\n");
    sb.append("    reasonCode: ").append(toIndentedString(reasonCode)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    websiteUrl: ").append(toIndentedString(websiteUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account_number");
    openapiFields.add("adjustment_request_text");
    openapiFields.add("amount");
    openapiFields.add("auth_code");
    openapiFields.add("case_number");
    openapiFields.add("chargeback_dispute_oid");
    openapiFields.add("chargeback_dts");
    openapiFields.add("currency");
    openapiFields.add("customer_care_notes");
    openapiFields.add("encryption_key");
    openapiFields.add("expiration_dts");
    openapiFields.add("fax_failure_reason");
    openapiFields.add("fax_number");
    openapiFields.add("fax_transaction_id");
    openapiFields.add("icsid");
    openapiFields.add("merchant_account_profile_oid");
    openapiFields.add("order");
    openapiFields.add("order_id");
    openapiFields.add("partial_card_number");
    openapiFields.add("pdf_file_oid");
    openapiFields.add("reason_code");
    openapiFields.add("status");
    openapiFields.add("website_url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ChargebackDispute
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (ChargebackDispute.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in ChargebackDispute is not found in the empty JSON string", ChargebackDispute.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!ChargebackDispute.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ChargebackDispute` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("account_number") != null && !jsonObj.get("account_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_number").toString()));
      }
      if (jsonObj.get("adjustment_request_text") != null && !jsonObj.get("adjustment_request_text").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `adjustment_request_text` to be a primitive type in the JSON string but got `%s`", jsonObj.get("adjustment_request_text").toString()));
      }
      if (jsonObj.get("auth_code") != null && !jsonObj.get("auth_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `auth_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("auth_code").toString()));
      }
      if (jsonObj.get("case_number") != null && !jsonObj.get("case_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `case_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("case_number").toString()));
      }
      if (jsonObj.get("chargeback_dts") != null && !jsonObj.get("chargeback_dts").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `chargeback_dts` to be a primitive type in the JSON string but got `%s`", jsonObj.get("chargeback_dts").toString()));
      }
      if (jsonObj.get("currency") != null && !jsonObj.get("currency").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currency").toString()));
      }
      if (jsonObj.get("customer_care_notes") != null && !jsonObj.get("customer_care_notes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customer_care_notes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customer_care_notes").toString()));
      }
      if (jsonObj.get("encryption_key") != null && !jsonObj.get("encryption_key").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `encryption_key` to be a primitive type in the JSON string but got `%s`", jsonObj.get("encryption_key").toString()));
      }
      if (jsonObj.get("expiration_dts") != null && !jsonObj.get("expiration_dts").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `expiration_dts` to be a primitive type in the JSON string but got `%s`", jsonObj.get("expiration_dts").toString()));
      }
      if (jsonObj.get("fax_failure_reason") != null && !jsonObj.get("fax_failure_reason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fax_failure_reason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fax_failure_reason").toString()));
      }
      if (jsonObj.get("fax_number") != null && !jsonObj.get("fax_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fax_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fax_number").toString()));
      }
      if (jsonObj.get("icsid") != null && !jsonObj.get("icsid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `icsid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("icsid").toString()));
      }
      // validate the optional field `order`
      if (jsonObj.getAsJsonObject("order") != null) {
        Order.validateJsonObject(jsonObj.getAsJsonObject("order"));
      }
      if (jsonObj.get("order_id") != null && !jsonObj.get("order_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `order_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("order_id").toString()));
      }
      if (jsonObj.get("partial_card_number") != null && !jsonObj.get("partial_card_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `partial_card_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("partial_card_number").toString()));
      }
      if (jsonObj.get("pdf_file_oid") != null && !jsonObj.get("pdf_file_oid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pdf_file_oid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pdf_file_oid").toString()));
      }
      if (jsonObj.get("reason_code") != null && !jsonObj.get("reason_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reason_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reason_code").toString()));
      }
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if (jsonObj.get("website_url") != null && !jsonObj.get("website_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `website_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("website_url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ChargebackDispute.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ChargebackDispute' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ChargebackDispute> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ChargebackDispute.class));

       return (TypeAdapter<T>) new TypeAdapter<ChargebackDispute>() {
           @Override
           public void write(JsonWriter out, ChargebackDispute value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ChargebackDispute read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ChargebackDispute given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ChargebackDispute
  * @throws IOException if the JSON string is invalid with respect to ChargebackDispute
  */
  public static ChargebackDispute fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ChargebackDispute.class);
  }

 /**
  * Convert an instance of ChargebackDispute to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

