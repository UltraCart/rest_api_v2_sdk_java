/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * EmailCommseqPostcardSendTestRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-01-17T10:18:51.625-05:00[America/Indianapolis]")
public class EmailCommseqPostcardSendTestRequest {
  public static final String SERIALIZED_NAME_ADDRESS1 = "address_1";
  @SerializedName(SERIALIZED_NAME_ADDRESS1)
  private String address1;

  public static final String SERIALIZED_NAME_ADDRESS2 = "address_2";
  @SerializedName(SERIALIZED_NAME_ADDRESS2)
  private String address2;

  public static final String SERIALIZED_NAME_CART_ID = "cart_id";
  @SerializedName(SERIALIZED_NAME_CART_ID)
  private String cartId;

  public static final String SERIALIZED_NAME_CART_ITEM_IDS = "cart_item_ids";
  @SerializedName(SERIALIZED_NAME_CART_ITEM_IDS)
  private List<String> cartItemIds = null;

  public static final String SERIALIZED_NAME_CITY = "city";
  @SerializedName(SERIALIZED_NAME_CITY)
  private String city;

  public static final String SERIALIZED_NAME_ESP_COMMSEQ_POSTCARD_UUID = "esp_commseq_postcard_uuid";
  @SerializedName(SERIALIZED_NAME_ESP_COMMSEQ_POSTCARD_UUID)
  private String espCommseqPostcardUuid;

  public static final String SERIALIZED_NAME_ESP_COMMSEQ_STEP_UUID = "esp_commseq_step_uuid";
  @SerializedName(SERIALIZED_NAME_ESP_COMMSEQ_STEP_UUID)
  private String espCommseqStepUuid;

  public static final String SERIALIZED_NAME_ESP_COMMSEQ_UUID = "esp_commseq_uuid";
  @SerializedName(SERIALIZED_NAME_ESP_COMMSEQ_UUID)
  private String espCommseqUuid;

  public static final String SERIALIZED_NAME_MAIL_CARD = "mail_card";
  @SerializedName(SERIALIZED_NAME_MAIL_CARD)
  private Boolean mailCard;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_ORDER_ID = "order_id";
  @SerializedName(SERIALIZED_NAME_ORDER_ID)
  private String orderId;

  public static final String SERIALIZED_NAME_POSTAL_CODE = "postal_code";
  @SerializedName(SERIALIZED_NAME_POSTAL_CODE)
  private String postalCode;

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private String state;

  public EmailCommseqPostcardSendTestRequest() { 
  }

  public EmailCommseqPostcardSendTestRequest address1(String address1) {
    
    this.address1 = address1;
    return this;
  }

   /**
   * Get address1
   * @return address1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAddress1() {
    return address1;
  }


  public void setAddress1(String address1) {
    this.address1 = address1;
  }


  public EmailCommseqPostcardSendTestRequest address2(String address2) {
    
    this.address2 = address2;
    return this;
  }

   /**
   * Get address2
   * @return address2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAddress2() {
    return address2;
  }


  public void setAddress2(String address2) {
    this.address2 = address2;
  }


  public EmailCommseqPostcardSendTestRequest cartId(String cartId) {
    
    this.cartId = cartId;
    return this;
  }

   /**
   * Get cartId
   * @return cartId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCartId() {
    return cartId;
  }


  public void setCartId(String cartId) {
    this.cartId = cartId;
  }


  public EmailCommseqPostcardSendTestRequest cartItemIds(List<String> cartItemIds) {
    
    this.cartItemIds = cartItemIds;
    return this;
  }

  public EmailCommseqPostcardSendTestRequest addCartItemIdsItem(String cartItemIdsItem) {
    if (this.cartItemIds == null) {
      this.cartItemIds = new ArrayList<>();
    }
    this.cartItemIds.add(cartItemIdsItem);
    return this;
  }

   /**
   * Get cartItemIds
   * @return cartItemIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getCartItemIds() {
    return cartItemIds;
  }


  public void setCartItemIds(List<String> cartItemIds) {
    this.cartItemIds = cartItemIds;
  }


  public EmailCommseqPostcardSendTestRequest city(String city) {
    
    this.city = city;
    return this;
  }

   /**
   * Get city
   * @return city
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCity() {
    return city;
  }


  public void setCity(String city) {
    this.city = city;
  }


  public EmailCommseqPostcardSendTestRequest espCommseqPostcardUuid(String espCommseqPostcardUuid) {
    
    this.espCommseqPostcardUuid = espCommseqPostcardUuid;
    return this;
  }

   /**
   * Get espCommseqPostcardUuid
   * @return espCommseqPostcardUuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEspCommseqPostcardUuid() {
    return espCommseqPostcardUuid;
  }


  public void setEspCommseqPostcardUuid(String espCommseqPostcardUuid) {
    this.espCommseqPostcardUuid = espCommseqPostcardUuid;
  }


  public EmailCommseqPostcardSendTestRequest espCommseqStepUuid(String espCommseqStepUuid) {
    
    this.espCommseqStepUuid = espCommseqStepUuid;
    return this;
  }

   /**
   * Get espCommseqStepUuid
   * @return espCommseqStepUuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEspCommseqStepUuid() {
    return espCommseqStepUuid;
  }


  public void setEspCommseqStepUuid(String espCommseqStepUuid) {
    this.espCommseqStepUuid = espCommseqStepUuid;
  }


  public EmailCommseqPostcardSendTestRequest espCommseqUuid(String espCommseqUuid) {
    
    this.espCommseqUuid = espCommseqUuid;
    return this;
  }

   /**
   * Get espCommseqUuid
   * @return espCommseqUuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEspCommseqUuid() {
    return espCommseqUuid;
  }


  public void setEspCommseqUuid(String espCommseqUuid) {
    this.espCommseqUuid = espCommseqUuid;
  }


  public EmailCommseqPostcardSendTestRequest mailCard(Boolean mailCard) {
    
    this.mailCard = mailCard;
    return this;
  }

   /**
   * Get mailCard
   * @return mailCard
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getMailCard() {
    return mailCard;
  }


  public void setMailCard(Boolean mailCard) {
    this.mailCard = mailCard;
  }


  public EmailCommseqPostcardSendTestRequest name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public EmailCommseqPostcardSendTestRequest orderId(String orderId) {
    
    this.orderId = orderId;
    return this;
  }

   /**
   * Get orderId
   * @return orderId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOrderId() {
    return orderId;
  }


  public void setOrderId(String orderId) {
    this.orderId = orderId;
  }


  public EmailCommseqPostcardSendTestRequest postalCode(String postalCode) {
    
    this.postalCode = postalCode;
    return this;
  }

   /**
   * Get postalCode
   * @return postalCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPostalCode() {
    return postalCode;
  }


  public void setPostalCode(String postalCode) {
    this.postalCode = postalCode;
  }


  public EmailCommseqPostcardSendTestRequest state(String state) {
    
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getState() {
    return state;
  }


  public void setState(String state) {
    this.state = state;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmailCommseqPostcardSendTestRequest emailCommseqPostcardSendTestRequest = (EmailCommseqPostcardSendTestRequest) o;
    return Objects.equals(this.address1, emailCommseqPostcardSendTestRequest.address1) &&
        Objects.equals(this.address2, emailCommseqPostcardSendTestRequest.address2) &&
        Objects.equals(this.cartId, emailCommseqPostcardSendTestRequest.cartId) &&
        Objects.equals(this.cartItemIds, emailCommseqPostcardSendTestRequest.cartItemIds) &&
        Objects.equals(this.city, emailCommseqPostcardSendTestRequest.city) &&
        Objects.equals(this.espCommseqPostcardUuid, emailCommseqPostcardSendTestRequest.espCommseqPostcardUuid) &&
        Objects.equals(this.espCommseqStepUuid, emailCommseqPostcardSendTestRequest.espCommseqStepUuid) &&
        Objects.equals(this.espCommseqUuid, emailCommseqPostcardSendTestRequest.espCommseqUuid) &&
        Objects.equals(this.mailCard, emailCommseqPostcardSendTestRequest.mailCard) &&
        Objects.equals(this.name, emailCommseqPostcardSendTestRequest.name) &&
        Objects.equals(this.orderId, emailCommseqPostcardSendTestRequest.orderId) &&
        Objects.equals(this.postalCode, emailCommseqPostcardSendTestRequest.postalCode) &&
        Objects.equals(this.state, emailCommseqPostcardSendTestRequest.state);
  }

  @Override
  public int hashCode() {
    return Objects.hash(address1, address2, cartId, cartItemIds, city, espCommseqPostcardUuid, espCommseqStepUuid, espCommseqUuid, mailCard, name, orderId, postalCode, state);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmailCommseqPostcardSendTestRequest {\n");
    sb.append("    address1: ").append(toIndentedString(address1)).append("\n");
    sb.append("    address2: ").append(toIndentedString(address2)).append("\n");
    sb.append("    cartId: ").append(toIndentedString(cartId)).append("\n");
    sb.append("    cartItemIds: ").append(toIndentedString(cartItemIds)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    espCommseqPostcardUuid: ").append(toIndentedString(espCommseqPostcardUuid)).append("\n");
    sb.append("    espCommseqStepUuid: ").append(toIndentedString(espCommseqStepUuid)).append("\n");
    sb.append("    espCommseqUuid: ").append(toIndentedString(espCommseqUuid)).append("\n");
    sb.append("    mailCard: ").append(toIndentedString(mailCard)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("address_1");
    openapiFields.add("address_2");
    openapiFields.add("cart_id");
    openapiFields.add("cart_item_ids");
    openapiFields.add("city");
    openapiFields.add("esp_commseq_postcard_uuid");
    openapiFields.add("esp_commseq_step_uuid");
    openapiFields.add("esp_commseq_uuid");
    openapiFields.add("mail_card");
    openapiFields.add("name");
    openapiFields.add("order_id");
    openapiFields.add("postal_code");
    openapiFields.add("state");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to EmailCommseqPostcardSendTestRequest
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (EmailCommseqPostcardSendTestRequest.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in EmailCommseqPostcardSendTestRequest is not found in the empty JSON string", EmailCommseqPostcardSendTestRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!EmailCommseqPostcardSendTestRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EmailCommseqPostcardSendTestRequest` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("address_1") != null && !jsonObj.get("address_1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `address_1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("address_1").toString()));
      }
      if (jsonObj.get("address_2") != null && !jsonObj.get("address_2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `address_2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("address_2").toString()));
      }
      if (jsonObj.get("cart_id") != null && !jsonObj.get("cart_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cart_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cart_id").toString()));
      }
      // ensure the json data is an array
      if (jsonObj.get("cart_item_ids") != null && !jsonObj.get("cart_item_ids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `cart_item_ids` to be an array in the JSON string but got `%s`", jsonObj.get("cart_item_ids").toString()));
      }
      if (jsonObj.get("city") != null && !jsonObj.get("city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("city").toString()));
      }
      if (jsonObj.get("esp_commseq_postcard_uuid") != null && !jsonObj.get("esp_commseq_postcard_uuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `esp_commseq_postcard_uuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("esp_commseq_postcard_uuid").toString()));
      }
      if (jsonObj.get("esp_commseq_step_uuid") != null && !jsonObj.get("esp_commseq_step_uuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `esp_commseq_step_uuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("esp_commseq_step_uuid").toString()));
      }
      if (jsonObj.get("esp_commseq_uuid") != null && !jsonObj.get("esp_commseq_uuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `esp_commseq_uuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("esp_commseq_uuid").toString()));
      }
      if (jsonObj.get("name") != null && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (jsonObj.get("order_id") != null && !jsonObj.get("order_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `order_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("order_id").toString()));
      }
      if (jsonObj.get("postal_code") != null && !jsonObj.get("postal_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `postal_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("postal_code").toString()));
      }
      if (jsonObj.get("state") != null && !jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EmailCommseqPostcardSendTestRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EmailCommseqPostcardSendTestRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EmailCommseqPostcardSendTestRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EmailCommseqPostcardSendTestRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<EmailCommseqPostcardSendTestRequest>() {
           @Override
           public void write(JsonWriter out, EmailCommseqPostcardSendTestRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EmailCommseqPostcardSendTestRequest read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of EmailCommseqPostcardSendTestRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of EmailCommseqPostcardSendTestRequest
  * @throws IOException if the JSON string is invalid with respect to EmailCommseqPostcardSendTestRequest
  */
  public static EmailCommseqPostcardSendTestRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EmailCommseqPostcardSendTestRequest.class);
  }

 /**
  * Convert an instance of EmailCommseqPostcardSendTestRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

