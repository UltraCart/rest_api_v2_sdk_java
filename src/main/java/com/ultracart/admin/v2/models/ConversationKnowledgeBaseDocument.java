/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * ConversationKnowledgeBaseDocument
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2025-10-20T16:25:42.698-04:00")



public class ConversationKnowledgeBaseDocument {
  @SerializedName("chunk_count")
  private Integer chunkCount = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("document_id")
  private String documentId = null;

  @SerializedName("document_uuid")
  private String documentUuid = null;

  @SerializedName("metadata")
  private String metadata = null;

  @SerializedName("mime_type")
  private String mimeType = null;

  @SerializedName("s3_key")
  private String s3Key = null;

  public ConversationKnowledgeBaseDocument chunkCount(Integer chunkCount) {
    this.chunkCount = chunkCount;
    return this;
  }

   /**
   * Get chunkCount
   * @return chunkCount
  **/
  @ApiModelProperty(value = "")
  public Integer getChunkCount() {
    return chunkCount;
  }

  public void setChunkCount(Integer chunkCount) {
    this.chunkCount = chunkCount;
  }

  public ConversationKnowledgeBaseDocument description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ConversationKnowledgeBaseDocument documentId(String documentId) {
    this.documentId = documentId;
    return this;
  }

   /**
   * Human readable identifier.  Filename is recommended.
   * @return documentId
  **/
  @ApiModelProperty(value = "Human readable identifier.  Filename is recommended.")
  public String getDocumentId() {
    return documentId;
  }

  public void setDocumentId(String documentId) {
    this.documentId = documentId;
  }

  public ConversationKnowledgeBaseDocument documentUuid(String documentUuid) {
    this.documentUuid = documentUuid;
    return this;
  }

   /**
   * Get documentUuid
   * @return documentUuid
  **/
  @ApiModelProperty(value = "")
  public String getDocumentUuid() {
    return documentUuid;
  }

  public void setDocumentUuid(String documentUuid) {
    this.documentUuid = documentUuid;
  }

  public ConversationKnowledgeBaseDocument metadata(String metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @ApiModelProperty(value = "")
  public String getMetadata() {
    return metadata;
  }

  public void setMetadata(String metadata) {
    this.metadata = metadata;
  }

  public ConversationKnowledgeBaseDocument mimeType(String mimeType) {
    this.mimeType = mimeType;
    return this;
  }

   /**
   * Get mimeType
   * @return mimeType
  **/
  @ApiModelProperty(value = "")
  public String getMimeType() {
    return mimeType;
  }

  public void setMimeType(String mimeType) {
    this.mimeType = mimeType;
  }

  public ConversationKnowledgeBaseDocument s3Key(String s3Key) {
    this.s3Key = s3Key;
    return this;
  }

   /**
   * Get s3Key
   * @return s3Key
  **/
  @ApiModelProperty(value = "")
  public String getS3Key() {
    return s3Key;
  }

  public void setS3Key(String s3Key) {
    this.s3Key = s3Key;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConversationKnowledgeBaseDocument conversationKnowledgeBaseDocument = (ConversationKnowledgeBaseDocument) o;
    return Objects.equals(this.chunkCount, conversationKnowledgeBaseDocument.chunkCount) &&
        Objects.equals(this.description, conversationKnowledgeBaseDocument.description) &&
        Objects.equals(this.documentId, conversationKnowledgeBaseDocument.documentId) &&
        Objects.equals(this.documentUuid, conversationKnowledgeBaseDocument.documentUuid) &&
        Objects.equals(this.metadata, conversationKnowledgeBaseDocument.metadata) &&
        Objects.equals(this.mimeType, conversationKnowledgeBaseDocument.mimeType) &&
        Objects.equals(this.s3Key, conversationKnowledgeBaseDocument.s3Key);
  }

  @Override
  public int hashCode() {
    return Objects.hash(chunkCount, description, documentId, documentUuid, metadata, mimeType, s3Key);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConversationKnowledgeBaseDocument {\n");
    
    sb.append("    chunkCount: ").append(toIndentedString(chunkCount)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    documentId: ").append(toIndentedString(documentId)).append("\n");
    sb.append("    documentUuid: ").append(toIndentedString(documentUuid)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    mimeType: ").append(toIndentedString(mimeType)).append("\n");
    sb.append("    s3Key: ").append(toIndentedString(s3Key)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

