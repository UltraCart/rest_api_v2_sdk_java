/**
 * UltraCart Rest API V2
 * This is the next generation UltraCart REST API...
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import com.ultracart.admin.v2.models.Customer;
import com.ultracart.admin.v2.models.OrderAffiliate;
import com.ultracart.admin.v2.models.OrderAutoOrder;
import com.ultracart.admin.v2.models.OrderBilling;
import com.ultracart.admin.v2.models.OrderBuysafe;
import com.ultracart.admin.v2.models.OrderChannelPartner;
import com.ultracart.admin.v2.models.OrderCheckout;
import com.ultracart.admin.v2.models.OrderCoupon;
import com.ultracart.admin.v2.models.OrderDigitalOrder;
import com.ultracart.admin.v2.models.OrderEdi;
import com.ultracart.admin.v2.models.OrderFraudScore;
import com.ultracart.admin.v2.models.OrderGift;
import com.ultracart.admin.v2.models.OrderGiftCertificate;
import com.ultracart.admin.v2.models.OrderInternal;
import com.ultracart.admin.v2.models.OrderItem;
import com.ultracart.admin.v2.models.OrderLinkedShipment;
import com.ultracart.admin.v2.models.OrderMarketing;
import com.ultracart.admin.v2.models.OrderPayment;
import com.ultracart.admin.v2.models.OrderQuote;
import com.ultracart.admin.v2.models.OrderSalesforce;
import com.ultracart.admin.v2.models.OrderShipping;
import com.ultracart.admin.v2.models.OrderSummary;
import com.ultracart.admin.v2.models.OrderTaxes;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;


/**
 * Order
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-05-06T12:04:56.332-04:00")
public class Order   {
  @SerializedName("affiliates")
  private List<OrderAffiliate> affiliates = new ArrayList<OrderAffiliate>();

  @SerializedName("auto_order")
  private OrderAutoOrder autoOrder = null;

  @SerializedName("billing")
  private OrderBilling billing = null;

  @SerializedName("buysafe")
  private OrderBuysafe buysafe = null;

  @SerializedName("channel_partner")
  private OrderChannelPartner channelPartner = null;

  @SerializedName("checkout")
  private OrderCheckout checkout = null;

  @SerializedName("coupons")
  private List<OrderCoupon> coupons = new ArrayList<OrderCoupon>();

  @SerializedName("creation_dts")
  private String creationDts = null;

  @SerializedName("currency_code")
  private String currencyCode = null;

  /**
   * Current stage that the order is in.
   */
  public enum CurrentStageEnum {
    @SerializedName("Accounts Receivable")
    ACCOUNTS_RECEIVABLE("Accounts Receivable"),
    
    @SerializedName("Pending Clearance")
    PENDING_CLEARANCE("Pending Clearance"),
    
    @SerializedName("Fraud Review")
    FRAUD_REVIEW("Fraud Review"),
    
    @SerializedName("Rejected")
    REJECTED("Rejected"),
    
    @SerializedName("Shipping Department")
    SHIPPING_DEPARTMENT("Shipping Department"),
    
    @SerializedName("Completed Order")
    COMPLETED_ORDER("Completed Order"),
    
    @SerializedName("Quote Request")
    QUOTE_REQUEST("Quote Request"),
    
    @SerializedName("Quote Sent")
    QUOTE_SENT("Quote Sent"),
    
    @SerializedName("Least Cost Routing")
    LEAST_COST_ROUTING("Least Cost Routing");

    private String value;

    CurrentStageEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("current_stage")
  private CurrentStageEnum currentStage = null;

  @SerializedName("customer_profile")
  private Customer customerProfile = null;

  @SerializedName("digital_order")
  private OrderDigitalOrder digitalOrder = null;

  @SerializedName("edi")
  private OrderEdi edi = null;

  @SerializedName("exchange_rate")
  private BigDecimal exchangeRate = null;

  @SerializedName("fraud_score")
  private OrderFraudScore fraudScore = null;

  @SerializedName("gift")
  private OrderGift gift = null;

  @SerializedName("gift_certificate")
  private OrderGiftCertificate giftCertificate = null;

  @SerializedName("internal")
  private OrderInternal internal = null;

  @SerializedName("items")
  private List<OrderItem> items = new ArrayList<OrderItem>();

  @SerializedName("language_iso_code")
  private String languageIsoCode = null;

  @SerializedName("linked_shipment")
  private OrderLinkedShipment linkedShipment = null;

  @SerializedName("marketing")
  private OrderMarketing marketing = null;

  @SerializedName("merchant_id")
  private String merchantId = null;

  @SerializedName("order_id")
  private String orderId = null;

  @SerializedName("payment")
  private OrderPayment payment = null;

  @SerializedName("quote")
  private OrderQuote quote = null;

  @SerializedName("refund_dts")
  private String refundDts = null;

  @SerializedName("reject_dts")
  private String rejectDts = null;

  @SerializedName("salesforce")
  private OrderSalesforce salesforce = null;

  @SerializedName("shipping")
  private OrderShipping shipping = null;

  @SerializedName("summary")
  private OrderSummary summary = null;

  @SerializedName("taxes")
  private OrderTaxes taxes = null;

  public Order affiliates(List<OrderAffiliate> affiliates) {
    this.affiliates = affiliates;
    return this;
  }

  public Order addAffiliatesItem(OrderAffiliate affiliatesItem) {
    this.affiliates.add(affiliatesItem);
    return this;
  }

   /**
   * Affiliates if any were associated with the order.  The first one in the array sent the order and each subsequent affiliate is the recruiter that earns a downline commission.
   * @return affiliates
  **/
  @ApiModelProperty(example = "null", value = "Affiliates if any were associated with the order.  The first one in the array sent the order and each subsequent affiliate is the recruiter that earns a downline commission.")
  public List<OrderAffiliate> getAffiliates() {
    return affiliates;
  }

  public void setAffiliates(List<OrderAffiliate> affiliates) {
    this.affiliates = affiliates;
  }

  public Order autoOrder(OrderAutoOrder autoOrder) {
    this.autoOrder = autoOrder;
    return this;
  }

   /**
   * Get autoOrder
   * @return autoOrder
  **/
  @ApiModelProperty(example = "null", value = "")
  public OrderAutoOrder getAutoOrder() {
    return autoOrder;
  }

  public void setAutoOrder(OrderAutoOrder autoOrder) {
    this.autoOrder = autoOrder;
  }

  public Order billing(OrderBilling billing) {
    this.billing = billing;
    return this;
  }

   /**
   * Get billing
   * @return billing
  **/
  @ApiModelProperty(example = "null", value = "")
  public OrderBilling getBilling() {
    return billing;
  }

  public void setBilling(OrderBilling billing) {
    this.billing = billing;
  }

  public Order buysafe(OrderBuysafe buysafe) {
    this.buysafe = buysafe;
    return this;
  }

   /**
   * Get buysafe
   * @return buysafe
  **/
  @ApiModelProperty(example = "null", value = "")
  public OrderBuysafe getBuysafe() {
    return buysafe;
  }

  public void setBuysafe(OrderBuysafe buysafe) {
    this.buysafe = buysafe;
  }

  public Order channelPartner(OrderChannelPartner channelPartner) {
    this.channelPartner = channelPartner;
    return this;
  }

   /**
   * Get channelPartner
   * @return channelPartner
  **/
  @ApiModelProperty(example = "null", value = "")
  public OrderChannelPartner getChannelPartner() {
    return channelPartner;
  }

  public void setChannelPartner(OrderChannelPartner channelPartner) {
    this.channelPartner = channelPartner;
  }

  public Order checkout(OrderCheckout checkout) {
    this.checkout = checkout;
    return this;
  }

   /**
   * Get checkout
   * @return checkout
  **/
  @ApiModelProperty(example = "null", value = "")
  public OrderCheckout getCheckout() {
    return checkout;
  }

  public void setCheckout(OrderCheckout checkout) {
    this.checkout = checkout;
  }

  public Order coupons(List<OrderCoupon> coupons) {
    this.coupons = coupons;
    return this;
  }

  public Order addCouponsItem(OrderCoupon couponsItem) {
    this.coupons.add(couponsItem);
    return this;
  }

   /**
   * Coupons
   * @return coupons
  **/
  @ApiModelProperty(example = "null", value = "Coupons")
  public List<OrderCoupon> getCoupons() {
    return coupons;
  }

  public void setCoupons(List<OrderCoupon> coupons) {
    this.coupons = coupons;
  }

  public Order creationDts(String creationDts) {
    this.creationDts = creationDts;
    return this;
  }

   /**
   * Date/time that the order was created
   * @return creationDts
  **/
  @ApiModelProperty(example = "null", value = "Date/time that the order was created")
  public String getCreationDts() {
    return creationDts;
  }

  public void setCreationDts(String creationDts) {
    this.creationDts = creationDts;
  }

  public Order currencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
    return this;
  }

   /**
   * Currency code that the customer used if different than the merchant's base currency code
   * @return currencyCode
  **/
  @ApiModelProperty(example = "null", value = "Currency code that the customer used if different than the merchant's base currency code")
  public String getCurrencyCode() {
    return currencyCode;
  }

  public void setCurrencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
  }

  public Order currentStage(CurrentStageEnum currentStage) {
    this.currentStage = currentStage;
    return this;
  }

   /**
   * Current stage that the order is in.
   * @return currentStage
  **/
  @ApiModelProperty(example = "null", value = "Current stage that the order is in.")
  public CurrentStageEnum getCurrentStage() {
    return currentStage;
  }

  public void setCurrentStage(CurrentStageEnum currentStage) {
    this.currentStage = currentStage;
  }

  public Order customerProfile(Customer customerProfile) {
    this.customerProfile = customerProfile;
    return this;
  }

   /**
   * Get customerProfile
   * @return customerProfile
  **/
  @ApiModelProperty(example = "null", value = "")
  public Customer getCustomerProfile() {
    return customerProfile;
  }

  public void setCustomerProfile(Customer customerProfile) {
    this.customerProfile = customerProfile;
  }

  public Order digitalOrder(OrderDigitalOrder digitalOrder) {
    this.digitalOrder = digitalOrder;
    return this;
  }

   /**
   * Get digitalOrder
   * @return digitalOrder
  **/
  @ApiModelProperty(example = "null", value = "")
  public OrderDigitalOrder getDigitalOrder() {
    return digitalOrder;
  }

  public void setDigitalOrder(OrderDigitalOrder digitalOrder) {
    this.digitalOrder = digitalOrder;
  }

  public Order edi(OrderEdi edi) {
    this.edi = edi;
    return this;
  }

   /**
   * Get edi
   * @return edi
  **/
  @ApiModelProperty(example = "null", value = "")
  public OrderEdi getEdi() {
    return edi;
  }

  public void setEdi(OrderEdi edi) {
    this.edi = edi;
  }

  public Order exchangeRate(BigDecimal exchangeRate) {
    this.exchangeRate = exchangeRate;
    return this;
  }

   /**
   * Exchange rate at the time the order was placed if currency code is different than the base currency
   * @return exchangeRate
  **/
  @ApiModelProperty(example = "null", value = "Exchange rate at the time the order was placed if currency code is different than the base currency")
  public BigDecimal getExchangeRate() {
    return exchangeRate;
  }

  public void setExchangeRate(BigDecimal exchangeRate) {
    this.exchangeRate = exchangeRate;
  }

  public Order fraudScore(OrderFraudScore fraudScore) {
    this.fraudScore = fraudScore;
    return this;
  }

   /**
   * Get fraudScore
   * @return fraudScore
  **/
  @ApiModelProperty(example = "null", value = "")
  public OrderFraudScore getFraudScore() {
    return fraudScore;
  }

  public void setFraudScore(OrderFraudScore fraudScore) {
    this.fraudScore = fraudScore;
  }

  public Order gift(OrderGift gift) {
    this.gift = gift;
    return this;
  }

   /**
   * Get gift
   * @return gift
  **/
  @ApiModelProperty(example = "null", value = "")
  public OrderGift getGift() {
    return gift;
  }

  public void setGift(OrderGift gift) {
    this.gift = gift;
  }

  public Order giftCertificate(OrderGiftCertificate giftCertificate) {
    this.giftCertificate = giftCertificate;
    return this;
  }

   /**
   * Get giftCertificate
   * @return giftCertificate
  **/
  @ApiModelProperty(example = "null", value = "")
  public OrderGiftCertificate getGiftCertificate() {
    return giftCertificate;
  }

  public void setGiftCertificate(OrderGiftCertificate giftCertificate) {
    this.giftCertificate = giftCertificate;
  }

  public Order internal(OrderInternal internal) {
    this.internal = internal;
    return this;
  }

   /**
   * Get internal
   * @return internal
  **/
  @ApiModelProperty(example = "null", value = "")
  public OrderInternal getInternal() {
    return internal;
  }

  public void setInternal(OrderInternal internal) {
    this.internal = internal;
  }

  public Order items(List<OrderItem> items) {
    this.items = items;
    return this;
  }

  public Order addItemsItem(OrderItem itemsItem) {
    this.items.add(itemsItem);
    return this;
  }

   /**
   * Items
   * @return items
  **/
  @ApiModelProperty(example = "null", value = "Items")
  public List<OrderItem> getItems() {
    return items;
  }

  public void setItems(List<OrderItem> items) {
    this.items = items;
  }

  public Order languageIsoCode(String languageIsoCode) {
    this.languageIsoCode = languageIsoCode;
    return this;
  }

   /**
   * Three letter ISO-639 language code used by the customer during the checkout if different than the default language
   * @return languageIsoCode
  **/
  @ApiModelProperty(example = "null", value = "Three letter ISO-639 language code used by the customer during the checkout if different than the default language")
  public String getLanguageIsoCode() {
    return languageIsoCode;
  }

  public void setLanguageIsoCode(String languageIsoCode) {
    this.languageIsoCode = languageIsoCode;
  }

  public Order linkedShipment(OrderLinkedShipment linkedShipment) {
    this.linkedShipment = linkedShipment;
    return this;
  }

   /**
   * Get linkedShipment
   * @return linkedShipment
  **/
  @ApiModelProperty(example = "null", value = "")
  public OrderLinkedShipment getLinkedShipment() {
    return linkedShipment;
  }

  public void setLinkedShipment(OrderLinkedShipment linkedShipment) {
    this.linkedShipment = linkedShipment;
  }

  public Order marketing(OrderMarketing marketing) {
    this.marketing = marketing;
    return this;
  }

   /**
   * Get marketing
   * @return marketing
  **/
  @ApiModelProperty(example = "null", value = "")
  public OrderMarketing getMarketing() {
    return marketing;
  }

  public void setMarketing(OrderMarketing marketing) {
    this.marketing = marketing;
  }

  public Order merchantId(String merchantId) {
    this.merchantId = merchantId;
    return this;
  }

   /**
   * UltraCart merchant ID owning this order
   * @return merchantId
  **/
  @ApiModelProperty(example = "null", value = "UltraCart merchant ID owning this order")
  public String getMerchantId() {
    return merchantId;
  }

  public void setMerchantId(String merchantId) {
    this.merchantId = merchantId;
  }

  public Order orderId(String orderId) {
    this.orderId = orderId;
    return this;
  }

   /**
   * Order ID
   * @return orderId
  **/
  @ApiModelProperty(example = "null", value = "Order ID")
  public String getOrderId() {
    return orderId;
  }

  public void setOrderId(String orderId) {
    this.orderId = orderId;
  }

  public Order payment(OrderPayment payment) {
    this.payment = payment;
    return this;
  }

   /**
   * Get payment
   * @return payment
  **/
  @ApiModelProperty(example = "null", value = "")
  public OrderPayment getPayment() {
    return payment;
  }

  public void setPayment(OrderPayment payment) {
    this.payment = payment;
  }

  public Order quote(OrderQuote quote) {
    this.quote = quote;
    return this;
  }

   /**
   * Get quote
   * @return quote
  **/
  @ApiModelProperty(example = "null", value = "")
  public OrderQuote getQuote() {
    return quote;
  }

  public void setQuote(OrderQuote quote) {
    this.quote = quote;
  }

  public Order refundDts(String refundDts) {
    this.refundDts = refundDts;
    return this;
  }

   /**
   * If the order was refunded, the date/time that the last refund occurred
   * @return refundDts
  **/
  @ApiModelProperty(example = "null", value = "If the order was refunded, the date/time that the last refund occurred")
  public String getRefundDts() {
    return refundDts;
  }

  public void setRefundDts(String refundDts) {
    this.refundDts = refundDts;
  }

  public Order rejectDts(String rejectDts) {
    this.rejectDts = rejectDts;
    return this;
  }

   /**
   * If the order was rejected, the date/time that the rejection occurred
   * @return rejectDts
  **/
  @ApiModelProperty(example = "null", value = "If the order was rejected, the date/time that the rejection occurred")
  public String getRejectDts() {
    return rejectDts;
  }

  public void setRejectDts(String rejectDts) {
    this.rejectDts = rejectDts;
  }

  public Order salesforce(OrderSalesforce salesforce) {
    this.salesforce = salesforce;
    return this;
  }

   /**
   * Get salesforce
   * @return salesforce
  **/
  @ApiModelProperty(example = "null", value = "")
  public OrderSalesforce getSalesforce() {
    return salesforce;
  }

  public void setSalesforce(OrderSalesforce salesforce) {
    this.salesforce = salesforce;
  }

  public Order shipping(OrderShipping shipping) {
    this.shipping = shipping;
    return this;
  }

   /**
   * Get shipping
   * @return shipping
  **/
  @ApiModelProperty(example = "null", value = "")
  public OrderShipping getShipping() {
    return shipping;
  }

  public void setShipping(OrderShipping shipping) {
    this.shipping = shipping;
  }

  public Order summary(OrderSummary summary) {
    this.summary = summary;
    return this;
  }

   /**
   * Get summary
   * @return summary
  **/
  @ApiModelProperty(example = "null", value = "")
  public OrderSummary getSummary() {
    return summary;
  }

  public void setSummary(OrderSummary summary) {
    this.summary = summary;
  }

  public Order taxes(OrderTaxes taxes) {
    this.taxes = taxes;
    return this;
  }

   /**
   * Get taxes
   * @return taxes
  **/
  @ApiModelProperty(example = "null", value = "")
  public OrderTaxes getTaxes() {
    return taxes;
  }

  public void setTaxes(OrderTaxes taxes) {
    this.taxes = taxes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Order order = (Order) o;
    return Objects.equals(this.affiliates, order.affiliates) &&
        Objects.equals(this.autoOrder, order.autoOrder) &&
        Objects.equals(this.billing, order.billing) &&
        Objects.equals(this.buysafe, order.buysafe) &&
        Objects.equals(this.channelPartner, order.channelPartner) &&
        Objects.equals(this.checkout, order.checkout) &&
        Objects.equals(this.coupons, order.coupons) &&
        Objects.equals(this.creationDts, order.creationDts) &&
        Objects.equals(this.currencyCode, order.currencyCode) &&
        Objects.equals(this.currentStage, order.currentStage) &&
        Objects.equals(this.customerProfile, order.customerProfile) &&
        Objects.equals(this.digitalOrder, order.digitalOrder) &&
        Objects.equals(this.edi, order.edi) &&
        Objects.equals(this.exchangeRate, order.exchangeRate) &&
        Objects.equals(this.fraudScore, order.fraudScore) &&
        Objects.equals(this.gift, order.gift) &&
        Objects.equals(this.giftCertificate, order.giftCertificate) &&
        Objects.equals(this.internal, order.internal) &&
        Objects.equals(this.items, order.items) &&
        Objects.equals(this.languageIsoCode, order.languageIsoCode) &&
        Objects.equals(this.linkedShipment, order.linkedShipment) &&
        Objects.equals(this.marketing, order.marketing) &&
        Objects.equals(this.merchantId, order.merchantId) &&
        Objects.equals(this.orderId, order.orderId) &&
        Objects.equals(this.payment, order.payment) &&
        Objects.equals(this.quote, order.quote) &&
        Objects.equals(this.refundDts, order.refundDts) &&
        Objects.equals(this.rejectDts, order.rejectDts) &&
        Objects.equals(this.salesforce, order.salesforce) &&
        Objects.equals(this.shipping, order.shipping) &&
        Objects.equals(this.summary, order.summary) &&
        Objects.equals(this.taxes, order.taxes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(affiliates, autoOrder, billing, buysafe, channelPartner, checkout, coupons, creationDts, currencyCode, currentStage, customerProfile, digitalOrder, edi, exchangeRate, fraudScore, gift, giftCertificate, internal, items, languageIsoCode, linkedShipment, marketing, merchantId, orderId, payment, quote, refundDts, rejectDts, salesforce, shipping, summary, taxes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Order {\n");
    
    sb.append("    affiliates: ").append(toIndentedString(affiliates)).append("\n");
    sb.append("    autoOrder: ").append(toIndentedString(autoOrder)).append("\n");
    sb.append("    billing: ").append(toIndentedString(billing)).append("\n");
    sb.append("    buysafe: ").append(toIndentedString(buysafe)).append("\n");
    sb.append("    channelPartner: ").append(toIndentedString(channelPartner)).append("\n");
    sb.append("    checkout: ").append(toIndentedString(checkout)).append("\n");
    sb.append("    coupons: ").append(toIndentedString(coupons)).append("\n");
    sb.append("    creationDts: ").append(toIndentedString(creationDts)).append("\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    currentStage: ").append(toIndentedString(currentStage)).append("\n");
    sb.append("    customerProfile: ").append(toIndentedString(customerProfile)).append("\n");
    sb.append("    digitalOrder: ").append(toIndentedString(digitalOrder)).append("\n");
    sb.append("    edi: ").append(toIndentedString(edi)).append("\n");
    sb.append("    exchangeRate: ").append(toIndentedString(exchangeRate)).append("\n");
    sb.append("    fraudScore: ").append(toIndentedString(fraudScore)).append("\n");
    sb.append("    gift: ").append(toIndentedString(gift)).append("\n");
    sb.append("    giftCertificate: ").append(toIndentedString(giftCertificate)).append("\n");
    sb.append("    internal: ").append(toIndentedString(internal)).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("    languageIsoCode: ").append(toIndentedString(languageIsoCode)).append("\n");
    sb.append("    linkedShipment: ").append(toIndentedString(linkedShipment)).append("\n");
    sb.append("    marketing: ").append(toIndentedString(marketing)).append("\n");
    sb.append("    merchantId: ").append(toIndentedString(merchantId)).append("\n");
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    payment: ").append(toIndentedString(payment)).append("\n");
    sb.append("    quote: ").append(toIndentedString(quote)).append("\n");
    sb.append("    refundDts: ").append(toIndentedString(refundDts)).append("\n");
    sb.append("    rejectDts: ").append(toIndentedString(rejectDts)).append("\n");
    sb.append("    salesforce: ").append(toIndentedString(salesforce)).append("\n");
    sb.append("    shipping: ").append(toIndentedString(shipping)).append("\n");
    sb.append("    summary: ").append(toIndentedString(summary)).append("\n");
    sb.append("    taxes: ").append(toIndentedString(taxes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

