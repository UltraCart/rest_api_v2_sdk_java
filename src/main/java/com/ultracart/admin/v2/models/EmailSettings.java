/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * EmailSettings
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-07-10T16:39:09.029-04:00[America/Indianapolis]")
public class EmailSettings {
  public static final String SERIALIZED_NAME_EMAILS_PER_DAY = "emails_per_day";
  @SerializedName(SERIALIZED_NAME_EMAILS_PER_DAY)
  private Integer emailsPerDay;

  public static final String SERIALIZED_NAME_EMAILS_PER_HOUR = "emails_per_hour";
  @SerializedName(SERIALIZED_NAME_EMAILS_PER_HOUR)
  private Integer emailsPerHour;

  public static final String SERIALIZED_NAME_EMAILS_PER_MONTH = "emails_per_month";
  @SerializedName(SERIALIZED_NAME_EMAILS_PER_MONTH)
  private Integer emailsPerMonth;

  public static final String SERIALIZED_NAME_MARKETING_ESP_DOMAIN_USER = "marketing_esp_domain_user";
  @SerializedName(SERIALIZED_NAME_MARKETING_ESP_DOMAIN_USER)
  private String marketingEspDomainUser;

  public static final String SERIALIZED_NAME_MARKETING_ESP_DOMAIN_UUID = "marketing_esp_domain_uuid";
  @SerializedName(SERIALIZED_NAME_MARKETING_ESP_DOMAIN_UUID)
  private String marketingEspDomainUuid;

  public static final String SERIALIZED_NAME_MARKETING_ESP_FRIENDLY_NAME = "marketing_esp_friendly_name";
  @SerializedName(SERIALIZED_NAME_MARKETING_ESP_FRIENDLY_NAME)
  private String marketingEspFriendlyName;

  public static final String SERIALIZED_NAME_POSTCARD_FROM_ADDRESS1 = "postcard_from_address1";
  @SerializedName(SERIALIZED_NAME_POSTCARD_FROM_ADDRESS1)
  private String postcardFromAddress1;

  public static final String SERIALIZED_NAME_POSTCARD_FROM_ADDRESS2 = "postcard_from_address2";
  @SerializedName(SERIALIZED_NAME_POSTCARD_FROM_ADDRESS2)
  private String postcardFromAddress2;

  public static final String SERIALIZED_NAME_POSTCARD_FROM_CITY = "postcard_from_city";
  @SerializedName(SERIALIZED_NAME_POSTCARD_FROM_CITY)
  private String postcardFromCity;

  public static final String SERIALIZED_NAME_POSTCARD_FROM_NAME = "postcard_from_name";
  @SerializedName(SERIALIZED_NAME_POSTCARD_FROM_NAME)
  private String postcardFromName;

  public static final String SERIALIZED_NAME_POSTCARD_FROM_POSTAL_CODE = "postcard_from_postal_code";
  @SerializedName(SERIALIZED_NAME_POSTCARD_FROM_POSTAL_CODE)
  private String postcardFromPostalCode;

  public static final String SERIALIZED_NAME_POSTCARD_FROM_STATE = "postcard_from_state";
  @SerializedName(SERIALIZED_NAME_POSTCARD_FROM_STATE)
  private String postcardFromState;

  public static final String SERIALIZED_NAME_REQUIRE_ORDER_WITHIN_LAST = "require_order_within_last";
  @SerializedName(SERIALIZED_NAME_REQUIRE_ORDER_WITHIN_LAST)
  private Integer requireOrderWithinLast;

  public static final String SERIALIZED_NAME_REVIEWS_IO_CONFIGURED = "reviews_io_configured";
  @SerializedName(SERIALIZED_NAME_REVIEWS_IO_CONFIGURED)
  private Boolean reviewsIoConfigured;

  public static final String SERIALIZED_NAME_SMS_ESP_TWILIO_UUID = "sms_esp_twilio_uuid";
  @SerializedName(SERIALIZED_NAME_SMS_ESP_TWILIO_UUID)
  private String smsEspTwilioUuid;

  public static final String SERIALIZED_NAME_SMS_PHONE_NUMBER = "sms_phone_number";
  @SerializedName(SERIALIZED_NAME_SMS_PHONE_NUMBER)
  private String smsPhoneNumber;

  public static final String SERIALIZED_NAME_TRANSACTIONAL_ESP_DOMAIN_USER = "transactional_esp_domain_user";
  @SerializedName(SERIALIZED_NAME_TRANSACTIONAL_ESP_DOMAIN_USER)
  private String transactionalEspDomainUser;

  public static final String SERIALIZED_NAME_TRANSACTIONAL_ESP_DOMAIN_UUID = "transactional_esp_domain_uuid";
  @SerializedName(SERIALIZED_NAME_TRANSACTIONAL_ESP_DOMAIN_UUID)
  private String transactionalEspDomainUuid;

  public static final String SERIALIZED_NAME_TRANSACTIONAL_ESP_FRIENDLY_NAME = "transactional_esp_friendly_name";
  @SerializedName(SERIALIZED_NAME_TRANSACTIONAL_ESP_FRIENDLY_NAME)
  private String transactionalEspFriendlyName;

  public EmailSettings() { 
  }

  public EmailSettings emailsPerDay(Integer emailsPerDay) {
    
    this.emailsPerDay = emailsPerDay;
    return this;
  }

   /**
   * Emails per day allowed
   * @return emailsPerDay
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Emails per day allowed")

  public Integer getEmailsPerDay() {
    return emailsPerDay;
  }


  public void setEmailsPerDay(Integer emailsPerDay) {
    this.emailsPerDay = emailsPerDay;
  }


  public EmailSettings emailsPerHour(Integer emailsPerHour) {
    
    this.emailsPerHour = emailsPerHour;
    return this;
  }

   /**
   * Emails per hour allowed
   * @return emailsPerHour
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Emails per hour allowed")

  public Integer getEmailsPerHour() {
    return emailsPerHour;
  }


  public void setEmailsPerHour(Integer emailsPerHour) {
    this.emailsPerHour = emailsPerHour;
  }


  public EmailSettings emailsPerMonth(Integer emailsPerMonth) {
    
    this.emailsPerMonth = emailsPerMonth;
    return this;
  }

   /**
   * Emails per month allowed
   * @return emailsPerMonth
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Emails per month allowed")

  public Integer getEmailsPerMonth() {
    return emailsPerMonth;
  }


  public void setEmailsPerMonth(Integer emailsPerMonth) {
    this.emailsPerMonth = emailsPerMonth;
  }


  public EmailSettings marketingEspDomainUser(String marketingEspDomainUser) {
    
    this.marketingEspDomainUser = marketingEspDomainUser;
    return this;
  }

   /**
   * Get marketingEspDomainUser
   * @return marketingEspDomainUser
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMarketingEspDomainUser() {
    return marketingEspDomainUser;
  }


  public void setMarketingEspDomainUser(String marketingEspDomainUser) {
    this.marketingEspDomainUser = marketingEspDomainUser;
  }


  public EmailSettings marketingEspDomainUuid(String marketingEspDomainUuid) {
    
    this.marketingEspDomainUuid = marketingEspDomainUuid;
    return this;
  }

   /**
   * Get marketingEspDomainUuid
   * @return marketingEspDomainUuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMarketingEspDomainUuid() {
    return marketingEspDomainUuid;
  }


  public void setMarketingEspDomainUuid(String marketingEspDomainUuid) {
    this.marketingEspDomainUuid = marketingEspDomainUuid;
  }


  public EmailSettings marketingEspFriendlyName(String marketingEspFriendlyName) {
    
    this.marketingEspFriendlyName = marketingEspFriendlyName;
    return this;
  }

   /**
   * Get marketingEspFriendlyName
   * @return marketingEspFriendlyName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMarketingEspFriendlyName() {
    return marketingEspFriendlyName;
  }


  public void setMarketingEspFriendlyName(String marketingEspFriendlyName) {
    this.marketingEspFriendlyName = marketingEspFriendlyName;
  }


  public EmailSettings postcardFromAddress1(String postcardFromAddress1) {
    
    this.postcardFromAddress1 = postcardFromAddress1;
    return this;
  }

   /**
   * Get postcardFromAddress1
   * @return postcardFromAddress1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPostcardFromAddress1() {
    return postcardFromAddress1;
  }


  public void setPostcardFromAddress1(String postcardFromAddress1) {
    this.postcardFromAddress1 = postcardFromAddress1;
  }


  public EmailSettings postcardFromAddress2(String postcardFromAddress2) {
    
    this.postcardFromAddress2 = postcardFromAddress2;
    return this;
  }

   /**
   * Get postcardFromAddress2
   * @return postcardFromAddress2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPostcardFromAddress2() {
    return postcardFromAddress2;
  }


  public void setPostcardFromAddress2(String postcardFromAddress2) {
    this.postcardFromAddress2 = postcardFromAddress2;
  }


  public EmailSettings postcardFromCity(String postcardFromCity) {
    
    this.postcardFromCity = postcardFromCity;
    return this;
  }

   /**
   * Get postcardFromCity
   * @return postcardFromCity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPostcardFromCity() {
    return postcardFromCity;
  }


  public void setPostcardFromCity(String postcardFromCity) {
    this.postcardFromCity = postcardFromCity;
  }


  public EmailSettings postcardFromName(String postcardFromName) {
    
    this.postcardFromName = postcardFromName;
    return this;
  }

   /**
   * Get postcardFromName
   * @return postcardFromName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPostcardFromName() {
    return postcardFromName;
  }


  public void setPostcardFromName(String postcardFromName) {
    this.postcardFromName = postcardFromName;
  }


  public EmailSettings postcardFromPostalCode(String postcardFromPostalCode) {
    
    this.postcardFromPostalCode = postcardFromPostalCode;
    return this;
  }

   /**
   * Get postcardFromPostalCode
   * @return postcardFromPostalCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPostcardFromPostalCode() {
    return postcardFromPostalCode;
  }


  public void setPostcardFromPostalCode(String postcardFromPostalCode) {
    this.postcardFromPostalCode = postcardFromPostalCode;
  }


  public EmailSettings postcardFromState(String postcardFromState) {
    
    this.postcardFromState = postcardFromState;
    return this;
  }

   /**
   * Get postcardFromState
   * @return postcardFromState
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPostcardFromState() {
    return postcardFromState;
  }


  public void setPostcardFromState(String postcardFromState) {
    this.postcardFromState = postcardFromState;
  }


  public EmailSettings requireOrderWithinLast(Integer requireOrderWithinLast) {
    
    this.requireOrderWithinLast = requireOrderWithinLast;
    return this;
  }

   /**
   * Require order within last
   * @return requireOrderWithinLast
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Require order within last")

  public Integer getRequireOrderWithinLast() {
    return requireOrderWithinLast;
  }


  public void setRequireOrderWithinLast(Integer requireOrderWithinLast) {
    this.requireOrderWithinLast = requireOrderWithinLast;
  }


  public EmailSettings reviewsIoConfigured(Boolean reviewsIoConfigured) {
    
    this.reviewsIoConfigured = reviewsIoConfigured;
    return this;
  }

   /**
   * True if the Reviews.io integration is configured
   * @return reviewsIoConfigured
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if the Reviews.io integration is configured")

  public Boolean getReviewsIoConfigured() {
    return reviewsIoConfigured;
  }


  public void setReviewsIoConfigured(Boolean reviewsIoConfigured) {
    this.reviewsIoConfigured = reviewsIoConfigured;
  }


  public EmailSettings smsEspTwilioUuid(String smsEspTwilioUuid) {
    
    this.smsEspTwilioUuid = smsEspTwilioUuid;
    return this;
  }

   /**
   * Get smsEspTwilioUuid
   * @return smsEspTwilioUuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSmsEspTwilioUuid() {
    return smsEspTwilioUuid;
  }


  public void setSmsEspTwilioUuid(String smsEspTwilioUuid) {
    this.smsEspTwilioUuid = smsEspTwilioUuid;
  }


  public EmailSettings smsPhoneNumber(String smsPhoneNumber) {
    
    this.smsPhoneNumber = smsPhoneNumber;
    return this;
  }

   /**
   * Get smsPhoneNumber
   * @return smsPhoneNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSmsPhoneNumber() {
    return smsPhoneNumber;
  }


  public void setSmsPhoneNumber(String smsPhoneNumber) {
    this.smsPhoneNumber = smsPhoneNumber;
  }


  public EmailSettings transactionalEspDomainUser(String transactionalEspDomainUser) {
    
    this.transactionalEspDomainUser = transactionalEspDomainUser;
    return this;
  }

   /**
   * Get transactionalEspDomainUser
   * @return transactionalEspDomainUser
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTransactionalEspDomainUser() {
    return transactionalEspDomainUser;
  }


  public void setTransactionalEspDomainUser(String transactionalEspDomainUser) {
    this.transactionalEspDomainUser = transactionalEspDomainUser;
  }


  public EmailSettings transactionalEspDomainUuid(String transactionalEspDomainUuid) {
    
    this.transactionalEspDomainUuid = transactionalEspDomainUuid;
    return this;
  }

   /**
   * Get transactionalEspDomainUuid
   * @return transactionalEspDomainUuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTransactionalEspDomainUuid() {
    return transactionalEspDomainUuid;
  }


  public void setTransactionalEspDomainUuid(String transactionalEspDomainUuid) {
    this.transactionalEspDomainUuid = transactionalEspDomainUuid;
  }


  public EmailSettings transactionalEspFriendlyName(String transactionalEspFriendlyName) {
    
    this.transactionalEspFriendlyName = transactionalEspFriendlyName;
    return this;
  }

   /**
   * Get transactionalEspFriendlyName
   * @return transactionalEspFriendlyName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTransactionalEspFriendlyName() {
    return transactionalEspFriendlyName;
  }


  public void setTransactionalEspFriendlyName(String transactionalEspFriendlyName) {
    this.transactionalEspFriendlyName = transactionalEspFriendlyName;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmailSettings emailSettings = (EmailSettings) o;
    return Objects.equals(this.emailsPerDay, emailSettings.emailsPerDay) &&
        Objects.equals(this.emailsPerHour, emailSettings.emailsPerHour) &&
        Objects.equals(this.emailsPerMonth, emailSettings.emailsPerMonth) &&
        Objects.equals(this.marketingEspDomainUser, emailSettings.marketingEspDomainUser) &&
        Objects.equals(this.marketingEspDomainUuid, emailSettings.marketingEspDomainUuid) &&
        Objects.equals(this.marketingEspFriendlyName, emailSettings.marketingEspFriendlyName) &&
        Objects.equals(this.postcardFromAddress1, emailSettings.postcardFromAddress1) &&
        Objects.equals(this.postcardFromAddress2, emailSettings.postcardFromAddress2) &&
        Objects.equals(this.postcardFromCity, emailSettings.postcardFromCity) &&
        Objects.equals(this.postcardFromName, emailSettings.postcardFromName) &&
        Objects.equals(this.postcardFromPostalCode, emailSettings.postcardFromPostalCode) &&
        Objects.equals(this.postcardFromState, emailSettings.postcardFromState) &&
        Objects.equals(this.requireOrderWithinLast, emailSettings.requireOrderWithinLast) &&
        Objects.equals(this.reviewsIoConfigured, emailSettings.reviewsIoConfigured) &&
        Objects.equals(this.smsEspTwilioUuid, emailSettings.smsEspTwilioUuid) &&
        Objects.equals(this.smsPhoneNumber, emailSettings.smsPhoneNumber) &&
        Objects.equals(this.transactionalEspDomainUser, emailSettings.transactionalEspDomainUser) &&
        Objects.equals(this.transactionalEspDomainUuid, emailSettings.transactionalEspDomainUuid) &&
        Objects.equals(this.transactionalEspFriendlyName, emailSettings.transactionalEspFriendlyName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(emailsPerDay, emailsPerHour, emailsPerMonth, marketingEspDomainUser, marketingEspDomainUuid, marketingEspFriendlyName, postcardFromAddress1, postcardFromAddress2, postcardFromCity, postcardFromName, postcardFromPostalCode, postcardFromState, requireOrderWithinLast, reviewsIoConfigured, smsEspTwilioUuid, smsPhoneNumber, transactionalEspDomainUser, transactionalEspDomainUuid, transactionalEspFriendlyName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmailSettings {\n");
    sb.append("    emailsPerDay: ").append(toIndentedString(emailsPerDay)).append("\n");
    sb.append("    emailsPerHour: ").append(toIndentedString(emailsPerHour)).append("\n");
    sb.append("    emailsPerMonth: ").append(toIndentedString(emailsPerMonth)).append("\n");
    sb.append("    marketingEspDomainUser: ").append(toIndentedString(marketingEspDomainUser)).append("\n");
    sb.append("    marketingEspDomainUuid: ").append(toIndentedString(marketingEspDomainUuid)).append("\n");
    sb.append("    marketingEspFriendlyName: ").append(toIndentedString(marketingEspFriendlyName)).append("\n");
    sb.append("    postcardFromAddress1: ").append(toIndentedString(postcardFromAddress1)).append("\n");
    sb.append("    postcardFromAddress2: ").append(toIndentedString(postcardFromAddress2)).append("\n");
    sb.append("    postcardFromCity: ").append(toIndentedString(postcardFromCity)).append("\n");
    sb.append("    postcardFromName: ").append(toIndentedString(postcardFromName)).append("\n");
    sb.append("    postcardFromPostalCode: ").append(toIndentedString(postcardFromPostalCode)).append("\n");
    sb.append("    postcardFromState: ").append(toIndentedString(postcardFromState)).append("\n");
    sb.append("    requireOrderWithinLast: ").append(toIndentedString(requireOrderWithinLast)).append("\n");
    sb.append("    reviewsIoConfigured: ").append(toIndentedString(reviewsIoConfigured)).append("\n");
    sb.append("    smsEspTwilioUuid: ").append(toIndentedString(smsEspTwilioUuid)).append("\n");
    sb.append("    smsPhoneNumber: ").append(toIndentedString(smsPhoneNumber)).append("\n");
    sb.append("    transactionalEspDomainUser: ").append(toIndentedString(transactionalEspDomainUser)).append("\n");
    sb.append("    transactionalEspDomainUuid: ").append(toIndentedString(transactionalEspDomainUuid)).append("\n");
    sb.append("    transactionalEspFriendlyName: ").append(toIndentedString(transactionalEspFriendlyName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("emails_per_day");
    openapiFields.add("emails_per_hour");
    openapiFields.add("emails_per_month");
    openapiFields.add("marketing_esp_domain_user");
    openapiFields.add("marketing_esp_domain_uuid");
    openapiFields.add("marketing_esp_friendly_name");
    openapiFields.add("postcard_from_address1");
    openapiFields.add("postcard_from_address2");
    openapiFields.add("postcard_from_city");
    openapiFields.add("postcard_from_name");
    openapiFields.add("postcard_from_postal_code");
    openapiFields.add("postcard_from_state");
    openapiFields.add("require_order_within_last");
    openapiFields.add("reviews_io_configured");
    openapiFields.add("sms_esp_twilio_uuid");
    openapiFields.add("sms_phone_number");
    openapiFields.add("transactional_esp_domain_user");
    openapiFields.add("transactional_esp_domain_uuid");
    openapiFields.add("transactional_esp_friendly_name");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to EmailSettings
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (EmailSettings.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in EmailSettings is not found in the empty JSON string", EmailSettings.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!EmailSettings.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EmailSettings` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("marketing_esp_domain_user") != null && !jsonObj.get("marketing_esp_domain_user").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `marketing_esp_domain_user` to be a primitive type in the JSON string but got `%s`", jsonObj.get("marketing_esp_domain_user").toString()));
      }
      if (jsonObj.get("marketing_esp_domain_uuid") != null && !jsonObj.get("marketing_esp_domain_uuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `marketing_esp_domain_uuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("marketing_esp_domain_uuid").toString()));
      }
      if (jsonObj.get("marketing_esp_friendly_name") != null && !jsonObj.get("marketing_esp_friendly_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `marketing_esp_friendly_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("marketing_esp_friendly_name").toString()));
      }
      if (jsonObj.get("postcard_from_address1") != null && !jsonObj.get("postcard_from_address1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `postcard_from_address1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("postcard_from_address1").toString()));
      }
      if (jsonObj.get("postcard_from_address2") != null && !jsonObj.get("postcard_from_address2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `postcard_from_address2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("postcard_from_address2").toString()));
      }
      if (jsonObj.get("postcard_from_city") != null && !jsonObj.get("postcard_from_city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `postcard_from_city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("postcard_from_city").toString()));
      }
      if (jsonObj.get("postcard_from_name") != null && !jsonObj.get("postcard_from_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `postcard_from_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("postcard_from_name").toString()));
      }
      if (jsonObj.get("postcard_from_postal_code") != null && !jsonObj.get("postcard_from_postal_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `postcard_from_postal_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("postcard_from_postal_code").toString()));
      }
      if (jsonObj.get("postcard_from_state") != null && !jsonObj.get("postcard_from_state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `postcard_from_state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("postcard_from_state").toString()));
      }
      if (jsonObj.get("sms_esp_twilio_uuid") != null && !jsonObj.get("sms_esp_twilio_uuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sms_esp_twilio_uuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sms_esp_twilio_uuid").toString()));
      }
      if (jsonObj.get("sms_phone_number") != null && !jsonObj.get("sms_phone_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sms_phone_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sms_phone_number").toString()));
      }
      if (jsonObj.get("transactional_esp_domain_user") != null && !jsonObj.get("transactional_esp_domain_user").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `transactional_esp_domain_user` to be a primitive type in the JSON string but got `%s`", jsonObj.get("transactional_esp_domain_user").toString()));
      }
      if (jsonObj.get("transactional_esp_domain_uuid") != null && !jsonObj.get("transactional_esp_domain_uuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `transactional_esp_domain_uuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("transactional_esp_domain_uuid").toString()));
      }
      if (jsonObj.get("transactional_esp_friendly_name") != null && !jsonObj.get("transactional_esp_friendly_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `transactional_esp_friendly_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("transactional_esp_friendly_name").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EmailSettings.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EmailSettings' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EmailSettings> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EmailSettings.class));

       return (TypeAdapter<T>) new TypeAdapter<EmailSettings>() {
           @Override
           public void write(JsonWriter out, EmailSettings value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EmailSettings read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of EmailSettings given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of EmailSettings
  * @throws IOException if the JSON string is invalid with respect to EmailSettings
  */
  public static EmailSettings fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EmailSettings.class);
  }

 /**
  * Convert an instance of EmailSettings to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

