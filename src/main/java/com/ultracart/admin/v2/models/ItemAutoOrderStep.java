/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.ItemAutoOrderStepArbitraryUnitCostSchedule;
import com.ultracart.admin.v2.models.ItemAutoOrderStepGrandfatherPricing;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * ItemAutoOrderStep
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-23T09:20:07.999-04:00[America/Indianapolis]")
public class ItemAutoOrderStep {
  public static final String SERIALIZED_NAME_ARBITRARY_SCHEDULE_DAYS = "arbitrary_schedule_days";
  @SerializedName(SERIALIZED_NAME_ARBITRARY_SCHEDULE_DAYS)
  private Integer arbitraryScheduleDays;

  public static final String SERIALIZED_NAME_ARBITRARY_UNIT_COST = "arbitrary_unit_cost";
  @SerializedName(SERIALIZED_NAME_ARBITRARY_UNIT_COST)
  private BigDecimal arbitraryUnitCost;

  public static final String SERIALIZED_NAME_ARBITRARY_UNIT_COST_SCHEDULES = "arbitrary_unit_cost_schedules";
  @SerializedName(SERIALIZED_NAME_ARBITRARY_UNIT_COST_SCHEDULES)
  private List<ItemAutoOrderStepArbitraryUnitCostSchedule> arbitraryUnitCostSchedules = null;

  public static final String SERIALIZED_NAME_GRANDFATHER_PRICING = "grandfather_pricing";
  @SerializedName(SERIALIZED_NAME_GRANDFATHER_PRICING)
  private List<ItemAutoOrderStepGrandfatherPricing> grandfatherPricing = null;

  public static final String SERIALIZED_NAME_MANAGED_BY = "managed_by";
  @SerializedName(SERIALIZED_NAME_MANAGED_BY)
  private String managedBy;

  public static final String SERIALIZED_NAME_PAUSE_DAYS = "pause_days";
  @SerializedName(SERIALIZED_NAME_PAUSE_DAYS)
  private Integer pauseDays;

  public static final String SERIALIZED_NAME_PAUSE_UNTIL_DATE = "pause_until_date";
  @SerializedName(SERIALIZED_NAME_PAUSE_UNTIL_DATE)
  private String pauseUntilDate;

  public static final String SERIALIZED_NAME_PRESHIPMENT_NOTICE_DAYS = "preshipment_notice_days";
  @SerializedName(SERIALIZED_NAME_PRESHIPMENT_NOTICE_DAYS)
  private Integer preshipmentNoticeDays;

  public static final String SERIALIZED_NAME_RECURRING_MERCHANT_ITEM_ID = "recurring_merchant_item_id";
  @SerializedName(SERIALIZED_NAME_RECURRING_MERCHANT_ITEM_ID)
  private String recurringMerchantItemId;

  public static final String SERIALIZED_NAME_RECURRING_MERCHANT_ITEM_OID = "recurring_merchant_item_oid";
  @SerializedName(SERIALIZED_NAME_RECURRING_MERCHANT_ITEM_OID)
  private Integer recurringMerchantItemOid;

  public static final String SERIALIZED_NAME_REPEAT_COUNT = "repeat_count";
  @SerializedName(SERIALIZED_NAME_REPEAT_COUNT)
  private Integer repeatCount;

  public static final String SERIALIZED_NAME_SCHEDULE = "schedule";
  @SerializedName(SERIALIZED_NAME_SCHEDULE)
  private String schedule;

  public static final String SERIALIZED_NAME_SUBSCRIBE_EMAIL_LIST_NAME = "subscribe_email_list_name";
  @SerializedName(SERIALIZED_NAME_SUBSCRIBE_EMAIL_LIST_NAME)
  private String subscribeEmailListName;

  public static final String SERIALIZED_NAME_SUBSCRIBE_EMAIL_LIST_OID = "subscribe_email_list_oid";
  @SerializedName(SERIALIZED_NAME_SUBSCRIBE_EMAIL_LIST_OID)
  private Integer subscribeEmailListOid;

  /**
   * Type of step (item, kit only, loop or pause)
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    ITEM("item"),
    
    PAUSE("pause"),
    
    LOOP("loop"),
    
    KIT_ONLY("kit only");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public ItemAutoOrderStep() { 
  }

  public ItemAutoOrderStep arbitraryScheduleDays(Integer arbitraryScheduleDays) {
    
    this.arbitraryScheduleDays = arbitraryScheduleDays;
    return this;
  }

   /**
   * If the schedule is arbitrary, then this is the number of days
   * @return arbitraryScheduleDays
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If the schedule is arbitrary, then this is the number of days")

  public Integer getArbitraryScheduleDays() {
    return arbitraryScheduleDays;
  }


  public void setArbitraryScheduleDays(Integer arbitraryScheduleDays) {
    this.arbitraryScheduleDays = arbitraryScheduleDays;
  }


  public ItemAutoOrderStep arbitraryUnitCost(BigDecimal arbitraryUnitCost) {
    
    this.arbitraryUnitCost = arbitraryUnitCost;
    return this;
  }

   /**
   * Arbitrary unit cost used to override the regular item cost
   * @return arbitraryUnitCost
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Arbitrary unit cost used to override the regular item cost")

  public BigDecimal getArbitraryUnitCost() {
    return arbitraryUnitCost;
  }


  public void setArbitraryUnitCost(BigDecimal arbitraryUnitCost) {
    this.arbitraryUnitCost = arbitraryUnitCost;
  }


  public ItemAutoOrderStep arbitraryUnitCostSchedules(List<ItemAutoOrderStepArbitraryUnitCostSchedule> arbitraryUnitCostSchedules) {
    
    this.arbitraryUnitCostSchedules = arbitraryUnitCostSchedules;
    return this;
  }

  public ItemAutoOrderStep addArbitraryUnitCostSchedulesItem(ItemAutoOrderStepArbitraryUnitCostSchedule arbitraryUnitCostSchedulesItem) {
    if (this.arbitraryUnitCostSchedules == null) {
      this.arbitraryUnitCostSchedules = new ArrayList<>();
    }
    this.arbitraryUnitCostSchedules.add(arbitraryUnitCostSchedulesItem);
    return this;
  }

   /**
   * Arbitrary unit costs schedules for more advanced discounting by rebill attempt
   * @return arbitraryUnitCostSchedules
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Arbitrary unit costs schedules for more advanced discounting by rebill attempt")

  public List<ItemAutoOrderStepArbitraryUnitCostSchedule> getArbitraryUnitCostSchedules() {
    return arbitraryUnitCostSchedules;
  }


  public void setArbitraryUnitCostSchedules(List<ItemAutoOrderStepArbitraryUnitCostSchedule> arbitraryUnitCostSchedules) {
    this.arbitraryUnitCostSchedules = arbitraryUnitCostSchedules;
  }


  public ItemAutoOrderStep grandfatherPricing(List<ItemAutoOrderStepGrandfatherPricing> grandfatherPricing) {
    
    this.grandfatherPricing = grandfatherPricing;
    return this;
  }

  public ItemAutoOrderStep addGrandfatherPricingItem(ItemAutoOrderStepGrandfatherPricing grandfatherPricingItem) {
    if (this.grandfatherPricing == null) {
      this.grandfatherPricing = new ArrayList<>();
    }
    this.grandfatherPricing.add(grandfatherPricingItem);
    return this;
  }

   /**
   * Grand-father pricing configuration if the rebill schedule has changed over time
   * @return grandfatherPricing
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Grand-father pricing configuration if the rebill schedule has changed over time")

  public List<ItemAutoOrderStepGrandfatherPricing> getGrandfatherPricing() {
    return grandfatherPricing;
  }


  public void setGrandfatherPricing(List<ItemAutoOrderStepGrandfatherPricing> grandfatherPricing) {
    this.grandfatherPricing = grandfatherPricing;
  }


  public ItemAutoOrderStep managedBy(String managedBy) {
    
    this.managedBy = managedBy;
    return this;
  }

   /**
   * Managed by (defaults to UltraCart)
   * @return managedBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Managed by (defaults to UltraCart)")

  public String getManagedBy() {
    return managedBy;
  }


  public void setManagedBy(String managedBy) {
    this.managedBy = managedBy;
  }


  public ItemAutoOrderStep pauseDays(Integer pauseDays) {
    
    this.pauseDays = pauseDays;
    return this;
  }

   /**
   * Number of days to pause
   * @return pauseDays
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Number of days to pause")

  public Integer getPauseDays() {
    return pauseDays;
  }


  public void setPauseDays(Integer pauseDays) {
    this.pauseDays = pauseDays;
  }


  public ItemAutoOrderStep pauseUntilDate(String pauseUntilDate) {
    
    this.pauseUntilDate = pauseUntilDate;
    return this;
  }

   /**
   * Wait for this step to happen until the specified date
   * @return pauseUntilDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Wait for this step to happen until the specified date")

  public String getPauseUntilDate() {
    return pauseUntilDate;
  }


  public void setPauseUntilDate(String pauseUntilDate) {
    this.pauseUntilDate = pauseUntilDate;
  }


  public ItemAutoOrderStep preshipmentNoticeDays(Integer preshipmentNoticeDays) {
    
    this.preshipmentNoticeDays = preshipmentNoticeDays;
    return this;
  }

   /**
   * If set, a pre-shipment notice is sent to the customer this many days in advance
   * @return preshipmentNoticeDays
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If set, a pre-shipment notice is sent to the customer this many days in advance")

  public Integer getPreshipmentNoticeDays() {
    return preshipmentNoticeDays;
  }


  public void setPreshipmentNoticeDays(Integer preshipmentNoticeDays) {
    this.preshipmentNoticeDays = preshipmentNoticeDays;
  }


  public ItemAutoOrderStep recurringMerchantItemId(String recurringMerchantItemId) {
    
    this.recurringMerchantItemId = recurringMerchantItemId;
    return this;
  }

   /**
   * Item id to rebill
   * @return recurringMerchantItemId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Item id to rebill")

  public String getRecurringMerchantItemId() {
    return recurringMerchantItemId;
  }


  public void setRecurringMerchantItemId(String recurringMerchantItemId) {
    this.recurringMerchantItemId = recurringMerchantItemId;
  }


  public ItemAutoOrderStep recurringMerchantItemOid(Integer recurringMerchantItemOid) {
    
    this.recurringMerchantItemOid = recurringMerchantItemOid;
    return this;
  }

   /**
   * Item object identifier to rebill
   * @return recurringMerchantItemOid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Item object identifier to rebill")

  public Integer getRecurringMerchantItemOid() {
    return recurringMerchantItemOid;
  }


  public void setRecurringMerchantItemOid(Integer recurringMerchantItemOid) {
    this.recurringMerchantItemOid = recurringMerchantItemOid;
  }


  public ItemAutoOrderStep repeatCount(Integer repeatCount) {
    
    this.repeatCount = repeatCount;
    return this;
  }

   /**
   * Number of times to rebill.  Last step can be null for infinite
   * @return repeatCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Number of times to rebill.  Last step can be null for infinite")

  public Integer getRepeatCount() {
    return repeatCount;
  }


  public void setRepeatCount(Integer repeatCount) {
    this.repeatCount = repeatCount;
  }


  public ItemAutoOrderStep schedule(String schedule) {
    
    this.schedule = schedule;
    return this;
  }

   /**
   * Frequency of the rebill
   * @return schedule
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Frequency of the rebill")

  public String getSchedule() {
    return schedule;
  }


  public void setSchedule(String schedule) {
    this.schedule = schedule;
  }


  public ItemAutoOrderStep subscribeEmailListName(String subscribeEmailListName) {
    
    this.subscribeEmailListName = subscribeEmailListName;
    return this;
  }

   /**
   * Email list name to subscribe the customer to when the rebill occurs
   * @return subscribeEmailListName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Email list name to subscribe the customer to when the rebill occurs")

  public String getSubscribeEmailListName() {
    return subscribeEmailListName;
  }


  public void setSubscribeEmailListName(String subscribeEmailListName) {
    this.subscribeEmailListName = subscribeEmailListName;
  }


  public ItemAutoOrderStep subscribeEmailListOid(Integer subscribeEmailListOid) {
    
    this.subscribeEmailListOid = subscribeEmailListOid;
    return this;
  }

   /**
   * Email list identifier to subscribe the customer to when this rebill occurs
   * @return subscribeEmailListOid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Email list identifier to subscribe the customer to when this rebill occurs")

  public Integer getSubscribeEmailListOid() {
    return subscribeEmailListOid;
  }


  public void setSubscribeEmailListOid(Integer subscribeEmailListOid) {
    this.subscribeEmailListOid = subscribeEmailListOid;
  }


  public ItemAutoOrderStep type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * Type of step (item, kit only, loop or pause)
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Type of step (item, kit only, loop or pause)")

  public TypeEnum getType() {
    return type;
  }


  public void setType(TypeEnum type) {
    this.type = type;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ItemAutoOrderStep itemAutoOrderStep = (ItemAutoOrderStep) o;
    return Objects.equals(this.arbitraryScheduleDays, itemAutoOrderStep.arbitraryScheduleDays) &&
        Objects.equals(this.arbitraryUnitCost, itemAutoOrderStep.arbitraryUnitCost) &&
        Objects.equals(this.arbitraryUnitCostSchedules, itemAutoOrderStep.arbitraryUnitCostSchedules) &&
        Objects.equals(this.grandfatherPricing, itemAutoOrderStep.grandfatherPricing) &&
        Objects.equals(this.managedBy, itemAutoOrderStep.managedBy) &&
        Objects.equals(this.pauseDays, itemAutoOrderStep.pauseDays) &&
        Objects.equals(this.pauseUntilDate, itemAutoOrderStep.pauseUntilDate) &&
        Objects.equals(this.preshipmentNoticeDays, itemAutoOrderStep.preshipmentNoticeDays) &&
        Objects.equals(this.recurringMerchantItemId, itemAutoOrderStep.recurringMerchantItemId) &&
        Objects.equals(this.recurringMerchantItemOid, itemAutoOrderStep.recurringMerchantItemOid) &&
        Objects.equals(this.repeatCount, itemAutoOrderStep.repeatCount) &&
        Objects.equals(this.schedule, itemAutoOrderStep.schedule) &&
        Objects.equals(this.subscribeEmailListName, itemAutoOrderStep.subscribeEmailListName) &&
        Objects.equals(this.subscribeEmailListOid, itemAutoOrderStep.subscribeEmailListOid) &&
        Objects.equals(this.type, itemAutoOrderStep.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(arbitraryScheduleDays, arbitraryUnitCost, arbitraryUnitCostSchedules, grandfatherPricing, managedBy, pauseDays, pauseUntilDate, preshipmentNoticeDays, recurringMerchantItemId, recurringMerchantItemOid, repeatCount, schedule, subscribeEmailListName, subscribeEmailListOid, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ItemAutoOrderStep {\n");
    sb.append("    arbitraryScheduleDays: ").append(toIndentedString(arbitraryScheduleDays)).append("\n");
    sb.append("    arbitraryUnitCost: ").append(toIndentedString(arbitraryUnitCost)).append("\n");
    sb.append("    arbitraryUnitCostSchedules: ").append(toIndentedString(arbitraryUnitCostSchedules)).append("\n");
    sb.append("    grandfatherPricing: ").append(toIndentedString(grandfatherPricing)).append("\n");
    sb.append("    managedBy: ").append(toIndentedString(managedBy)).append("\n");
    sb.append("    pauseDays: ").append(toIndentedString(pauseDays)).append("\n");
    sb.append("    pauseUntilDate: ").append(toIndentedString(pauseUntilDate)).append("\n");
    sb.append("    preshipmentNoticeDays: ").append(toIndentedString(preshipmentNoticeDays)).append("\n");
    sb.append("    recurringMerchantItemId: ").append(toIndentedString(recurringMerchantItemId)).append("\n");
    sb.append("    recurringMerchantItemOid: ").append(toIndentedString(recurringMerchantItemOid)).append("\n");
    sb.append("    repeatCount: ").append(toIndentedString(repeatCount)).append("\n");
    sb.append("    schedule: ").append(toIndentedString(schedule)).append("\n");
    sb.append("    subscribeEmailListName: ").append(toIndentedString(subscribeEmailListName)).append("\n");
    sb.append("    subscribeEmailListOid: ").append(toIndentedString(subscribeEmailListOid)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("arbitrary_schedule_days");
    openapiFields.add("arbitrary_unit_cost");
    openapiFields.add("arbitrary_unit_cost_schedules");
    openapiFields.add("grandfather_pricing");
    openapiFields.add("managed_by");
    openapiFields.add("pause_days");
    openapiFields.add("pause_until_date");
    openapiFields.add("preshipment_notice_days");
    openapiFields.add("recurring_merchant_item_id");
    openapiFields.add("recurring_merchant_item_oid");
    openapiFields.add("repeat_count");
    openapiFields.add("schedule");
    openapiFields.add("subscribe_email_list_name");
    openapiFields.add("subscribe_email_list_oid");
    openapiFields.add("type");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ItemAutoOrderStep
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (ItemAutoOrderStep.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in ItemAutoOrderStep is not found in the empty JSON string", ItemAutoOrderStep.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!ItemAutoOrderStep.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ItemAutoOrderStep` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      JsonArray jsonArrayarbitraryUnitCostSchedules = jsonObj.getAsJsonArray("arbitrary_unit_cost_schedules");
      if (jsonArrayarbitraryUnitCostSchedules != null) {
        // ensure the json data is an array
        if (!jsonObj.get("arbitrary_unit_cost_schedules").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `arbitrary_unit_cost_schedules` to be an array in the JSON string but got `%s`", jsonObj.get("arbitrary_unit_cost_schedules").toString()));
        }

        // validate the optional field `arbitrary_unit_cost_schedules` (array)
        for (int i = 0; i < jsonArrayarbitraryUnitCostSchedules.size(); i++) {
          ItemAutoOrderStepArbitraryUnitCostSchedule.validateJsonObject(jsonArrayarbitraryUnitCostSchedules.get(i).getAsJsonObject());
        };
      }
      JsonArray jsonArraygrandfatherPricing = jsonObj.getAsJsonArray("grandfather_pricing");
      if (jsonArraygrandfatherPricing != null) {
        // ensure the json data is an array
        if (!jsonObj.get("grandfather_pricing").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `grandfather_pricing` to be an array in the JSON string but got `%s`", jsonObj.get("grandfather_pricing").toString()));
        }

        // validate the optional field `grandfather_pricing` (array)
        for (int i = 0; i < jsonArraygrandfatherPricing.size(); i++) {
          ItemAutoOrderStepGrandfatherPricing.validateJsonObject(jsonArraygrandfatherPricing.get(i).getAsJsonObject());
        };
      }
      if (jsonObj.get("managed_by") != null && !jsonObj.get("managed_by").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `managed_by` to be a primitive type in the JSON string but got `%s`", jsonObj.get("managed_by").toString()));
      }
      if (jsonObj.get("pause_until_date") != null && !jsonObj.get("pause_until_date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pause_until_date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pause_until_date").toString()));
      }
      if (jsonObj.get("recurring_merchant_item_id") != null && !jsonObj.get("recurring_merchant_item_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `recurring_merchant_item_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("recurring_merchant_item_id").toString()));
      }
      if (jsonObj.get("schedule") != null && !jsonObj.get("schedule").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `schedule` to be a primitive type in the JSON string but got `%s`", jsonObj.get("schedule").toString()));
      }
      if (jsonObj.get("subscribe_email_list_name") != null && !jsonObj.get("subscribe_email_list_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subscribe_email_list_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subscribe_email_list_name").toString()));
      }
      if (jsonObj.get("type") != null && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ItemAutoOrderStep.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ItemAutoOrderStep' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ItemAutoOrderStep> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ItemAutoOrderStep.class));

       return (TypeAdapter<T>) new TypeAdapter<ItemAutoOrderStep>() {
           @Override
           public void write(JsonWriter out, ItemAutoOrderStep value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ItemAutoOrderStep read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ItemAutoOrderStep given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ItemAutoOrderStep
  * @throws IOException if the JSON string is invalid with respect to ItemAutoOrderStep
  */
  public static ItemAutoOrderStep fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ItemAutoOrderStep.class);
  }

 /**
  * Convert an instance of ItemAutoOrderStep to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

