/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * CustomerReviewer
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-03-15T10:54:30.449-04:00")



public class CustomerReviewer {
  @SerializedName("auto_approve")
  private Boolean autoApprove = null;

  @SerializedName("average_overall_rating")
  private BigDecimal averageOverallRating = null;

  @SerializedName("expert")
  private Boolean expert = null;

  @SerializedName("first_review")
  private String firstReview = null;

  @SerializedName("last_review")
  private String lastReview = null;

  @SerializedName("location")
  private String location = null;

  @SerializedName("nickname")
  private String nickname = null;

  @SerializedName("number_helpful_review_votes")
  private Integer numberHelpfulReviewVotes = null;

  @SerializedName("rank")
  private Integer rank = null;

  @SerializedName("reviews_contributed")
  private Integer reviewsContributed = null;

  public CustomerReviewer autoApprove(Boolean autoApprove) {
    this.autoApprove = autoApprove;
    return this;
  }

   /**
   * True if reviewes from this customer profile should automatically be approved
   * @return autoApprove
  **/
  @ApiModelProperty(value = "True if reviewes from this customer profile should automatically be approved")
  public Boolean isAutoApprove() {
    return autoApprove;
  }

  public void setAutoApprove(Boolean autoApprove) {
    this.autoApprove = autoApprove;
  }

  public CustomerReviewer averageOverallRating(BigDecimal averageOverallRating) {
    this.averageOverallRating = averageOverallRating;
    return this;
  }

   /**
   * Average overall rating of items reviewed
   * @return averageOverallRating
  **/
  @ApiModelProperty(value = "Average overall rating of items reviewed")
  public BigDecimal getAverageOverallRating() {
    return averageOverallRating;
  }

  public void setAverageOverallRating(BigDecimal averageOverallRating) {
    this.averageOverallRating = averageOverallRating;
  }

  public CustomerReviewer expert(Boolean expert) {
    this.expert = expert;
    return this;
  }

   /**
   * True if the customer is an expert
   * @return expert
  **/
  @ApiModelProperty(value = "True if the customer is an expert")
  public Boolean isExpert() {
    return expert;
  }

  public void setExpert(Boolean expert) {
    this.expert = expert;
  }

  public CustomerReviewer firstReview(String firstReview) {
    this.firstReview = firstReview;
    return this;
  }

   /**
   * First review
   * @return firstReview
  **/
  @ApiModelProperty(value = "First review")
  public String getFirstReview() {
    return firstReview;
  }

  public void setFirstReview(String firstReview) {
    this.firstReview = firstReview;
  }

  public CustomerReviewer lastReview(String lastReview) {
    this.lastReview = lastReview;
    return this;
  }

   /**
   * Last review
   * @return lastReview
  **/
  @ApiModelProperty(value = "Last review")
  public String getLastReview() {
    return lastReview;
  }

  public void setLastReview(String lastReview) {
    this.lastReview = lastReview;
  }

  public CustomerReviewer location(String location) {
    this.location = location;
    return this;
  }

   /**
   * Location of the reviewer
   * @return location
  **/
  @ApiModelProperty(value = "Location of the reviewer")
  public String getLocation() {
    return location;
  }

  public void setLocation(String location) {
    this.location = location;
  }

  public CustomerReviewer nickname(String nickname) {
    this.nickname = nickname;
    return this;
  }

   /**
   * Nickname of the reviewer
   * @return nickname
  **/
  @ApiModelProperty(value = "Nickname of the reviewer")
  public String getNickname() {
    return nickname;
  }

  public void setNickname(String nickname) {
    this.nickname = nickname;
  }

  public CustomerReviewer numberHelpfulReviewVotes(Integer numberHelpfulReviewVotes) {
    this.numberHelpfulReviewVotes = numberHelpfulReviewVotes;
    return this;
  }

   /**
   * Number of helpful review votes
   * @return numberHelpfulReviewVotes
  **/
  @ApiModelProperty(value = "Number of helpful review votes")
  public Integer getNumberHelpfulReviewVotes() {
    return numberHelpfulReviewVotes;
  }

  public void setNumberHelpfulReviewVotes(Integer numberHelpfulReviewVotes) {
    this.numberHelpfulReviewVotes = numberHelpfulReviewVotes;
  }

  public CustomerReviewer rank(Integer rank) {
    this.rank = rank;
    return this;
  }

   /**
   * Rank of this reviewer
   * @return rank
  **/
  @ApiModelProperty(value = "Rank of this reviewer")
  public Integer getRank() {
    return rank;
  }

  public void setRank(Integer rank) {
    this.rank = rank;
  }

  public CustomerReviewer reviewsContributed(Integer reviewsContributed) {
    this.reviewsContributed = reviewsContributed;
    return this;
  }

   /**
   * Number of reviews contributed
   * @return reviewsContributed
  **/
  @ApiModelProperty(value = "Number of reviews contributed")
  public Integer getReviewsContributed() {
    return reviewsContributed;
  }

  public void setReviewsContributed(Integer reviewsContributed) {
    this.reviewsContributed = reviewsContributed;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomerReviewer customerReviewer = (CustomerReviewer) o;
    return Objects.equals(this.autoApprove, customerReviewer.autoApprove) &&
        Objects.equals(this.averageOverallRating, customerReviewer.averageOverallRating) &&
        Objects.equals(this.expert, customerReviewer.expert) &&
        Objects.equals(this.firstReview, customerReviewer.firstReview) &&
        Objects.equals(this.lastReview, customerReviewer.lastReview) &&
        Objects.equals(this.location, customerReviewer.location) &&
        Objects.equals(this.nickname, customerReviewer.nickname) &&
        Objects.equals(this.numberHelpfulReviewVotes, customerReviewer.numberHelpfulReviewVotes) &&
        Objects.equals(this.rank, customerReviewer.rank) &&
        Objects.equals(this.reviewsContributed, customerReviewer.reviewsContributed);
  }

  @Override
  public int hashCode() {
    return Objects.hash(autoApprove, averageOverallRating, expert, firstReview, lastReview, location, nickname, numberHelpfulReviewVotes, rank, reviewsContributed);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomerReviewer {\n");
    
    sb.append("    autoApprove: ").append(toIndentedString(autoApprove)).append("\n");
    sb.append("    averageOverallRating: ").append(toIndentedString(averageOverallRating)).append("\n");
    sb.append("    expert: ").append(toIndentedString(expert)).append("\n");
    sb.append("    firstReview: ").append(toIndentedString(firstReview)).append("\n");
    sb.append("    lastReview: ").append(toIndentedString(lastReview)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    nickname: ").append(toIndentedString(nickname)).append("\n");
    sb.append("    numberHelpfulReviewVotes: ").append(toIndentedString(numberHelpfulReviewVotes)).append("\n");
    sb.append("    rank: ").append(toIndentedString(rank)).append("\n");
    sb.append("    reviewsContributed: ").append(toIndentedString(reviewsContributed)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

