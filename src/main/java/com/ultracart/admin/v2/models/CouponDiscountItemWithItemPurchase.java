/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

/**
 * CouponDiscountItemWithItemPurchase
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2025-05-05T14:01:41.939-04:00")



public class CouponDiscountItemWithItemPurchase {
  @SerializedName("currency_code")
  private String currencyCode = null;

  @SerializedName("discount_item")
  private String discountItem = null;

  @SerializedName("discount_item_tags")
  private List<String> discountItemTags = null;

  @SerializedName("discount_price")
  private BigDecimal discountPrice = null;

  @SerializedName("limit")
  private Integer limit = null;

  @SerializedName("required_purchase_item")
  private String requiredPurchaseItem = null;

  @SerializedName("required_purchase_items_tags")
  private List<String> requiredPurchaseItemsTags = null;

  public CouponDiscountItemWithItemPurchase currencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
    return this;
  }

   /**
   * The ISO-4217 three letter currency code the customer is viewing prices in
   * @return currencyCode
  **/
  @ApiModelProperty(value = "The ISO-4217 three letter currency code the customer is viewing prices in")
  public String getCurrencyCode() {
    return currencyCode;
  }

  public void setCurrencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
  }

  public CouponDiscountItemWithItemPurchase discountItem(String discountItem) {
    this.discountItem = discountItem;
    return this;
  }

   /**
   * The item that will be sold at the discount_price when required_purchase_item is purchased.
   * @return discountItem
  **/
  @ApiModelProperty(value = "The item that will be sold at the discount_price when required_purchase_item is purchased.")
  public String getDiscountItem() {
    return discountItem;
  }

  public void setDiscountItem(String discountItem) {
    this.discountItem = discountItem;
  }

  public CouponDiscountItemWithItemPurchase discountItemTags(List<String> discountItemTags) {
    this.discountItemTags = discountItemTags;
    return this;
  }

  public CouponDiscountItemWithItemPurchase addDiscountItemTagsItem(String discountItemTagsItem) {
    if (this.discountItemTags == null) {
      this.discountItemTags = new ArrayList<String>();
    }
    this.discountItemTags.add(discountItemTagsItem);
    return this;
  }

   /**
   * An optional list of item tags which will receive a discount of one of the required purchased items is purchased.
   * @return discountItemTags
  **/
  @ApiModelProperty(value = "An optional list of item tags which will receive a discount of one of the required purchased items is purchased.")
  public List<String> getDiscountItemTags() {
    return discountItemTags;
  }

  public void setDiscountItemTags(List<String> discountItemTags) {
    this.discountItemTags = discountItemTags;
  }

  public CouponDiscountItemWithItemPurchase discountPrice(BigDecimal discountPrice) {
    this.discountPrice = discountPrice;
    return this;
  }

   /**
   * The price (unit cost) of the discounted item
   * @return discountPrice
  **/
  @ApiModelProperty(value = "The price (unit cost) of the discounted item")
  public BigDecimal getDiscountPrice() {
    return discountPrice;
  }

  public void setDiscountPrice(BigDecimal discountPrice) {
    this.discountPrice = discountPrice;
  }

  public CouponDiscountItemWithItemPurchase limit(Integer limit) {
    this.limit = limit;
    return this;
  }

   /**
   * The (optional) maximum quantity of discounted items.
   * @return limit
  **/
  @ApiModelProperty(value = "The (optional) maximum quantity of discounted items.")
  public Integer getLimit() {
    return limit;
  }

  public void setLimit(Integer limit) {
    this.limit = limit;
  }

  public CouponDiscountItemWithItemPurchase requiredPurchaseItem(String requiredPurchaseItem) {
    this.requiredPurchaseItem = requiredPurchaseItem;
    return this;
  }

   /**
   * The item that must be purchased for the discount to be applied to the discount item.
   * @return requiredPurchaseItem
  **/
  @ApiModelProperty(value = "The item that must be purchased for the discount to be applied to the discount item.")
  public String getRequiredPurchaseItem() {
    return requiredPurchaseItem;
  }

  public void setRequiredPurchaseItem(String requiredPurchaseItem) {
    this.requiredPurchaseItem = requiredPurchaseItem;
  }

  public CouponDiscountItemWithItemPurchase requiredPurchaseItemsTags(List<String> requiredPurchaseItemsTags) {
    this.requiredPurchaseItemsTags = requiredPurchaseItemsTags;
    return this;
  }

  public CouponDiscountItemWithItemPurchase addRequiredPurchaseItemsTagsItem(String requiredPurchaseItemsTagsItem) {
    if (this.requiredPurchaseItemsTags == null) {
      this.requiredPurchaseItemsTags = new ArrayList<String>();
    }
    this.requiredPurchaseItemsTags.add(requiredPurchaseItemsTagsItem);
    return this;
  }

   /**
   * An optional list of item tags which are required to be purchased.
   * @return requiredPurchaseItemsTags
  **/
  @ApiModelProperty(value = "An optional list of item tags which are required to be purchased.")
  public List<String> getRequiredPurchaseItemsTags() {
    return requiredPurchaseItemsTags;
  }

  public void setRequiredPurchaseItemsTags(List<String> requiredPurchaseItemsTags) {
    this.requiredPurchaseItemsTags = requiredPurchaseItemsTags;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CouponDiscountItemWithItemPurchase couponDiscountItemWithItemPurchase = (CouponDiscountItemWithItemPurchase) o;
    return Objects.equals(this.currencyCode, couponDiscountItemWithItemPurchase.currencyCode) &&
        Objects.equals(this.discountItem, couponDiscountItemWithItemPurchase.discountItem) &&
        Objects.equals(this.discountItemTags, couponDiscountItemWithItemPurchase.discountItemTags) &&
        Objects.equals(this.discountPrice, couponDiscountItemWithItemPurchase.discountPrice) &&
        Objects.equals(this.limit, couponDiscountItemWithItemPurchase.limit) &&
        Objects.equals(this.requiredPurchaseItem, couponDiscountItemWithItemPurchase.requiredPurchaseItem) &&
        Objects.equals(this.requiredPurchaseItemsTags, couponDiscountItemWithItemPurchase.requiredPurchaseItemsTags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currencyCode, discountItem, discountItemTags, discountPrice, limit, requiredPurchaseItem, requiredPurchaseItemsTags);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CouponDiscountItemWithItemPurchase {\n");
    
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    discountItem: ").append(toIndentedString(discountItem)).append("\n");
    sb.append("    discountItemTags: ").append(toIndentedString(discountItemTags)).append("\n");
    sb.append("    discountPrice: ").append(toIndentedString(discountPrice)).append("\n");
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    requiredPurchaseItem: ").append(toIndentedString(requiredPurchaseItem)).append("\n");
    sb.append("    requiredPurchaseItemsTags: ").append(toIndentedString(requiredPurchaseItemsTags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

