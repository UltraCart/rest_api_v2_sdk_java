/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.EmailSmsStat;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

/**
 * EmailSmsStat
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2025-02-21T11:52:15.006-05:00")



public class EmailSmsStat {
  @SerializedName("click_count")
  private Integer clickCount = null;

  @SerializedName("click_count_formatted")
  private String clickCountFormatted = null;

  @SerializedName("conversion_count")
  private Integer conversionCount = null;

  @SerializedName("conversion_count_formatted")
  private String conversionCountFormatted = null;

  @SerializedName("deleted")
  private Boolean deleted = null;

  @SerializedName("delivered_count")
  private Integer deliveredCount = null;

  @SerializedName("delivered_count_formatted")
  private String deliveredCountFormatted = null;

  @SerializedName("merchant_id")
  private String merchantId = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("order_count")
  private Integer orderCount = null;

  @SerializedName("order_count_formatted")
  private String orderCountFormatted = null;

  @SerializedName("profit")
  private BigDecimal profit = null;

  @SerializedName("profit_formatted")
  private String profitFormatted = null;

  @SerializedName("revenue")
  private BigDecimal revenue = null;

  @SerializedName("revenue_formatted")
  private String revenueFormatted = null;

  @SerializedName("send_count")
  private Integer sendCount = null;

  @SerializedName("send_count_formatted")
  private String sendCountFormatted = null;

  @SerializedName("skipped_count")
  private Integer skippedCount = null;

  @SerializedName("skipped_count_formatted")
  private String skippedCountFormatted = null;

  @SerializedName("stat_type")
  private String statType = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("status_dts")
  private String statusDts = null;

  @SerializedName("step_uuid")
  private String stepUuid = null;

  @SerializedName("steps")
  private List<EmailSmsStat> steps = null;

  @SerializedName("storefront_oid")
  private Integer storefrontOid = null;

  @SerializedName("unsubscribe_count")
  private Integer unsubscribeCount = null;

  @SerializedName("unsubscribe_count_formatted")
  private String unsubscribeCountFormatted = null;

  @SerializedName("uuid")
  private String uuid = null;

  @SerializedName("view_count")
  private Integer viewCount = null;

  @SerializedName("view_count_formatted")
  private String viewCountFormatted = null;

  public EmailSmsStat clickCount(Integer clickCount) {
    this.clickCount = clickCount;
    return this;
  }

   /**
   * Count of clicked emails
   * @return clickCount
  **/
  @ApiModelProperty(value = "Count of clicked emails")
  public Integer getClickCount() {
    return clickCount;
  }

  public void setClickCount(Integer clickCount) {
    this.clickCount = clickCount;
  }

  public EmailSmsStat clickCountFormatted(String clickCountFormatted) {
    this.clickCountFormatted = clickCountFormatted;
    return this;
  }

   /**
   * Count of clicked emails, formatted
   * @return clickCountFormatted
  **/
  @ApiModelProperty(value = "Count of clicked emails, formatted")
  public String getClickCountFormatted() {
    return clickCountFormatted;
  }

  public void setClickCountFormatted(String clickCountFormatted) {
    this.clickCountFormatted = clickCountFormatted;
  }

  public EmailSmsStat conversionCount(Integer conversionCount) {
    this.conversionCount = conversionCount;
    return this;
  }

   /**
   * Count of conversions
   * @return conversionCount
  **/
  @ApiModelProperty(value = "Count of conversions")
  public Integer getConversionCount() {
    return conversionCount;
  }

  public void setConversionCount(Integer conversionCount) {
    this.conversionCount = conversionCount;
  }

  public EmailSmsStat conversionCountFormatted(String conversionCountFormatted) {
    this.conversionCountFormatted = conversionCountFormatted;
    return this;
  }

   /**
   * Count of conversions, formatted
   * @return conversionCountFormatted
  **/
  @ApiModelProperty(value = "Count of conversions, formatted")
  public String getConversionCountFormatted() {
    return conversionCountFormatted;
  }

  public void setConversionCountFormatted(String conversionCountFormatted) {
    this.conversionCountFormatted = conversionCountFormatted;
  }

  public EmailSmsStat deleted(Boolean deleted) {
    this.deleted = deleted;
    return this;
  }

   /**
   * True if campaign/flow has been archived
   * @return deleted
  **/
  @ApiModelProperty(value = "True if campaign/flow has been archived")
  public Boolean isDeleted() {
    return deleted;
  }

  public void setDeleted(Boolean deleted) {
    this.deleted = deleted;
  }

  public EmailSmsStat deliveredCount(Integer deliveredCount) {
    this.deliveredCount = deliveredCount;
    return this;
  }

   /**
   * Count of delivered emails
   * @return deliveredCount
  **/
  @ApiModelProperty(value = "Count of delivered emails")
  public Integer getDeliveredCount() {
    return deliveredCount;
  }

  public void setDeliveredCount(Integer deliveredCount) {
    this.deliveredCount = deliveredCount;
  }

  public EmailSmsStat deliveredCountFormatted(String deliveredCountFormatted) {
    this.deliveredCountFormatted = deliveredCountFormatted;
    return this;
  }

   /**
   * Count of delivered emails, formatted
   * @return deliveredCountFormatted
  **/
  @ApiModelProperty(value = "Count of delivered emails, formatted")
  public String getDeliveredCountFormatted() {
    return deliveredCountFormatted;
  }

  public void setDeliveredCountFormatted(String deliveredCountFormatted) {
    this.deliveredCountFormatted = deliveredCountFormatted;
  }

  public EmailSmsStat merchantId(String merchantId) {
    this.merchantId = merchantId;
    return this;
  }

   /**
   * Merchant ID
   * @return merchantId
  **/
  @ApiModelProperty(value = "Merchant ID")
  public String getMerchantId() {
    return merchantId;
  }

  public void setMerchantId(String merchantId) {
    this.merchantId = merchantId;
  }

  public EmailSmsStat name(String name) {
    this.name = name;
    return this;
  }

   /**
   * List or segment name
   * @return name
  **/
  @ApiModelProperty(value = "List or segment name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public EmailSmsStat orderCount(Integer orderCount) {
    this.orderCount = orderCount;
    return this;
  }

   /**
   * Count of orders
   * @return orderCount
  **/
  @ApiModelProperty(value = "Count of orders")
  public Integer getOrderCount() {
    return orderCount;
  }

  public void setOrderCount(Integer orderCount) {
    this.orderCount = orderCount;
  }

  public EmailSmsStat orderCountFormatted(String orderCountFormatted) {
    this.orderCountFormatted = orderCountFormatted;
    return this;
  }

   /**
   * Count of orders, formatted
   * @return orderCountFormatted
  **/
  @ApiModelProperty(value = "Count of orders, formatted")
  public String getOrderCountFormatted() {
    return orderCountFormatted;
  }

  public void setOrderCountFormatted(String orderCountFormatted) {
    this.orderCountFormatted = orderCountFormatted;
  }

  public EmailSmsStat profit(BigDecimal profit) {
    this.profit = profit;
    return this;
  }

   /**
   * Profit
   * @return profit
  **/
  @ApiModelProperty(value = "Profit")
  public BigDecimal getProfit() {
    return profit;
  }

  public void setProfit(BigDecimal profit) {
    this.profit = profit;
  }

  public EmailSmsStat profitFormatted(String profitFormatted) {
    this.profitFormatted = profitFormatted;
    return this;
  }

   /**
   * Profit, formatted
   * @return profitFormatted
  **/
  @ApiModelProperty(value = "Profit, formatted")
  public String getProfitFormatted() {
    return profitFormatted;
  }

  public void setProfitFormatted(String profitFormatted) {
    this.profitFormatted = profitFormatted;
  }

  public EmailSmsStat revenue(BigDecimal revenue) {
    this.revenue = revenue;
    return this;
  }

   /**
   * Revenue
   * @return revenue
  **/
  @ApiModelProperty(value = "Revenue")
  public BigDecimal getRevenue() {
    return revenue;
  }

  public void setRevenue(BigDecimal revenue) {
    this.revenue = revenue;
  }

  public EmailSmsStat revenueFormatted(String revenueFormatted) {
    this.revenueFormatted = revenueFormatted;
    return this;
  }

   /**
   * Revenue, formatted
   * @return revenueFormatted
  **/
  @ApiModelProperty(value = "Revenue, formatted")
  public String getRevenueFormatted() {
    return revenueFormatted;
  }

  public void setRevenueFormatted(String revenueFormatted) {
    this.revenueFormatted = revenueFormatted;
  }

  public EmailSmsStat sendCount(Integer sendCount) {
    this.sendCount = sendCount;
    return this;
  }

   /**
   * Count of emails sent
   * @return sendCount
  **/
  @ApiModelProperty(value = "Count of emails sent")
  public Integer getSendCount() {
    return sendCount;
  }

  public void setSendCount(Integer sendCount) {
    this.sendCount = sendCount;
  }

  public EmailSmsStat sendCountFormatted(String sendCountFormatted) {
    this.sendCountFormatted = sendCountFormatted;
    return this;
  }

   /**
   * Count of emails sent, formatted
   * @return sendCountFormatted
  **/
  @ApiModelProperty(value = "Count of emails sent, formatted")
  public String getSendCountFormatted() {
    return sendCountFormatted;
  }

  public void setSendCountFormatted(String sendCountFormatted) {
    this.sendCountFormatted = sendCountFormatted;
  }

  public EmailSmsStat skippedCount(Integer skippedCount) {
    this.skippedCount = skippedCount;
    return this;
  }

   /**
   * Count of skipped emails
   * @return skippedCount
  **/
  @ApiModelProperty(value = "Count of skipped emails")
  public Integer getSkippedCount() {
    return skippedCount;
  }

  public void setSkippedCount(Integer skippedCount) {
    this.skippedCount = skippedCount;
  }

  public EmailSmsStat skippedCountFormatted(String skippedCountFormatted) {
    this.skippedCountFormatted = skippedCountFormatted;
    return this;
  }

   /**
   * Count of skipped emails, formatted
   * @return skippedCountFormatted
  **/
  @ApiModelProperty(value = "Count of skipped emails, formatted")
  public String getSkippedCountFormatted() {
    return skippedCountFormatted;
  }

  public void setSkippedCountFormatted(String skippedCountFormatted) {
    this.skippedCountFormatted = skippedCountFormatted;
  }

  public EmailSmsStat statType(String statType) {
    this.statType = statType;
    return this;
  }

   /**
   * Campaign, Flow or None (for anything else)
   * @return statType
  **/
  @ApiModelProperty(value = "Campaign, Flow or None (for anything else)")
  public String getStatType() {
    return statType;
  }

  public void setStatType(String statType) {
    this.statType = statType;
  }

  public EmailSmsStat status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Status of campaign or flow
   * @return status
  **/
  @ApiModelProperty(value = "Status of campaign or flow")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public EmailSmsStat statusDts(String statusDts) {
    this.statusDts = statusDts;
    return this;
  }

   /**
   * Status dts of campaign or flow
   * @return statusDts
  **/
  @ApiModelProperty(value = "Status dts of campaign or flow")
  public String getStatusDts() {
    return statusDts;
  }

  public void setStatusDts(String statusDts) {
    this.statusDts = statusDts;
  }

  public EmailSmsStat stepUuid(String stepUuid) {
    this.stepUuid = stepUuid;
    return this;
  }

   /**
   * Step UUID if the statistics are at the step/email level
   * @return stepUuid
  **/
  @ApiModelProperty(value = "Step UUID if the statistics are at the step/email level")
  public String getStepUuid() {
    return stepUuid;
  }

  public void setStepUuid(String stepUuid) {
    this.stepUuid = stepUuid;
  }

  public EmailSmsStat steps(List<EmailSmsStat> steps) {
    this.steps = steps;
    return this;
  }

  public EmailSmsStat addStepsItem(EmailSmsStat stepsItem) {
    if (this.steps == null) {
      this.steps = new ArrayList<EmailSmsStat>();
    }
    this.steps.add(stepsItem);
    return this;
  }

   /**
   * Get steps
   * @return steps
  **/
  @ApiModelProperty(value = "")
  public List<EmailSmsStat> getSteps() {
    return steps;
  }

  public void setSteps(List<EmailSmsStat> steps) {
    this.steps = steps;
  }

  public EmailSmsStat storefrontOid(Integer storefrontOid) {
    this.storefrontOid = storefrontOid;
    return this;
  }

   /**
   * Storefront oid
   * @return storefrontOid
  **/
  @ApiModelProperty(value = "Storefront oid")
  public Integer getStorefrontOid() {
    return storefrontOid;
  }

  public void setStorefrontOid(Integer storefrontOid) {
    this.storefrontOid = storefrontOid;
  }

  public EmailSmsStat unsubscribeCount(Integer unsubscribeCount) {
    this.unsubscribeCount = unsubscribeCount;
    return this;
  }

   /**
   * Count of emails classified as unsubscribe
   * @return unsubscribeCount
  **/
  @ApiModelProperty(value = "Count of emails classified as unsubscribe")
  public Integer getUnsubscribeCount() {
    return unsubscribeCount;
  }

  public void setUnsubscribeCount(Integer unsubscribeCount) {
    this.unsubscribeCount = unsubscribeCount;
  }

  public EmailSmsStat unsubscribeCountFormatted(String unsubscribeCountFormatted) {
    this.unsubscribeCountFormatted = unsubscribeCountFormatted;
    return this;
  }

   /**
   * Count of emails classified as unsubscribe, formatted
   * @return unsubscribeCountFormatted
  **/
  @ApiModelProperty(value = "Count of emails classified as unsubscribe, formatted")
  public String getUnsubscribeCountFormatted() {
    return unsubscribeCountFormatted;
  }

  public void setUnsubscribeCountFormatted(String unsubscribeCountFormatted) {
    this.unsubscribeCountFormatted = unsubscribeCountFormatted;
  }

  public EmailSmsStat uuid(String uuid) {
    this.uuid = uuid;
    return this;
  }

   /**
   * List/Segment uuid, or Flow/Campaign uuid depending on level of stat aggregation.
   * @return uuid
  **/
  @ApiModelProperty(value = "List/Segment uuid, or Flow/Campaign uuid depending on level of stat aggregation.")
  public String getUuid() {
    return uuid;
  }

  public void setUuid(String uuid) {
    this.uuid = uuid;
  }

  public EmailSmsStat viewCount(Integer viewCount) {
    this.viewCount = viewCount;
    return this;
  }

   /**
   * Count of views
   * @return viewCount
  **/
  @ApiModelProperty(value = "Count of views")
  public Integer getViewCount() {
    return viewCount;
  }

  public void setViewCount(Integer viewCount) {
    this.viewCount = viewCount;
  }

  public EmailSmsStat viewCountFormatted(String viewCountFormatted) {
    this.viewCountFormatted = viewCountFormatted;
    return this;
  }

   /**
   * Count of views, formatted
   * @return viewCountFormatted
  **/
  @ApiModelProperty(value = "Count of views, formatted")
  public String getViewCountFormatted() {
    return viewCountFormatted;
  }

  public void setViewCountFormatted(String viewCountFormatted) {
    this.viewCountFormatted = viewCountFormatted;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmailSmsStat emailSmsStat = (EmailSmsStat) o;
    return Objects.equals(this.clickCount, emailSmsStat.clickCount) &&
        Objects.equals(this.clickCountFormatted, emailSmsStat.clickCountFormatted) &&
        Objects.equals(this.conversionCount, emailSmsStat.conversionCount) &&
        Objects.equals(this.conversionCountFormatted, emailSmsStat.conversionCountFormatted) &&
        Objects.equals(this.deleted, emailSmsStat.deleted) &&
        Objects.equals(this.deliveredCount, emailSmsStat.deliveredCount) &&
        Objects.equals(this.deliveredCountFormatted, emailSmsStat.deliveredCountFormatted) &&
        Objects.equals(this.merchantId, emailSmsStat.merchantId) &&
        Objects.equals(this.name, emailSmsStat.name) &&
        Objects.equals(this.orderCount, emailSmsStat.orderCount) &&
        Objects.equals(this.orderCountFormatted, emailSmsStat.orderCountFormatted) &&
        Objects.equals(this.profit, emailSmsStat.profit) &&
        Objects.equals(this.profitFormatted, emailSmsStat.profitFormatted) &&
        Objects.equals(this.revenue, emailSmsStat.revenue) &&
        Objects.equals(this.revenueFormatted, emailSmsStat.revenueFormatted) &&
        Objects.equals(this.sendCount, emailSmsStat.sendCount) &&
        Objects.equals(this.sendCountFormatted, emailSmsStat.sendCountFormatted) &&
        Objects.equals(this.skippedCount, emailSmsStat.skippedCount) &&
        Objects.equals(this.skippedCountFormatted, emailSmsStat.skippedCountFormatted) &&
        Objects.equals(this.statType, emailSmsStat.statType) &&
        Objects.equals(this.status, emailSmsStat.status) &&
        Objects.equals(this.statusDts, emailSmsStat.statusDts) &&
        Objects.equals(this.stepUuid, emailSmsStat.stepUuid) &&
        Objects.equals(this.steps, emailSmsStat.steps) &&
        Objects.equals(this.storefrontOid, emailSmsStat.storefrontOid) &&
        Objects.equals(this.unsubscribeCount, emailSmsStat.unsubscribeCount) &&
        Objects.equals(this.unsubscribeCountFormatted, emailSmsStat.unsubscribeCountFormatted) &&
        Objects.equals(this.uuid, emailSmsStat.uuid) &&
        Objects.equals(this.viewCount, emailSmsStat.viewCount) &&
        Objects.equals(this.viewCountFormatted, emailSmsStat.viewCountFormatted);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clickCount, clickCountFormatted, conversionCount, conversionCountFormatted, deleted, deliveredCount, deliveredCountFormatted, merchantId, name, orderCount, orderCountFormatted, profit, profitFormatted, revenue, revenueFormatted, sendCount, sendCountFormatted, skippedCount, skippedCountFormatted, statType, status, statusDts, stepUuid, steps, storefrontOid, unsubscribeCount, unsubscribeCountFormatted, uuid, viewCount, viewCountFormatted);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmailSmsStat {\n");
    
    sb.append("    clickCount: ").append(toIndentedString(clickCount)).append("\n");
    sb.append("    clickCountFormatted: ").append(toIndentedString(clickCountFormatted)).append("\n");
    sb.append("    conversionCount: ").append(toIndentedString(conversionCount)).append("\n");
    sb.append("    conversionCountFormatted: ").append(toIndentedString(conversionCountFormatted)).append("\n");
    sb.append("    deleted: ").append(toIndentedString(deleted)).append("\n");
    sb.append("    deliveredCount: ").append(toIndentedString(deliveredCount)).append("\n");
    sb.append("    deliveredCountFormatted: ").append(toIndentedString(deliveredCountFormatted)).append("\n");
    sb.append("    merchantId: ").append(toIndentedString(merchantId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    orderCount: ").append(toIndentedString(orderCount)).append("\n");
    sb.append("    orderCountFormatted: ").append(toIndentedString(orderCountFormatted)).append("\n");
    sb.append("    profit: ").append(toIndentedString(profit)).append("\n");
    sb.append("    profitFormatted: ").append(toIndentedString(profitFormatted)).append("\n");
    sb.append("    revenue: ").append(toIndentedString(revenue)).append("\n");
    sb.append("    revenueFormatted: ").append(toIndentedString(revenueFormatted)).append("\n");
    sb.append("    sendCount: ").append(toIndentedString(sendCount)).append("\n");
    sb.append("    sendCountFormatted: ").append(toIndentedString(sendCountFormatted)).append("\n");
    sb.append("    skippedCount: ").append(toIndentedString(skippedCount)).append("\n");
    sb.append("    skippedCountFormatted: ").append(toIndentedString(skippedCountFormatted)).append("\n");
    sb.append("    statType: ").append(toIndentedString(statType)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusDts: ").append(toIndentedString(statusDts)).append("\n");
    sb.append("    stepUuid: ").append(toIndentedString(stepUuid)).append("\n");
    sb.append("    steps: ").append(toIndentedString(steps)).append("\n");
    sb.append("    storefrontOid: ").append(toIndentedString(storefrontOid)).append("\n");
    sb.append("    unsubscribeCount: ").append(toIndentedString(unsubscribeCount)).append("\n");
    sb.append("    unsubscribeCountFormatted: ").append(toIndentedString(unsubscribeCountFormatted)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    viewCount: ").append(toIndentedString(viewCount)).append("\n");
    sb.append("    viewCountFormatted: ").append(toIndentedString(viewCountFormatted)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

