/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * AffiliateLink
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-30T16:03:10.019-05:00[America/Indianapolis]")
public class AffiliateLink {
  public static final String SERIALIZED_NAME_AFFILIATE_LINK_OID = "affiliate_link_oid";
  @SerializedName(SERIALIZED_NAME_AFFILIATE_LINK_OID)
  private Integer affiliateLinkOid;

  public static final String SERIALIZED_NAME_AFFILIATE_MANAGED_LINK_OID = "affiliate_managed_link_oid";
  @SerializedName(SERIALIZED_NAME_AFFILIATE_MANAGED_LINK_OID)
  private Integer affiliateManagedLinkOid;

  public static final String SERIALIZED_NAME_AFFILIATE_OID = "affiliate_oid";
  @SerializedName(SERIALIZED_NAME_AFFILIATE_OID)
  private Integer affiliateOid;

  public static final String SERIALIZED_NAME_AFFILIATE_PROGRAM_ITEM_OID = "affiliate_program_item_oid";
  @SerializedName(SERIALIZED_NAME_AFFILIATE_PROGRAM_ITEM_OID)
  private Integer affiliateProgramItemOid;

  public static final String SERIALIZED_NAME_CODE = "code";
  @SerializedName(SERIALIZED_NAME_CODE)
  private String code;

  public static final String SERIALIZED_NAME_CREATIVE_OID = "creative_oid";
  @SerializedName(SERIALIZED_NAME_CREATIVE_OID)
  private Integer creativeOid;

  public static final String SERIALIZED_NAME_CUSTOM_HTML = "custom_html";
  @SerializedName(SERIALIZED_NAME_CUSTOM_HTML)
  private String customHtml;

  /**
   * Approved status of the custom html
   */
  @JsonAdapter(CustomHtmlApprovalStatusEnum.Adapter.class)
  public enum CustomHtmlApprovalStatusEnum {
    PENDING("Pending"),
    
    APPROVED("Approved"),
    
    REJECTED("Rejected");

    private String value;

    CustomHtmlApprovalStatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CustomHtmlApprovalStatusEnum fromValue(String value) {
      for (CustomHtmlApprovalStatusEnum b : CustomHtmlApprovalStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<CustomHtmlApprovalStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CustomHtmlApprovalStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CustomHtmlApprovalStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return CustomHtmlApprovalStatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_CUSTOM_HTML_APPROVAL_STATUS = "custom_html_approval_status";
  @SerializedName(SERIALIZED_NAME_CUSTOM_HTML_APPROVAL_STATUS)
  private CustomHtmlApprovalStatusEnum customHtmlApprovalStatus;

  public static final String SERIALIZED_NAME_CUSTOM_LANDING_URL = "custom_landing_url";
  @SerializedName(SERIALIZED_NAME_CUSTOM_LANDING_URL)
  private String customLandingUrl;

  public static final String SERIALIZED_NAME_DELETED = "deleted";
  @SerializedName(SERIALIZED_NAME_DELETED)
  private Boolean deleted;

  /**
   * Invisible link approval status
   */
  @JsonAdapter(InvisibleLinkApprovalStatusEnum.Adapter.class)
  public enum InvisibleLinkApprovalStatusEnum {
    PENDING("Pending"),
    
    APPROVED("Approved"),
    
    REJECTED("Rejected");

    private String value;

    InvisibleLinkApprovalStatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static InvisibleLinkApprovalStatusEnum fromValue(String value) {
      for (InvisibleLinkApprovalStatusEnum b : InvisibleLinkApprovalStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<InvisibleLinkApprovalStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final InvisibleLinkApprovalStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public InvisibleLinkApprovalStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return InvisibleLinkApprovalStatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_INVISIBLE_LINK_APPROVAL_STATUS = "invisible_link_approval_status";
  @SerializedName(SERIALIZED_NAME_INVISIBLE_LINK_APPROVAL_STATUS)
  private InvisibleLinkApprovalStatusEnum invisibleLinkApprovalStatus;

  public static final String SERIALIZED_NAME_INVISIBLE_LINK_URL_PREFIX = "invisible_link_url_prefix";
  @SerializedName(SERIALIZED_NAME_INVISIBLE_LINK_URL_PREFIX)
  private String invisibleLinkUrlPrefix;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  /**
   * Type of link
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    IMAGE("image"),
    
    TEXT("text"),
    
    INVISIBLE("invisible"),
    
    DIRECT("direct");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public AffiliateLink() { 
  }

  public AffiliateLink affiliateLinkOid(Integer affiliateLinkOid) {
    
    this.affiliateLinkOid = affiliateLinkOid;
    return this;
  }

   /**
   * Unique object identifier associated with this link
   * @return affiliateLinkOid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unique object identifier associated with this link")

  public Integer getAffiliateLinkOid() {
    return affiliateLinkOid;
  }


  public void setAffiliateLinkOid(Integer affiliateLinkOid) {
    this.affiliateLinkOid = affiliateLinkOid;
  }


  public AffiliateLink affiliateManagedLinkOid(Integer affiliateManagedLinkOid) {
    
    this.affiliateManagedLinkOid = affiliateManagedLinkOid;
    return this;
  }

   /**
   * Managed link OID that this link object was generated from
   * @return affiliateManagedLinkOid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Managed link OID that this link object was generated from")

  public Integer getAffiliateManagedLinkOid() {
    return affiliateManagedLinkOid;
  }


  public void setAffiliateManagedLinkOid(Integer affiliateManagedLinkOid) {
    this.affiliateManagedLinkOid = affiliateManagedLinkOid;
  }


  public AffiliateLink affiliateOid(Integer affiliateOid) {
    
    this.affiliateOid = affiliateOid;
    return this;
  }

   /**
   * Affiliate object ID associated with this link
   * @return affiliateOid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Affiliate object ID associated with this link")

  public Integer getAffiliateOid() {
    return affiliateOid;
  }


  public void setAffiliateOid(Integer affiliateOid) {
    this.affiliateOid = affiliateOid;
  }


  public AffiliateLink affiliateProgramItemOid(Integer affiliateProgramItemOid) {
    
    this.affiliateProgramItemOid = affiliateProgramItemOid;
    return this;
  }

   /**
   * The affiliate program item this managed link is associated with
   * @return affiliateProgramItemOid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The affiliate program item this managed link is associated with")

  public Integer getAffiliateProgramItemOid() {
    return affiliateProgramItemOid;
  }


  public void setAffiliateProgramItemOid(Integer affiliateProgramItemOid) {
    this.affiliateProgramItemOid = affiliateProgramItemOid;
  }


  public AffiliateLink code(String code) {
    
    this.code = code;
    return this;
  }

   /**
   * Code associated with the link
   * @return code
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Code associated with the link")

  public String getCode() {
    return code;
  }


  public void setCode(String code) {
    this.code = code;
  }


  public AffiliateLink creativeOid(Integer creativeOid) {
    
    this.creativeOid = creativeOid;
    return this;
  }

   /**
   * Creative (image or text) associated with this link
   * @return creativeOid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Creative (image or text) associated with this link")

  public Integer getCreativeOid() {
    return creativeOid;
  }


  public void setCreativeOid(Integer creativeOid) {
    this.creativeOid = creativeOid;
  }


  public AffiliateLink customHtml(String customHtml) {
    
    this.customHtml = customHtml;
    return this;
  }

   /**
   * Custom HTML associated with this link
   * @return customHtml
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Custom HTML associated with this link")

  public String getCustomHtml() {
    return customHtml;
  }


  public void setCustomHtml(String customHtml) {
    this.customHtml = customHtml;
  }


  public AffiliateLink customHtmlApprovalStatus(CustomHtmlApprovalStatusEnum customHtmlApprovalStatus) {
    
    this.customHtmlApprovalStatus = customHtmlApprovalStatus;
    return this;
  }

   /**
   * Approved status of the custom html
   * @return customHtmlApprovalStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Approved status of the custom html")

  public CustomHtmlApprovalStatusEnum getCustomHtmlApprovalStatus() {
    return customHtmlApprovalStatus;
  }


  public void setCustomHtmlApprovalStatus(CustomHtmlApprovalStatusEnum customHtmlApprovalStatus) {
    this.customHtmlApprovalStatus = customHtmlApprovalStatus;
  }


  public AffiliateLink customLandingUrl(String customLandingUrl) {
    
    this.customLandingUrl = customLandingUrl;
    return this;
  }

   /**
   * Custom landing page URL if configured
   * @return customLandingUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Custom landing page URL if configured")

  public String getCustomLandingUrl() {
    return customLandingUrl;
  }


  public void setCustomLandingUrl(String customLandingUrl) {
    this.customLandingUrl = customLandingUrl;
  }


  public AffiliateLink deleted(Boolean deleted) {
    
    this.deleted = deleted;
    return this;
  }

   /**
   * True if the link has been deleted
   * @return deleted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if the link has been deleted")

  public Boolean getDeleted() {
    return deleted;
  }


  public void setDeleted(Boolean deleted) {
    this.deleted = deleted;
  }


  public AffiliateLink invisibleLinkApprovalStatus(InvisibleLinkApprovalStatusEnum invisibleLinkApprovalStatus) {
    
    this.invisibleLinkApprovalStatus = invisibleLinkApprovalStatus;
    return this;
  }

   /**
   * Invisible link approval status
   * @return invisibleLinkApprovalStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Invisible link approval status")

  public InvisibleLinkApprovalStatusEnum getInvisibleLinkApprovalStatus() {
    return invisibleLinkApprovalStatus;
  }


  public void setInvisibleLinkApprovalStatus(InvisibleLinkApprovalStatusEnum invisibleLinkApprovalStatus) {
    this.invisibleLinkApprovalStatus = invisibleLinkApprovalStatus;
  }


  public AffiliateLink invisibleLinkUrlPrefix(String invisibleLinkUrlPrefix) {
    
    this.invisibleLinkUrlPrefix = invisibleLinkUrlPrefix;
    return this;
  }

   /**
   * Invisible link URL prefix
   * @return invisibleLinkUrlPrefix
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Invisible link URL prefix")

  public String getInvisibleLinkUrlPrefix() {
    return invisibleLinkUrlPrefix;
  }


  public void setInvisibleLinkUrlPrefix(String invisibleLinkUrlPrefix) {
    this.invisibleLinkUrlPrefix = invisibleLinkUrlPrefix;
  }


  public AffiliateLink name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Name of the link
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name of the link")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public AffiliateLink type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * Type of link
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Type of link")

  public TypeEnum getType() {
    return type;
  }


  public void setType(TypeEnum type) {
    this.type = type;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AffiliateLink affiliateLink = (AffiliateLink) o;
    return Objects.equals(this.affiliateLinkOid, affiliateLink.affiliateLinkOid) &&
        Objects.equals(this.affiliateManagedLinkOid, affiliateLink.affiliateManagedLinkOid) &&
        Objects.equals(this.affiliateOid, affiliateLink.affiliateOid) &&
        Objects.equals(this.affiliateProgramItemOid, affiliateLink.affiliateProgramItemOid) &&
        Objects.equals(this.code, affiliateLink.code) &&
        Objects.equals(this.creativeOid, affiliateLink.creativeOid) &&
        Objects.equals(this.customHtml, affiliateLink.customHtml) &&
        Objects.equals(this.customHtmlApprovalStatus, affiliateLink.customHtmlApprovalStatus) &&
        Objects.equals(this.customLandingUrl, affiliateLink.customLandingUrl) &&
        Objects.equals(this.deleted, affiliateLink.deleted) &&
        Objects.equals(this.invisibleLinkApprovalStatus, affiliateLink.invisibleLinkApprovalStatus) &&
        Objects.equals(this.invisibleLinkUrlPrefix, affiliateLink.invisibleLinkUrlPrefix) &&
        Objects.equals(this.name, affiliateLink.name) &&
        Objects.equals(this.type, affiliateLink.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(affiliateLinkOid, affiliateManagedLinkOid, affiliateOid, affiliateProgramItemOid, code, creativeOid, customHtml, customHtmlApprovalStatus, customLandingUrl, deleted, invisibleLinkApprovalStatus, invisibleLinkUrlPrefix, name, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AffiliateLink {\n");
    sb.append("    affiliateLinkOid: ").append(toIndentedString(affiliateLinkOid)).append("\n");
    sb.append("    affiliateManagedLinkOid: ").append(toIndentedString(affiliateManagedLinkOid)).append("\n");
    sb.append("    affiliateOid: ").append(toIndentedString(affiliateOid)).append("\n");
    sb.append("    affiliateProgramItemOid: ").append(toIndentedString(affiliateProgramItemOid)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    creativeOid: ").append(toIndentedString(creativeOid)).append("\n");
    sb.append("    customHtml: ").append(toIndentedString(customHtml)).append("\n");
    sb.append("    customHtmlApprovalStatus: ").append(toIndentedString(customHtmlApprovalStatus)).append("\n");
    sb.append("    customLandingUrl: ").append(toIndentedString(customLandingUrl)).append("\n");
    sb.append("    deleted: ").append(toIndentedString(deleted)).append("\n");
    sb.append("    invisibleLinkApprovalStatus: ").append(toIndentedString(invisibleLinkApprovalStatus)).append("\n");
    sb.append("    invisibleLinkUrlPrefix: ").append(toIndentedString(invisibleLinkUrlPrefix)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("affiliate_link_oid");
    openapiFields.add("affiliate_managed_link_oid");
    openapiFields.add("affiliate_oid");
    openapiFields.add("affiliate_program_item_oid");
    openapiFields.add("code");
    openapiFields.add("creative_oid");
    openapiFields.add("custom_html");
    openapiFields.add("custom_html_approval_status");
    openapiFields.add("custom_landing_url");
    openapiFields.add("deleted");
    openapiFields.add("invisible_link_approval_status");
    openapiFields.add("invisible_link_url_prefix");
    openapiFields.add("name");
    openapiFields.add("type");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to AffiliateLink
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (AffiliateLink.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in AffiliateLink is not found in the empty JSON string", AffiliateLink.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!AffiliateLink.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AffiliateLink` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("code") != null && !jsonObj.get("code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("code").toString()));
      }
      if (jsonObj.get("custom_html") != null && !jsonObj.get("custom_html").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `custom_html` to be a primitive type in the JSON string but got `%s`", jsonObj.get("custom_html").toString()));
      }
      if (jsonObj.get("custom_html_approval_status") != null && !jsonObj.get("custom_html_approval_status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `custom_html_approval_status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("custom_html_approval_status").toString()));
      }
      if (jsonObj.get("custom_landing_url") != null && !jsonObj.get("custom_landing_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `custom_landing_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("custom_landing_url").toString()));
      }
      if (jsonObj.get("invisible_link_approval_status") != null && !jsonObj.get("invisible_link_approval_status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `invisible_link_approval_status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("invisible_link_approval_status").toString()));
      }
      if (jsonObj.get("invisible_link_url_prefix") != null && !jsonObj.get("invisible_link_url_prefix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `invisible_link_url_prefix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("invisible_link_url_prefix").toString()));
      }
      if (jsonObj.get("name") != null && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (jsonObj.get("type") != null && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AffiliateLink.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AffiliateLink' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AffiliateLink> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AffiliateLink.class));

       return (TypeAdapter<T>) new TypeAdapter<AffiliateLink>() {
           @Override
           public void write(JsonWriter out, AffiliateLink value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AffiliateLink read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AffiliateLink given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AffiliateLink
  * @throws IOException if the JSON string is invalid with respect to AffiliateLink
  */
  public static AffiliateLink fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AffiliateLink.class);
  }

 /**
  * Convert an instance of AffiliateLink to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

