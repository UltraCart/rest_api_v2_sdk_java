/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.ScreenRecordingFilterValuesPageView;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * ScreenRecordingFilterValues
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-01-06T11:19:49.553-05:00[America/Indianapolis]")
public class ScreenRecordingFilterValues {
  public static final String SERIALIZED_NAME_COMMUNICATIONS_CAMPAIGN_NAMES = "communications_campaign_names";
  @SerializedName(SERIALIZED_NAME_COMMUNICATIONS_CAMPAIGN_NAMES)
  private List<String> communicationsCampaignNames = null;

  public static final String SERIALIZED_NAME_COMMUNICATIONS_EMAIL_SUBJECTS = "communications_email_subjects";
  @SerializedName(SERIALIZED_NAME_COMMUNICATIONS_EMAIL_SUBJECTS)
  private List<String> communicationsEmailSubjects = null;

  public static final String SERIALIZED_NAME_COMMUNICATIONS_FLOW_NAMES = "communications_flow_names";
  @SerializedName(SERIALIZED_NAME_COMMUNICATIONS_FLOW_NAMES)
  private List<String> communicationsFlowNames = null;

  public static final String SERIALIZED_NAME_EMAIL_DOMAINS = "email_domains";
  @SerializedName(SERIALIZED_NAME_EMAIL_DOMAINS)
  private List<String> emailDomains = null;

  public static final String SERIALIZED_NAME_GEOLOCATION_COUNTRIES = "geolocation_countries";
  @SerializedName(SERIALIZED_NAME_GEOLOCATION_COUNTRIES)
  private List<String> geolocationCountries = null;

  public static final String SERIALIZED_NAME_GEOLOCATION_STATES = "geolocation_states";
  @SerializedName(SERIALIZED_NAME_GEOLOCATION_STATES)
  private List<String> geolocationStates = null;

  public static final String SERIALIZED_NAME_LANGUAGE_ISO_CODES = "language_iso_codes";
  @SerializedName(SERIALIZED_NAME_LANGUAGE_ISO_CODES)
  private List<String> languageIsoCodes = null;

  public static final String SERIALIZED_NAME_MAX_VALUES = "max_values";
  @SerializedName(SERIALIZED_NAME_MAX_VALUES)
  private Integer maxValues;

  public static final String SERIALIZED_NAME_PAGE_VIEWS = "page_views";
  @SerializedName(SERIALIZED_NAME_PAGE_VIEWS)
  private List<ScreenRecordingFilterValuesPageView> pageViews = null;

  public static final String SERIALIZED_NAME_PREFERRED_LANGUAGES = "preferred_languages";
  @SerializedName(SERIALIZED_NAME_PREFERRED_LANGUAGES)
  private List<String> preferredLanguages = null;

  public static final String SERIALIZED_NAME_REFERRER_DOMAINS = "referrer_domains";
  @SerializedName(SERIALIZED_NAME_REFERRER_DOMAINS)
  private List<String> referrerDomains = null;

  public static final String SERIALIZED_NAME_TIME_ON_SITE_MAX = "time_on_site_max";
  @SerializedName(SERIALIZED_NAME_TIME_ON_SITE_MAX)
  private Integer timeOnSiteMax;

  public static final String SERIALIZED_NAME_TIME_ON_SITE_MIN = "time_on_site_min";
  @SerializedName(SERIALIZED_NAME_TIME_ON_SITE_MIN)
  private Integer timeOnSiteMin;

  public static final String SERIALIZED_NAME_URLS = "urls";
  @SerializedName(SERIALIZED_NAME_URLS)
  private List<String> urls = null;

  public static final String SERIALIZED_NAME_USER_AGENT_DEVICE_NAMES = "user_agent_device_names";
  @SerializedName(SERIALIZED_NAME_USER_AGENT_DEVICE_NAMES)
  private List<String> userAgentDeviceNames = null;

  public static final String SERIALIZED_NAME_USER_AGENT_DEVICE_OS_NAMES = "user_agent_device_os_names";
  @SerializedName(SERIALIZED_NAME_USER_AGENT_DEVICE_OS_NAMES)
  private List<String> userAgentDeviceOsNames = null;

  public static final String SERIALIZED_NAME_USER_AGENT_DEVICE_OS_VERSIONS = "user_agent_device_os_versions";
  @SerializedName(SERIALIZED_NAME_USER_AGENT_DEVICE_OS_VERSIONS)
  private List<String> userAgentDeviceOsVersions = null;

  public static final String SERIALIZED_NAME_USER_AGENT_NAMES = "user_agent_names";
  @SerializedName(SERIALIZED_NAME_USER_AGENT_NAMES)
  private List<String> userAgentNames = null;

  public static final String SERIALIZED_NAME_USER_AGENT_ORIGINALS = "user_agent_originals";
  @SerializedName(SERIALIZED_NAME_USER_AGENT_ORIGINALS)
  private List<String> userAgentOriginals = null;

  public static final String SERIALIZED_NAME_UTM_CAMPAIGNS = "utm_campaigns";
  @SerializedName(SERIALIZED_NAME_UTM_CAMPAIGNS)
  private List<String> utmCampaigns = null;

  public static final String SERIALIZED_NAME_UTM_SOURCES = "utm_sources";
  @SerializedName(SERIALIZED_NAME_UTM_SOURCES)
  private List<String> utmSources = null;

  public ScreenRecordingFilterValues() { 
  }

  public ScreenRecordingFilterValues communicationsCampaignNames(List<String> communicationsCampaignNames) {
    
    this.communicationsCampaignNames = communicationsCampaignNames;
    return this;
  }

  public ScreenRecordingFilterValues addCommunicationsCampaignNamesItem(String communicationsCampaignNamesItem) {
    if (this.communicationsCampaignNames == null) {
      this.communicationsCampaignNames = new ArrayList<>();
    }
    this.communicationsCampaignNames.add(communicationsCampaignNamesItem);
    return this;
  }

   /**
   * Get communicationsCampaignNames
   * @return communicationsCampaignNames
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getCommunicationsCampaignNames() {
    return communicationsCampaignNames;
  }


  public void setCommunicationsCampaignNames(List<String> communicationsCampaignNames) {
    this.communicationsCampaignNames = communicationsCampaignNames;
  }


  public ScreenRecordingFilterValues communicationsEmailSubjects(List<String> communicationsEmailSubjects) {
    
    this.communicationsEmailSubjects = communicationsEmailSubjects;
    return this;
  }

  public ScreenRecordingFilterValues addCommunicationsEmailSubjectsItem(String communicationsEmailSubjectsItem) {
    if (this.communicationsEmailSubjects == null) {
      this.communicationsEmailSubjects = new ArrayList<>();
    }
    this.communicationsEmailSubjects.add(communicationsEmailSubjectsItem);
    return this;
  }

   /**
   * Get communicationsEmailSubjects
   * @return communicationsEmailSubjects
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getCommunicationsEmailSubjects() {
    return communicationsEmailSubjects;
  }


  public void setCommunicationsEmailSubjects(List<String> communicationsEmailSubjects) {
    this.communicationsEmailSubjects = communicationsEmailSubjects;
  }


  public ScreenRecordingFilterValues communicationsFlowNames(List<String> communicationsFlowNames) {
    
    this.communicationsFlowNames = communicationsFlowNames;
    return this;
  }

  public ScreenRecordingFilterValues addCommunicationsFlowNamesItem(String communicationsFlowNamesItem) {
    if (this.communicationsFlowNames == null) {
      this.communicationsFlowNames = new ArrayList<>();
    }
    this.communicationsFlowNames.add(communicationsFlowNamesItem);
    return this;
  }

   /**
   * Get communicationsFlowNames
   * @return communicationsFlowNames
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getCommunicationsFlowNames() {
    return communicationsFlowNames;
  }


  public void setCommunicationsFlowNames(List<String> communicationsFlowNames) {
    this.communicationsFlowNames = communicationsFlowNames;
  }


  public ScreenRecordingFilterValues emailDomains(List<String> emailDomains) {
    
    this.emailDomains = emailDomains;
    return this;
  }

  public ScreenRecordingFilterValues addEmailDomainsItem(String emailDomainsItem) {
    if (this.emailDomains == null) {
      this.emailDomains = new ArrayList<>();
    }
    this.emailDomains.add(emailDomainsItem);
    return this;
  }

   /**
   * Get emailDomains
   * @return emailDomains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getEmailDomains() {
    return emailDomains;
  }


  public void setEmailDomains(List<String> emailDomains) {
    this.emailDomains = emailDomains;
  }


  public ScreenRecordingFilterValues geolocationCountries(List<String> geolocationCountries) {
    
    this.geolocationCountries = geolocationCountries;
    return this;
  }

  public ScreenRecordingFilterValues addGeolocationCountriesItem(String geolocationCountriesItem) {
    if (this.geolocationCountries == null) {
      this.geolocationCountries = new ArrayList<>();
    }
    this.geolocationCountries.add(geolocationCountriesItem);
    return this;
  }

   /**
   * Get geolocationCountries
   * @return geolocationCountries
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getGeolocationCountries() {
    return geolocationCountries;
  }


  public void setGeolocationCountries(List<String> geolocationCountries) {
    this.geolocationCountries = geolocationCountries;
  }


  public ScreenRecordingFilterValues geolocationStates(List<String> geolocationStates) {
    
    this.geolocationStates = geolocationStates;
    return this;
  }

  public ScreenRecordingFilterValues addGeolocationStatesItem(String geolocationStatesItem) {
    if (this.geolocationStates == null) {
      this.geolocationStates = new ArrayList<>();
    }
    this.geolocationStates.add(geolocationStatesItem);
    return this;
  }

   /**
   * Get geolocationStates
   * @return geolocationStates
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getGeolocationStates() {
    return geolocationStates;
  }


  public void setGeolocationStates(List<String> geolocationStates) {
    this.geolocationStates = geolocationStates;
  }


  public ScreenRecordingFilterValues languageIsoCodes(List<String> languageIsoCodes) {
    
    this.languageIsoCodes = languageIsoCodes;
    return this;
  }

  public ScreenRecordingFilterValues addLanguageIsoCodesItem(String languageIsoCodesItem) {
    if (this.languageIsoCodes == null) {
      this.languageIsoCodes = new ArrayList<>();
    }
    this.languageIsoCodes.add(languageIsoCodesItem);
    return this;
  }

   /**
   * Get languageIsoCodes
   * @return languageIsoCodes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getLanguageIsoCodes() {
    return languageIsoCodes;
  }


  public void setLanguageIsoCodes(List<String> languageIsoCodes) {
    this.languageIsoCodes = languageIsoCodes;
  }


  public ScreenRecordingFilterValues maxValues(Integer maxValues) {
    
    this.maxValues = maxValues;
    return this;
  }

   /**
   * Get maxValues
   * @return maxValues
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getMaxValues() {
    return maxValues;
  }


  public void setMaxValues(Integer maxValues) {
    this.maxValues = maxValues;
  }


  public ScreenRecordingFilterValues pageViews(List<ScreenRecordingFilterValuesPageView> pageViews) {
    
    this.pageViews = pageViews;
    return this;
  }

  public ScreenRecordingFilterValues addPageViewsItem(ScreenRecordingFilterValuesPageView pageViewsItem) {
    if (this.pageViews == null) {
      this.pageViews = new ArrayList<>();
    }
    this.pageViews.add(pageViewsItem);
    return this;
  }

   /**
   * Get pageViews
   * @return pageViews
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ScreenRecordingFilterValuesPageView> getPageViews() {
    return pageViews;
  }


  public void setPageViews(List<ScreenRecordingFilterValuesPageView> pageViews) {
    this.pageViews = pageViews;
  }


  public ScreenRecordingFilterValues preferredLanguages(List<String> preferredLanguages) {
    
    this.preferredLanguages = preferredLanguages;
    return this;
  }

  public ScreenRecordingFilterValues addPreferredLanguagesItem(String preferredLanguagesItem) {
    if (this.preferredLanguages == null) {
      this.preferredLanguages = new ArrayList<>();
    }
    this.preferredLanguages.add(preferredLanguagesItem);
    return this;
  }

   /**
   * Get preferredLanguages
   * @return preferredLanguages
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getPreferredLanguages() {
    return preferredLanguages;
  }


  public void setPreferredLanguages(List<String> preferredLanguages) {
    this.preferredLanguages = preferredLanguages;
  }


  public ScreenRecordingFilterValues referrerDomains(List<String> referrerDomains) {
    
    this.referrerDomains = referrerDomains;
    return this;
  }

  public ScreenRecordingFilterValues addReferrerDomainsItem(String referrerDomainsItem) {
    if (this.referrerDomains == null) {
      this.referrerDomains = new ArrayList<>();
    }
    this.referrerDomains.add(referrerDomainsItem);
    return this;
  }

   /**
   * Get referrerDomains
   * @return referrerDomains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getReferrerDomains() {
    return referrerDomains;
  }


  public void setReferrerDomains(List<String> referrerDomains) {
    this.referrerDomains = referrerDomains;
  }


  public ScreenRecordingFilterValues timeOnSiteMax(Integer timeOnSiteMax) {
    
    this.timeOnSiteMax = timeOnSiteMax;
    return this;
  }

   /**
   * Get timeOnSiteMax
   * @return timeOnSiteMax
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getTimeOnSiteMax() {
    return timeOnSiteMax;
  }


  public void setTimeOnSiteMax(Integer timeOnSiteMax) {
    this.timeOnSiteMax = timeOnSiteMax;
  }


  public ScreenRecordingFilterValues timeOnSiteMin(Integer timeOnSiteMin) {
    
    this.timeOnSiteMin = timeOnSiteMin;
    return this;
  }

   /**
   * Get timeOnSiteMin
   * @return timeOnSiteMin
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getTimeOnSiteMin() {
    return timeOnSiteMin;
  }


  public void setTimeOnSiteMin(Integer timeOnSiteMin) {
    this.timeOnSiteMin = timeOnSiteMin;
  }


  public ScreenRecordingFilterValues urls(List<String> urls) {
    
    this.urls = urls;
    return this;
  }

  public ScreenRecordingFilterValues addUrlsItem(String urlsItem) {
    if (this.urls == null) {
      this.urls = new ArrayList<>();
    }
    this.urls.add(urlsItem);
    return this;
  }

   /**
   * Get urls
   * @return urls
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getUrls() {
    return urls;
  }


  public void setUrls(List<String> urls) {
    this.urls = urls;
  }


  public ScreenRecordingFilterValues userAgentDeviceNames(List<String> userAgentDeviceNames) {
    
    this.userAgentDeviceNames = userAgentDeviceNames;
    return this;
  }

  public ScreenRecordingFilterValues addUserAgentDeviceNamesItem(String userAgentDeviceNamesItem) {
    if (this.userAgentDeviceNames == null) {
      this.userAgentDeviceNames = new ArrayList<>();
    }
    this.userAgentDeviceNames.add(userAgentDeviceNamesItem);
    return this;
  }

   /**
   * Get userAgentDeviceNames
   * @return userAgentDeviceNames
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getUserAgentDeviceNames() {
    return userAgentDeviceNames;
  }


  public void setUserAgentDeviceNames(List<String> userAgentDeviceNames) {
    this.userAgentDeviceNames = userAgentDeviceNames;
  }


  public ScreenRecordingFilterValues userAgentDeviceOsNames(List<String> userAgentDeviceOsNames) {
    
    this.userAgentDeviceOsNames = userAgentDeviceOsNames;
    return this;
  }

  public ScreenRecordingFilterValues addUserAgentDeviceOsNamesItem(String userAgentDeviceOsNamesItem) {
    if (this.userAgentDeviceOsNames == null) {
      this.userAgentDeviceOsNames = new ArrayList<>();
    }
    this.userAgentDeviceOsNames.add(userAgentDeviceOsNamesItem);
    return this;
  }

   /**
   * Get userAgentDeviceOsNames
   * @return userAgentDeviceOsNames
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getUserAgentDeviceOsNames() {
    return userAgentDeviceOsNames;
  }


  public void setUserAgentDeviceOsNames(List<String> userAgentDeviceOsNames) {
    this.userAgentDeviceOsNames = userAgentDeviceOsNames;
  }


  public ScreenRecordingFilterValues userAgentDeviceOsVersions(List<String> userAgentDeviceOsVersions) {
    
    this.userAgentDeviceOsVersions = userAgentDeviceOsVersions;
    return this;
  }

  public ScreenRecordingFilterValues addUserAgentDeviceOsVersionsItem(String userAgentDeviceOsVersionsItem) {
    if (this.userAgentDeviceOsVersions == null) {
      this.userAgentDeviceOsVersions = new ArrayList<>();
    }
    this.userAgentDeviceOsVersions.add(userAgentDeviceOsVersionsItem);
    return this;
  }

   /**
   * Get userAgentDeviceOsVersions
   * @return userAgentDeviceOsVersions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getUserAgentDeviceOsVersions() {
    return userAgentDeviceOsVersions;
  }


  public void setUserAgentDeviceOsVersions(List<String> userAgentDeviceOsVersions) {
    this.userAgentDeviceOsVersions = userAgentDeviceOsVersions;
  }


  public ScreenRecordingFilterValues userAgentNames(List<String> userAgentNames) {
    
    this.userAgentNames = userAgentNames;
    return this;
  }

  public ScreenRecordingFilterValues addUserAgentNamesItem(String userAgentNamesItem) {
    if (this.userAgentNames == null) {
      this.userAgentNames = new ArrayList<>();
    }
    this.userAgentNames.add(userAgentNamesItem);
    return this;
  }

   /**
   * Get userAgentNames
   * @return userAgentNames
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getUserAgentNames() {
    return userAgentNames;
  }


  public void setUserAgentNames(List<String> userAgentNames) {
    this.userAgentNames = userAgentNames;
  }


  public ScreenRecordingFilterValues userAgentOriginals(List<String> userAgentOriginals) {
    
    this.userAgentOriginals = userAgentOriginals;
    return this;
  }

  public ScreenRecordingFilterValues addUserAgentOriginalsItem(String userAgentOriginalsItem) {
    if (this.userAgentOriginals == null) {
      this.userAgentOriginals = new ArrayList<>();
    }
    this.userAgentOriginals.add(userAgentOriginalsItem);
    return this;
  }

   /**
   * Get userAgentOriginals
   * @return userAgentOriginals
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getUserAgentOriginals() {
    return userAgentOriginals;
  }


  public void setUserAgentOriginals(List<String> userAgentOriginals) {
    this.userAgentOriginals = userAgentOriginals;
  }


  public ScreenRecordingFilterValues utmCampaigns(List<String> utmCampaigns) {
    
    this.utmCampaigns = utmCampaigns;
    return this;
  }

  public ScreenRecordingFilterValues addUtmCampaignsItem(String utmCampaignsItem) {
    if (this.utmCampaigns == null) {
      this.utmCampaigns = new ArrayList<>();
    }
    this.utmCampaigns.add(utmCampaignsItem);
    return this;
  }

   /**
   * Get utmCampaigns
   * @return utmCampaigns
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getUtmCampaigns() {
    return utmCampaigns;
  }


  public void setUtmCampaigns(List<String> utmCampaigns) {
    this.utmCampaigns = utmCampaigns;
  }


  public ScreenRecordingFilterValues utmSources(List<String> utmSources) {
    
    this.utmSources = utmSources;
    return this;
  }

  public ScreenRecordingFilterValues addUtmSourcesItem(String utmSourcesItem) {
    if (this.utmSources == null) {
      this.utmSources = new ArrayList<>();
    }
    this.utmSources.add(utmSourcesItem);
    return this;
  }

   /**
   * Get utmSources
   * @return utmSources
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getUtmSources() {
    return utmSources;
  }


  public void setUtmSources(List<String> utmSources) {
    this.utmSources = utmSources;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ScreenRecordingFilterValues screenRecordingFilterValues = (ScreenRecordingFilterValues) o;
    return Objects.equals(this.communicationsCampaignNames, screenRecordingFilterValues.communicationsCampaignNames) &&
        Objects.equals(this.communicationsEmailSubjects, screenRecordingFilterValues.communicationsEmailSubjects) &&
        Objects.equals(this.communicationsFlowNames, screenRecordingFilterValues.communicationsFlowNames) &&
        Objects.equals(this.emailDomains, screenRecordingFilterValues.emailDomains) &&
        Objects.equals(this.geolocationCountries, screenRecordingFilterValues.geolocationCountries) &&
        Objects.equals(this.geolocationStates, screenRecordingFilterValues.geolocationStates) &&
        Objects.equals(this.languageIsoCodes, screenRecordingFilterValues.languageIsoCodes) &&
        Objects.equals(this.maxValues, screenRecordingFilterValues.maxValues) &&
        Objects.equals(this.pageViews, screenRecordingFilterValues.pageViews) &&
        Objects.equals(this.preferredLanguages, screenRecordingFilterValues.preferredLanguages) &&
        Objects.equals(this.referrerDomains, screenRecordingFilterValues.referrerDomains) &&
        Objects.equals(this.timeOnSiteMax, screenRecordingFilterValues.timeOnSiteMax) &&
        Objects.equals(this.timeOnSiteMin, screenRecordingFilterValues.timeOnSiteMin) &&
        Objects.equals(this.urls, screenRecordingFilterValues.urls) &&
        Objects.equals(this.userAgentDeviceNames, screenRecordingFilterValues.userAgentDeviceNames) &&
        Objects.equals(this.userAgentDeviceOsNames, screenRecordingFilterValues.userAgentDeviceOsNames) &&
        Objects.equals(this.userAgentDeviceOsVersions, screenRecordingFilterValues.userAgentDeviceOsVersions) &&
        Objects.equals(this.userAgentNames, screenRecordingFilterValues.userAgentNames) &&
        Objects.equals(this.userAgentOriginals, screenRecordingFilterValues.userAgentOriginals) &&
        Objects.equals(this.utmCampaigns, screenRecordingFilterValues.utmCampaigns) &&
        Objects.equals(this.utmSources, screenRecordingFilterValues.utmSources);
  }

  @Override
  public int hashCode() {
    return Objects.hash(communicationsCampaignNames, communicationsEmailSubjects, communicationsFlowNames, emailDomains, geolocationCountries, geolocationStates, languageIsoCodes, maxValues, pageViews, preferredLanguages, referrerDomains, timeOnSiteMax, timeOnSiteMin, urls, userAgentDeviceNames, userAgentDeviceOsNames, userAgentDeviceOsVersions, userAgentNames, userAgentOriginals, utmCampaigns, utmSources);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ScreenRecordingFilterValues {\n");
    sb.append("    communicationsCampaignNames: ").append(toIndentedString(communicationsCampaignNames)).append("\n");
    sb.append("    communicationsEmailSubjects: ").append(toIndentedString(communicationsEmailSubjects)).append("\n");
    sb.append("    communicationsFlowNames: ").append(toIndentedString(communicationsFlowNames)).append("\n");
    sb.append("    emailDomains: ").append(toIndentedString(emailDomains)).append("\n");
    sb.append("    geolocationCountries: ").append(toIndentedString(geolocationCountries)).append("\n");
    sb.append("    geolocationStates: ").append(toIndentedString(geolocationStates)).append("\n");
    sb.append("    languageIsoCodes: ").append(toIndentedString(languageIsoCodes)).append("\n");
    sb.append("    maxValues: ").append(toIndentedString(maxValues)).append("\n");
    sb.append("    pageViews: ").append(toIndentedString(pageViews)).append("\n");
    sb.append("    preferredLanguages: ").append(toIndentedString(preferredLanguages)).append("\n");
    sb.append("    referrerDomains: ").append(toIndentedString(referrerDomains)).append("\n");
    sb.append("    timeOnSiteMax: ").append(toIndentedString(timeOnSiteMax)).append("\n");
    sb.append("    timeOnSiteMin: ").append(toIndentedString(timeOnSiteMin)).append("\n");
    sb.append("    urls: ").append(toIndentedString(urls)).append("\n");
    sb.append("    userAgentDeviceNames: ").append(toIndentedString(userAgentDeviceNames)).append("\n");
    sb.append("    userAgentDeviceOsNames: ").append(toIndentedString(userAgentDeviceOsNames)).append("\n");
    sb.append("    userAgentDeviceOsVersions: ").append(toIndentedString(userAgentDeviceOsVersions)).append("\n");
    sb.append("    userAgentNames: ").append(toIndentedString(userAgentNames)).append("\n");
    sb.append("    userAgentOriginals: ").append(toIndentedString(userAgentOriginals)).append("\n");
    sb.append("    utmCampaigns: ").append(toIndentedString(utmCampaigns)).append("\n");
    sb.append("    utmSources: ").append(toIndentedString(utmSources)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("communications_campaign_names");
    openapiFields.add("communications_email_subjects");
    openapiFields.add("communications_flow_names");
    openapiFields.add("email_domains");
    openapiFields.add("geolocation_countries");
    openapiFields.add("geolocation_states");
    openapiFields.add("language_iso_codes");
    openapiFields.add("max_values");
    openapiFields.add("page_views");
    openapiFields.add("preferred_languages");
    openapiFields.add("referrer_domains");
    openapiFields.add("time_on_site_max");
    openapiFields.add("time_on_site_min");
    openapiFields.add("urls");
    openapiFields.add("user_agent_device_names");
    openapiFields.add("user_agent_device_os_names");
    openapiFields.add("user_agent_device_os_versions");
    openapiFields.add("user_agent_names");
    openapiFields.add("user_agent_originals");
    openapiFields.add("utm_campaigns");
    openapiFields.add("utm_sources");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ScreenRecordingFilterValues
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (ScreenRecordingFilterValues.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in ScreenRecordingFilterValues is not found in the empty JSON string", ScreenRecordingFilterValues.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!ScreenRecordingFilterValues.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ScreenRecordingFilterValues` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      // ensure the json data is an array
      if (jsonObj.get("communications_campaign_names") != null && !jsonObj.get("communications_campaign_names").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `communications_campaign_names` to be an array in the JSON string but got `%s`", jsonObj.get("communications_campaign_names").toString()));
      }
      // ensure the json data is an array
      if (jsonObj.get("communications_email_subjects") != null && !jsonObj.get("communications_email_subjects").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `communications_email_subjects` to be an array in the JSON string but got `%s`", jsonObj.get("communications_email_subjects").toString()));
      }
      // ensure the json data is an array
      if (jsonObj.get("communications_flow_names") != null && !jsonObj.get("communications_flow_names").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `communications_flow_names` to be an array in the JSON string but got `%s`", jsonObj.get("communications_flow_names").toString()));
      }
      // ensure the json data is an array
      if (jsonObj.get("email_domains") != null && !jsonObj.get("email_domains").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `email_domains` to be an array in the JSON string but got `%s`", jsonObj.get("email_domains").toString()));
      }
      // ensure the json data is an array
      if (jsonObj.get("geolocation_countries") != null && !jsonObj.get("geolocation_countries").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `geolocation_countries` to be an array in the JSON string but got `%s`", jsonObj.get("geolocation_countries").toString()));
      }
      // ensure the json data is an array
      if (jsonObj.get("geolocation_states") != null && !jsonObj.get("geolocation_states").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `geolocation_states` to be an array in the JSON string but got `%s`", jsonObj.get("geolocation_states").toString()));
      }
      // ensure the json data is an array
      if (jsonObj.get("language_iso_codes") != null && !jsonObj.get("language_iso_codes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `language_iso_codes` to be an array in the JSON string but got `%s`", jsonObj.get("language_iso_codes").toString()));
      }
      JsonArray jsonArraypageViews = jsonObj.getAsJsonArray("page_views");
      if (jsonArraypageViews != null) {
        // ensure the json data is an array
        if (!jsonObj.get("page_views").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `page_views` to be an array in the JSON string but got `%s`", jsonObj.get("page_views").toString()));
        }

        // validate the optional field `page_views` (array)
        for (int i = 0; i < jsonArraypageViews.size(); i++) {
          ScreenRecordingFilterValuesPageView.validateJsonObject(jsonArraypageViews.get(i).getAsJsonObject());
        };
      }
      // ensure the json data is an array
      if (jsonObj.get("preferred_languages") != null && !jsonObj.get("preferred_languages").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `preferred_languages` to be an array in the JSON string but got `%s`", jsonObj.get("preferred_languages").toString()));
      }
      // ensure the json data is an array
      if (jsonObj.get("referrer_domains") != null && !jsonObj.get("referrer_domains").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `referrer_domains` to be an array in the JSON string but got `%s`", jsonObj.get("referrer_domains").toString()));
      }
      // ensure the json data is an array
      if (jsonObj.get("urls") != null && !jsonObj.get("urls").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `urls` to be an array in the JSON string but got `%s`", jsonObj.get("urls").toString()));
      }
      // ensure the json data is an array
      if (jsonObj.get("user_agent_device_names") != null && !jsonObj.get("user_agent_device_names").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `user_agent_device_names` to be an array in the JSON string but got `%s`", jsonObj.get("user_agent_device_names").toString()));
      }
      // ensure the json data is an array
      if (jsonObj.get("user_agent_device_os_names") != null && !jsonObj.get("user_agent_device_os_names").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `user_agent_device_os_names` to be an array in the JSON string but got `%s`", jsonObj.get("user_agent_device_os_names").toString()));
      }
      // ensure the json data is an array
      if (jsonObj.get("user_agent_device_os_versions") != null && !jsonObj.get("user_agent_device_os_versions").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `user_agent_device_os_versions` to be an array in the JSON string but got `%s`", jsonObj.get("user_agent_device_os_versions").toString()));
      }
      // ensure the json data is an array
      if (jsonObj.get("user_agent_names") != null && !jsonObj.get("user_agent_names").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `user_agent_names` to be an array in the JSON string but got `%s`", jsonObj.get("user_agent_names").toString()));
      }
      // ensure the json data is an array
      if (jsonObj.get("user_agent_originals") != null && !jsonObj.get("user_agent_originals").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `user_agent_originals` to be an array in the JSON string but got `%s`", jsonObj.get("user_agent_originals").toString()));
      }
      // ensure the json data is an array
      if (jsonObj.get("utm_campaigns") != null && !jsonObj.get("utm_campaigns").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `utm_campaigns` to be an array in the JSON string but got `%s`", jsonObj.get("utm_campaigns").toString()));
      }
      // ensure the json data is an array
      if (jsonObj.get("utm_sources") != null && !jsonObj.get("utm_sources").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `utm_sources` to be an array in the JSON string but got `%s`", jsonObj.get("utm_sources").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ScreenRecordingFilterValues.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ScreenRecordingFilterValues' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ScreenRecordingFilterValues> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ScreenRecordingFilterValues.class));

       return (TypeAdapter<T>) new TypeAdapter<ScreenRecordingFilterValues>() {
           @Override
           public void write(JsonWriter out, ScreenRecordingFilterValues value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ScreenRecordingFilterValues read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ScreenRecordingFilterValues given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ScreenRecordingFilterValues
  * @throws IOException if the JSON string is invalid with respect to ScreenRecordingFilterValues
  */
  public static ScreenRecordingFilterValues fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ScreenRecordingFilterValues.class);
  }

 /**
  * Convert an instance of ScreenRecordingFilterValues to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

