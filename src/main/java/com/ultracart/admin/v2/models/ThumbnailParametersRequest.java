/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * ThumbnailParametersRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-04-25T15:45:07.075-04:00")



public class ThumbnailParametersRequest {
  @SerializedName("height")
  private Integer height = null;

  @SerializedName("pngFormat")
  private Boolean pngFormat = null;

  @SerializedName("squareThumbnail")
  private Boolean squareThumbnail = null;

  @SerializedName("webp")
  private Boolean webp = null;

  @SerializedName("width")
  private Integer width = null;

  public ThumbnailParametersRequest height(Integer height) {
    this.height = height;
    return this;
  }

   /**
   * Get height
   * @return height
  **/
  @ApiModelProperty(value = "")
  public Integer getHeight() {
    return height;
  }

  public void setHeight(Integer height) {
    this.height = height;
  }

  public ThumbnailParametersRequest pngFormat(Boolean pngFormat) {
    this.pngFormat = pngFormat;
    return this;
  }

   /**
   * Get pngFormat
   * @return pngFormat
  **/
  @ApiModelProperty(value = "")
  public Boolean isPngFormat() {
    return pngFormat;
  }

  public void setPngFormat(Boolean pngFormat) {
    this.pngFormat = pngFormat;
  }

  public ThumbnailParametersRequest squareThumbnail(Boolean squareThumbnail) {
    this.squareThumbnail = squareThumbnail;
    return this;
  }

   /**
   * Get squareThumbnail
   * @return squareThumbnail
  **/
  @ApiModelProperty(value = "")
  public Boolean isSquareThumbnail() {
    return squareThumbnail;
  }

  public void setSquareThumbnail(Boolean squareThumbnail) {
    this.squareThumbnail = squareThumbnail;
  }

  public ThumbnailParametersRequest webp(Boolean webp) {
    this.webp = webp;
    return this;
  }

   /**
   * Get webp
   * @return webp
  **/
  @ApiModelProperty(value = "")
  public Boolean isWebp() {
    return webp;
  }

  public void setWebp(Boolean webp) {
    this.webp = webp;
  }

  public ThumbnailParametersRequest width(Integer width) {
    this.width = width;
    return this;
  }

   /**
   * Get width
   * @return width
  **/
  @ApiModelProperty(value = "")
  public Integer getWidth() {
    return width;
  }

  public void setWidth(Integer width) {
    this.width = width;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ThumbnailParametersRequest thumbnailParametersRequest = (ThumbnailParametersRequest) o;
    return Objects.equals(this.height, thumbnailParametersRequest.height) &&
        Objects.equals(this.pngFormat, thumbnailParametersRequest.pngFormat) &&
        Objects.equals(this.squareThumbnail, thumbnailParametersRequest.squareThumbnail) &&
        Objects.equals(this.webp, thumbnailParametersRequest.webp) &&
        Objects.equals(this.width, thumbnailParametersRequest.width);
  }

  @Override
  public int hashCode() {
    return Objects.hash(height, pngFormat, squareThumbnail, webp, width);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ThumbnailParametersRequest {\n");
    
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("    pngFormat: ").append(toIndentedString(pngFormat)).append("\n");
    sb.append("    squareThumbnail: ").append(toIndentedString(squareThumbnail)).append("\n");
    sb.append("    webp: ").append(toIndentedString(webp)).append("\n");
    sb.append("    width: ").append(toIndentedString(width)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

