/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * CouponItemSearchResult
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-23T00:47:02.286-04:00[America/Indianapolis]")
public class CouponItemSearchResult {
  public static final String SERIALIZED_NAME_COST = "cost";
  @SerializedName(SERIALIZED_NAME_COST)
  private String cost;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_MANUFACTURER_NAME = "manufacturer_name";
  @SerializedName(SERIALIZED_NAME_MANUFACTURER_NAME)
  private String manufacturerName;

  public static final String SERIALIZED_NAME_MANUFACTURER_SKU = "manufacturer_sku";
  @SerializedName(SERIALIZED_NAME_MANUFACTURER_SKU)
  private String manufacturerSku;

  public static final String SERIALIZED_NAME_MERCHANT_ITEM_ID = "merchant_item_id";
  @SerializedName(SERIALIZED_NAME_MERCHANT_ITEM_ID)
  private String merchantItemId;

  public static final String SERIALIZED_NAME_MERCHANT_ITEM_OID = "merchant_item_oid";
  @SerializedName(SERIALIZED_NAME_MERCHANT_ITEM_OID)
  private Integer merchantItemOid;

  public static final String SERIALIZED_NAME_SCORE = "score";
  @SerializedName(SERIALIZED_NAME_SCORE)
  private String score;

  public static final String SERIALIZED_NAME_THUMBNAIL_URL = "thumbnail_url";
  @SerializedName(SERIALIZED_NAME_THUMBNAIL_URL)
  private String thumbnailUrl;

  public CouponItemSearchResult() { 
  }

  public CouponItemSearchResult cost(String cost) {
    
    this.cost = cost;
    return this;
  }

   /**
   * The cost of this item.
   * @return cost
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The cost of this item.")

  public String getCost() {
    return cost;
  }


  public void setCost(String cost) {
    this.cost = cost;
  }


  public CouponItemSearchResult description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * A human readable description of this item.
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A human readable description of this item.")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public CouponItemSearchResult manufacturerName(String manufacturerName) {
    
    this.manufacturerName = manufacturerName;
    return this;
  }

   /**
   * The manufacturer of this item.
   * @return manufacturerName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The manufacturer of this item.")

  public String getManufacturerName() {
    return manufacturerName;
  }


  public void setManufacturerName(String manufacturerName) {
    this.manufacturerName = manufacturerName;
  }


  public CouponItemSearchResult manufacturerSku(String manufacturerSku) {
    
    this.manufacturerSku = manufacturerSku;
    return this;
  }

   /**
   * The manufacturer sku of this item.
   * @return manufacturerSku
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The manufacturer sku of this item.")

  public String getManufacturerSku() {
    return manufacturerSku;
  }


  public void setManufacturerSku(String manufacturerSku) {
    this.manufacturerSku = manufacturerSku;
  }


  public CouponItemSearchResult merchantItemId(String merchantItemId) {
    
    this.merchantItemId = merchantItemId;
    return this;
  }

   /**
   * The merchant item identifier, which is unique for this merchant, but not across all of UltraCart.
   * @return merchantItemId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The merchant item identifier, which is unique for this merchant, but not across all of UltraCart.")

  public String getMerchantItemId() {
    return merchantItemId;
  }


  public void setMerchantItemId(String merchantItemId) {
    this.merchantItemId = merchantItemId;
  }


  public CouponItemSearchResult merchantItemOid(Integer merchantItemOid) {
    
    this.merchantItemOid = merchantItemOid;
    return this;
  }

   /**
   * The unique internal identifier used by UltraCart to manage this item.
   * @return merchantItemOid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The unique internal identifier used by UltraCart to manage this item.")

  public Integer getMerchantItemOid() {
    return merchantItemOid;
  }


  public void setMerchantItemOid(Integer merchantItemOid) {
    this.merchantItemOid = merchantItemOid;
  }


  public CouponItemSearchResult score(String score) {
    
    this.score = score;
    return this;
  }

   /**
   * The search score of this item.  Larger scores mean more accurate matches against the search term.
   * @return score
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The search score of this item.  Larger scores mean more accurate matches against the search term.")

  public String getScore() {
    return score;
  }


  public void setScore(String score) {
    this.score = score;
  }


  public CouponItemSearchResult thumbnailUrl(String thumbnailUrl) {
    
    this.thumbnailUrl = thumbnailUrl;
    return this;
  }

   /**
   * A url for displaying a thumbnail of this item
   * @return thumbnailUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A url for displaying a thumbnail of this item")

  public String getThumbnailUrl() {
    return thumbnailUrl;
  }


  public void setThumbnailUrl(String thumbnailUrl) {
    this.thumbnailUrl = thumbnailUrl;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CouponItemSearchResult couponItemSearchResult = (CouponItemSearchResult) o;
    return Objects.equals(this.cost, couponItemSearchResult.cost) &&
        Objects.equals(this.description, couponItemSearchResult.description) &&
        Objects.equals(this.manufacturerName, couponItemSearchResult.manufacturerName) &&
        Objects.equals(this.manufacturerSku, couponItemSearchResult.manufacturerSku) &&
        Objects.equals(this.merchantItemId, couponItemSearchResult.merchantItemId) &&
        Objects.equals(this.merchantItemOid, couponItemSearchResult.merchantItemOid) &&
        Objects.equals(this.score, couponItemSearchResult.score) &&
        Objects.equals(this.thumbnailUrl, couponItemSearchResult.thumbnailUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cost, description, manufacturerName, manufacturerSku, merchantItemId, merchantItemOid, score, thumbnailUrl);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CouponItemSearchResult {\n");
    sb.append("    cost: ").append(toIndentedString(cost)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    manufacturerName: ").append(toIndentedString(manufacturerName)).append("\n");
    sb.append("    manufacturerSku: ").append(toIndentedString(manufacturerSku)).append("\n");
    sb.append("    merchantItemId: ").append(toIndentedString(merchantItemId)).append("\n");
    sb.append("    merchantItemOid: ").append(toIndentedString(merchantItemOid)).append("\n");
    sb.append("    score: ").append(toIndentedString(score)).append("\n");
    sb.append("    thumbnailUrl: ").append(toIndentedString(thumbnailUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("cost");
    openapiFields.add("description");
    openapiFields.add("manufacturer_name");
    openapiFields.add("manufacturer_sku");
    openapiFields.add("merchant_item_id");
    openapiFields.add("merchant_item_oid");
    openapiFields.add("score");
    openapiFields.add("thumbnail_url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CouponItemSearchResult
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (CouponItemSearchResult.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in CouponItemSearchResult is not found in the empty JSON string", CouponItemSearchResult.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!CouponItemSearchResult.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CouponItemSearchResult` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("cost") != null && !jsonObj.get("cost").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cost` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cost").toString()));
      }
      if (jsonObj.get("description") != null && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if (jsonObj.get("manufacturer_name") != null && !jsonObj.get("manufacturer_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `manufacturer_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("manufacturer_name").toString()));
      }
      if (jsonObj.get("manufacturer_sku") != null && !jsonObj.get("manufacturer_sku").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `manufacturer_sku` to be a primitive type in the JSON string but got `%s`", jsonObj.get("manufacturer_sku").toString()));
      }
      if (jsonObj.get("merchant_item_id") != null && !jsonObj.get("merchant_item_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `merchant_item_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("merchant_item_id").toString()));
      }
      if (jsonObj.get("score") != null && !jsonObj.get("score").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `score` to be a primitive type in the JSON string but got `%s`", jsonObj.get("score").toString()));
      }
      if (jsonObj.get("thumbnail_url") != null && !jsonObj.get("thumbnail_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `thumbnail_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("thumbnail_url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CouponItemSearchResult.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CouponItemSearchResult' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CouponItemSearchResult> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CouponItemSearchResult.class));

       return (TypeAdapter<T>) new TypeAdapter<CouponItemSearchResult>() {
           @Override
           public void write(JsonWriter out, CouponItemSearchResult value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CouponItemSearchResult read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CouponItemSearchResult given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CouponItemSearchResult
  * @throws IOException if the JSON string is invalid with respect to CouponItemSearchResult
  */
  public static CouponItemSearchResult fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CouponItemSearchResult.class);
  }

 /**
  * Convert an instance of CouponItemSearchResult to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

