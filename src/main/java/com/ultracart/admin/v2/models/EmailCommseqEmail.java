/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * EmailCommseqEmail
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-12-14T09:01:57.671-05:00")



public class EmailCommseqEmail {
  @SerializedName("deleted")
  private Boolean deleted = null;

  @SerializedName("edited_by_user")
  private String editedByUser = null;

  @SerializedName("email_communication_sequence_email_uuid")
  private String emailCommunicationSequenceEmailUuid = null;

  @SerializedName("email_communication_sequence_uuid")
  private String emailCommunicationSequenceUuid = null;

  @SerializedName("email_container_cjson")
  private String emailContainerCjson = null;

  @SerializedName("email_container_cjson_last_modified_dts")
  private String emailContainerCjsonLastModifiedDts = null;

  @SerializedName("email_template_vm_path")
  private String emailTemplateVmPath = null;

  @SerializedName("filter_profile_equation_json")
  private String filterProfileEquationJson = null;

  @SerializedName("individually_render")
  private Boolean individuallyRender = null;

  @SerializedName("library_item_oid")
  private Integer libraryItemOid = null;

  @SerializedName("merchant_id")
  private String merchantId = null;

  @SerializedName("pending_review")
  private Boolean pendingReview = null;

  @SerializedName("preview_text")
  private String previewText = null;

  @SerializedName("rejected")
  private Boolean rejected = null;

  @SerializedName("requires_review")
  private Boolean requiresReview = null;

  @SerializedName("screenshot_large_full_url")
  private String screenshotLargeFullUrl = null;

  @SerializedName("screenshot_large_viewport_url")
  private String screenshotLargeViewportUrl = null;

  @SerializedName("screenshot_small_full_url")
  private String screenshotSmallFullUrl = null;

  @SerializedName("screenshot_small_viewport_url")
  private String screenshotSmallViewportUrl = null;

  @SerializedName("smart_sending")
  private Boolean smartSending = null;

  @SerializedName("storefront_oid")
  private Integer storefrontOid = null;

  @SerializedName("subject")
  private String subject = null;

  @SerializedName("suspended_for_spam")
  private Boolean suspendedForSpam = null;

  @SerializedName("transactional_email")
  private Boolean transactionalEmail = null;

  @SerializedName("version")
  private Integer version = null;

  public EmailCommseqEmail deleted(Boolean deleted) {
    this.deleted = deleted;
    return this;
  }

   /**
   * Deleted
   * @return deleted
  **/
  @ApiModelProperty(value = "Deleted")
  public Boolean isDeleted() {
    return deleted;
  }

  public void setDeleted(Boolean deleted) {
    this.deleted = deleted;
  }

  public EmailCommseqEmail editedByUser(String editedByUser) {
    this.editedByUser = editedByUser;
    return this;
  }

   /**
   * Edited by user
   * @return editedByUser
  **/
  @ApiModelProperty(value = "Edited by user")
  public String getEditedByUser() {
    return editedByUser;
  }

  public void setEditedByUser(String editedByUser) {
    this.editedByUser = editedByUser;
  }

  public EmailCommseqEmail emailCommunicationSequenceEmailUuid(String emailCommunicationSequenceEmailUuid) {
    this.emailCommunicationSequenceEmailUuid = emailCommunicationSequenceEmailUuid;
    return this;
  }

   /**
   * Email communication sequence email uuid
   * @return emailCommunicationSequenceEmailUuid
  **/
  @ApiModelProperty(value = "Email communication sequence email uuid")
  public String getEmailCommunicationSequenceEmailUuid() {
    return emailCommunicationSequenceEmailUuid;
  }

  public void setEmailCommunicationSequenceEmailUuid(String emailCommunicationSequenceEmailUuid) {
    this.emailCommunicationSequenceEmailUuid = emailCommunicationSequenceEmailUuid;
  }

  public EmailCommseqEmail emailCommunicationSequenceUuid(String emailCommunicationSequenceUuid) {
    this.emailCommunicationSequenceUuid = emailCommunicationSequenceUuid;
    return this;
  }

   /**
   * Email commseq UUID
   * @return emailCommunicationSequenceUuid
  **/
  @ApiModelProperty(value = "Email commseq UUID")
  public String getEmailCommunicationSequenceUuid() {
    return emailCommunicationSequenceUuid;
  }

  public void setEmailCommunicationSequenceUuid(String emailCommunicationSequenceUuid) {
    this.emailCommunicationSequenceUuid = emailCommunicationSequenceUuid;
  }

  public EmailCommseqEmail emailContainerCjson(String emailContainerCjson) {
    this.emailContainerCjson = emailContainerCjson;
    return this;
  }

   /**
   * Email container cjson
   * @return emailContainerCjson
  **/
  @ApiModelProperty(value = "Email container cjson")
  public String getEmailContainerCjson() {
    return emailContainerCjson;
  }

  public void setEmailContainerCjson(String emailContainerCjson) {
    this.emailContainerCjson = emailContainerCjson;
  }

  public EmailCommseqEmail emailContainerCjsonLastModifiedDts(String emailContainerCjsonLastModifiedDts) {
    this.emailContainerCjsonLastModifiedDts = emailContainerCjsonLastModifiedDts;
    return this;
  }

   /**
   * Timestamp the last time the container was modified.
   * @return emailContainerCjsonLastModifiedDts
  **/
  @ApiModelProperty(value = "Timestamp the last time the container was modified.")
  public String getEmailContainerCjsonLastModifiedDts() {
    return emailContainerCjsonLastModifiedDts;
  }

  public void setEmailContainerCjsonLastModifiedDts(String emailContainerCjsonLastModifiedDts) {
    this.emailContainerCjsonLastModifiedDts = emailContainerCjsonLastModifiedDts;
  }

  public EmailCommseqEmail emailTemplateVmPath(String emailTemplateVmPath) {
    this.emailTemplateVmPath = emailTemplateVmPath;
    return this;
  }

   /**
   * Email template virtual path
   * @return emailTemplateVmPath
  **/
  @ApiModelProperty(value = "Email template virtual path")
  public String getEmailTemplateVmPath() {
    return emailTemplateVmPath;
  }

  public void setEmailTemplateVmPath(String emailTemplateVmPath) {
    this.emailTemplateVmPath = emailTemplateVmPath;
  }

  public EmailCommseqEmail filterProfileEquationJson(String filterProfileEquationJson) {
    this.filterProfileEquationJson = filterProfileEquationJson;
    return this;
  }

   /**
   * Filter profile equation json
   * @return filterProfileEquationJson
  **/
  @ApiModelProperty(value = "Filter profile equation json")
  public String getFilterProfileEquationJson() {
    return filterProfileEquationJson;
  }

  public void setFilterProfileEquationJson(String filterProfileEquationJson) {
    this.filterProfileEquationJson = filterProfileEquationJson;
  }

  public EmailCommseqEmail individuallyRender(Boolean individuallyRender) {
    this.individuallyRender = individuallyRender;
    return this;
  }

   /**
   * Individually render
   * @return individuallyRender
  **/
  @ApiModelProperty(value = "Individually render")
  public Boolean isIndividuallyRender() {
    return individuallyRender;
  }

  public void setIndividuallyRender(Boolean individuallyRender) {
    this.individuallyRender = individuallyRender;
  }

  public EmailCommseqEmail libraryItemOid(Integer libraryItemOid) {
    this.libraryItemOid = libraryItemOid;
    return this;
  }

   /**
   * If this item was ever added to the Code Library, this is the oid for that library item, or 0 if never added before.  This value is used to determine if a library item should be inserted or updated.
   * @return libraryItemOid
  **/
  @ApiModelProperty(value = "If this item was ever added to the Code Library, this is the oid for that library item, or 0 if never added before.  This value is used to determine if a library item should be inserted or updated.")
  public Integer getLibraryItemOid() {
    return libraryItemOid;
  }

  public void setLibraryItemOid(Integer libraryItemOid) {
    this.libraryItemOid = libraryItemOid;
  }

  public EmailCommseqEmail merchantId(String merchantId) {
    this.merchantId = merchantId;
    return this;
  }

   /**
   * Merchant ID
   * @return merchantId
  **/
  @ApiModelProperty(value = "Merchant ID")
  public String getMerchantId() {
    return merchantId;
  }

  public void setMerchantId(String merchantId) {
    this.merchantId = merchantId;
  }

  public EmailCommseqEmail pendingReview(Boolean pendingReview) {
    this.pendingReview = pendingReview;
    return this;
  }

   /**
   * True if the content of this email is pending review by UltraCart
   * @return pendingReview
  **/
  @ApiModelProperty(value = "True if the content of this email is pending review by UltraCart")
  public Boolean isPendingReview() {
    return pendingReview;
  }

  public void setPendingReview(Boolean pendingReview) {
    this.pendingReview = pendingReview;
  }

  public EmailCommseqEmail previewText(String previewText) {
    this.previewText = previewText;
    return this;
  }

   /**
   * Preview text
   * @return previewText
  **/
  @ApiModelProperty(value = "Preview text")
  public String getPreviewText() {
    return previewText;
  }

  public void setPreviewText(String previewText) {
    this.previewText = previewText;
  }

  public EmailCommseqEmail rejected(Boolean rejected) {
    this.rejected = rejected;
    return this;
  }

   /**
   * True if the content of this email was rejected during review by UltraCart
   * @return rejected
  **/
  @ApiModelProperty(value = "True if the content of this email was rejected during review by UltraCart")
  public Boolean isRejected() {
    return rejected;
  }

  public void setRejected(Boolean rejected) {
    this.rejected = rejected;
  }

  public EmailCommseqEmail requiresReview(Boolean requiresReview) {
    this.requiresReview = requiresReview;
    return this;
  }

   /**
   * True if the content of this email is requires review by UltraCart
   * @return requiresReview
  **/
  @ApiModelProperty(value = "True if the content of this email is requires review by UltraCart")
  public Boolean isRequiresReview() {
    return requiresReview;
  }

  public void setRequiresReview(Boolean requiresReview) {
    this.requiresReview = requiresReview;
  }

  public EmailCommseqEmail screenshotLargeFullUrl(String screenshotLargeFullUrl) {
    this.screenshotLargeFullUrl = screenshotLargeFullUrl;
    return this;
  }

   /**
   * URL to screenshot in large form factor full page
   * @return screenshotLargeFullUrl
  **/
  @ApiModelProperty(value = "URL to screenshot in large form factor full page")
  public String getScreenshotLargeFullUrl() {
    return screenshotLargeFullUrl;
  }

  public void setScreenshotLargeFullUrl(String screenshotLargeFullUrl) {
    this.screenshotLargeFullUrl = screenshotLargeFullUrl;
  }

  public EmailCommseqEmail screenshotLargeViewportUrl(String screenshotLargeViewportUrl) {
    this.screenshotLargeViewportUrl = screenshotLargeViewportUrl;
    return this;
  }

   /**
   * URL to screenshot in large form factor viewport
   * @return screenshotLargeViewportUrl
  **/
  @ApiModelProperty(value = "URL to screenshot in large form factor viewport")
  public String getScreenshotLargeViewportUrl() {
    return screenshotLargeViewportUrl;
  }

  public void setScreenshotLargeViewportUrl(String screenshotLargeViewportUrl) {
    this.screenshotLargeViewportUrl = screenshotLargeViewportUrl;
  }

  public EmailCommseqEmail screenshotSmallFullUrl(String screenshotSmallFullUrl) {
    this.screenshotSmallFullUrl = screenshotSmallFullUrl;
    return this;
  }

   /**
   * URL to screenshot in small form factor full page
   * @return screenshotSmallFullUrl
  **/
  @ApiModelProperty(value = "URL to screenshot in small form factor full page")
  public String getScreenshotSmallFullUrl() {
    return screenshotSmallFullUrl;
  }

  public void setScreenshotSmallFullUrl(String screenshotSmallFullUrl) {
    this.screenshotSmallFullUrl = screenshotSmallFullUrl;
  }

  public EmailCommseqEmail screenshotSmallViewportUrl(String screenshotSmallViewportUrl) {
    this.screenshotSmallViewportUrl = screenshotSmallViewportUrl;
    return this;
  }

   /**
   * URL to screenshot in small form factor viewport
   * @return screenshotSmallViewportUrl
  **/
  @ApiModelProperty(value = "URL to screenshot in small form factor viewport")
  public String getScreenshotSmallViewportUrl() {
    return screenshotSmallViewportUrl;
  }

  public void setScreenshotSmallViewportUrl(String screenshotSmallViewportUrl) {
    this.screenshotSmallViewportUrl = screenshotSmallViewportUrl;
  }

  public EmailCommseqEmail smartSending(Boolean smartSending) {
    this.smartSending = smartSending;
    return this;
  }

   /**
   * Smart sending
   * @return smartSending
  **/
  @ApiModelProperty(value = "Smart sending")
  public Boolean isSmartSending() {
    return smartSending;
  }

  public void setSmartSending(Boolean smartSending) {
    this.smartSending = smartSending;
  }

  public EmailCommseqEmail storefrontOid(Integer storefrontOid) {
    this.storefrontOid = storefrontOid;
    return this;
  }

   /**
   * Storefront oid
   * @return storefrontOid
  **/
  @ApiModelProperty(value = "Storefront oid")
  public Integer getStorefrontOid() {
    return storefrontOid;
  }

  public void setStorefrontOid(Integer storefrontOid) {
    this.storefrontOid = storefrontOid;
  }

  public EmailCommseqEmail subject(String subject) {
    this.subject = subject;
    return this;
  }

   /**
   * Subject
   * @return subject
  **/
  @ApiModelProperty(value = "Subject")
  public String getSubject() {
    return subject;
  }

  public void setSubject(String subject) {
    this.subject = subject;
  }

  public EmailCommseqEmail suspendedForSpam(Boolean suspendedForSpam) {
    this.suspendedForSpam = suspendedForSpam;
    return this;
  }

   /**
   * True if the email was suspended for too high of a spam rate.
   * @return suspendedForSpam
  **/
  @ApiModelProperty(value = "True if the email was suspended for too high of a spam rate.")
  public Boolean isSuspendedForSpam() {
    return suspendedForSpam;
  }

  public void setSuspendedForSpam(Boolean suspendedForSpam) {
    this.suspendedForSpam = suspendedForSpam;
  }

  public EmailCommseqEmail transactionalEmail(Boolean transactionalEmail) {
    this.transactionalEmail = transactionalEmail;
    return this;
  }

   /**
   * Transactional email
   * @return transactionalEmail
  **/
  @ApiModelProperty(value = "Transactional email")
  public Boolean isTransactionalEmail() {
    return transactionalEmail;
  }

  public void setTransactionalEmail(Boolean transactionalEmail) {
    this.transactionalEmail = transactionalEmail;
  }

  public EmailCommseqEmail version(Integer version) {
    this.version = version;
    return this;
  }

   /**
   * Version
   * @return version
  **/
  @ApiModelProperty(value = "Version")
  public Integer getVersion() {
    return version;
  }

  public void setVersion(Integer version) {
    this.version = version;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmailCommseqEmail emailCommseqEmail = (EmailCommseqEmail) o;
    return Objects.equals(this.deleted, emailCommseqEmail.deleted) &&
        Objects.equals(this.editedByUser, emailCommseqEmail.editedByUser) &&
        Objects.equals(this.emailCommunicationSequenceEmailUuid, emailCommseqEmail.emailCommunicationSequenceEmailUuid) &&
        Objects.equals(this.emailCommunicationSequenceUuid, emailCommseqEmail.emailCommunicationSequenceUuid) &&
        Objects.equals(this.emailContainerCjson, emailCommseqEmail.emailContainerCjson) &&
        Objects.equals(this.emailContainerCjsonLastModifiedDts, emailCommseqEmail.emailContainerCjsonLastModifiedDts) &&
        Objects.equals(this.emailTemplateVmPath, emailCommseqEmail.emailTemplateVmPath) &&
        Objects.equals(this.filterProfileEquationJson, emailCommseqEmail.filterProfileEquationJson) &&
        Objects.equals(this.individuallyRender, emailCommseqEmail.individuallyRender) &&
        Objects.equals(this.libraryItemOid, emailCommseqEmail.libraryItemOid) &&
        Objects.equals(this.merchantId, emailCommseqEmail.merchantId) &&
        Objects.equals(this.pendingReview, emailCommseqEmail.pendingReview) &&
        Objects.equals(this.previewText, emailCommseqEmail.previewText) &&
        Objects.equals(this.rejected, emailCommseqEmail.rejected) &&
        Objects.equals(this.requiresReview, emailCommseqEmail.requiresReview) &&
        Objects.equals(this.screenshotLargeFullUrl, emailCommseqEmail.screenshotLargeFullUrl) &&
        Objects.equals(this.screenshotLargeViewportUrl, emailCommseqEmail.screenshotLargeViewportUrl) &&
        Objects.equals(this.screenshotSmallFullUrl, emailCommseqEmail.screenshotSmallFullUrl) &&
        Objects.equals(this.screenshotSmallViewportUrl, emailCommseqEmail.screenshotSmallViewportUrl) &&
        Objects.equals(this.smartSending, emailCommseqEmail.smartSending) &&
        Objects.equals(this.storefrontOid, emailCommseqEmail.storefrontOid) &&
        Objects.equals(this.subject, emailCommseqEmail.subject) &&
        Objects.equals(this.suspendedForSpam, emailCommseqEmail.suspendedForSpam) &&
        Objects.equals(this.transactionalEmail, emailCommseqEmail.transactionalEmail) &&
        Objects.equals(this.version, emailCommseqEmail.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deleted, editedByUser, emailCommunicationSequenceEmailUuid, emailCommunicationSequenceUuid, emailContainerCjson, emailContainerCjsonLastModifiedDts, emailTemplateVmPath, filterProfileEquationJson, individuallyRender, libraryItemOid, merchantId, pendingReview, previewText, rejected, requiresReview, screenshotLargeFullUrl, screenshotLargeViewportUrl, screenshotSmallFullUrl, screenshotSmallViewportUrl, smartSending, storefrontOid, subject, suspendedForSpam, transactionalEmail, version);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmailCommseqEmail {\n");
    
    sb.append("    deleted: ").append(toIndentedString(deleted)).append("\n");
    sb.append("    editedByUser: ").append(toIndentedString(editedByUser)).append("\n");
    sb.append("    emailCommunicationSequenceEmailUuid: ").append(toIndentedString(emailCommunicationSequenceEmailUuid)).append("\n");
    sb.append("    emailCommunicationSequenceUuid: ").append(toIndentedString(emailCommunicationSequenceUuid)).append("\n");
    sb.append("    emailContainerCjson: ").append(toIndentedString(emailContainerCjson)).append("\n");
    sb.append("    emailContainerCjsonLastModifiedDts: ").append(toIndentedString(emailContainerCjsonLastModifiedDts)).append("\n");
    sb.append("    emailTemplateVmPath: ").append(toIndentedString(emailTemplateVmPath)).append("\n");
    sb.append("    filterProfileEquationJson: ").append(toIndentedString(filterProfileEquationJson)).append("\n");
    sb.append("    individuallyRender: ").append(toIndentedString(individuallyRender)).append("\n");
    sb.append("    libraryItemOid: ").append(toIndentedString(libraryItemOid)).append("\n");
    sb.append("    merchantId: ").append(toIndentedString(merchantId)).append("\n");
    sb.append("    pendingReview: ").append(toIndentedString(pendingReview)).append("\n");
    sb.append("    previewText: ").append(toIndentedString(previewText)).append("\n");
    sb.append("    rejected: ").append(toIndentedString(rejected)).append("\n");
    sb.append("    requiresReview: ").append(toIndentedString(requiresReview)).append("\n");
    sb.append("    screenshotLargeFullUrl: ").append(toIndentedString(screenshotLargeFullUrl)).append("\n");
    sb.append("    screenshotLargeViewportUrl: ").append(toIndentedString(screenshotLargeViewportUrl)).append("\n");
    sb.append("    screenshotSmallFullUrl: ").append(toIndentedString(screenshotSmallFullUrl)).append("\n");
    sb.append("    screenshotSmallViewportUrl: ").append(toIndentedString(screenshotSmallViewportUrl)).append("\n");
    sb.append("    smartSending: ").append(toIndentedString(smartSending)).append("\n");
    sb.append("    storefrontOid: ").append(toIndentedString(storefrontOid)).append("\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    suspendedForSpam: ").append(toIndentedString(suspendedForSpam)).append("\n");
    sb.append("    transactionalEmail: ").append(toIndentedString(transactionalEmail)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

