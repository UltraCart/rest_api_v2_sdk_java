/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * EmailCommseqEmail
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-01-31T16:08:09.844-05:00[America/Indianapolis]")
public class EmailCommseqEmail {
  public static final String SERIALIZED_NAME_DELETED = "deleted";
  @SerializedName(SERIALIZED_NAME_DELETED)
  private Boolean deleted;

  public static final String SERIALIZED_NAME_EDITED_BY_USER = "edited_by_user";
  @SerializedName(SERIALIZED_NAME_EDITED_BY_USER)
  private String editedByUser;

  public static final String SERIALIZED_NAME_EMAIL_COMMUNICATION_SEQUENCE_EMAIL_UUID = "email_communication_sequence_email_uuid";
  @SerializedName(SERIALIZED_NAME_EMAIL_COMMUNICATION_SEQUENCE_EMAIL_UUID)
  private String emailCommunicationSequenceEmailUuid;

  public static final String SERIALIZED_NAME_EMAIL_COMMUNICATION_SEQUENCE_UUID = "email_communication_sequence_uuid";
  @SerializedName(SERIALIZED_NAME_EMAIL_COMMUNICATION_SEQUENCE_UUID)
  private String emailCommunicationSequenceUuid;

  public static final String SERIALIZED_NAME_EMAIL_CONTAINER_CJSON = "email_container_cjson";
  @SerializedName(SERIALIZED_NAME_EMAIL_CONTAINER_CJSON)
  private String emailContainerCjson;

  public static final String SERIALIZED_NAME_EMAIL_CONTAINER_CJSON_LAST_MODIFIED_DTS = "email_container_cjson_last_modified_dts";
  @SerializedName(SERIALIZED_NAME_EMAIL_CONTAINER_CJSON_LAST_MODIFIED_DTS)
  private String emailContainerCjsonLastModifiedDts;

  public static final String SERIALIZED_NAME_EMAIL_TEMPLATE_VM_PATH = "email_template_vm_path";
  @SerializedName(SERIALIZED_NAME_EMAIL_TEMPLATE_VM_PATH)
  private String emailTemplateVmPath;

  public static final String SERIALIZED_NAME_FILTER_PROFILE_EQUATION_JSON = "filter_profile_equation_json";
  @SerializedName(SERIALIZED_NAME_FILTER_PROFILE_EQUATION_JSON)
  private String filterProfileEquationJson;

  public static final String SERIALIZED_NAME_INDIVIDUALLY_RENDER = "individually_render";
  @SerializedName(SERIALIZED_NAME_INDIVIDUALLY_RENDER)
  private Boolean individuallyRender;

  public static final String SERIALIZED_NAME_LIBRARY_ITEM_OID = "library_item_oid";
  @SerializedName(SERIALIZED_NAME_LIBRARY_ITEM_OID)
  private Integer libraryItemOid;

  public static final String SERIALIZED_NAME_MAGIC_LINK = "magic_link";
  @SerializedName(SERIALIZED_NAME_MAGIC_LINK)
  private Boolean magicLink;

  public static final String SERIALIZED_NAME_MERCHANT_ID = "merchant_id";
  @SerializedName(SERIALIZED_NAME_MERCHANT_ID)
  private String merchantId;

  public static final String SERIALIZED_NAME_PENDING_REVIEW = "pending_review";
  @SerializedName(SERIALIZED_NAME_PENDING_REVIEW)
  private Boolean pendingReview;

  public static final String SERIALIZED_NAME_PREVIEW_TEXT = "preview_text";
  @SerializedName(SERIALIZED_NAME_PREVIEW_TEXT)
  private String previewText;

  public static final String SERIALIZED_NAME_REJECTED = "rejected";
  @SerializedName(SERIALIZED_NAME_REJECTED)
  private Boolean rejected;

  public static final String SERIALIZED_NAME_REQUIRES_REVIEW = "requires_review";
  @SerializedName(SERIALIZED_NAME_REQUIRES_REVIEW)
  private Boolean requiresReview;

  public static final String SERIALIZED_NAME_SCREENSHOT_LARGE_FULL_URL = "screenshot_large_full_url";
  @SerializedName(SERIALIZED_NAME_SCREENSHOT_LARGE_FULL_URL)
  private String screenshotLargeFullUrl;

  public static final String SERIALIZED_NAME_SCREENSHOT_LARGE_VIEWPORT_URL = "screenshot_large_viewport_url";
  @SerializedName(SERIALIZED_NAME_SCREENSHOT_LARGE_VIEWPORT_URL)
  private String screenshotLargeViewportUrl;

  public static final String SERIALIZED_NAME_SCREENSHOT_SMALL_FULL_URL = "screenshot_small_full_url";
  @SerializedName(SERIALIZED_NAME_SCREENSHOT_SMALL_FULL_URL)
  private String screenshotSmallFullUrl;

  public static final String SERIALIZED_NAME_SCREENSHOT_SMALL_VIEWPORT_URL = "screenshot_small_viewport_url";
  @SerializedName(SERIALIZED_NAME_SCREENSHOT_SMALL_VIEWPORT_URL)
  private String screenshotSmallViewportUrl;

  public static final String SERIALIZED_NAME_SMART_SENDING = "smart_sending";
  @SerializedName(SERIALIZED_NAME_SMART_SENDING)
  private Boolean smartSending;

  public static final String SERIALIZED_NAME_STOREFRONT_OID = "storefront_oid";
  @SerializedName(SERIALIZED_NAME_STOREFRONT_OID)
  private Integer storefrontOid;

  public static final String SERIALIZED_NAME_SUBJECT = "subject";
  @SerializedName(SERIALIZED_NAME_SUBJECT)
  private String subject;

  public static final String SERIALIZED_NAME_SUSPENDED_FOR_SPAM = "suspended_for_spam";
  @SerializedName(SERIALIZED_NAME_SUSPENDED_FOR_SPAM)
  private Boolean suspendedForSpam;

  public static final String SERIALIZED_NAME_TRANSACTIONAL_EMAIL = "transactional_email";
  @SerializedName(SERIALIZED_NAME_TRANSACTIONAL_EMAIL)
  private Boolean transactionalEmail;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private Integer version;

  public EmailCommseqEmail() { 
  }

  public EmailCommseqEmail deleted(Boolean deleted) {
    
    this.deleted = deleted;
    return this;
  }

   /**
   * Deleted
   * @return deleted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Deleted")

  public Boolean getDeleted() {
    return deleted;
  }


  public void setDeleted(Boolean deleted) {
    this.deleted = deleted;
  }


  public EmailCommseqEmail editedByUser(String editedByUser) {
    
    this.editedByUser = editedByUser;
    return this;
  }

   /**
   * Edited by user
   * @return editedByUser
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Edited by user")

  public String getEditedByUser() {
    return editedByUser;
  }


  public void setEditedByUser(String editedByUser) {
    this.editedByUser = editedByUser;
  }


  public EmailCommseqEmail emailCommunicationSequenceEmailUuid(String emailCommunicationSequenceEmailUuid) {
    
    this.emailCommunicationSequenceEmailUuid = emailCommunicationSequenceEmailUuid;
    return this;
  }

   /**
   * Email communication sequence email uuid
   * @return emailCommunicationSequenceEmailUuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Email communication sequence email uuid")

  public String getEmailCommunicationSequenceEmailUuid() {
    return emailCommunicationSequenceEmailUuid;
  }


  public void setEmailCommunicationSequenceEmailUuid(String emailCommunicationSequenceEmailUuid) {
    this.emailCommunicationSequenceEmailUuid = emailCommunicationSequenceEmailUuid;
  }


  public EmailCommseqEmail emailCommunicationSequenceUuid(String emailCommunicationSequenceUuid) {
    
    this.emailCommunicationSequenceUuid = emailCommunicationSequenceUuid;
    return this;
  }

   /**
   * Email commseq UUID
   * @return emailCommunicationSequenceUuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Email commseq UUID")

  public String getEmailCommunicationSequenceUuid() {
    return emailCommunicationSequenceUuid;
  }


  public void setEmailCommunicationSequenceUuid(String emailCommunicationSequenceUuid) {
    this.emailCommunicationSequenceUuid = emailCommunicationSequenceUuid;
  }


  public EmailCommseqEmail emailContainerCjson(String emailContainerCjson) {
    
    this.emailContainerCjson = emailContainerCjson;
    return this;
  }

   /**
   * Email container cjson
   * @return emailContainerCjson
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Email container cjson")

  public String getEmailContainerCjson() {
    return emailContainerCjson;
  }


  public void setEmailContainerCjson(String emailContainerCjson) {
    this.emailContainerCjson = emailContainerCjson;
  }


  public EmailCommseqEmail emailContainerCjsonLastModifiedDts(String emailContainerCjsonLastModifiedDts) {
    
    this.emailContainerCjsonLastModifiedDts = emailContainerCjsonLastModifiedDts;
    return this;
  }

   /**
   * Timestamp the last time the container was modified.
   * @return emailContainerCjsonLastModifiedDts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Timestamp the last time the container was modified.")

  public String getEmailContainerCjsonLastModifiedDts() {
    return emailContainerCjsonLastModifiedDts;
  }


  public void setEmailContainerCjsonLastModifiedDts(String emailContainerCjsonLastModifiedDts) {
    this.emailContainerCjsonLastModifiedDts = emailContainerCjsonLastModifiedDts;
  }


  public EmailCommseqEmail emailTemplateVmPath(String emailTemplateVmPath) {
    
    this.emailTemplateVmPath = emailTemplateVmPath;
    return this;
  }

   /**
   * Email template virtual path
   * @return emailTemplateVmPath
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Email template virtual path")

  public String getEmailTemplateVmPath() {
    return emailTemplateVmPath;
  }


  public void setEmailTemplateVmPath(String emailTemplateVmPath) {
    this.emailTemplateVmPath = emailTemplateVmPath;
  }


  public EmailCommseqEmail filterProfileEquationJson(String filterProfileEquationJson) {
    
    this.filterProfileEquationJson = filterProfileEquationJson;
    return this;
  }

   /**
   * Filter profile equation json
   * @return filterProfileEquationJson
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Filter profile equation json")

  public String getFilterProfileEquationJson() {
    return filterProfileEquationJson;
  }


  public void setFilterProfileEquationJson(String filterProfileEquationJson) {
    this.filterProfileEquationJson = filterProfileEquationJson;
  }


  public EmailCommseqEmail individuallyRender(Boolean individuallyRender) {
    
    this.individuallyRender = individuallyRender;
    return this;
  }

   /**
   * Individually render
   * @return individuallyRender
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Individually render")

  public Boolean getIndividuallyRender() {
    return individuallyRender;
  }


  public void setIndividuallyRender(Boolean individuallyRender) {
    this.individuallyRender = individuallyRender;
  }


  public EmailCommseqEmail libraryItemOid(Integer libraryItemOid) {
    
    this.libraryItemOid = libraryItemOid;
    return this;
  }

   /**
   * If this item was ever added to the Code Library, this is the oid for that library item, or 0 if never added before.  This value is used to determine if a library item should be inserted or updated.
   * @return libraryItemOid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If this item was ever added to the Code Library, this is the oid for that library item, or 0 if never added before.  This value is used to determine if a library item should be inserted or updated.")

  public Integer getLibraryItemOid() {
    return libraryItemOid;
  }


  public void setLibraryItemOid(Integer libraryItemOid) {
    this.libraryItemOid = libraryItemOid;
  }


  public EmailCommseqEmail magicLink(Boolean magicLink) {
    
    this.magicLink = magicLink;
    return this;
  }

   /**
   * True if email links should contain magic link tokens to log the customer in automatically
   * @return magicLink
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if email links should contain magic link tokens to log the customer in automatically")

  public Boolean getMagicLink() {
    return magicLink;
  }


  public void setMagicLink(Boolean magicLink) {
    this.magicLink = magicLink;
  }


  public EmailCommseqEmail merchantId(String merchantId) {
    
    this.merchantId = merchantId;
    return this;
  }

   /**
   * Merchant ID
   * @return merchantId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Merchant ID")

  public String getMerchantId() {
    return merchantId;
  }


  public void setMerchantId(String merchantId) {
    this.merchantId = merchantId;
  }


  public EmailCommseqEmail pendingReview(Boolean pendingReview) {
    
    this.pendingReview = pendingReview;
    return this;
  }

   /**
   * True if the content of this email is pending review by UltraCart
   * @return pendingReview
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if the content of this email is pending review by UltraCart")

  public Boolean getPendingReview() {
    return pendingReview;
  }


  public void setPendingReview(Boolean pendingReview) {
    this.pendingReview = pendingReview;
  }


  public EmailCommseqEmail previewText(String previewText) {
    
    this.previewText = previewText;
    return this;
  }

   /**
   * Preview text
   * @return previewText
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Preview text")

  public String getPreviewText() {
    return previewText;
  }


  public void setPreviewText(String previewText) {
    this.previewText = previewText;
  }


  public EmailCommseqEmail rejected(Boolean rejected) {
    
    this.rejected = rejected;
    return this;
  }

   /**
   * True if the content of this email was rejected during review by UltraCart
   * @return rejected
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if the content of this email was rejected during review by UltraCart")

  public Boolean getRejected() {
    return rejected;
  }


  public void setRejected(Boolean rejected) {
    this.rejected = rejected;
  }


  public EmailCommseqEmail requiresReview(Boolean requiresReview) {
    
    this.requiresReview = requiresReview;
    return this;
  }

   /**
   * True if the content of this email is requires review by UltraCart
   * @return requiresReview
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if the content of this email is requires review by UltraCart")

  public Boolean getRequiresReview() {
    return requiresReview;
  }


  public void setRequiresReview(Boolean requiresReview) {
    this.requiresReview = requiresReview;
  }


  public EmailCommseqEmail screenshotLargeFullUrl(String screenshotLargeFullUrl) {
    
    this.screenshotLargeFullUrl = screenshotLargeFullUrl;
    return this;
  }

   /**
   * URL to screenshot in large form factor full page
   * @return screenshotLargeFullUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "URL to screenshot in large form factor full page")

  public String getScreenshotLargeFullUrl() {
    return screenshotLargeFullUrl;
  }


  public void setScreenshotLargeFullUrl(String screenshotLargeFullUrl) {
    this.screenshotLargeFullUrl = screenshotLargeFullUrl;
  }


  public EmailCommseqEmail screenshotLargeViewportUrl(String screenshotLargeViewportUrl) {
    
    this.screenshotLargeViewportUrl = screenshotLargeViewportUrl;
    return this;
  }

   /**
   * URL to screenshot in large form factor viewport
   * @return screenshotLargeViewportUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "URL to screenshot in large form factor viewport")

  public String getScreenshotLargeViewportUrl() {
    return screenshotLargeViewportUrl;
  }


  public void setScreenshotLargeViewportUrl(String screenshotLargeViewportUrl) {
    this.screenshotLargeViewportUrl = screenshotLargeViewportUrl;
  }


  public EmailCommseqEmail screenshotSmallFullUrl(String screenshotSmallFullUrl) {
    
    this.screenshotSmallFullUrl = screenshotSmallFullUrl;
    return this;
  }

   /**
   * URL to screenshot in small form factor full page
   * @return screenshotSmallFullUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "URL to screenshot in small form factor full page")

  public String getScreenshotSmallFullUrl() {
    return screenshotSmallFullUrl;
  }


  public void setScreenshotSmallFullUrl(String screenshotSmallFullUrl) {
    this.screenshotSmallFullUrl = screenshotSmallFullUrl;
  }


  public EmailCommseqEmail screenshotSmallViewportUrl(String screenshotSmallViewportUrl) {
    
    this.screenshotSmallViewportUrl = screenshotSmallViewportUrl;
    return this;
  }

   /**
   * URL to screenshot in small form factor viewport
   * @return screenshotSmallViewportUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "URL to screenshot in small form factor viewport")

  public String getScreenshotSmallViewportUrl() {
    return screenshotSmallViewportUrl;
  }


  public void setScreenshotSmallViewportUrl(String screenshotSmallViewportUrl) {
    this.screenshotSmallViewportUrl = screenshotSmallViewportUrl;
  }


  public EmailCommseqEmail smartSending(Boolean smartSending) {
    
    this.smartSending = smartSending;
    return this;
  }

   /**
   * Smart sending
   * @return smartSending
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Smart sending")

  public Boolean getSmartSending() {
    return smartSending;
  }


  public void setSmartSending(Boolean smartSending) {
    this.smartSending = smartSending;
  }


  public EmailCommseqEmail storefrontOid(Integer storefrontOid) {
    
    this.storefrontOid = storefrontOid;
    return this;
  }

   /**
   * Storefront oid
   * @return storefrontOid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Storefront oid")

  public Integer getStorefrontOid() {
    return storefrontOid;
  }


  public void setStorefrontOid(Integer storefrontOid) {
    this.storefrontOid = storefrontOid;
  }


  public EmailCommseqEmail subject(String subject) {
    
    this.subject = subject;
    return this;
  }

   /**
   * Subject
   * @return subject
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Subject")

  public String getSubject() {
    return subject;
  }


  public void setSubject(String subject) {
    this.subject = subject;
  }


  public EmailCommseqEmail suspendedForSpam(Boolean suspendedForSpam) {
    
    this.suspendedForSpam = suspendedForSpam;
    return this;
  }

   /**
   * True if the email was suspended for too high of a spam rate.
   * @return suspendedForSpam
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if the email was suspended for too high of a spam rate.")

  public Boolean getSuspendedForSpam() {
    return suspendedForSpam;
  }


  public void setSuspendedForSpam(Boolean suspendedForSpam) {
    this.suspendedForSpam = suspendedForSpam;
  }


  public EmailCommseqEmail transactionalEmail(Boolean transactionalEmail) {
    
    this.transactionalEmail = transactionalEmail;
    return this;
  }

   /**
   * Transactional email
   * @return transactionalEmail
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Transactional email")

  public Boolean getTransactionalEmail() {
    return transactionalEmail;
  }


  public void setTransactionalEmail(Boolean transactionalEmail) {
    this.transactionalEmail = transactionalEmail;
  }


  public EmailCommseqEmail version(Integer version) {
    
    this.version = version;
    return this;
  }

   /**
   * Version
   * @return version
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Version")

  public Integer getVersion() {
    return version;
  }


  public void setVersion(Integer version) {
    this.version = version;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmailCommseqEmail emailCommseqEmail = (EmailCommseqEmail) o;
    return Objects.equals(this.deleted, emailCommseqEmail.deleted) &&
        Objects.equals(this.editedByUser, emailCommseqEmail.editedByUser) &&
        Objects.equals(this.emailCommunicationSequenceEmailUuid, emailCommseqEmail.emailCommunicationSequenceEmailUuid) &&
        Objects.equals(this.emailCommunicationSequenceUuid, emailCommseqEmail.emailCommunicationSequenceUuid) &&
        Objects.equals(this.emailContainerCjson, emailCommseqEmail.emailContainerCjson) &&
        Objects.equals(this.emailContainerCjsonLastModifiedDts, emailCommseqEmail.emailContainerCjsonLastModifiedDts) &&
        Objects.equals(this.emailTemplateVmPath, emailCommseqEmail.emailTemplateVmPath) &&
        Objects.equals(this.filterProfileEquationJson, emailCommseqEmail.filterProfileEquationJson) &&
        Objects.equals(this.individuallyRender, emailCommseqEmail.individuallyRender) &&
        Objects.equals(this.libraryItemOid, emailCommseqEmail.libraryItemOid) &&
        Objects.equals(this.magicLink, emailCommseqEmail.magicLink) &&
        Objects.equals(this.merchantId, emailCommseqEmail.merchantId) &&
        Objects.equals(this.pendingReview, emailCommseqEmail.pendingReview) &&
        Objects.equals(this.previewText, emailCommseqEmail.previewText) &&
        Objects.equals(this.rejected, emailCommseqEmail.rejected) &&
        Objects.equals(this.requiresReview, emailCommseqEmail.requiresReview) &&
        Objects.equals(this.screenshotLargeFullUrl, emailCommseqEmail.screenshotLargeFullUrl) &&
        Objects.equals(this.screenshotLargeViewportUrl, emailCommseqEmail.screenshotLargeViewportUrl) &&
        Objects.equals(this.screenshotSmallFullUrl, emailCommseqEmail.screenshotSmallFullUrl) &&
        Objects.equals(this.screenshotSmallViewportUrl, emailCommseqEmail.screenshotSmallViewportUrl) &&
        Objects.equals(this.smartSending, emailCommseqEmail.smartSending) &&
        Objects.equals(this.storefrontOid, emailCommseqEmail.storefrontOid) &&
        Objects.equals(this.subject, emailCommseqEmail.subject) &&
        Objects.equals(this.suspendedForSpam, emailCommseqEmail.suspendedForSpam) &&
        Objects.equals(this.transactionalEmail, emailCommseqEmail.transactionalEmail) &&
        Objects.equals(this.version, emailCommseqEmail.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deleted, editedByUser, emailCommunicationSequenceEmailUuid, emailCommunicationSequenceUuid, emailContainerCjson, emailContainerCjsonLastModifiedDts, emailTemplateVmPath, filterProfileEquationJson, individuallyRender, libraryItemOid, magicLink, merchantId, pendingReview, previewText, rejected, requiresReview, screenshotLargeFullUrl, screenshotLargeViewportUrl, screenshotSmallFullUrl, screenshotSmallViewportUrl, smartSending, storefrontOid, subject, suspendedForSpam, transactionalEmail, version);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmailCommseqEmail {\n");
    sb.append("    deleted: ").append(toIndentedString(deleted)).append("\n");
    sb.append("    editedByUser: ").append(toIndentedString(editedByUser)).append("\n");
    sb.append("    emailCommunicationSequenceEmailUuid: ").append(toIndentedString(emailCommunicationSequenceEmailUuid)).append("\n");
    sb.append("    emailCommunicationSequenceUuid: ").append(toIndentedString(emailCommunicationSequenceUuid)).append("\n");
    sb.append("    emailContainerCjson: ").append(toIndentedString(emailContainerCjson)).append("\n");
    sb.append("    emailContainerCjsonLastModifiedDts: ").append(toIndentedString(emailContainerCjsonLastModifiedDts)).append("\n");
    sb.append("    emailTemplateVmPath: ").append(toIndentedString(emailTemplateVmPath)).append("\n");
    sb.append("    filterProfileEquationJson: ").append(toIndentedString(filterProfileEquationJson)).append("\n");
    sb.append("    individuallyRender: ").append(toIndentedString(individuallyRender)).append("\n");
    sb.append("    libraryItemOid: ").append(toIndentedString(libraryItemOid)).append("\n");
    sb.append("    magicLink: ").append(toIndentedString(magicLink)).append("\n");
    sb.append("    merchantId: ").append(toIndentedString(merchantId)).append("\n");
    sb.append("    pendingReview: ").append(toIndentedString(pendingReview)).append("\n");
    sb.append("    previewText: ").append(toIndentedString(previewText)).append("\n");
    sb.append("    rejected: ").append(toIndentedString(rejected)).append("\n");
    sb.append("    requiresReview: ").append(toIndentedString(requiresReview)).append("\n");
    sb.append("    screenshotLargeFullUrl: ").append(toIndentedString(screenshotLargeFullUrl)).append("\n");
    sb.append("    screenshotLargeViewportUrl: ").append(toIndentedString(screenshotLargeViewportUrl)).append("\n");
    sb.append("    screenshotSmallFullUrl: ").append(toIndentedString(screenshotSmallFullUrl)).append("\n");
    sb.append("    screenshotSmallViewportUrl: ").append(toIndentedString(screenshotSmallViewportUrl)).append("\n");
    sb.append("    smartSending: ").append(toIndentedString(smartSending)).append("\n");
    sb.append("    storefrontOid: ").append(toIndentedString(storefrontOid)).append("\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    suspendedForSpam: ").append(toIndentedString(suspendedForSpam)).append("\n");
    sb.append("    transactionalEmail: ").append(toIndentedString(transactionalEmail)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("deleted");
    openapiFields.add("edited_by_user");
    openapiFields.add("email_communication_sequence_email_uuid");
    openapiFields.add("email_communication_sequence_uuid");
    openapiFields.add("email_container_cjson");
    openapiFields.add("email_container_cjson_last_modified_dts");
    openapiFields.add("email_template_vm_path");
    openapiFields.add("filter_profile_equation_json");
    openapiFields.add("individually_render");
    openapiFields.add("library_item_oid");
    openapiFields.add("magic_link");
    openapiFields.add("merchant_id");
    openapiFields.add("pending_review");
    openapiFields.add("preview_text");
    openapiFields.add("rejected");
    openapiFields.add("requires_review");
    openapiFields.add("screenshot_large_full_url");
    openapiFields.add("screenshot_large_viewport_url");
    openapiFields.add("screenshot_small_full_url");
    openapiFields.add("screenshot_small_viewport_url");
    openapiFields.add("smart_sending");
    openapiFields.add("storefront_oid");
    openapiFields.add("subject");
    openapiFields.add("suspended_for_spam");
    openapiFields.add("transactional_email");
    openapiFields.add("version");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to EmailCommseqEmail
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (EmailCommseqEmail.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in EmailCommseqEmail is not found in the empty JSON string", EmailCommseqEmail.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!EmailCommseqEmail.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EmailCommseqEmail` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("edited_by_user") != null && !jsonObj.get("edited_by_user").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `edited_by_user` to be a primitive type in the JSON string but got `%s`", jsonObj.get("edited_by_user").toString()));
      }
      if (jsonObj.get("email_communication_sequence_email_uuid") != null && !jsonObj.get("email_communication_sequence_email_uuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email_communication_sequence_email_uuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email_communication_sequence_email_uuid").toString()));
      }
      if (jsonObj.get("email_communication_sequence_uuid") != null && !jsonObj.get("email_communication_sequence_uuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email_communication_sequence_uuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email_communication_sequence_uuid").toString()));
      }
      if (jsonObj.get("email_container_cjson") != null && !jsonObj.get("email_container_cjson").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email_container_cjson` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email_container_cjson").toString()));
      }
      if (jsonObj.get("email_container_cjson_last_modified_dts") != null && !jsonObj.get("email_container_cjson_last_modified_dts").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email_container_cjson_last_modified_dts` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email_container_cjson_last_modified_dts").toString()));
      }
      if (jsonObj.get("email_template_vm_path") != null && !jsonObj.get("email_template_vm_path").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email_template_vm_path` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email_template_vm_path").toString()));
      }
      if (jsonObj.get("filter_profile_equation_json") != null && !jsonObj.get("filter_profile_equation_json").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `filter_profile_equation_json` to be a primitive type in the JSON string but got `%s`", jsonObj.get("filter_profile_equation_json").toString()));
      }
      if (jsonObj.get("merchant_id") != null && !jsonObj.get("merchant_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `merchant_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("merchant_id").toString()));
      }
      if (jsonObj.get("preview_text") != null && !jsonObj.get("preview_text").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `preview_text` to be a primitive type in the JSON string but got `%s`", jsonObj.get("preview_text").toString()));
      }
      if (jsonObj.get("screenshot_large_full_url") != null && !jsonObj.get("screenshot_large_full_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `screenshot_large_full_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("screenshot_large_full_url").toString()));
      }
      if (jsonObj.get("screenshot_large_viewport_url") != null && !jsonObj.get("screenshot_large_viewport_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `screenshot_large_viewport_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("screenshot_large_viewport_url").toString()));
      }
      if (jsonObj.get("screenshot_small_full_url") != null && !jsonObj.get("screenshot_small_full_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `screenshot_small_full_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("screenshot_small_full_url").toString()));
      }
      if (jsonObj.get("screenshot_small_viewport_url") != null && !jsonObj.get("screenshot_small_viewport_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `screenshot_small_viewport_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("screenshot_small_viewport_url").toString()));
      }
      if (jsonObj.get("subject") != null && !jsonObj.get("subject").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subject` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subject").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EmailCommseqEmail.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EmailCommseqEmail' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EmailCommseqEmail> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EmailCommseqEmail.class));

       return (TypeAdapter<T>) new TypeAdapter<EmailCommseqEmail>() {
           @Override
           public void write(JsonWriter out, EmailCommseqEmail value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EmailCommseqEmail read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of EmailCommseqEmail given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of EmailCommseqEmail
  * @throws IOException if the JSON string is invalid with respect to EmailCommseqEmail
  */
  public static EmailCommseqEmail fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EmailCommseqEmail.class);
  }

 /**
  * Convert an instance of EmailCommseqEmail to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

