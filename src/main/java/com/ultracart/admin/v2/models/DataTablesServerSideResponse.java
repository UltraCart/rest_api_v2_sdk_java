/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.Customer;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * DataTablesServerSideResponse
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-09-09T11:33:36.533-04:00")



public class DataTablesServerSideResponse {
  @SerializedName("data")
  private List<Customer> data = null;

  @SerializedName("draw")
  private Integer draw = null;

  @SerializedName("recordsFiltered")
  private Integer recordsFiltered = null;

  @SerializedName("recordsTotal")
  private Integer recordsTotal = null;

  public DataTablesServerSideResponse data(List<Customer> data) {
    this.data = data;
    return this;
  }

  public DataTablesServerSideResponse addDataItem(Customer dataItem) {
    if (this.data == null) {
      this.data = new ArrayList<Customer>();
    }
    this.data.add(dataItem);
    return this;
  }

   /**
   * Get data
   * @return data
  **/
  @ApiModelProperty(value = "")
  public List<Customer> getData() {
    return data;
  }

  public void setData(List<Customer> data) {
    this.data = data;
  }

  public DataTablesServerSideResponse draw(Integer draw) {
    this.draw = draw;
    return this;
  }

   /**
   * Get draw
   * @return draw
  **/
  @ApiModelProperty(value = "")
  public Integer getDraw() {
    return draw;
  }

  public void setDraw(Integer draw) {
    this.draw = draw;
  }

  public DataTablesServerSideResponse recordsFiltered(Integer recordsFiltered) {
    this.recordsFiltered = recordsFiltered;
    return this;
  }

   /**
   * Get recordsFiltered
   * @return recordsFiltered
  **/
  @ApiModelProperty(value = "")
  public Integer getRecordsFiltered() {
    return recordsFiltered;
  }

  public void setRecordsFiltered(Integer recordsFiltered) {
    this.recordsFiltered = recordsFiltered;
  }

  public DataTablesServerSideResponse recordsTotal(Integer recordsTotal) {
    this.recordsTotal = recordsTotal;
    return this;
  }

   /**
   * Get recordsTotal
   * @return recordsTotal
  **/
  @ApiModelProperty(value = "")
  public Integer getRecordsTotal() {
    return recordsTotal;
  }

  public void setRecordsTotal(Integer recordsTotal) {
    this.recordsTotal = recordsTotal;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DataTablesServerSideResponse dataTablesServerSideResponse = (DataTablesServerSideResponse) o;
    return Objects.equals(this.data, dataTablesServerSideResponse.data) &&
        Objects.equals(this.draw, dataTablesServerSideResponse.draw) &&
        Objects.equals(this.recordsFiltered, dataTablesServerSideResponse.recordsFiltered) &&
        Objects.equals(this.recordsTotal, dataTablesServerSideResponse.recordsTotal);
  }

  @Override
  public int hashCode() {
    return Objects.hash(data, draw, recordsFiltered, recordsTotal);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DataTablesServerSideResponse {\n");
    
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("    draw: ").append(toIndentedString(draw)).append("\n");
    sb.append("    recordsFiltered: ").append(toIndentedString(recordsFiltered)).append("\n");
    sb.append("    recordsTotal: ").append(toIndentedString(recordsTotal)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

