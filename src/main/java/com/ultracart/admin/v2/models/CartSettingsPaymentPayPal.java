/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * CartSettingsPaymentPayPal
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-09-28T13:43:08.336-04:00")



public class CartSettingsPaymentPayPal {
  @SerializedName("paypal_button_alt_text")
  private String paypalButtonAltText = null;

  @SerializedName("paypal_button_url")
  private String paypalButtonUrl = null;

  @SerializedName("paypal_credit_button_url")
  private String paypalCreditButtonUrl = null;

  @SerializedName("paypal_credit_legal_image_url")
  private String paypalCreditLegalImageUrl = null;

  @SerializedName("paypal_credit_legal_url")
  private String paypalCreditLegalUrl = null;

  public CartSettingsPaymentPayPal paypalButtonAltText(String paypalButtonAltText) {
    this.paypalButtonAltText = paypalButtonAltText;
    return this;
  }

   /**
   * PayPal button alt text
   * @return paypalButtonAltText
  **/
  @ApiModelProperty(value = "PayPal button alt text")
  public String getPaypalButtonAltText() {
    return paypalButtonAltText;
  }

  public void setPaypalButtonAltText(String paypalButtonAltText) {
    this.paypalButtonAltText = paypalButtonAltText;
  }

  public CartSettingsPaymentPayPal paypalButtonUrl(String paypalButtonUrl) {
    this.paypalButtonUrl = paypalButtonUrl;
    return this;
  }

   /**
   * PayPal button URL
   * @return paypalButtonUrl
  **/
  @ApiModelProperty(value = "PayPal button URL")
  public String getPaypalButtonUrl() {
    return paypalButtonUrl;
  }

  public void setPaypalButtonUrl(String paypalButtonUrl) {
    this.paypalButtonUrl = paypalButtonUrl;
  }

  public CartSettingsPaymentPayPal paypalCreditButtonUrl(String paypalCreditButtonUrl) {
    this.paypalCreditButtonUrl = paypalCreditButtonUrl;
    return this;
  }

   /**
   * PayPal Credit button URL
   * @return paypalCreditButtonUrl
  **/
  @ApiModelProperty(value = "PayPal Credit button URL")
  public String getPaypalCreditButtonUrl() {
    return paypalCreditButtonUrl;
  }

  public void setPaypalCreditButtonUrl(String paypalCreditButtonUrl) {
    this.paypalCreditButtonUrl = paypalCreditButtonUrl;
  }

  public CartSettingsPaymentPayPal paypalCreditLegalImageUrl(String paypalCreditLegalImageUrl) {
    this.paypalCreditLegalImageUrl = paypalCreditLegalImageUrl;
    return this;
  }

   /**
   * PayPal Credit legal image URL
   * @return paypalCreditLegalImageUrl
  **/
  @ApiModelProperty(value = "PayPal Credit legal image URL")
  public String getPaypalCreditLegalImageUrl() {
    return paypalCreditLegalImageUrl;
  }

  public void setPaypalCreditLegalImageUrl(String paypalCreditLegalImageUrl) {
    this.paypalCreditLegalImageUrl = paypalCreditLegalImageUrl;
  }

  public CartSettingsPaymentPayPal paypalCreditLegalUrl(String paypalCreditLegalUrl) {
    this.paypalCreditLegalUrl = paypalCreditLegalUrl;
    return this;
  }

   /**
   * PayPal Credit legal URL
   * @return paypalCreditLegalUrl
  **/
  @ApiModelProperty(value = "PayPal Credit legal URL")
  public String getPaypalCreditLegalUrl() {
    return paypalCreditLegalUrl;
  }

  public void setPaypalCreditLegalUrl(String paypalCreditLegalUrl) {
    this.paypalCreditLegalUrl = paypalCreditLegalUrl;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CartSettingsPaymentPayPal cartSettingsPaymentPayPal = (CartSettingsPaymentPayPal) o;
    return Objects.equals(this.paypalButtonAltText, cartSettingsPaymentPayPal.paypalButtonAltText) &&
        Objects.equals(this.paypalButtonUrl, cartSettingsPaymentPayPal.paypalButtonUrl) &&
        Objects.equals(this.paypalCreditButtonUrl, cartSettingsPaymentPayPal.paypalCreditButtonUrl) &&
        Objects.equals(this.paypalCreditLegalImageUrl, cartSettingsPaymentPayPal.paypalCreditLegalImageUrl) &&
        Objects.equals(this.paypalCreditLegalUrl, cartSettingsPaymentPayPal.paypalCreditLegalUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(paypalButtonAltText, paypalButtonUrl, paypalCreditButtonUrl, paypalCreditLegalImageUrl, paypalCreditLegalUrl);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CartSettingsPaymentPayPal {\n");
    
    sb.append("    paypalButtonAltText: ").append(toIndentedString(paypalButtonAltText)).append("\n");
    sb.append("    paypalButtonUrl: ").append(toIndentedString(paypalButtonUrl)).append("\n");
    sb.append("    paypalCreditButtonUrl: ").append(toIndentedString(paypalCreditButtonUrl)).append("\n");
    sb.append("    paypalCreditLegalImageUrl: ").append(toIndentedString(paypalCreditLegalImageUrl)).append("\n");
    sb.append("    paypalCreditLegalUrl: ").append(toIndentedString(paypalCreditLegalUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

