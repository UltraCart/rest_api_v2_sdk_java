/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.ScreenRecordingPageViewEvent;
import com.ultracart.admin.v2.models.ScreenRecordingPageViewParameter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * ScreenRecordingPageView
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-10-31T14:02:03.086-04:00")



public class ScreenRecordingPageView {
  @SerializedName("domain")
  private String domain = null;

  @SerializedName("events")
  private List<ScreenRecordingPageViewEvent> events = null;

  @SerializedName("first_event_timestamp")
  private String firstEventTimestamp = null;

  @SerializedName("http_post")
  private Boolean httpPost = null;

  @SerializedName("last_event_timestamp")
  private String lastEventTimestamp = null;

  @SerializedName("missing_events")
  private Boolean missingEvents = null;

  @SerializedName("params")
  private List<ScreenRecordingPageViewParameter> params = null;

  @SerializedName("range_end")
  private Integer rangeEnd = null;

  @SerializedName("range_start")
  private Integer rangeStart = null;

  @SerializedName("referrer")
  private String referrer = null;

  @SerializedName("referrer_params")
  private List<ScreenRecordingPageViewParameter> referrerParams = null;

  @SerializedName("referrer_raw")
  private String referrerRaw = null;

  @SerializedName("screen_recording_page_view_uuid")
  private String screenRecordingPageViewUuid = null;

  @SerializedName("time_on_page")
  private Integer timeOnPage = null;

  @SerializedName("timing_dom_content_loaded")
  private Integer timingDomContentLoaded = null;

  @SerializedName("timing_loaded")
  private Integer timingLoaded = null;

  @SerializedName("truncated_events")
  private Boolean truncatedEvents = null;

  @SerializedName("ucapv")
  private String ucapv = null;

  @SerializedName("url")
  private String url = null;

  public ScreenRecordingPageView domain(String domain) {
    this.domain = domain;
    return this;
  }

   /**
   * Get domain
   * @return domain
  **/
  @ApiModelProperty(value = "")
  public String getDomain() {
    return domain;
  }

  public void setDomain(String domain) {
    this.domain = domain;
  }

  public ScreenRecordingPageView events(List<ScreenRecordingPageViewEvent> events) {
    this.events = events;
    return this;
  }

  public ScreenRecordingPageView addEventsItem(ScreenRecordingPageViewEvent eventsItem) {
    if (this.events == null) {
      this.events = new ArrayList<ScreenRecordingPageViewEvent>();
    }
    this.events.add(eventsItem);
    return this;
  }

   /**
   * Get events
   * @return events
  **/
  @ApiModelProperty(value = "")
  public List<ScreenRecordingPageViewEvent> getEvents() {
    return events;
  }

  public void setEvents(List<ScreenRecordingPageViewEvent> events) {
    this.events = events;
  }

  public ScreenRecordingPageView firstEventTimestamp(String firstEventTimestamp) {
    this.firstEventTimestamp = firstEventTimestamp;
    return this;
  }

   /**
   * First event timestamp
   * @return firstEventTimestamp
  **/
  @ApiModelProperty(value = "First event timestamp")
  public String getFirstEventTimestamp() {
    return firstEventTimestamp;
  }

  public void setFirstEventTimestamp(String firstEventTimestamp) {
    this.firstEventTimestamp = firstEventTimestamp;
  }

  public ScreenRecordingPageView httpPost(Boolean httpPost) {
    this.httpPost = httpPost;
    return this;
  }

   /**
   * Get httpPost
   * @return httpPost
  **/
  @ApiModelProperty(value = "")
  public Boolean isHttpPost() {
    return httpPost;
  }

  public void setHttpPost(Boolean httpPost) {
    this.httpPost = httpPost;
  }

  public ScreenRecordingPageView lastEventTimestamp(String lastEventTimestamp) {
    this.lastEventTimestamp = lastEventTimestamp;
    return this;
  }

   /**
   * Last event timestamp
   * @return lastEventTimestamp
  **/
  @ApiModelProperty(value = "Last event timestamp")
  public String getLastEventTimestamp() {
    return lastEventTimestamp;
  }

  public void setLastEventTimestamp(String lastEventTimestamp) {
    this.lastEventTimestamp = lastEventTimestamp;
  }

  public ScreenRecordingPageView missingEvents(Boolean missingEvents) {
    this.missingEvents = missingEvents;
    return this;
  }

   /**
   * Get missingEvents
   * @return missingEvents
  **/
  @ApiModelProperty(value = "")
  public Boolean isMissingEvents() {
    return missingEvents;
  }

  public void setMissingEvents(Boolean missingEvents) {
    this.missingEvents = missingEvents;
  }

  public ScreenRecordingPageView params(List<ScreenRecordingPageViewParameter> params) {
    this.params = params;
    return this;
  }

  public ScreenRecordingPageView addParamsItem(ScreenRecordingPageViewParameter paramsItem) {
    if (this.params == null) {
      this.params = new ArrayList<ScreenRecordingPageViewParameter>();
    }
    this.params.add(paramsItem);
    return this;
  }

   /**
   * Get params
   * @return params
  **/
  @ApiModelProperty(value = "")
  public List<ScreenRecordingPageViewParameter> getParams() {
    return params;
  }

  public void setParams(List<ScreenRecordingPageViewParameter> params) {
    this.params = params;
  }

  public ScreenRecordingPageView rangeEnd(Integer rangeEnd) {
    this.rangeEnd = rangeEnd;
    return this;
  }

   /**
   * Get rangeEnd
   * @return rangeEnd
  **/
  @ApiModelProperty(value = "")
  public Integer getRangeEnd() {
    return rangeEnd;
  }

  public void setRangeEnd(Integer rangeEnd) {
    this.rangeEnd = rangeEnd;
  }

  public ScreenRecordingPageView rangeStart(Integer rangeStart) {
    this.rangeStart = rangeStart;
    return this;
  }

   /**
   * Get rangeStart
   * @return rangeStart
  **/
  @ApiModelProperty(value = "")
  public Integer getRangeStart() {
    return rangeStart;
  }

  public void setRangeStart(Integer rangeStart) {
    this.rangeStart = rangeStart;
  }

  public ScreenRecordingPageView referrer(String referrer) {
    this.referrer = referrer;
    return this;
  }

   /**
   * Get referrer
   * @return referrer
  **/
  @ApiModelProperty(value = "")
  public String getReferrer() {
    return referrer;
  }

  public void setReferrer(String referrer) {
    this.referrer = referrer;
  }

  public ScreenRecordingPageView referrerParams(List<ScreenRecordingPageViewParameter> referrerParams) {
    this.referrerParams = referrerParams;
    return this;
  }

  public ScreenRecordingPageView addReferrerParamsItem(ScreenRecordingPageViewParameter referrerParamsItem) {
    if (this.referrerParams == null) {
      this.referrerParams = new ArrayList<ScreenRecordingPageViewParameter>();
    }
    this.referrerParams.add(referrerParamsItem);
    return this;
  }

   /**
   * Get referrerParams
   * @return referrerParams
  **/
  @ApiModelProperty(value = "")
  public List<ScreenRecordingPageViewParameter> getReferrerParams() {
    return referrerParams;
  }

  public void setReferrerParams(List<ScreenRecordingPageViewParameter> referrerParams) {
    this.referrerParams = referrerParams;
  }

  public ScreenRecordingPageView referrerRaw(String referrerRaw) {
    this.referrerRaw = referrerRaw;
    return this;
  }

   /**
   * Get referrerRaw
   * @return referrerRaw
  **/
  @ApiModelProperty(value = "")
  public String getReferrerRaw() {
    return referrerRaw;
  }

  public void setReferrerRaw(String referrerRaw) {
    this.referrerRaw = referrerRaw;
  }

  public ScreenRecordingPageView screenRecordingPageViewUuid(String screenRecordingPageViewUuid) {
    this.screenRecordingPageViewUuid = screenRecordingPageViewUuid;
    return this;
  }

   /**
   * Get screenRecordingPageViewUuid
   * @return screenRecordingPageViewUuid
  **/
  @ApiModelProperty(value = "")
  public String getScreenRecordingPageViewUuid() {
    return screenRecordingPageViewUuid;
  }

  public void setScreenRecordingPageViewUuid(String screenRecordingPageViewUuid) {
    this.screenRecordingPageViewUuid = screenRecordingPageViewUuid;
  }

  public ScreenRecordingPageView timeOnPage(Integer timeOnPage) {
    this.timeOnPage = timeOnPage;
    return this;
  }

   /**
   * Get timeOnPage
   * @return timeOnPage
  **/
  @ApiModelProperty(value = "")
  public Integer getTimeOnPage() {
    return timeOnPage;
  }

  public void setTimeOnPage(Integer timeOnPage) {
    this.timeOnPage = timeOnPage;
  }

  public ScreenRecordingPageView timingDomContentLoaded(Integer timingDomContentLoaded) {
    this.timingDomContentLoaded = timingDomContentLoaded;
    return this;
  }

   /**
   * Amount of time for DOMContentLoaded event to fire (milliseconds)
   * @return timingDomContentLoaded
  **/
  @ApiModelProperty(value = "Amount of time for DOMContentLoaded event to fire (milliseconds)")
  public Integer getTimingDomContentLoaded() {
    return timingDomContentLoaded;
  }

  public void setTimingDomContentLoaded(Integer timingDomContentLoaded) {
    this.timingDomContentLoaded = timingDomContentLoaded;
  }

  public ScreenRecordingPageView timingLoaded(Integer timingLoaded) {
    this.timingLoaded = timingLoaded;
    return this;
  }

   /**
   * Amount of time for loaded event to fire (milliseconds)
   * @return timingLoaded
  **/
  @ApiModelProperty(value = "Amount of time for loaded event to fire (milliseconds)")
  public Integer getTimingLoaded() {
    return timingLoaded;
  }

  public void setTimingLoaded(Integer timingLoaded) {
    this.timingLoaded = timingLoaded;
  }

  public ScreenRecordingPageView truncatedEvents(Boolean truncatedEvents) {
    this.truncatedEvents = truncatedEvents;
    return this;
  }

   /**
   * Get truncatedEvents
   * @return truncatedEvents
  **/
  @ApiModelProperty(value = "")
  public Boolean isTruncatedEvents() {
    return truncatedEvents;
  }

  public void setTruncatedEvents(Boolean truncatedEvents) {
    this.truncatedEvents = truncatedEvents;
  }

  public ScreenRecordingPageView ucapv(String ucapv) {
    this.ucapv = ucapv;
    return this;
  }

   /**
   * Get ucapv
   * @return ucapv
  **/
  @ApiModelProperty(value = "")
  public String getUcapv() {
    return ucapv;
  }

  public void setUcapv(String ucapv) {
    this.ucapv = ucapv;
  }

  public ScreenRecordingPageView url(String url) {
    this.url = url;
    return this;
  }

   /**
   * Get url
   * @return url
  **/
  @ApiModelProperty(value = "")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ScreenRecordingPageView screenRecordingPageView = (ScreenRecordingPageView) o;
    return Objects.equals(this.domain, screenRecordingPageView.domain) &&
        Objects.equals(this.events, screenRecordingPageView.events) &&
        Objects.equals(this.firstEventTimestamp, screenRecordingPageView.firstEventTimestamp) &&
        Objects.equals(this.httpPost, screenRecordingPageView.httpPost) &&
        Objects.equals(this.lastEventTimestamp, screenRecordingPageView.lastEventTimestamp) &&
        Objects.equals(this.missingEvents, screenRecordingPageView.missingEvents) &&
        Objects.equals(this.params, screenRecordingPageView.params) &&
        Objects.equals(this.rangeEnd, screenRecordingPageView.rangeEnd) &&
        Objects.equals(this.rangeStart, screenRecordingPageView.rangeStart) &&
        Objects.equals(this.referrer, screenRecordingPageView.referrer) &&
        Objects.equals(this.referrerParams, screenRecordingPageView.referrerParams) &&
        Objects.equals(this.referrerRaw, screenRecordingPageView.referrerRaw) &&
        Objects.equals(this.screenRecordingPageViewUuid, screenRecordingPageView.screenRecordingPageViewUuid) &&
        Objects.equals(this.timeOnPage, screenRecordingPageView.timeOnPage) &&
        Objects.equals(this.timingDomContentLoaded, screenRecordingPageView.timingDomContentLoaded) &&
        Objects.equals(this.timingLoaded, screenRecordingPageView.timingLoaded) &&
        Objects.equals(this.truncatedEvents, screenRecordingPageView.truncatedEvents) &&
        Objects.equals(this.ucapv, screenRecordingPageView.ucapv) &&
        Objects.equals(this.url, screenRecordingPageView.url);
  }

  @Override
  public int hashCode() {
    return Objects.hash(domain, events, firstEventTimestamp, httpPost, lastEventTimestamp, missingEvents, params, rangeEnd, rangeStart, referrer, referrerParams, referrerRaw, screenRecordingPageViewUuid, timeOnPage, timingDomContentLoaded, timingLoaded, truncatedEvents, ucapv, url);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ScreenRecordingPageView {\n");
    
    sb.append("    domain: ").append(toIndentedString(domain)).append("\n");
    sb.append("    events: ").append(toIndentedString(events)).append("\n");
    sb.append("    firstEventTimestamp: ").append(toIndentedString(firstEventTimestamp)).append("\n");
    sb.append("    httpPost: ").append(toIndentedString(httpPost)).append("\n");
    sb.append("    lastEventTimestamp: ").append(toIndentedString(lastEventTimestamp)).append("\n");
    sb.append("    missingEvents: ").append(toIndentedString(missingEvents)).append("\n");
    sb.append("    params: ").append(toIndentedString(params)).append("\n");
    sb.append("    rangeEnd: ").append(toIndentedString(rangeEnd)).append("\n");
    sb.append("    rangeStart: ").append(toIndentedString(rangeStart)).append("\n");
    sb.append("    referrer: ").append(toIndentedString(referrer)).append("\n");
    sb.append("    referrerParams: ").append(toIndentedString(referrerParams)).append("\n");
    sb.append("    referrerRaw: ").append(toIndentedString(referrerRaw)).append("\n");
    sb.append("    screenRecordingPageViewUuid: ").append(toIndentedString(screenRecordingPageViewUuid)).append("\n");
    sb.append("    timeOnPage: ").append(toIndentedString(timeOnPage)).append("\n");
    sb.append("    timingDomContentLoaded: ").append(toIndentedString(timingDomContentLoaded)).append("\n");
    sb.append("    timingLoaded: ").append(toIndentedString(timingLoaded)).append("\n");
    sb.append("    truncatedEvents: ").append(toIndentedString(truncatedEvents)).append("\n");
    sb.append("    ucapv: ").append(toIndentedString(ucapv)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

