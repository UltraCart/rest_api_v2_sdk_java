/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.ConversationMessageTransportStatus;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * ConversationMessage
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-07-25T14:08:28.757-04:00")



public class ConversationMessage {
  @SerializedName("author_conversation_participant_arn")
  private String authorConversationParticipantArn = null;

  @SerializedName("author_conversation_participant_name")
  private String authorConversationParticipantName = null;

  @SerializedName("body")
  private String body = null;

  @SerializedName("media_urls")
  private List<String> mediaUrls = null;

  @SerializedName("message_dts")
  private String messageDts = null;

  @SerializedName("transport_statuses")
  private List<ConversationMessageTransportStatus> transportStatuses = null;

  public ConversationMessage authorConversationParticipantArn(String authorConversationParticipantArn) {
    this.authorConversationParticipantArn = authorConversationParticipantArn;
    return this;
  }

   /**
   * Get authorConversationParticipantArn
   * @return authorConversationParticipantArn
  **/
  @ApiModelProperty(value = "")
  public String getAuthorConversationParticipantArn() {
    return authorConversationParticipantArn;
  }

  public void setAuthorConversationParticipantArn(String authorConversationParticipantArn) {
    this.authorConversationParticipantArn = authorConversationParticipantArn;
  }

  public ConversationMessage authorConversationParticipantName(String authorConversationParticipantName) {
    this.authorConversationParticipantName = authorConversationParticipantName;
    return this;
  }

   /**
   * Get authorConversationParticipantName
   * @return authorConversationParticipantName
  **/
  @ApiModelProperty(value = "")
  public String getAuthorConversationParticipantName() {
    return authorConversationParticipantName;
  }

  public void setAuthorConversationParticipantName(String authorConversationParticipantName) {
    this.authorConversationParticipantName = authorConversationParticipantName;
  }

  public ConversationMessage body(String body) {
    this.body = body;
    return this;
  }

   /**
   * Get body
   * @return body
  **/
  @ApiModelProperty(value = "")
  public String getBody() {
    return body;
  }

  public void setBody(String body) {
    this.body = body;
  }

  public ConversationMessage mediaUrls(List<String> mediaUrls) {
    this.mediaUrls = mediaUrls;
    return this;
  }

  public ConversationMessage addMediaUrlsItem(String mediaUrlsItem) {
    if (this.mediaUrls == null) {
      this.mediaUrls = new ArrayList<String>();
    }
    this.mediaUrls.add(mediaUrlsItem);
    return this;
  }

   /**
   * Get mediaUrls
   * @return mediaUrls
  **/
  @ApiModelProperty(value = "")
  public List<String> getMediaUrls() {
    return mediaUrls;
  }

  public void setMediaUrls(List<String> mediaUrls) {
    this.mediaUrls = mediaUrls;
  }

  public ConversationMessage messageDts(String messageDts) {
    this.messageDts = messageDts;
    return this;
  }

   /**
   * Message date/time
   * @return messageDts
  **/
  @ApiModelProperty(value = "Message date/time")
  public String getMessageDts() {
    return messageDts;
  }

  public void setMessageDts(String messageDts) {
    this.messageDts = messageDts;
  }

  public ConversationMessage transportStatuses(List<ConversationMessageTransportStatus> transportStatuses) {
    this.transportStatuses = transportStatuses;
    return this;
  }

  public ConversationMessage addTransportStatusesItem(ConversationMessageTransportStatus transportStatusesItem) {
    if (this.transportStatuses == null) {
      this.transportStatuses = new ArrayList<ConversationMessageTransportStatus>();
    }
    this.transportStatuses.add(transportStatusesItem);
    return this;
  }

   /**
   * Get transportStatuses
   * @return transportStatuses
  **/
  @ApiModelProperty(value = "")
  public List<ConversationMessageTransportStatus> getTransportStatuses() {
    return transportStatuses;
  }

  public void setTransportStatuses(List<ConversationMessageTransportStatus> transportStatuses) {
    this.transportStatuses = transportStatuses;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConversationMessage conversationMessage = (ConversationMessage) o;
    return Objects.equals(this.authorConversationParticipantArn, conversationMessage.authorConversationParticipantArn) &&
        Objects.equals(this.authorConversationParticipantName, conversationMessage.authorConversationParticipantName) &&
        Objects.equals(this.body, conversationMessage.body) &&
        Objects.equals(this.mediaUrls, conversationMessage.mediaUrls) &&
        Objects.equals(this.messageDts, conversationMessage.messageDts) &&
        Objects.equals(this.transportStatuses, conversationMessage.transportStatuses);
  }

  @Override
  public int hashCode() {
    return Objects.hash(authorConversationParticipantArn, authorConversationParticipantName, body, mediaUrls, messageDts, transportStatuses);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConversationMessage {\n");
    
    sb.append("    authorConversationParticipantArn: ").append(toIndentedString(authorConversationParticipantArn)).append("\n");
    sb.append("    authorConversationParticipantName: ").append(toIndentedString(authorConversationParticipantName)).append("\n");
    sb.append("    body: ").append(toIndentedString(body)).append("\n");
    sb.append("    mediaUrls: ").append(toIndentedString(mediaUrls)).append("\n");
    sb.append("    messageDts: ").append(toIndentedString(messageDts)).append("\n");
    sb.append("    transportStatuses: ").append(toIndentedString(transportStatuses)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

