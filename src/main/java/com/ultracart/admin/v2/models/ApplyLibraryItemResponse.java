/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.Error;
import com.ultracart.admin.v2.models.LibraryItemAttribute;
import com.ultracart.admin.v2.models.ResponseMetadata;
import com.ultracart.admin.v2.models.Warning;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * ApplyLibraryItemResponse
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2025-10-14T11:50:44.731-04:00")



public class ApplyLibraryItemResponse {
  @SerializedName("attributes")
  private List<LibraryItemAttribute> attributes = null;

  @SerializedName("cjson")
  private String cjson = null;

  @SerializedName("content_type")
  private String contentType = null;

  @SerializedName("email_template_vm_path")
  private String emailTemplateVmPath = null;

  @SerializedName("error")
  private Error error = null;

  @SerializedName("metadata")
  private ResponseMetadata metadata = null;

  @SerializedName("storefront_oid")
  private Integer storefrontOid = null;

  @SerializedName("success")
  private Boolean success = null;

  @SerializedName("title")
  private String title = null;

  @SerializedName("uuid")
  private String uuid = null;

  @SerializedName("warning")
  private Warning warning = null;

  public ApplyLibraryItemResponse attributes(List<LibraryItemAttribute> attributes) {
    this.attributes = attributes;
    return this;
  }

  public ApplyLibraryItemResponse addAttributesItem(LibraryItemAttribute attributesItem) {
    if (this.attributes == null) {
      this.attributes = new ArrayList<LibraryItemAttribute>();
    }
    this.attributes.add(attributesItem);
    return this;
  }

   /**
   * Attributes from the library item
   * @return attributes
  **/
  @ApiModelProperty(value = "Attributes from the library item")
  public List<LibraryItemAttribute> getAttributes() {
    return attributes;
  }

  public void setAttributes(List<LibraryItemAttribute> attributes) {
    this.attributes = attributes;
  }

  public ApplyLibraryItemResponse cjson(String cjson) {
    this.cjson = cjson;
    return this;
  }

   /**
   * Cjson from library item, only populated if this library item was a cjson snippet or marketing email (not transactional)
   * @return cjson
  **/
  @ApiModelProperty(value = "Cjson from library item, only populated if this library item was a cjson snippet or marketing email (not transactional)")
  public String getCjson() {
    return cjson;
  }

  public void setCjson(String cjson) {
    this.cjson = cjson;
  }

  public ApplyLibraryItemResponse contentType(String contentType) {
    this.contentType = contentType;
    return this;
  }

   /**
   * flow, campaign, cjson, upsell, postcard, transactional_email or email
   * @return contentType
  **/
  @ApiModelProperty(value = "flow, campaign, cjson, upsell, postcard, transactional_email or email")
  public String getContentType() {
    return contentType;
  }

  public void setContentType(String contentType) {
    this.contentType = contentType;
  }

  public ApplyLibraryItemResponse emailTemplateVmPath(String emailTemplateVmPath) {
    this.emailTemplateVmPath = emailTemplateVmPath;
    return this;
  }

   /**
   * If a marketing email was applied, this is the path to the template encapsulating the cjson.  This is needed for the UltraCart UI.
   * @return emailTemplateVmPath
  **/
  @ApiModelProperty(value = "If a marketing email was applied, this is the path to the template encapsulating the cjson.  This is needed for the UltraCart UI.")
  public String getEmailTemplateVmPath() {
    return emailTemplateVmPath;
  }

  public void setEmailTemplateVmPath(String emailTemplateVmPath) {
    this.emailTemplateVmPath = emailTemplateVmPath;
  }

  public ApplyLibraryItemResponse error(Error error) {
    this.error = error;
    return this;
  }

   /**
   * Get error
   * @return error
  **/
  @ApiModelProperty(value = "")
  public Error getError() {
    return error;
  }

  public void setError(Error error) {
    this.error = error;
  }

  public ApplyLibraryItemResponse metadata(ResponseMetadata metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @ApiModelProperty(value = "")
  public ResponseMetadata getMetadata() {
    return metadata;
  }

  public void setMetadata(ResponseMetadata metadata) {
    this.metadata = metadata;
  }

  public ApplyLibraryItemResponse storefrontOid(Integer storefrontOid) {
    this.storefrontOid = storefrontOid;
    return this;
  }

   /**
   * StoreFront oid where content originates necessary for tracking down relative assets
   * @return storefrontOid
  **/
  @ApiModelProperty(value = "StoreFront oid where content originates necessary for tracking down relative assets")
  public Integer getStorefrontOid() {
    return storefrontOid;
  }

  public void setStorefrontOid(Integer storefrontOid) {
    this.storefrontOid = storefrontOid;
  }

  public ApplyLibraryItemResponse success(Boolean success) {
    this.success = success;
    return this;
  }

   /**
   * Indicates if API call was successful
   * @return success
  **/
  @ApiModelProperty(value = "Indicates if API call was successful")
  public Boolean isSuccess() {
    return success;
  }

  public void setSuccess(Boolean success) {
    this.success = success;
  }

  public ApplyLibraryItemResponse title(String title) {
    this.title = title;
    return this;
  }

   /**
   * title of library item, usually the name of the flow or campaign, or description of cjson
   * @return title
  **/
  @ApiModelProperty(value = "title of library item, usually the name of the flow or campaign, or description of cjson")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public ApplyLibraryItemResponse uuid(String uuid) {
    this.uuid = uuid;
    return this;
  }

   /**
   * UUID of marketing email or communication flow/campaign if this library item was an email, campaign or flow
   * @return uuid
  **/
  @ApiModelProperty(value = "UUID of marketing email or communication flow/campaign if this library item was an email, campaign or flow")
  public String getUuid() {
    return uuid;
  }

  public void setUuid(String uuid) {
    this.uuid = uuid;
  }

  public ApplyLibraryItemResponse warning(Warning warning) {
    this.warning = warning;
    return this;
  }

   /**
   * Get warning
   * @return warning
  **/
  @ApiModelProperty(value = "")
  public Warning getWarning() {
    return warning;
  }

  public void setWarning(Warning warning) {
    this.warning = warning;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApplyLibraryItemResponse applyLibraryItemResponse = (ApplyLibraryItemResponse) o;
    return Objects.equals(this.attributes, applyLibraryItemResponse.attributes) &&
        Objects.equals(this.cjson, applyLibraryItemResponse.cjson) &&
        Objects.equals(this.contentType, applyLibraryItemResponse.contentType) &&
        Objects.equals(this.emailTemplateVmPath, applyLibraryItemResponse.emailTemplateVmPath) &&
        Objects.equals(this.error, applyLibraryItemResponse.error) &&
        Objects.equals(this.metadata, applyLibraryItemResponse.metadata) &&
        Objects.equals(this.storefrontOid, applyLibraryItemResponse.storefrontOid) &&
        Objects.equals(this.success, applyLibraryItemResponse.success) &&
        Objects.equals(this.title, applyLibraryItemResponse.title) &&
        Objects.equals(this.uuid, applyLibraryItemResponse.uuid) &&
        Objects.equals(this.warning, applyLibraryItemResponse.warning);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attributes, cjson, contentType, emailTemplateVmPath, error, metadata, storefrontOid, success, title, uuid, warning);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApplyLibraryItemResponse {\n");
    
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    cjson: ").append(toIndentedString(cjson)).append("\n");
    sb.append("    contentType: ").append(toIndentedString(contentType)).append("\n");
    sb.append("    emailTemplateVmPath: ").append(toIndentedString(emailTemplateVmPath)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    storefrontOid: ").append(toIndentedString(storefrontOid)).append("\n");
    sb.append("    success: ").append(toIndentedString(success)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    warning: ").append(toIndentedString(warning)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

