/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * ScreenRecordingFilterRangeInteger
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-01-26T11:21:51.055-05:00[America/Indianapolis]")
public class ScreenRecordingFilterRangeInteger {
  public static final String SERIALIZED_NAME_EQ = "eq";
  @SerializedName(SERIALIZED_NAME_EQ)
  private Integer eq;

  public static final String SERIALIZED_NAME_GT = "gt";
  @SerializedName(SERIALIZED_NAME_GT)
  private Integer gt;

  public static final String SERIALIZED_NAME_GTE = "gte";
  @SerializedName(SERIALIZED_NAME_GTE)
  private Integer gte;

  public static final String SERIALIZED_NAME_LT = "lt";
  @SerializedName(SERIALIZED_NAME_LT)
  private Integer lt;

  public static final String SERIALIZED_NAME_LTE = "lte";
  @SerializedName(SERIALIZED_NAME_LTE)
  private Integer lte;

  public ScreenRecordingFilterRangeInteger() { 
  }

  public ScreenRecordingFilterRangeInteger eq(Integer eq) {
    
    this.eq = eq;
    return this;
  }

   /**
   * Get eq
   * @return eq
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getEq() {
    return eq;
  }


  public void setEq(Integer eq) {
    this.eq = eq;
  }


  public ScreenRecordingFilterRangeInteger gt(Integer gt) {
    
    this.gt = gt;
    return this;
  }

   /**
   * Get gt
   * @return gt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getGt() {
    return gt;
  }


  public void setGt(Integer gt) {
    this.gt = gt;
  }


  public ScreenRecordingFilterRangeInteger gte(Integer gte) {
    
    this.gte = gte;
    return this;
  }

   /**
   * Get gte
   * @return gte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getGte() {
    return gte;
  }


  public void setGte(Integer gte) {
    this.gte = gte;
  }


  public ScreenRecordingFilterRangeInteger lt(Integer lt) {
    
    this.lt = lt;
    return this;
  }

   /**
   * Get lt
   * @return lt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getLt() {
    return lt;
  }


  public void setLt(Integer lt) {
    this.lt = lt;
  }


  public ScreenRecordingFilterRangeInteger lte(Integer lte) {
    
    this.lte = lte;
    return this;
  }

   /**
   * Get lte
   * @return lte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getLte() {
    return lte;
  }


  public void setLte(Integer lte) {
    this.lte = lte;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ScreenRecordingFilterRangeInteger screenRecordingFilterRangeInteger = (ScreenRecordingFilterRangeInteger) o;
    return Objects.equals(this.eq, screenRecordingFilterRangeInteger.eq) &&
        Objects.equals(this.gt, screenRecordingFilterRangeInteger.gt) &&
        Objects.equals(this.gte, screenRecordingFilterRangeInteger.gte) &&
        Objects.equals(this.lt, screenRecordingFilterRangeInteger.lt) &&
        Objects.equals(this.lte, screenRecordingFilterRangeInteger.lte);
  }

  @Override
  public int hashCode() {
    return Objects.hash(eq, gt, gte, lt, lte);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ScreenRecordingFilterRangeInteger {\n");
    sb.append("    eq: ").append(toIndentedString(eq)).append("\n");
    sb.append("    gt: ").append(toIndentedString(gt)).append("\n");
    sb.append("    gte: ").append(toIndentedString(gte)).append("\n");
    sb.append("    lt: ").append(toIndentedString(lt)).append("\n");
    sb.append("    lte: ").append(toIndentedString(lte)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("eq");
    openapiFields.add("gt");
    openapiFields.add("gte");
    openapiFields.add("lt");
    openapiFields.add("lte");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ScreenRecordingFilterRangeInteger
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (ScreenRecordingFilterRangeInteger.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in ScreenRecordingFilterRangeInteger is not found in the empty JSON string", ScreenRecordingFilterRangeInteger.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!ScreenRecordingFilterRangeInteger.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ScreenRecordingFilterRangeInteger` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ScreenRecordingFilterRangeInteger.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ScreenRecordingFilterRangeInteger' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ScreenRecordingFilterRangeInteger> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ScreenRecordingFilterRangeInteger.class));

       return (TypeAdapter<T>) new TypeAdapter<ScreenRecordingFilterRangeInteger>() {
           @Override
           public void write(JsonWriter out, ScreenRecordingFilterRangeInteger value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ScreenRecordingFilterRangeInteger read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ScreenRecordingFilterRangeInteger given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ScreenRecordingFilterRangeInteger
  * @throws IOException if the JSON string is invalid with respect to ScreenRecordingFilterRangeInteger
  */
  public static ScreenRecordingFilterRangeInteger fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ScreenRecordingFilterRangeInteger.class);
  }

 /**
  * Convert an instance of ScreenRecordingFilterRangeInteger to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

