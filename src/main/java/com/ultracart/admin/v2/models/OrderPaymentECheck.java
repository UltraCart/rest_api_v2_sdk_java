/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * OrderPaymentECheck
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-04-20T13:11:15.051-04:00")



public class OrderPaymentECheck {
  @SerializedName("bank_aba_code")
  private String bankAbaCode = null;

  @SerializedName("bank_account_name")
  private String bankAccountName = null;

  @SerializedName("bank_account_number")
  private String bankAccountNumber = null;

  /**
   * Bank account type
   */
  @JsonAdapter(BankAccountTypeEnum.Adapter.class)
  public enum BankAccountTypeEnum {
    CHECKING("Checking"),
    
    SAVINGS("Savings");

    private String value;

    BankAccountTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static BankAccountTypeEnum fromValue(String text) {
      for (BankAccountTypeEnum b : BankAccountTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<BankAccountTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final BankAccountTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public BankAccountTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return BankAccountTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("bank_account_type")
  private BankAccountTypeEnum bankAccountType = null;

  @SerializedName("bank_name")
  private String bankName = null;

  /**
   * Bank owner type
   */
  @JsonAdapter(BankOwnerTypeEnum.Adapter.class)
  public enum BankOwnerTypeEnum {
    PERSONAL("Personal"),
    
    BUSINESS("Business");

    private String value;

    BankOwnerTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static BankOwnerTypeEnum fromValue(String text) {
      for (BankOwnerTypeEnum b : BankOwnerTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<BankOwnerTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final BankOwnerTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public BankOwnerTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return BankOwnerTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("bank_owner_type")
  private BankOwnerTypeEnum bankOwnerType = null;

  @SerializedName("customer_tax_id")
  private String customerTaxId = null;

  @SerializedName("drivers_license_dob")
  private String driversLicenseDob = null;

  @SerializedName("drivers_license_number")
  private String driversLicenseNumber = null;

  @SerializedName("drivers_license_state")
  private String driversLicenseState = null;

  public OrderPaymentECheck bankAbaCode(String bankAbaCode) {
    this.bankAbaCode = bankAbaCode;
    return this;
  }

   /**
   * Bank routing code
   * @return bankAbaCode
  **/
  @ApiModelProperty(value = "Bank routing code")
  public String getBankAbaCode() {
    return bankAbaCode;
  }

  public void setBankAbaCode(String bankAbaCode) {
    this.bankAbaCode = bankAbaCode;
  }

  public OrderPaymentECheck bankAccountName(String bankAccountName) {
    this.bankAccountName = bankAccountName;
    return this;
  }

   /**
   * Bank account name
   * @return bankAccountName
  **/
  @ApiModelProperty(value = "Bank account name")
  public String getBankAccountName() {
    return bankAccountName;
  }

  public void setBankAccountName(String bankAccountName) {
    this.bankAccountName = bankAccountName;
  }

  public OrderPaymentECheck bankAccountNumber(String bankAccountNumber) {
    this.bankAccountNumber = bankAccountNumber;
    return this;
  }

   /**
   * Bank account number (masked to last 4)
   * @return bankAccountNumber
  **/
  @ApiModelProperty(value = "Bank account number (masked to last 4)")
  public String getBankAccountNumber() {
    return bankAccountNumber;
  }

  public void setBankAccountNumber(String bankAccountNumber) {
    this.bankAccountNumber = bankAccountNumber;
  }

  public OrderPaymentECheck bankAccountType(BankAccountTypeEnum bankAccountType) {
    this.bankAccountType = bankAccountType;
    return this;
  }

   /**
   * Bank account type
   * @return bankAccountType
  **/
  @ApiModelProperty(value = "Bank account type")
  public BankAccountTypeEnum getBankAccountType() {
    return bankAccountType;
  }

  public void setBankAccountType(BankAccountTypeEnum bankAccountType) {
    this.bankAccountType = bankAccountType;
  }

  public OrderPaymentECheck bankName(String bankName) {
    this.bankName = bankName;
    return this;
  }

   /**
   * Bank name
   * @return bankName
  **/
  @ApiModelProperty(value = "Bank name")
  public String getBankName() {
    return bankName;
  }

  public void setBankName(String bankName) {
    this.bankName = bankName;
  }

  public OrderPaymentECheck bankOwnerType(BankOwnerTypeEnum bankOwnerType) {
    this.bankOwnerType = bankOwnerType;
    return this;
  }

   /**
   * Bank owner type
   * @return bankOwnerType
  **/
  @ApiModelProperty(value = "Bank owner type")
  public BankOwnerTypeEnum getBankOwnerType() {
    return bankOwnerType;
  }

  public void setBankOwnerType(BankOwnerTypeEnum bankOwnerType) {
    this.bankOwnerType = bankOwnerType;
  }

  public OrderPaymentECheck customerTaxId(String customerTaxId) {
    this.customerTaxId = customerTaxId;
    return this;
  }

   /**
   * Customer tax id (masked to last 4)
   * @return customerTaxId
  **/
  @ApiModelProperty(value = "Customer tax id (masked to last 4)")
  public String getCustomerTaxId() {
    return customerTaxId;
  }

  public void setCustomerTaxId(String customerTaxId) {
    this.customerTaxId = customerTaxId;
  }

  public OrderPaymentECheck driversLicenseDob(String driversLicenseDob) {
    this.driversLicenseDob = driversLicenseDob;
    return this;
  }

   /**
   * Driver license date of birth
   * @return driversLicenseDob
  **/
  @ApiModelProperty(value = "Driver license date of birth")
  public String getDriversLicenseDob() {
    return driversLicenseDob;
  }

  public void setDriversLicenseDob(String driversLicenseDob) {
    this.driversLicenseDob = driversLicenseDob;
  }

  public OrderPaymentECheck driversLicenseNumber(String driversLicenseNumber) {
    this.driversLicenseNumber = driversLicenseNumber;
    return this;
  }

   /**
   * Driver license number (masked to last 4)
   * @return driversLicenseNumber
  **/
  @ApiModelProperty(value = "Driver license number (masked to last 4)")
  public String getDriversLicenseNumber() {
    return driversLicenseNumber;
  }

  public void setDriversLicenseNumber(String driversLicenseNumber) {
    this.driversLicenseNumber = driversLicenseNumber;
  }

  public OrderPaymentECheck driversLicenseState(String driversLicenseState) {
    this.driversLicenseState = driversLicenseState;
    return this;
  }

   /**
   * Driver license state
   * @return driversLicenseState
  **/
  @ApiModelProperty(value = "Driver license state")
  public String getDriversLicenseState() {
    return driversLicenseState;
  }

  public void setDriversLicenseState(String driversLicenseState) {
    this.driversLicenseState = driversLicenseState;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderPaymentECheck orderPaymentECheck = (OrderPaymentECheck) o;
    return Objects.equals(this.bankAbaCode, orderPaymentECheck.bankAbaCode) &&
        Objects.equals(this.bankAccountName, orderPaymentECheck.bankAccountName) &&
        Objects.equals(this.bankAccountNumber, orderPaymentECheck.bankAccountNumber) &&
        Objects.equals(this.bankAccountType, orderPaymentECheck.bankAccountType) &&
        Objects.equals(this.bankName, orderPaymentECheck.bankName) &&
        Objects.equals(this.bankOwnerType, orderPaymentECheck.bankOwnerType) &&
        Objects.equals(this.customerTaxId, orderPaymentECheck.customerTaxId) &&
        Objects.equals(this.driversLicenseDob, orderPaymentECheck.driversLicenseDob) &&
        Objects.equals(this.driversLicenseNumber, orderPaymentECheck.driversLicenseNumber) &&
        Objects.equals(this.driversLicenseState, orderPaymentECheck.driversLicenseState);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bankAbaCode, bankAccountName, bankAccountNumber, bankAccountType, bankName, bankOwnerType, customerTaxId, driversLicenseDob, driversLicenseNumber, driversLicenseState);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderPaymentECheck {\n");
    
    sb.append("    bankAbaCode: ").append(toIndentedString(bankAbaCode)).append("\n");
    sb.append("    bankAccountName: ").append(toIndentedString(bankAccountName)).append("\n");
    sb.append("    bankAccountNumber: ").append(toIndentedString(bankAccountNumber)).append("\n");
    sb.append("    bankAccountType: ").append(toIndentedString(bankAccountType)).append("\n");
    sb.append("    bankName: ").append(toIndentedString(bankName)).append("\n");
    sb.append("    bankOwnerType: ").append(toIndentedString(bankOwnerType)).append("\n");
    sb.append("    customerTaxId: ").append(toIndentedString(customerTaxId)).append("\n");
    sb.append("    driversLicenseDob: ").append(toIndentedString(driversLicenseDob)).append("\n");
    sb.append("    driversLicenseNumber: ").append(toIndentedString(driversLicenseNumber)).append("\n");
    sb.append("    driversLicenseState: ").append(toIndentedString(driversLicenseState)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

