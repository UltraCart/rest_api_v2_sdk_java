/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * TaxProviderUltraCartState
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-09-30T11:24:23.303-04:00")



public class TaxProviderUltraCartState {
  @SerializedName("enabled")
  private Boolean enabled = null;

  @SerializedName("state_code")
  private String stateCode = null;

  @SerializedName("state_name")
  private String stateName = null;

  @SerializedName("tax_gift_charge")
  private Boolean taxGiftCharge = null;

  @SerializedName("tax_gift_wrap")
  private Boolean taxGiftWrap = null;

  @SerializedName("tax_rate_formatted")
  private String taxRateFormatted = null;

  @SerializedName("tax_shipping")
  private Boolean taxShipping = null;

  public TaxProviderUltraCartState enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * True if this state taxes are managed by UltraCart
   * @return enabled
  **/
  @ApiModelProperty(value = "True if this state taxes are managed by UltraCart")
  public Boolean isEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }

  public TaxProviderUltraCartState stateCode(String stateCode) {
    this.stateCode = stateCode;
    return this;
  }

   /**
   * State Code (2 digits)
   * @return stateCode
  **/
  @ApiModelProperty(value = "State Code (2 digits)")
  public String getStateCode() {
    return stateCode;
  }

  public void setStateCode(String stateCode) {
    this.stateCode = stateCode;
  }

  public TaxProviderUltraCartState stateName(String stateName) {
    this.stateName = stateName;
    return this;
  }

   /**
   * Fully spelled out state name
   * @return stateName
  **/
  @ApiModelProperty(value = "Fully spelled out state name")
  public String getStateName() {
    return stateName;
  }

  public void setStateName(String stateName) {
    this.stateName = stateName;
  }

  public TaxProviderUltraCartState taxGiftCharge(Boolean taxGiftCharge) {
    this.taxGiftCharge = taxGiftCharge;
    return this;
  }

   /**
   * True if gift charges should be taxed in this state.
   * @return taxGiftCharge
  **/
  @ApiModelProperty(value = "True if gift charges should be taxed in this state.")
  public Boolean isTaxGiftCharge() {
    return taxGiftCharge;
  }

  public void setTaxGiftCharge(Boolean taxGiftCharge) {
    this.taxGiftCharge = taxGiftCharge;
  }

  public TaxProviderUltraCartState taxGiftWrap(Boolean taxGiftWrap) {
    this.taxGiftWrap = taxGiftWrap;
    return this;
  }

   /**
   * True if gift wrap should be taxed in this state.
   * @return taxGiftWrap
  **/
  @ApiModelProperty(value = "True if gift wrap should be taxed in this state.")
  public Boolean isTaxGiftWrap() {
    return taxGiftWrap;
  }

  public void setTaxGiftWrap(Boolean taxGiftWrap) {
    this.taxGiftWrap = taxGiftWrap;
  }

  public TaxProviderUltraCartState taxRateFormatted(String taxRateFormatted) {
    this.taxRateFormatted = taxRateFormatted;
    return this;
  }

   /**
   * State tax rate formatted for display
   * @return taxRateFormatted
  **/
  @ApiModelProperty(value = "State tax rate formatted for display")
  public String getTaxRateFormatted() {
    return taxRateFormatted;
  }

  public void setTaxRateFormatted(String taxRateFormatted) {
    this.taxRateFormatted = taxRateFormatted;
  }

  public TaxProviderUltraCartState taxShipping(Boolean taxShipping) {
    this.taxShipping = taxShipping;
    return this;
  }

   /**
   * True if shipping should be taxed in this state.
   * @return taxShipping
  **/
  @ApiModelProperty(value = "True if shipping should be taxed in this state.")
  public Boolean isTaxShipping() {
    return taxShipping;
  }

  public void setTaxShipping(Boolean taxShipping) {
    this.taxShipping = taxShipping;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TaxProviderUltraCartState taxProviderUltraCartState = (TaxProviderUltraCartState) o;
    return Objects.equals(this.enabled, taxProviderUltraCartState.enabled) &&
        Objects.equals(this.stateCode, taxProviderUltraCartState.stateCode) &&
        Objects.equals(this.stateName, taxProviderUltraCartState.stateName) &&
        Objects.equals(this.taxGiftCharge, taxProviderUltraCartState.taxGiftCharge) &&
        Objects.equals(this.taxGiftWrap, taxProviderUltraCartState.taxGiftWrap) &&
        Objects.equals(this.taxRateFormatted, taxProviderUltraCartState.taxRateFormatted) &&
        Objects.equals(this.taxShipping, taxProviderUltraCartState.taxShipping);
  }

  @Override
  public int hashCode() {
    return Objects.hash(enabled, stateCode, stateName, taxGiftCharge, taxGiftWrap, taxRateFormatted, taxShipping);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TaxProviderUltraCartState {\n");
    
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    stateCode: ").append(toIndentedString(stateCode)).append("\n");
    sb.append("    stateName: ").append(toIndentedString(stateName)).append("\n");
    sb.append("    taxGiftCharge: ").append(toIndentedString(taxGiftCharge)).append("\n");
    sb.append("    taxGiftWrap: ").append(toIndentedString(taxGiftWrap)).append("\n");
    sb.append("    taxRateFormatted: ").append(toIndentedString(taxRateFormatted)).append("\n");
    sb.append("    taxShipping: ").append(toIndentedString(taxShipping)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

