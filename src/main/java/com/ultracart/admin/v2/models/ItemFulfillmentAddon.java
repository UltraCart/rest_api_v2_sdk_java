/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * ItemFulfillmentAddon
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-01-25T09:55:58.664-05:00[America/Indianapolis]")
public class ItemFulfillmentAddon {
  public static final String SERIALIZED_NAME_ADD_ITEM_ID = "add_item_id";
  @SerializedName(SERIALIZED_NAME_ADD_ITEM_ID)
  private String addItemId;

  public static final String SERIALIZED_NAME_ADD_ITEM_OID = "add_item_oid";
  @SerializedName(SERIALIZED_NAME_ADD_ITEM_OID)
  private Integer addItemOid;

  public static final String SERIALIZED_NAME_INITIAL_ORDER_ONLY = "initial_order_only";
  @SerializedName(SERIALIZED_NAME_INITIAL_ORDER_ONLY)
  private Boolean initialOrderOnly;

  public static final String SERIALIZED_NAME_ONCE_PER_ORDER = "once_per_order";
  @SerializedName(SERIALIZED_NAME_ONCE_PER_ORDER)
  private Boolean oncePerOrder;

  public static final String SERIALIZED_NAME_QUANTITY = "quantity";
  @SerializedName(SERIALIZED_NAME_QUANTITY)
  private Integer quantity;

  public ItemFulfillmentAddon() { 
  }

  public ItemFulfillmentAddon addItemId(String addItemId) {
    
    this.addItemId = addItemId;
    return this;
  }

   /**
   * Add Item Id
   * @return addItemId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Add Item Id")

  public String getAddItemId() {
    return addItemId;
  }


  public void setAddItemId(String addItemId) {
    this.addItemId = addItemId;
  }


  public ItemFulfillmentAddon addItemOid(Integer addItemOid) {
    
    this.addItemOid = addItemOid;
    return this;
  }

   /**
   * Add Item object identifier
   * @return addItemOid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Add Item object identifier")

  public Integer getAddItemOid() {
    return addItemOid;
  }


  public void setAddItemOid(Integer addItemOid) {
    this.addItemOid = addItemOid;
  }


  public ItemFulfillmentAddon initialOrderOnly(Boolean initialOrderOnly) {
    
    this.initialOrderOnly = initialOrderOnly;
    return this;
  }

   /**
   * Initial Order Only
   * @return initialOrderOnly
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Initial Order Only")

  public Boolean getInitialOrderOnly() {
    return initialOrderOnly;
  }


  public void setInitialOrderOnly(Boolean initialOrderOnly) {
    this.initialOrderOnly = initialOrderOnly;
  }


  public ItemFulfillmentAddon oncePerOrder(Boolean oncePerOrder) {
    
    this.oncePerOrder = oncePerOrder;
    return this;
  }

   /**
   * Once Per Order
   * @return oncePerOrder
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Once Per Order")

  public Boolean getOncePerOrder() {
    return oncePerOrder;
  }


  public void setOncePerOrder(Boolean oncePerOrder) {
    this.oncePerOrder = oncePerOrder;
  }


  public ItemFulfillmentAddon quantity(Integer quantity) {
    
    this.quantity = quantity;
    return this;
  }

   /**
   * Quantity
   * @return quantity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Quantity")

  public Integer getQuantity() {
    return quantity;
  }


  public void setQuantity(Integer quantity) {
    this.quantity = quantity;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ItemFulfillmentAddon itemFulfillmentAddon = (ItemFulfillmentAddon) o;
    return Objects.equals(this.addItemId, itemFulfillmentAddon.addItemId) &&
        Objects.equals(this.addItemOid, itemFulfillmentAddon.addItemOid) &&
        Objects.equals(this.initialOrderOnly, itemFulfillmentAddon.initialOrderOnly) &&
        Objects.equals(this.oncePerOrder, itemFulfillmentAddon.oncePerOrder) &&
        Objects.equals(this.quantity, itemFulfillmentAddon.quantity);
  }

  @Override
  public int hashCode() {
    return Objects.hash(addItemId, addItemOid, initialOrderOnly, oncePerOrder, quantity);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ItemFulfillmentAddon {\n");
    sb.append("    addItemId: ").append(toIndentedString(addItemId)).append("\n");
    sb.append("    addItemOid: ").append(toIndentedString(addItemOid)).append("\n");
    sb.append("    initialOrderOnly: ").append(toIndentedString(initialOrderOnly)).append("\n");
    sb.append("    oncePerOrder: ").append(toIndentedString(oncePerOrder)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("add_item_id");
    openapiFields.add("add_item_oid");
    openapiFields.add("initial_order_only");
    openapiFields.add("once_per_order");
    openapiFields.add("quantity");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ItemFulfillmentAddon
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (ItemFulfillmentAddon.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in ItemFulfillmentAddon is not found in the empty JSON string", ItemFulfillmentAddon.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!ItemFulfillmentAddon.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ItemFulfillmentAddon` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("add_item_id") != null && !jsonObj.get("add_item_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `add_item_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("add_item_id").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ItemFulfillmentAddon.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ItemFulfillmentAddon' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ItemFulfillmentAddon> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ItemFulfillmentAddon.class));

       return (TypeAdapter<T>) new TypeAdapter<ItemFulfillmentAddon>() {
           @Override
           public void write(JsonWriter out, ItemFulfillmentAddon value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ItemFulfillmentAddon read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ItemFulfillmentAddon given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ItemFulfillmentAddon
  * @throws IOException if the JSON string is invalid with respect to ItemFulfillmentAddon
  */
  public static ItemFulfillmentAddon fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ItemFulfillmentAddon.class);
  }

 /**
  * Convert an instance of ItemFulfillmentAddon to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

