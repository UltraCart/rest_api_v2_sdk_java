/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.AccountsReceivableRetryConfig;
import com.ultracart.admin.v2.models.Error;
import com.ultracart.admin.v2.models.ResponseMetadata;
import com.ultracart.admin.v2.models.Warning;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * AccountsReceivableRetryConfigResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-10-31T14:14:26.056-04:00[America/Indianapolis]")
public class AccountsReceivableRetryConfigResponse {
  public static final String SERIALIZED_NAME_CONFIG = "config";
  @SerializedName(SERIALIZED_NAME_CONFIG)
  private AccountsReceivableRetryConfig config;

  public static final String SERIALIZED_NAME_COUPON_CODES = "coupon_codes";
  @SerializedName(SERIALIZED_NAME_COUPON_CODES)
  private List<String> couponCodes = null;

  public static final String SERIALIZED_NAME_EMAILS = "emails";
  @SerializedName(SERIALIZED_NAME_EMAILS)
  private List<String> emails = null;

  public static final String SERIALIZED_NAME_ERROR = "error";
  @SerializedName(SERIALIZED_NAME_ERROR)
  private Error error;

  public static final String SERIALIZED_NAME_HAS_LINKED_ACCOUNTS = "has_linked_accounts";
  @SerializedName(SERIALIZED_NAME_HAS_LINKED_ACCOUNTS)
  private Boolean hasLinkedAccounts;

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  private ResponseMetadata metadata;

  public static final String SERIALIZED_NAME_SUCCESS = "success";
  @SerializedName(SERIALIZED_NAME_SUCCESS)
  private Boolean success;

  public static final String SERIALIZED_NAME_WARNING = "warning";
  @SerializedName(SERIALIZED_NAME_WARNING)
  private Warning warning;

  public AccountsReceivableRetryConfigResponse() { 
  }

  public AccountsReceivableRetryConfigResponse config(AccountsReceivableRetryConfig config) {
    
    this.config = config;
    return this;
  }

   /**
   * Get config
   * @return config
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AccountsReceivableRetryConfig getConfig() {
    return config;
  }


  public void setConfig(AccountsReceivableRetryConfig config) {
    this.config = config;
  }


  public AccountsReceivableRetryConfigResponse couponCodes(List<String> couponCodes) {
    
    this.couponCodes = couponCodes;
    return this;
  }

  public AccountsReceivableRetryConfigResponse addCouponCodesItem(String couponCodesItem) {
    if (this.couponCodes == null) {
      this.couponCodes = new ArrayList<>();
    }
    this.couponCodes.add(couponCodesItem);
    return this;
  }

   /**
   * Get couponCodes
   * @return couponCodes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getCouponCodes() {
    return couponCodes;
  }


  public void setCouponCodes(List<String> couponCodes) {
    this.couponCodes = couponCodes;
  }


  public AccountsReceivableRetryConfigResponse emails(List<String> emails) {
    
    this.emails = emails;
    return this;
  }

  public AccountsReceivableRetryConfigResponse addEmailsItem(String emailsItem) {
    if (this.emails == null) {
      this.emails = new ArrayList<>();
    }
    this.emails.add(emailsItem);
    return this;
  }

   /**
   * Get emails
   * @return emails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getEmails() {
    return emails;
  }


  public void setEmails(List<String> emails) {
    this.emails = emails;
  }


  public AccountsReceivableRetryConfigResponse error(Error error) {
    
    this.error = error;
    return this;
  }

   /**
   * Get error
   * @return error
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Error getError() {
    return error;
  }


  public void setError(Error error) {
    this.error = error;
  }


  public AccountsReceivableRetryConfigResponse hasLinkedAccounts(Boolean hasLinkedAccounts) {
    
    this.hasLinkedAccounts = hasLinkedAccounts;
    return this;
  }

   /**
   * Get hasLinkedAccounts
   * @return hasLinkedAccounts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getHasLinkedAccounts() {
    return hasLinkedAccounts;
  }


  public void setHasLinkedAccounts(Boolean hasLinkedAccounts) {
    this.hasLinkedAccounts = hasLinkedAccounts;
  }


  public AccountsReceivableRetryConfigResponse metadata(ResponseMetadata metadata) {
    
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ResponseMetadata getMetadata() {
    return metadata;
  }


  public void setMetadata(ResponseMetadata metadata) {
    this.metadata = metadata;
  }


  public AccountsReceivableRetryConfigResponse success(Boolean success) {
    
    this.success = success;
    return this;
  }

   /**
   * Indicates if API call was successful
   * @return success
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates if API call was successful")

  public Boolean getSuccess() {
    return success;
  }


  public void setSuccess(Boolean success) {
    this.success = success;
  }


  public AccountsReceivableRetryConfigResponse warning(Warning warning) {
    
    this.warning = warning;
    return this;
  }

   /**
   * Get warning
   * @return warning
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Warning getWarning() {
    return warning;
  }


  public void setWarning(Warning warning) {
    this.warning = warning;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountsReceivableRetryConfigResponse accountsReceivableRetryConfigResponse = (AccountsReceivableRetryConfigResponse) o;
    return Objects.equals(this.config, accountsReceivableRetryConfigResponse.config) &&
        Objects.equals(this.couponCodes, accountsReceivableRetryConfigResponse.couponCodes) &&
        Objects.equals(this.emails, accountsReceivableRetryConfigResponse.emails) &&
        Objects.equals(this.error, accountsReceivableRetryConfigResponse.error) &&
        Objects.equals(this.hasLinkedAccounts, accountsReceivableRetryConfigResponse.hasLinkedAccounts) &&
        Objects.equals(this.metadata, accountsReceivableRetryConfigResponse.metadata) &&
        Objects.equals(this.success, accountsReceivableRetryConfigResponse.success) &&
        Objects.equals(this.warning, accountsReceivableRetryConfigResponse.warning);
  }

  @Override
  public int hashCode() {
    return Objects.hash(config, couponCodes, emails, error, hasLinkedAccounts, metadata, success, warning);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountsReceivableRetryConfigResponse {\n");
    sb.append("    config: ").append(toIndentedString(config)).append("\n");
    sb.append("    couponCodes: ").append(toIndentedString(couponCodes)).append("\n");
    sb.append("    emails: ").append(toIndentedString(emails)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("    hasLinkedAccounts: ").append(toIndentedString(hasLinkedAccounts)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    success: ").append(toIndentedString(success)).append("\n");
    sb.append("    warning: ").append(toIndentedString(warning)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("config");
    openapiFields.add("coupon_codes");
    openapiFields.add("emails");
    openapiFields.add("error");
    openapiFields.add("has_linked_accounts");
    openapiFields.add("metadata");
    openapiFields.add("success");
    openapiFields.add("warning");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to AccountsReceivableRetryConfigResponse
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (AccountsReceivableRetryConfigResponse.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in AccountsReceivableRetryConfigResponse is not found in the empty JSON string", AccountsReceivableRetryConfigResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!AccountsReceivableRetryConfigResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AccountsReceivableRetryConfigResponse` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      // validate the optional field `config`
      if (jsonObj.getAsJsonObject("config") != null) {
        AccountsReceivableRetryConfig.validateJsonObject(jsonObj.getAsJsonObject("config"));
      }
      // ensure the json data is an array
      if (jsonObj.get("coupon_codes") != null && !jsonObj.get("coupon_codes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `coupon_codes` to be an array in the JSON string but got `%s`", jsonObj.get("coupon_codes").toString()));
      }
      // ensure the json data is an array
      if (jsonObj.get("emails") != null && !jsonObj.get("emails").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `emails` to be an array in the JSON string but got `%s`", jsonObj.get("emails").toString()));
      }
      // validate the optional field `error`
      if (jsonObj.getAsJsonObject("error") != null) {
        Error.validateJsonObject(jsonObj.getAsJsonObject("error"));
      }
      // validate the optional field `metadata`
      if (jsonObj.getAsJsonObject("metadata") != null) {
        ResponseMetadata.validateJsonObject(jsonObj.getAsJsonObject("metadata"));
      }
      // validate the optional field `warning`
      if (jsonObj.getAsJsonObject("warning") != null) {
        Warning.validateJsonObject(jsonObj.getAsJsonObject("warning"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AccountsReceivableRetryConfigResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AccountsReceivableRetryConfigResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AccountsReceivableRetryConfigResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AccountsReceivableRetryConfigResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<AccountsReceivableRetryConfigResponse>() {
           @Override
           public void write(JsonWriter out, AccountsReceivableRetryConfigResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AccountsReceivableRetryConfigResponse read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AccountsReceivableRetryConfigResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AccountsReceivableRetryConfigResponse
  * @throws IOException if the JSON string is invalid with respect to AccountsReceivableRetryConfigResponse
  */
  public static AccountsReceivableRetryConfigResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AccountsReceivableRetryConfigResponse.class);
  }

 /**
  * Convert an instance of AccountsReceivableRetryConfigResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

