/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * AvalaraConfig
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-12-13T10:18:15.535-05:00[America/Indianapolis]")
public class AvalaraConfig {
  public static final String SERIALIZED_NAME_ACCOUNT_ID = "account_id";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_ID)
  private String accountId;

  public static final String SERIALIZED_NAME_ACTIVE = "active";
  @SerializedName(SERIALIZED_NAME_ACTIVE)
  private Boolean active;

  public static final String SERIALIZED_NAME_AVALARA_OID = "avalara_oid";
  @SerializedName(SERIALIZED_NAME_AVALARA_OID)
  private Integer avalaraOid;

  public static final String SERIALIZED_NAME_COMPANY_ID = "company_id";
  @SerializedName(SERIALIZED_NAME_COMPANY_ID)
  private String companyId;

  public static final String SERIALIZED_NAME_ENABLE_UPC = "enable_upc";
  @SerializedName(SERIALIZED_NAME_ENABLE_UPC)
  private Boolean enableUpc;

  public static final String SERIALIZED_NAME_ESTIMATE_ONLY = "estimate_only";
  @SerializedName(SERIALIZED_NAME_ESTIMATE_ONLY)
  private Boolean estimateOnly;

  public static final String SERIALIZED_NAME_GUEST_CUSTOMER_CODE = "guest_customer_code";
  @SerializedName(SERIALIZED_NAME_GUEST_CUSTOMER_CODE)
  private String guestCustomerCode;

  public static final String SERIALIZED_NAME_LAST_TEST_DTS = "last_test_dts";
  @SerializedName(SERIALIZED_NAME_LAST_TEST_DTS)
  private String lastTestDts;

  public static final String SERIALIZED_NAME_LICENSE_KEY = "license_key";
  @SerializedName(SERIALIZED_NAME_LICENSE_KEY)
  private String licenseKey;

  public static final String SERIALIZED_NAME_SANDBOX = "sandbox";
  @SerializedName(SERIALIZED_NAME_SANDBOX)
  private Boolean sandbox;

  public static final String SERIALIZED_NAME_SEND_TEST_ORDERS = "send_test_orders";
  @SerializedName(SERIALIZED_NAME_SEND_TEST_ORDERS)
  private Boolean sendTestOrders;

  public static final String SERIALIZED_NAME_SERVICE_URL = "service_url";
  @SerializedName(SERIALIZED_NAME_SERVICE_URL)
  private String serviceUrl;

  public static final String SERIALIZED_NAME_TEST_RESULTS = "test_results";
  @SerializedName(SERIALIZED_NAME_TEST_RESULTS)
  private String testResults;

  public AvalaraConfig() { 
  }

  public AvalaraConfig accountId(String accountId) {
    
    this.accountId = accountId;
    return this;
  }

   /**
   * Avalara account ID
   * @return accountId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Avalara account ID")

  public String getAccountId() {
    return accountId;
  }


  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }


  public AvalaraConfig active(Boolean active) {
    
    this.active = active;
    return this;
  }

   /**
   * True if Avalara is active for this merchant
   * @return active
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if Avalara is active for this merchant")

  public Boolean getActive() {
    return active;
  }


  public void setActive(Boolean active) {
    this.active = active;
  }


  public AvalaraConfig avalaraOid(Integer avalaraOid) {
    
    this.avalaraOid = avalaraOid;
    return this;
  }

   /**
   * Unique identifier for this avalara config object
   * @return avalaraOid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unique identifier for this avalara config object")

  public Integer getAvalaraOid() {
    return avalaraOid;
  }


  public void setAvalaraOid(Integer avalaraOid) {
    this.avalaraOid = avalaraOid;
  }


  public AvalaraConfig companyId(String companyId) {
    
    this.companyId = companyId;
    return this;
  }

   /**
   * Avalara company ID
   * @return companyId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Avalara company ID")

  public String getCompanyId() {
    return companyId;
  }


  public void setCompanyId(String companyId) {
    this.companyId = companyId;
  }


  public AvalaraConfig enableUpc(Boolean enableUpc) {
    
    this.enableUpc = enableUpc;
    return this;
  }

   /**
   * True if this Avalara configuration is set to enable tax valuation by UPC
   * @return enableUpc
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if this Avalara configuration is set to enable tax valuation by UPC")

  public Boolean getEnableUpc() {
    return enableUpc;
  }


  public void setEnableUpc(Boolean enableUpc) {
    this.enableUpc = enableUpc;
  }


  public AvalaraConfig estimateOnly(Boolean estimateOnly) {
    
    this.estimateOnly = estimateOnly;
    return this;
  }

   /**
   * True if this Avalara configuration is to estimate taxes only and not report placed orders to Avalara
   * @return estimateOnly
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if this Avalara configuration is to estimate taxes only and not report placed orders to Avalara")

  public Boolean getEstimateOnly() {
    return estimateOnly;
  }


  public void setEstimateOnly(Boolean estimateOnly) {
    this.estimateOnly = estimateOnly;
  }


  public AvalaraConfig guestCustomerCode(String guestCustomerCode) {
    
    this.guestCustomerCode = guestCustomerCode;
    return this;
  }

   /**
   * Optional customer code for customers without profiles, defaults to GuestCustomer
   * @return guestCustomerCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Optional customer code for customers without profiles, defaults to GuestCustomer")

  public String getGuestCustomerCode() {
    return guestCustomerCode;
  }


  public void setGuestCustomerCode(String guestCustomerCode) {
    this.guestCustomerCode = guestCustomerCode;
  }


  public AvalaraConfig lastTestDts(String lastTestDts) {
    
    this.lastTestDts = lastTestDts;
    return this;
  }

   /**
   * Date/time of the connection test to Avalara
   * @return lastTestDts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Date/time of the connection test to Avalara")

  public String getLastTestDts() {
    return lastTestDts;
  }


  public void setLastTestDts(String lastTestDts) {
    this.lastTestDts = lastTestDts;
  }


  public AvalaraConfig licenseKey(String licenseKey) {
    
    this.licenseKey = licenseKey;
    return this;
  }

   /**
   * Avalara license key
   * @return licenseKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Avalara license key")

  public String getLicenseKey() {
    return licenseKey;
  }


  public void setLicenseKey(String licenseKey) {
    this.licenseKey = licenseKey;
  }


  public AvalaraConfig sandbox(Boolean sandbox) {
    
    this.sandbox = sandbox;
    return this;
  }

   /**
   * True if this Avalara instance is pointed at the Avalara Sandbox
   * @return sandbox
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if this Avalara instance is pointed at the Avalara Sandbox")

  public Boolean getSandbox() {
    return sandbox;
  }


  public void setSandbox(Boolean sandbox) {
    this.sandbox = sandbox;
  }


  public AvalaraConfig sendTestOrders(Boolean sendTestOrders) {
    
    this.sendTestOrders = sendTestOrders;
    return this;
  }

   /**
   * Send test orders through to Avalara.  The default is to not transmit test orders to Avalara.
   * @return sendTestOrders
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Send test orders through to Avalara.  The default is to not transmit test orders to Avalara.")

  public Boolean getSendTestOrders() {
    return sendTestOrders;
  }


  public void setSendTestOrders(Boolean sendTestOrders) {
    this.sendTestOrders = sendTestOrders;
  }


  public AvalaraConfig serviceUrl(String serviceUrl) {
    
    this.serviceUrl = serviceUrl;
    return this;
  }

   /**
   * Avalara service URL
   * @return serviceUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Avalara service URL")

  public String getServiceUrl() {
    return serviceUrl;
  }


  public void setServiceUrl(String serviceUrl) {
    this.serviceUrl = serviceUrl;
  }


  public AvalaraConfig testResults(String testResults) {
    
    this.testResults = testResults;
    return this;
  }

   /**
   * Test results of the last connection test to Avalara
   * @return testResults
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Test results of the last connection test to Avalara")

  public String getTestResults() {
    return testResults;
  }


  public void setTestResults(String testResults) {
    this.testResults = testResults;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AvalaraConfig avalaraConfig = (AvalaraConfig) o;
    return Objects.equals(this.accountId, avalaraConfig.accountId) &&
        Objects.equals(this.active, avalaraConfig.active) &&
        Objects.equals(this.avalaraOid, avalaraConfig.avalaraOid) &&
        Objects.equals(this.companyId, avalaraConfig.companyId) &&
        Objects.equals(this.enableUpc, avalaraConfig.enableUpc) &&
        Objects.equals(this.estimateOnly, avalaraConfig.estimateOnly) &&
        Objects.equals(this.guestCustomerCode, avalaraConfig.guestCustomerCode) &&
        Objects.equals(this.lastTestDts, avalaraConfig.lastTestDts) &&
        Objects.equals(this.licenseKey, avalaraConfig.licenseKey) &&
        Objects.equals(this.sandbox, avalaraConfig.sandbox) &&
        Objects.equals(this.sendTestOrders, avalaraConfig.sendTestOrders) &&
        Objects.equals(this.serviceUrl, avalaraConfig.serviceUrl) &&
        Objects.equals(this.testResults, avalaraConfig.testResults);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, active, avalaraOid, companyId, enableUpc, estimateOnly, guestCustomerCode, lastTestDts, licenseKey, sandbox, sendTestOrders, serviceUrl, testResults);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AvalaraConfig {\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    avalaraOid: ").append(toIndentedString(avalaraOid)).append("\n");
    sb.append("    companyId: ").append(toIndentedString(companyId)).append("\n");
    sb.append("    enableUpc: ").append(toIndentedString(enableUpc)).append("\n");
    sb.append("    estimateOnly: ").append(toIndentedString(estimateOnly)).append("\n");
    sb.append("    guestCustomerCode: ").append(toIndentedString(guestCustomerCode)).append("\n");
    sb.append("    lastTestDts: ").append(toIndentedString(lastTestDts)).append("\n");
    sb.append("    licenseKey: ").append(toIndentedString(licenseKey)).append("\n");
    sb.append("    sandbox: ").append(toIndentedString(sandbox)).append("\n");
    sb.append("    sendTestOrders: ").append(toIndentedString(sendTestOrders)).append("\n");
    sb.append("    serviceUrl: ").append(toIndentedString(serviceUrl)).append("\n");
    sb.append("    testResults: ").append(toIndentedString(testResults)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account_id");
    openapiFields.add("active");
    openapiFields.add("avalara_oid");
    openapiFields.add("company_id");
    openapiFields.add("enable_upc");
    openapiFields.add("estimate_only");
    openapiFields.add("guest_customer_code");
    openapiFields.add("last_test_dts");
    openapiFields.add("license_key");
    openapiFields.add("sandbox");
    openapiFields.add("send_test_orders");
    openapiFields.add("service_url");
    openapiFields.add("test_results");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to AvalaraConfig
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (AvalaraConfig.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in AvalaraConfig is not found in the empty JSON string", AvalaraConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!AvalaraConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AvalaraConfig` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("account_id") != null && !jsonObj.get("account_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_id").toString()));
      }
      if (jsonObj.get("company_id") != null && !jsonObj.get("company_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `company_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("company_id").toString()));
      }
      if (jsonObj.get("guest_customer_code") != null && !jsonObj.get("guest_customer_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `guest_customer_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("guest_customer_code").toString()));
      }
      if (jsonObj.get("last_test_dts") != null && !jsonObj.get("last_test_dts").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_test_dts` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_test_dts").toString()));
      }
      if (jsonObj.get("license_key") != null && !jsonObj.get("license_key").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `license_key` to be a primitive type in the JSON string but got `%s`", jsonObj.get("license_key").toString()));
      }
      if (jsonObj.get("service_url") != null && !jsonObj.get("service_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `service_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("service_url").toString()));
      }
      if (jsonObj.get("test_results") != null && !jsonObj.get("test_results").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `test_results` to be a primitive type in the JSON string but got `%s`", jsonObj.get("test_results").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AvalaraConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AvalaraConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AvalaraConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AvalaraConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<AvalaraConfig>() {
           @Override
           public void write(JsonWriter out, AvalaraConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AvalaraConfig read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AvalaraConfig given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AvalaraConfig
  * @throws IOException if the JSON string is invalid with respect to AvalaraConfig
  */
  public static AvalaraConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AvalaraConfig.class);
  }

 /**
  * Convert an instance of AvalaraConfig to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

