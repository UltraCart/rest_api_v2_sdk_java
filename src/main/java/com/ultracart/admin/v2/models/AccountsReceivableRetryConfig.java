/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.AccountsReceivableRetryDayActivity;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * AccountsReceivableRetryConfig
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-12-02T15:02:29.645-05:00[America/Indianapolis]")
public class AccountsReceivableRetryConfig {
  public static final String SERIALIZED_NAME_ACTIVE = "active";
  @SerializedName(SERIALIZED_NAME_ACTIVE)
  private Boolean active;

  public static final String SERIALIZED_NAME_ALLOW_PROCESS_LINKED_ACCOUNTS = "allow_process_linked_accounts";
  @SerializedName(SERIALIZED_NAME_ALLOW_PROCESS_LINKED_ACCOUNTS)
  private Boolean allowProcessLinkedAccounts;

  public static final String SERIALIZED_NAME_CANCEL_AUTO_ORDER = "cancel_auto_order";
  @SerializedName(SERIALIZED_NAME_CANCEL_AUTO_ORDER)
  private Boolean cancelAutoOrder;

  public static final String SERIALIZED_NAME_CURRENT_SERVICE_PLAN = "current_service_plan";
  @SerializedName(SERIALIZED_NAME_CURRENT_SERVICE_PLAN)
  private String currentServicePlan;

  public static final String SERIALIZED_NAME_DAILY_ACTIVITY_LIST = "daily_activity_list";
  @SerializedName(SERIALIZED_NAME_DAILY_ACTIVITY_LIST)
  private List<AccountsReceivableRetryDayActivity> dailyActivityList = null;

  public static final String SERIALIZED_NAME_MANAGED_BY_LINKED_ACCOUNT_MERCHANT_ID = "managed_by_linked_account_merchant_id";
  @SerializedName(SERIALIZED_NAME_MANAGED_BY_LINKED_ACCOUNT_MERCHANT_ID)
  private Boolean managedByLinkedAccountMerchantId;

  public static final String SERIALIZED_NAME_MERCHANT_ID = "merchant_id";
  @SerializedName(SERIALIZED_NAME_MERCHANT_ID)
  private String merchantId;

  public static final String SERIALIZED_NAME_NOTIFY_EMAILS = "notify_emails";
  @SerializedName(SERIALIZED_NAME_NOTIFY_EMAILS)
  private List<String> notifyEmails = null;

  public static final String SERIALIZED_NAME_NOTIFY_REJECTIONS = "notify_rejections";
  @SerializedName(SERIALIZED_NAME_NOTIFY_REJECTIONS)
  private Boolean notifyRejections;

  public static final String SERIALIZED_NAME_NOTIFY_SUCCESSES = "notify_successes";
  @SerializedName(SERIALIZED_NAME_NOTIFY_SUCCESSES)
  private Boolean notifySuccesses;

  public static final String SERIALIZED_NAME_PROCESS_LINKED_ACCOUNTS = "process_linked_accounts";
  @SerializedName(SERIALIZED_NAME_PROCESS_LINKED_ACCOUNTS)
  private Boolean processLinkedAccounts;

  public static final String SERIALIZED_NAME_PROCESSING_PERCENTAGE = "processing_percentage";
  @SerializedName(SERIALIZED_NAME_PROCESSING_PERCENTAGE)
  private String processingPercentage;

  public static final String SERIALIZED_NAME_REJECT_AT_END = "reject_at_end";
  @SerializedName(SERIALIZED_NAME_REJECT_AT_END)
  private Boolean rejectAtEnd;

  public static final String SERIALIZED_NAME_TRIAL_MODE = "trial_mode";
  @SerializedName(SERIALIZED_NAME_TRIAL_MODE)
  private Boolean trialMode;

  public static final String SERIALIZED_NAME_TRIAL_MODE_EXPIRATION_DTS = "trial_mode_expiration_dts";
  @SerializedName(SERIALIZED_NAME_TRIAL_MODE_EXPIRATION_DTS)
  private String trialModeExpirationDts;

  public AccountsReceivableRetryConfig() { 
  }

  public AccountsReceivableRetryConfig active(Boolean active) {
    
    this.active = active;
    return this;
  }

   /**
   * True if the retry should run daily.  False puts the retry service into an inactive state for this merchant.
   * @return active
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if the retry should run daily.  False puts the retry service into an inactive state for this merchant.")

  public Boolean getActive() {
    return active;
  }


  public void setActive(Boolean active) {
    this.active = active;
  }


  public AccountsReceivableRetryConfig allowProcessLinkedAccounts(Boolean allowProcessLinkedAccounts) {
    
    this.allowProcessLinkedAccounts = allowProcessLinkedAccounts;
    return this;
  }

   /**
   * True if this account has linked accounts that it can process.
   * @return allowProcessLinkedAccounts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if this account has linked accounts that it can process.")

  public Boolean getAllowProcessLinkedAccounts() {
    return allowProcessLinkedAccounts;
  }


  public void setAllowProcessLinkedAccounts(Boolean allowProcessLinkedAccounts) {
    this.allowProcessLinkedAccounts = allowProcessLinkedAccounts;
  }


  public AccountsReceivableRetryConfig cancelAutoOrder(Boolean cancelAutoOrder) {
    
    this.cancelAutoOrder = cancelAutoOrder;
    return this;
  }

   /**
   * If true also cancel the auto order if the order is rejected at the end
   * @return cancelAutoOrder
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If true also cancel the auto order if the order is rejected at the end")

  public Boolean getCancelAutoOrder() {
    return cancelAutoOrder;
  }


  public void setCancelAutoOrder(Boolean cancelAutoOrder) {
    this.cancelAutoOrder = cancelAutoOrder;
  }


  public AccountsReceivableRetryConfig currentServicePlan(String currentServicePlan) {
    
    this.currentServicePlan = currentServicePlan;
    return this;
  }

   /**
   * The current service plan that the account is on.
   * @return currentServicePlan
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The current service plan that the account is on.")

  public String getCurrentServicePlan() {
    return currentServicePlan;
  }


  public void setCurrentServicePlan(String currentServicePlan) {
    this.currentServicePlan = currentServicePlan;
  }


  public AccountsReceivableRetryConfig dailyActivityList(List<AccountsReceivableRetryDayActivity> dailyActivityList) {
    
    this.dailyActivityList = dailyActivityList;
    return this;
  }

  public AccountsReceivableRetryConfig addDailyActivityListItem(AccountsReceivableRetryDayActivity dailyActivityListItem) {
    if (this.dailyActivityList == null) {
      this.dailyActivityList = new ArrayList<>();
    }
    this.dailyActivityList.add(dailyActivityListItem);
    return this;
  }

   /**
   * A list of days and what actions should take place on those days after an order reaches accounts receivable
   * @return dailyActivityList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of days and what actions should take place on those days after an order reaches accounts receivable")

  public List<AccountsReceivableRetryDayActivity> getDailyActivityList() {
    return dailyActivityList;
  }


  public void setDailyActivityList(List<AccountsReceivableRetryDayActivity> dailyActivityList) {
    this.dailyActivityList = dailyActivityList;
  }


  public AccountsReceivableRetryConfig managedByLinkedAccountMerchantId(Boolean managedByLinkedAccountMerchantId) {
    
    this.managedByLinkedAccountMerchantId = managedByLinkedAccountMerchantId;
    return this;
  }

   /**
   * If not null, this account is managed by the specified parent merchant id.
   * @return managedByLinkedAccountMerchantId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If not null, this account is managed by the specified parent merchant id.")

  public Boolean getManagedByLinkedAccountMerchantId() {
    return managedByLinkedAccountMerchantId;
  }


  public void setManagedByLinkedAccountMerchantId(Boolean managedByLinkedAccountMerchantId) {
    this.managedByLinkedAccountMerchantId = managedByLinkedAccountMerchantId;
  }


  public AccountsReceivableRetryConfig merchantId(String merchantId) {
    
    this.merchantId = merchantId;
    return this;
  }

   /**
   * UltraCart merchant ID
   * @return merchantId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "UltraCart merchant ID")

  public String getMerchantId() {
    return merchantId;
  }


  public void setMerchantId(String merchantId) {
    this.merchantId = merchantId;
  }


  public AccountsReceivableRetryConfig notifyEmails(List<String> notifyEmails) {
    
    this.notifyEmails = notifyEmails;
    return this;
  }

  public AccountsReceivableRetryConfig addNotifyEmailsItem(String notifyEmailsItem) {
    if (this.notifyEmails == null) {
      this.notifyEmails = new ArrayList<>();
    }
    this.notifyEmails.add(notifyEmailsItem);
    return this;
  }

   /**
   * A list of email addresses to receive summary notifications from the retry service.
   * @return notifyEmails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of email addresses to receive summary notifications from the retry service.")

  public List<String> getNotifyEmails() {
    return notifyEmails;
  }


  public void setNotifyEmails(List<String> notifyEmails) {
    this.notifyEmails = notifyEmails;
  }


  public AccountsReceivableRetryConfig notifyRejections(Boolean notifyRejections) {
    
    this.notifyRejections = notifyRejections;
    return this;
  }

   /**
   * If true, email addresses are notified of rejections.
   * @return notifyRejections
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If true, email addresses are notified of rejections.")

  public Boolean getNotifyRejections() {
    return notifyRejections;
  }


  public void setNotifyRejections(Boolean notifyRejections) {
    this.notifyRejections = notifyRejections;
  }


  public AccountsReceivableRetryConfig notifySuccesses(Boolean notifySuccesses) {
    
    this.notifySuccesses = notifySuccesses;
    return this;
  }

   /**
   * If true, email addresses are notified of successful charges.
   * @return notifySuccesses
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If true, email addresses are notified of successful charges.")

  public Boolean getNotifySuccesses() {
    return notifySuccesses;
  }


  public void setNotifySuccesses(Boolean notifySuccesses) {
    this.notifySuccesses = notifySuccesses;
  }


  public AccountsReceivableRetryConfig processLinkedAccounts(Boolean processLinkedAccounts) {
    
    this.processLinkedAccounts = processLinkedAccounts;
    return this;
  }

   /**
   * If true, all linked accounts are also processed using the same rules.
   * @return processLinkedAccounts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If true, all linked accounts are also processed using the same rules.")

  public Boolean getProcessLinkedAccounts() {
    return processLinkedAccounts;
  }


  public void setProcessLinkedAccounts(Boolean processLinkedAccounts) {
    this.processLinkedAccounts = processLinkedAccounts;
  }


  public AccountsReceivableRetryConfig processingPercentage(String processingPercentage) {
    
    this.processingPercentage = processingPercentage;
    return this;
  }

   /**
   * The percentage rate charged for the service.
   * @return processingPercentage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The percentage rate charged for the service.")

  public String getProcessingPercentage() {
    return processingPercentage;
  }


  public void setProcessingPercentage(String processingPercentage) {
    this.processingPercentage = processingPercentage;
  }


  public AccountsReceivableRetryConfig rejectAtEnd(Boolean rejectAtEnd) {
    
    this.rejectAtEnd = rejectAtEnd;
    return this;
  }

   /**
   * If true, the order is rejected the day after the last configured activity day
   * @return rejectAtEnd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If true, the order is rejected the day after the last configured activity day")

  public Boolean getRejectAtEnd() {
    return rejectAtEnd;
  }


  public void setRejectAtEnd(Boolean rejectAtEnd) {
    this.rejectAtEnd = rejectAtEnd;
  }


  public AccountsReceivableRetryConfig trialMode(Boolean trialMode) {
    
    this.trialMode = trialMode;
    return this;
  }

   /**
   * True if the account is currently in trial mode.  Set to false to exit trial mode.
   * @return trialMode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if the account is currently in trial mode.  Set to false to exit trial mode.")

  public Boolean getTrialMode() {
    return trialMode;
  }


  public void setTrialMode(Boolean trialMode) {
    this.trialMode = trialMode;
  }


  public AccountsReceivableRetryConfig trialModeExpirationDts(String trialModeExpirationDts) {
    
    this.trialModeExpirationDts = trialModeExpirationDts;
    return this;
  }

   /**
   * The date when trial mode expires.  If this date is reached without exiting trial mode, the service will de-activate.
   * @return trialModeExpirationDts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date when trial mode expires.  If this date is reached without exiting trial mode, the service will de-activate.")

  public String getTrialModeExpirationDts() {
    return trialModeExpirationDts;
  }


  public void setTrialModeExpirationDts(String trialModeExpirationDts) {
    this.trialModeExpirationDts = trialModeExpirationDts;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountsReceivableRetryConfig accountsReceivableRetryConfig = (AccountsReceivableRetryConfig) o;
    return Objects.equals(this.active, accountsReceivableRetryConfig.active) &&
        Objects.equals(this.allowProcessLinkedAccounts, accountsReceivableRetryConfig.allowProcessLinkedAccounts) &&
        Objects.equals(this.cancelAutoOrder, accountsReceivableRetryConfig.cancelAutoOrder) &&
        Objects.equals(this.currentServicePlan, accountsReceivableRetryConfig.currentServicePlan) &&
        Objects.equals(this.dailyActivityList, accountsReceivableRetryConfig.dailyActivityList) &&
        Objects.equals(this.managedByLinkedAccountMerchantId, accountsReceivableRetryConfig.managedByLinkedAccountMerchantId) &&
        Objects.equals(this.merchantId, accountsReceivableRetryConfig.merchantId) &&
        Objects.equals(this.notifyEmails, accountsReceivableRetryConfig.notifyEmails) &&
        Objects.equals(this.notifyRejections, accountsReceivableRetryConfig.notifyRejections) &&
        Objects.equals(this.notifySuccesses, accountsReceivableRetryConfig.notifySuccesses) &&
        Objects.equals(this.processLinkedAccounts, accountsReceivableRetryConfig.processLinkedAccounts) &&
        Objects.equals(this.processingPercentage, accountsReceivableRetryConfig.processingPercentage) &&
        Objects.equals(this.rejectAtEnd, accountsReceivableRetryConfig.rejectAtEnd) &&
        Objects.equals(this.trialMode, accountsReceivableRetryConfig.trialMode) &&
        Objects.equals(this.trialModeExpirationDts, accountsReceivableRetryConfig.trialModeExpirationDts);
  }

  @Override
  public int hashCode() {
    return Objects.hash(active, allowProcessLinkedAccounts, cancelAutoOrder, currentServicePlan, dailyActivityList, managedByLinkedAccountMerchantId, merchantId, notifyEmails, notifyRejections, notifySuccesses, processLinkedAccounts, processingPercentage, rejectAtEnd, trialMode, trialModeExpirationDts);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountsReceivableRetryConfig {\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    allowProcessLinkedAccounts: ").append(toIndentedString(allowProcessLinkedAccounts)).append("\n");
    sb.append("    cancelAutoOrder: ").append(toIndentedString(cancelAutoOrder)).append("\n");
    sb.append("    currentServicePlan: ").append(toIndentedString(currentServicePlan)).append("\n");
    sb.append("    dailyActivityList: ").append(toIndentedString(dailyActivityList)).append("\n");
    sb.append("    managedByLinkedAccountMerchantId: ").append(toIndentedString(managedByLinkedAccountMerchantId)).append("\n");
    sb.append("    merchantId: ").append(toIndentedString(merchantId)).append("\n");
    sb.append("    notifyEmails: ").append(toIndentedString(notifyEmails)).append("\n");
    sb.append("    notifyRejections: ").append(toIndentedString(notifyRejections)).append("\n");
    sb.append("    notifySuccesses: ").append(toIndentedString(notifySuccesses)).append("\n");
    sb.append("    processLinkedAccounts: ").append(toIndentedString(processLinkedAccounts)).append("\n");
    sb.append("    processingPercentage: ").append(toIndentedString(processingPercentage)).append("\n");
    sb.append("    rejectAtEnd: ").append(toIndentedString(rejectAtEnd)).append("\n");
    sb.append("    trialMode: ").append(toIndentedString(trialMode)).append("\n");
    sb.append("    trialModeExpirationDts: ").append(toIndentedString(trialModeExpirationDts)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("active");
    openapiFields.add("allow_process_linked_accounts");
    openapiFields.add("cancel_auto_order");
    openapiFields.add("current_service_plan");
    openapiFields.add("daily_activity_list");
    openapiFields.add("managed_by_linked_account_merchant_id");
    openapiFields.add("merchant_id");
    openapiFields.add("notify_emails");
    openapiFields.add("notify_rejections");
    openapiFields.add("notify_successes");
    openapiFields.add("process_linked_accounts");
    openapiFields.add("processing_percentage");
    openapiFields.add("reject_at_end");
    openapiFields.add("trial_mode");
    openapiFields.add("trial_mode_expiration_dts");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to AccountsReceivableRetryConfig
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (AccountsReceivableRetryConfig.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in AccountsReceivableRetryConfig is not found in the empty JSON string", AccountsReceivableRetryConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!AccountsReceivableRetryConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AccountsReceivableRetryConfig` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("current_service_plan") != null && !jsonObj.get("current_service_plan").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `current_service_plan` to be a primitive type in the JSON string but got `%s`", jsonObj.get("current_service_plan").toString()));
      }
      JsonArray jsonArraydailyActivityList = jsonObj.getAsJsonArray("daily_activity_list");
      if (jsonArraydailyActivityList != null) {
        // ensure the json data is an array
        if (!jsonObj.get("daily_activity_list").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `daily_activity_list` to be an array in the JSON string but got `%s`", jsonObj.get("daily_activity_list").toString()));
        }

        // validate the optional field `daily_activity_list` (array)
        for (int i = 0; i < jsonArraydailyActivityList.size(); i++) {
          AccountsReceivableRetryDayActivity.validateJsonObject(jsonArraydailyActivityList.get(i).getAsJsonObject());
        };
      }
      if (jsonObj.get("merchant_id") != null && !jsonObj.get("merchant_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `merchant_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("merchant_id").toString()));
      }
      // ensure the json data is an array
      if (jsonObj.get("notify_emails") != null && !jsonObj.get("notify_emails").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `notify_emails` to be an array in the JSON string but got `%s`", jsonObj.get("notify_emails").toString()));
      }
      if (jsonObj.get("processing_percentage") != null && !jsonObj.get("processing_percentage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `processing_percentage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("processing_percentage").toString()));
      }
      if (jsonObj.get("trial_mode_expiration_dts") != null && !jsonObj.get("trial_mode_expiration_dts").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `trial_mode_expiration_dts` to be a primitive type in the JSON string but got `%s`", jsonObj.get("trial_mode_expiration_dts").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AccountsReceivableRetryConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AccountsReceivableRetryConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AccountsReceivableRetryConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AccountsReceivableRetryConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<AccountsReceivableRetryConfig>() {
           @Override
           public void write(JsonWriter out, AccountsReceivableRetryConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AccountsReceivableRetryConfig read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AccountsReceivableRetryConfig given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AccountsReceivableRetryConfig
  * @throws IOException if the JSON string is invalid with respect to AccountsReceivableRetryConfig
  */
  public static AccountsReceivableRetryConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AccountsReceivableRetryConfig.class);
  }

 /**
  * Convert an instance of AccountsReceivableRetryConfig to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

