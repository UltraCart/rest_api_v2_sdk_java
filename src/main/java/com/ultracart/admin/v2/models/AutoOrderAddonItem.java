/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.AutoOrderAddonItemOption;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * AutoOrderAddonItem
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-04T14:09:35.885-04:00[America/Indianapolis]")
public class AutoOrderAddonItem {
  public static final String SERIALIZED_NAME_ARBITRARY_UNIT_COST = "arbitrary_unit_cost";
  @SerializedName(SERIALIZED_NAME_ARBITRARY_UNIT_COST)
  private BigDecimal arbitraryUnitCost;

  public static final String SERIALIZED_NAME_FREE_SHIPPING = "free_shipping";
  @SerializedName(SERIALIZED_NAME_FREE_SHIPPING)
  private Boolean freeShipping;

  public static final String SERIALIZED_NAME_ITEM_ID = "item_id";
  @SerializedName(SERIALIZED_NAME_ITEM_ID)
  private String itemId;

  public static final String SERIALIZED_NAME_NEXT_X_ORDERS = "next_x_orders";
  @SerializedName(SERIALIZED_NAME_NEXT_X_ORDERS)
  private Integer nextXOrders;

  public static final String SERIALIZED_NAME_OPTIONS = "options";
  @SerializedName(SERIALIZED_NAME_OPTIONS)
  private List<AutoOrderAddonItemOption> options = null;

  public static final String SERIALIZED_NAME_QUANTITY = "quantity";
  @SerializedName(SERIALIZED_NAME_QUANTITY)
  private Integer quantity;

  public AutoOrderAddonItem() { 
  }

  public AutoOrderAddonItem arbitraryUnitCost(BigDecimal arbitraryUnitCost) {
    
    this.arbitraryUnitCost = arbitraryUnitCost;
    return this;
  }

   /**
   * Get arbitraryUnitCost
   * @return arbitraryUnitCost
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getArbitraryUnitCost() {
    return arbitraryUnitCost;
  }


  public void setArbitraryUnitCost(BigDecimal arbitraryUnitCost) {
    this.arbitraryUnitCost = arbitraryUnitCost;
  }


  public AutoOrderAddonItem freeShipping(Boolean freeShipping) {
    
    this.freeShipping = freeShipping;
    return this;
  }

   /**
   * Get freeShipping
   * @return freeShipping
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getFreeShipping() {
    return freeShipping;
  }


  public void setFreeShipping(Boolean freeShipping) {
    this.freeShipping = freeShipping;
  }


  public AutoOrderAddonItem itemId(String itemId) {
    
    this.itemId = itemId;
    return this;
  }

   /**
   * Get itemId
   * @return itemId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getItemId() {
    return itemId;
  }


  public void setItemId(String itemId) {
    this.itemId = itemId;
  }


  public AutoOrderAddonItem nextXOrders(Integer nextXOrders) {
    
    this.nextXOrders = nextXOrders;
    return this;
  }

   /**
   * Get nextXOrders
   * @return nextXOrders
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getNextXOrders() {
    return nextXOrders;
  }


  public void setNextXOrders(Integer nextXOrders) {
    this.nextXOrders = nextXOrders;
  }


  public AutoOrderAddonItem options(List<AutoOrderAddonItemOption> options) {
    
    this.options = options;
    return this;
  }

  public AutoOrderAddonItem addOptionsItem(AutoOrderAddonItemOption optionsItem) {
    if (this.options == null) {
      this.options = new ArrayList<>();
    }
    this.options.add(optionsItem);
    return this;
  }

   /**
   * Options associated with this item
   * @return options
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Options associated with this item")

  public List<AutoOrderAddonItemOption> getOptions() {
    return options;
  }


  public void setOptions(List<AutoOrderAddonItemOption> options) {
    this.options = options;
  }


  public AutoOrderAddonItem quantity(Integer quantity) {
    
    this.quantity = quantity;
    return this;
  }

   /**
   * Get quantity
   * @return quantity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getQuantity() {
    return quantity;
  }


  public void setQuantity(Integer quantity) {
    this.quantity = quantity;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AutoOrderAddonItem autoOrderAddonItem = (AutoOrderAddonItem) o;
    return Objects.equals(this.arbitraryUnitCost, autoOrderAddonItem.arbitraryUnitCost) &&
        Objects.equals(this.freeShipping, autoOrderAddonItem.freeShipping) &&
        Objects.equals(this.itemId, autoOrderAddonItem.itemId) &&
        Objects.equals(this.nextXOrders, autoOrderAddonItem.nextXOrders) &&
        Objects.equals(this.options, autoOrderAddonItem.options) &&
        Objects.equals(this.quantity, autoOrderAddonItem.quantity);
  }

  @Override
  public int hashCode() {
    return Objects.hash(arbitraryUnitCost, freeShipping, itemId, nextXOrders, options, quantity);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AutoOrderAddonItem {\n");
    sb.append("    arbitraryUnitCost: ").append(toIndentedString(arbitraryUnitCost)).append("\n");
    sb.append("    freeShipping: ").append(toIndentedString(freeShipping)).append("\n");
    sb.append("    itemId: ").append(toIndentedString(itemId)).append("\n");
    sb.append("    nextXOrders: ").append(toIndentedString(nextXOrders)).append("\n");
    sb.append("    options: ").append(toIndentedString(options)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("arbitrary_unit_cost");
    openapiFields.add("free_shipping");
    openapiFields.add("item_id");
    openapiFields.add("next_x_orders");
    openapiFields.add("options");
    openapiFields.add("quantity");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to AutoOrderAddonItem
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (AutoOrderAddonItem.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in AutoOrderAddonItem is not found in the empty JSON string", AutoOrderAddonItem.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!AutoOrderAddonItem.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AutoOrderAddonItem` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("item_id") != null && !jsonObj.get("item_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `item_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("item_id").toString()));
      }
      JsonArray jsonArrayoptions = jsonObj.getAsJsonArray("options");
      if (jsonArrayoptions != null) {
        // ensure the json data is an array
        if (!jsonObj.get("options").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `options` to be an array in the JSON string but got `%s`", jsonObj.get("options").toString()));
        }

        // validate the optional field `options` (array)
        for (int i = 0; i < jsonArrayoptions.size(); i++) {
          AutoOrderAddonItemOption.validateJsonObject(jsonArrayoptions.get(i).getAsJsonObject());
        };
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AutoOrderAddonItem.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AutoOrderAddonItem' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AutoOrderAddonItem> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AutoOrderAddonItem.class));

       return (TypeAdapter<T>) new TypeAdapter<AutoOrderAddonItem>() {
           @Override
           public void write(JsonWriter out, AutoOrderAddonItem value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AutoOrderAddonItem read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AutoOrderAddonItem given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AutoOrderAddonItem
  * @throws IOException if the JSON string is invalid with respect to AutoOrderAddonItem
  */
  public static AutoOrderAddonItem fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AutoOrderAddonItem.class);
  }

 /**
  * Convert an instance of AutoOrderAddonItem to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

