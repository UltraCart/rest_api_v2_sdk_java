/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.AffiliateClick;
import com.ultracart.admin.v2.models.AffiliateLink;
import com.ultracart.admin.v2.models.Order;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * AffiliateLedger
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-07-26T15:26:46.319-04:00")



public class AffiliateLedger {
  @SerializedName("affiliate_click_oid")
  private Integer affiliateClickOid = null;

  @SerializedName("affiliate_ledger_oid")
  private Integer affiliateLedgerOid = null;

  @SerializedName("affiliate_link_oid")
  private Integer affiliateLinkOid = null;

  @SerializedName("affiliate_oid")
  private Integer affiliateOid = null;

  @SerializedName("assigned_by_user")
  private String assignedByUser = null;

  @SerializedName("click")
  private AffiliateClick click = null;

  @SerializedName("item_id")
  private String itemId = null;

  @SerializedName("link")
  private AffiliateLink link = null;

  @SerializedName("order")
  private Order order = null;

  @SerializedName("order_id")
  private String orderId = null;

  @SerializedName("original_transaction_dts")
  private String originalTransactionDts = null;

  @SerializedName("sub_id")
  private String subId = null;

  @SerializedName("tier_number")
  private Integer tierNumber = null;

  @SerializedName("transaction_amount")
  private BigDecimal transactionAmount = null;

  @SerializedName("transaction_amount_paid")
  private BigDecimal transactionAmountPaid = null;

  @SerializedName("transaction_dts")
  private String transactionDts = null;

  @SerializedName("transaction_memo")
  private String transactionMemo = null;

  @SerializedName("transaction_percentage")
  private BigDecimal transactionPercentage = null;

  /**
   * Transaction state
   */
  @JsonAdapter(TransactionStateEnum.Adapter.class)
  public enum TransactionStateEnum {
    PENDING("Pending"),
    
    POSTED("Posted"),
    
    APPROVED("Approved"),
    
    PAID("Paid"),
    
    REJECTED("Rejected"),
    
    PARTIALLY_PAID("Partially Paid");

    private String value;

    TransactionStateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TransactionStateEnum fromValue(String text) {
      for (TransactionStateEnum b : TransactionStateEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TransactionStateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TransactionStateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TransactionStateEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TransactionStateEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("transaction_state")
  private TransactionStateEnum transactionState = null;

  public AffiliateLedger affiliateClickOid(Integer affiliateClickOid) {
    this.affiliateClickOid = affiliateClickOid;
    return this;
  }

   /**
   * Unique object identifier for the click associated with this ledger entry
   * @return affiliateClickOid
  **/
  @ApiModelProperty(value = "Unique object identifier for the click associated with this ledger entry")
  public Integer getAffiliateClickOid() {
    return affiliateClickOid;
  }

  public void setAffiliateClickOid(Integer affiliateClickOid) {
    this.affiliateClickOid = affiliateClickOid;
  }

  public AffiliateLedger affiliateLedgerOid(Integer affiliateLedgerOid) {
    this.affiliateLedgerOid = affiliateLedgerOid;
    return this;
  }

   /**
   * Affiliate ledger object ID associated with this ledger
   * @return affiliateLedgerOid
  **/
  @ApiModelProperty(value = "Affiliate ledger object ID associated with this ledger")
  public Integer getAffiliateLedgerOid() {
    return affiliateLedgerOid;
  }

  public void setAffiliateLedgerOid(Integer affiliateLedgerOid) {
    this.affiliateLedgerOid = affiliateLedgerOid;
  }

  public AffiliateLedger affiliateLinkOid(Integer affiliateLinkOid) {
    this.affiliateLinkOid = affiliateLinkOid;
    return this;
  }

   /**
   * Unique object identifier for the link that this click is associated with
   * @return affiliateLinkOid
  **/
  @ApiModelProperty(value = "Unique object identifier for the link that this click is associated with")
  public Integer getAffiliateLinkOid() {
    return affiliateLinkOid;
  }

  public void setAffiliateLinkOid(Integer affiliateLinkOid) {
    this.affiliateLinkOid = affiliateLinkOid;
  }

  public AffiliateLedger affiliateOid(Integer affiliateOid) {
    this.affiliateOid = affiliateOid;
    return this;
  }

   /**
   * Affiliate object ID associated with this transaction
   * @return affiliateOid
  **/
  @ApiModelProperty(value = "Affiliate object ID associated with this transaction")
  public Integer getAffiliateOid() {
    return affiliateOid;
  }

  public void setAffiliateOid(Integer affiliateOid) {
    this.affiliateOid = affiliateOid;
  }

  public AffiliateLedger assignedByUser(String assignedByUser) {
    this.assignedByUser = assignedByUser;
    return this;
  }

   /**
   * User that assigned the transaction if it was done manually
   * @return assignedByUser
  **/
  @ApiModelProperty(value = "User that assigned the transaction if it was done manually")
  public String getAssignedByUser() {
    return assignedByUser;
  }

  public void setAssignedByUser(String assignedByUser) {
    this.assignedByUser = assignedByUser;
  }

  public AffiliateLedger click(AffiliateClick click) {
    this.click = click;
    return this;
  }

   /**
   * Get click
   * @return click
  **/
  @ApiModelProperty(value = "")
  public AffiliateClick getClick() {
    return click;
  }

  public void setClick(AffiliateClick click) {
    this.click = click;
  }

  public AffiliateLedger itemId(String itemId) {
    this.itemId = itemId;
    return this;
  }

   /**
   * Item ID associated with this transaction
   * @return itemId
  **/
  @ApiModelProperty(value = "Item ID associated with this transaction")
  public String getItemId() {
    return itemId;
  }

  public void setItemId(String itemId) {
    this.itemId = itemId;
  }

  public AffiliateLedger link(AffiliateLink link) {
    this.link = link;
    return this;
  }

   /**
   * Get link
   * @return link
  **/
  @ApiModelProperty(value = "")
  public AffiliateLink getLink() {
    return link;
  }

  public void setLink(AffiliateLink link) {
    this.link = link;
  }

  public AffiliateLedger order(Order order) {
    this.order = order;
    return this;
  }

   /**
   * Get order
   * @return order
  **/
  @ApiModelProperty(value = "")
  public Order getOrder() {
    return order;
  }

  public void setOrder(Order order) {
    this.order = order;
  }

  public AffiliateLedger orderId(String orderId) {
    this.orderId = orderId;
    return this;
  }

   /**
   * Order ID associated with this transaction
   * @return orderId
  **/
  @ApiModelProperty(value = "Order ID associated with this transaction")
  public String getOrderId() {
    return orderId;
  }

  public void setOrderId(String orderId) {
    this.orderId = orderId;
  }

  public AffiliateLedger originalTransactionDts(String originalTransactionDts) {
    this.originalTransactionDts = originalTransactionDts;
    return this;
  }

   /**
   * Date/time of the original transaction for reversals
   * @return originalTransactionDts
  **/
  @ApiModelProperty(value = "Date/time of the original transaction for reversals")
  public String getOriginalTransactionDts() {
    return originalTransactionDts;
  }

  public void setOriginalTransactionDts(String originalTransactionDts) {
    this.originalTransactionDts = originalTransactionDts;
  }

  public AffiliateLedger subId(String subId) {
    this.subId = subId;
    return this;
  }

   /**
   * Sub ID associated with transaction (from the click)
   * @return subId
  **/
  @ApiModelProperty(value = "Sub ID associated with transaction (from the click)")
  public String getSubId() {
    return subId;
  }

  public void setSubId(String subId) {
    this.subId = subId;
  }

  public AffiliateLedger tierNumber(Integer tierNumber) {
    this.tierNumber = tierNumber;
    return this;
  }

   /**
   * Tier number that this transaction earned
   * @return tierNumber
  **/
  @ApiModelProperty(value = "Tier number that this transaction earned")
  public Integer getTierNumber() {
    return tierNumber;
  }

  public void setTierNumber(Integer tierNumber) {
    this.tierNumber = tierNumber;
  }

  public AffiliateLedger transactionAmount(BigDecimal transactionAmount) {
    this.transactionAmount = transactionAmount;
    return this;
  }

   /**
   * Transaction amount
   * @return transactionAmount
  **/
  @ApiModelProperty(value = "Transaction amount")
  public BigDecimal getTransactionAmount() {
    return transactionAmount;
  }

  public void setTransactionAmount(BigDecimal transactionAmount) {
    this.transactionAmount = transactionAmount;
  }

  public AffiliateLedger transactionAmountPaid(BigDecimal transactionAmountPaid) {
    this.transactionAmountPaid = transactionAmountPaid;
    return this;
  }

   /**
   * Amount of the transaction that has been paid out.
   * @return transactionAmountPaid
  **/
  @ApiModelProperty(value = "Amount of the transaction that has been paid out.")
  public BigDecimal getTransactionAmountPaid() {
    return transactionAmountPaid;
  }

  public void setTransactionAmountPaid(BigDecimal transactionAmountPaid) {
    this.transactionAmountPaid = transactionAmountPaid;
  }

  public AffiliateLedger transactionDts(String transactionDts) {
    this.transactionDts = transactionDts;
    return this;
  }

   /**
   * Date/time that the transaction was made
   * @return transactionDts
  **/
  @ApiModelProperty(value = "Date/time that the transaction was made")
  public String getTransactionDts() {
    return transactionDts;
  }

  public void setTransactionDts(String transactionDts) {
    this.transactionDts = transactionDts;
  }

  public AffiliateLedger transactionMemo(String transactionMemo) {
    this.transactionMemo = transactionMemo;
    return this;
  }

   /**
   * Memo explaining the transaction
   * @return transactionMemo
  **/
  @ApiModelProperty(value = "Memo explaining the transaction")
  public String getTransactionMemo() {
    return transactionMemo;
  }

  public void setTransactionMemo(String transactionMemo) {
    this.transactionMemo = transactionMemo;
  }

  public AffiliateLedger transactionPercentage(BigDecimal transactionPercentage) {
    this.transactionPercentage = transactionPercentage;
    return this;
  }

   /**
   * Percentage associated with this transaction
   * @return transactionPercentage
  **/
  @ApiModelProperty(value = "Percentage associated with this transaction")
  public BigDecimal getTransactionPercentage() {
    return transactionPercentage;
  }

  public void setTransactionPercentage(BigDecimal transactionPercentage) {
    this.transactionPercentage = transactionPercentage;
  }

  public AffiliateLedger transactionState(TransactionStateEnum transactionState) {
    this.transactionState = transactionState;
    return this;
  }

   /**
   * Transaction state
   * @return transactionState
  **/
  @ApiModelProperty(value = "Transaction state")
  public TransactionStateEnum getTransactionState() {
    return transactionState;
  }

  public void setTransactionState(TransactionStateEnum transactionState) {
    this.transactionState = transactionState;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AffiliateLedger affiliateLedger = (AffiliateLedger) o;
    return Objects.equals(this.affiliateClickOid, affiliateLedger.affiliateClickOid) &&
        Objects.equals(this.affiliateLedgerOid, affiliateLedger.affiliateLedgerOid) &&
        Objects.equals(this.affiliateLinkOid, affiliateLedger.affiliateLinkOid) &&
        Objects.equals(this.affiliateOid, affiliateLedger.affiliateOid) &&
        Objects.equals(this.assignedByUser, affiliateLedger.assignedByUser) &&
        Objects.equals(this.click, affiliateLedger.click) &&
        Objects.equals(this.itemId, affiliateLedger.itemId) &&
        Objects.equals(this.link, affiliateLedger.link) &&
        Objects.equals(this.order, affiliateLedger.order) &&
        Objects.equals(this.orderId, affiliateLedger.orderId) &&
        Objects.equals(this.originalTransactionDts, affiliateLedger.originalTransactionDts) &&
        Objects.equals(this.subId, affiliateLedger.subId) &&
        Objects.equals(this.tierNumber, affiliateLedger.tierNumber) &&
        Objects.equals(this.transactionAmount, affiliateLedger.transactionAmount) &&
        Objects.equals(this.transactionAmountPaid, affiliateLedger.transactionAmountPaid) &&
        Objects.equals(this.transactionDts, affiliateLedger.transactionDts) &&
        Objects.equals(this.transactionMemo, affiliateLedger.transactionMemo) &&
        Objects.equals(this.transactionPercentage, affiliateLedger.transactionPercentage) &&
        Objects.equals(this.transactionState, affiliateLedger.transactionState);
  }

  @Override
  public int hashCode() {
    return Objects.hash(affiliateClickOid, affiliateLedgerOid, affiliateLinkOid, affiliateOid, assignedByUser, click, itemId, link, order, orderId, originalTransactionDts, subId, tierNumber, transactionAmount, transactionAmountPaid, transactionDts, transactionMemo, transactionPercentage, transactionState);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AffiliateLedger {\n");
    
    sb.append("    affiliateClickOid: ").append(toIndentedString(affiliateClickOid)).append("\n");
    sb.append("    affiliateLedgerOid: ").append(toIndentedString(affiliateLedgerOid)).append("\n");
    sb.append("    affiliateLinkOid: ").append(toIndentedString(affiliateLinkOid)).append("\n");
    sb.append("    affiliateOid: ").append(toIndentedString(affiliateOid)).append("\n");
    sb.append("    assignedByUser: ").append(toIndentedString(assignedByUser)).append("\n");
    sb.append("    click: ").append(toIndentedString(click)).append("\n");
    sb.append("    itemId: ").append(toIndentedString(itemId)).append("\n");
    sb.append("    link: ").append(toIndentedString(link)).append("\n");
    sb.append("    order: ").append(toIndentedString(order)).append("\n");
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    originalTransactionDts: ").append(toIndentedString(originalTransactionDts)).append("\n");
    sb.append("    subId: ").append(toIndentedString(subId)).append("\n");
    sb.append("    tierNumber: ").append(toIndentedString(tierNumber)).append("\n");
    sb.append("    transactionAmount: ").append(toIndentedString(transactionAmount)).append("\n");
    sb.append("    transactionAmountPaid: ").append(toIndentedString(transactionAmountPaid)).append("\n");
    sb.append("    transactionDts: ").append(toIndentedString(transactionDts)).append("\n");
    sb.append("    transactionMemo: ").append(toIndentedString(transactionMemo)).append("\n");
    sb.append("    transactionPercentage: ").append(toIndentedString(transactionPercentage)).append("\n");
    sb.append("    transactionState: ").append(toIndentedString(transactionState)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

