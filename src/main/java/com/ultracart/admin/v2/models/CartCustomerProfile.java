/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.CartCustomerProfileAddress;
import com.ultracart.admin.v2.models.CartCustomerProfileCreditCard;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * CartCustomerProfile
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-07-28T14:06:52.935-04:00[America/Indianapolis]")
public class CartCustomerProfile {
  public static final String SERIALIZED_NAME_ALLOW3RD_PARTY_BILLING = "allow_3rd_party_billing";
  @SerializedName(SERIALIZED_NAME_ALLOW3RD_PARTY_BILLING)
  private Boolean allow3rdPartyBilling;

  public static final String SERIALIZED_NAME_ALLOW_COD = "allow_cod";
  @SerializedName(SERIALIZED_NAME_ALLOW_COD)
  private Boolean allowCod;

  public static final String SERIALIZED_NAME_ALLOW_PURCHASE_ORDER = "allow_purchase_order";
  @SerializedName(SERIALIZED_NAME_ALLOW_PURCHASE_ORDER)
  private Boolean allowPurchaseOrder;

  public static final String SERIALIZED_NAME_BILLING_ADDRESSES = "billing_addresses";
  @SerializedName(SERIALIZED_NAME_BILLING_ADDRESSES)
  private List<CartCustomerProfileAddress> billingAddresses = null;

  public static final String SERIALIZED_NAME_CREDIT_CARDS = "credit_cards";
  @SerializedName(SERIALIZED_NAME_CREDIT_CARDS)
  private List<CartCustomerProfileCreditCard> creditCards = null;

  public static final String SERIALIZED_NAME_CUSTOMER_PROFILE_OID = "customer_profile_oid";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_PROFILE_OID)
  private Integer customerProfileOid;

  public static final String SERIALIZED_NAME_DHL_ACCOUNT_NUMBER = "dhl_account_number";
  @SerializedName(SERIALIZED_NAME_DHL_ACCOUNT_NUMBER)
  private String dhlAccountNumber;

  public static final String SERIALIZED_NAME_DHL_DUTY_ACCOUNT_NUMBER = "dhl_duty_account_number";
  @SerializedName(SERIALIZED_NAME_DHL_DUTY_ACCOUNT_NUMBER)
  private String dhlDutyAccountNumber;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_FEDEX_ACCOUNT_NUMBER = "fedex_account_number";
  @SerializedName(SERIALIZED_NAME_FEDEX_ACCOUNT_NUMBER)
  private String fedexAccountNumber;

  public static final String SERIALIZED_NAME_FREE_SHIPPING = "free_shipping";
  @SerializedName(SERIALIZED_NAME_FREE_SHIPPING)
  private Boolean freeShipping;

  public static final String SERIALIZED_NAME_FREE_SHIPPING_MINIMUM = "free_shipping_minimum";
  @SerializedName(SERIALIZED_NAME_FREE_SHIPPING_MINIMUM)
  private BigDecimal freeShippingMinimum;

  public static final String SERIALIZED_NAME_MAXIMUM_ITEM_COUNT = "maximum_item_count";
  @SerializedName(SERIALIZED_NAME_MAXIMUM_ITEM_COUNT)
  private Integer maximumItemCount;

  public static final String SERIALIZED_NAME_MINIMUM_ITEM_COUNT = "minimum_item_count";
  @SerializedName(SERIALIZED_NAME_MINIMUM_ITEM_COUNT)
  private Integer minimumItemCount;

  public static final String SERIALIZED_NAME_MINIMUM_SUBTOTAL = "minimum_subtotal";
  @SerializedName(SERIALIZED_NAME_MINIMUM_SUBTOTAL)
  private BigDecimal minimumSubtotal;

  public static final String SERIALIZED_NAME_NO_COUPONS = "no_coupons";
  @SerializedName(SERIALIZED_NAME_NO_COUPONS)
  private Boolean noCoupons;

  public static final String SERIALIZED_NAME_NO_FREE_SHIPPING = "no_free_shipping";
  @SerializedName(SERIALIZED_NAME_NO_FREE_SHIPPING)
  private Boolean noFreeShipping;

  public static final String SERIALIZED_NAME_NO_REALTIME_CHARGE = "no_realtime_charge";
  @SerializedName(SERIALIZED_NAME_NO_REALTIME_CHARGE)
  private Boolean noRealtimeCharge;

  public static final String SERIALIZED_NAME_PRICING_TIERS = "pricing_tiers";
  @SerializedName(SERIALIZED_NAME_PRICING_TIERS)
  private List<String> pricingTiers = null;

  public static final String SERIALIZED_NAME_SHIPPING_ADDRESSES = "shipping_addresses";
  @SerializedName(SERIALIZED_NAME_SHIPPING_ADDRESSES)
  private List<CartCustomerProfileAddress> shippingAddresses = null;

  public static final String SERIALIZED_NAME_TAX_EXEMPT = "tax_exempt";
  @SerializedName(SERIALIZED_NAME_TAX_EXEMPT)
  private Boolean taxExempt;

  public static final String SERIALIZED_NAME_UPS_ACCOUNT_NUMBER = "ups_account_number";
  @SerializedName(SERIALIZED_NAME_UPS_ACCOUNT_NUMBER)
  private String upsAccountNumber;

  public CartCustomerProfile() { 
  }

  public CartCustomerProfile allow3rdPartyBilling(Boolean allow3rdPartyBilling) {
    
    this.allow3rdPartyBilling = allow3rdPartyBilling;
    return this;
  }

   /**
   * True if profile is allowed to bill to their 3rd party shipping account
   * @return allow3rdPartyBilling
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if profile is allowed to bill to their 3rd party shipping account")

  public Boolean getAllow3rdPartyBilling() {
    return allow3rdPartyBilling;
  }


  public void setAllow3rdPartyBilling(Boolean allow3rdPartyBilling) {
    this.allow3rdPartyBilling = allow3rdPartyBilling;
  }


  public CartCustomerProfile allowCod(Boolean allowCod) {
    
    this.allowCod = allowCod;
    return this;
  }

   /**
   * True if this profile is allowed to use a COD
   * @return allowCod
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if this profile is allowed to use a COD")

  public Boolean getAllowCod() {
    return allowCod;
  }


  public void setAllowCod(Boolean allowCod) {
    this.allowCod = allowCod;
  }


  public CartCustomerProfile allowPurchaseOrder(Boolean allowPurchaseOrder) {
    
    this.allowPurchaseOrder = allowPurchaseOrder;
    return this;
  }

   /**
   * True if this profile is allowed to use a purchase order
   * @return allowPurchaseOrder
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if this profile is allowed to use a purchase order")

  public Boolean getAllowPurchaseOrder() {
    return allowPurchaseOrder;
  }


  public void setAllowPurchaseOrder(Boolean allowPurchaseOrder) {
    this.allowPurchaseOrder = allowPurchaseOrder;
  }


  public CartCustomerProfile billingAddresses(List<CartCustomerProfileAddress> billingAddresses) {
    
    this.billingAddresses = billingAddresses;
    return this;
  }

  public CartCustomerProfile addBillingAddressesItem(CartCustomerProfileAddress billingAddressesItem) {
    if (this.billingAddresses == null) {
      this.billingAddresses = new ArrayList<>();
    }
    this.billingAddresses.add(billingAddressesItem);
    return this;
  }

   /**
   * Billing addresses on file for this profile
   * @return billingAddresses
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Billing addresses on file for this profile")

  public List<CartCustomerProfileAddress> getBillingAddresses() {
    return billingAddresses;
  }


  public void setBillingAddresses(List<CartCustomerProfileAddress> billingAddresses) {
    this.billingAddresses = billingAddresses;
  }


  public CartCustomerProfile creditCards(List<CartCustomerProfileCreditCard> creditCards) {
    
    this.creditCards = creditCards;
    return this;
  }

  public CartCustomerProfile addCreditCardsItem(CartCustomerProfileCreditCard creditCardsItem) {
    if (this.creditCards == null) {
      this.creditCards = new ArrayList<>();
    }
    this.creditCards.add(creditCardsItem);
    return this;
  }

   /**
   * Credit cards on file for this profile (masked)
   * @return creditCards
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Credit cards on file for this profile (masked)")

  public List<CartCustomerProfileCreditCard> getCreditCards() {
    return creditCards;
  }


  public void setCreditCards(List<CartCustomerProfileCreditCard> creditCards) {
    this.creditCards = creditCards;
  }


  public CartCustomerProfile customerProfileOid(Integer customerProfileOid) {
    
    this.customerProfileOid = customerProfileOid;
    return this;
  }

   /**
   * Unique identifier
   * @return customerProfileOid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unique identifier")

  public Integer getCustomerProfileOid() {
    return customerProfileOid;
  }


  public void setCustomerProfileOid(Integer customerProfileOid) {
    this.customerProfileOid = customerProfileOid;
  }


  public CartCustomerProfile dhlAccountNumber(String dhlAccountNumber) {
    
    this.dhlAccountNumber = dhlAccountNumber;
    return this;
  }

   /**
   * DHL account number on file
   * @return dhlAccountNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "DHL account number on file")

  public String getDhlAccountNumber() {
    return dhlAccountNumber;
  }


  public void setDhlAccountNumber(String dhlAccountNumber) {
    this.dhlAccountNumber = dhlAccountNumber;
  }


  public CartCustomerProfile dhlDutyAccountNumber(String dhlDutyAccountNumber) {
    
    this.dhlDutyAccountNumber = dhlDutyAccountNumber;
    return this;
  }

   /**
   * DHL duty account number on file
   * @return dhlDutyAccountNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "DHL duty account number on file")

  public String getDhlDutyAccountNumber() {
    return dhlDutyAccountNumber;
  }


  public void setDhlDutyAccountNumber(String dhlDutyAccountNumber) {
    this.dhlDutyAccountNumber = dhlDutyAccountNumber;
  }


  public CartCustomerProfile email(String email) {
    
    this.email = email;
    return this;
  }

   /**
   * Email
   * @return email
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Email")

  public String getEmail() {
    return email;
  }


  public void setEmail(String email) {
    this.email = email;
  }


  public CartCustomerProfile fedexAccountNumber(String fedexAccountNumber) {
    
    this.fedexAccountNumber = fedexAccountNumber;
    return this;
  }

   /**
   * FedEx account number on file
   * @return fedexAccountNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "FedEx account number on file")

  public String getFedexAccountNumber() {
    return fedexAccountNumber;
  }


  public void setFedexAccountNumber(String fedexAccountNumber) {
    this.fedexAccountNumber = fedexAccountNumber;
  }


  public CartCustomerProfile freeShipping(Boolean freeShipping) {
    
    this.freeShipping = freeShipping;
    return this;
  }

   /**
   * True if this profile always qualifies for free shipping
   * @return freeShipping
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if this profile always qualifies for free shipping")

  public Boolean getFreeShipping() {
    return freeShipping;
  }


  public void setFreeShipping(Boolean freeShipping) {
    this.freeShipping = freeShipping;
  }


  public CartCustomerProfile freeShippingMinimum(BigDecimal freeShippingMinimum) {
    
    this.freeShippingMinimum = freeShippingMinimum;
    return this;
  }

   /**
   * The minimum aount that this profile has to purchase to qualify for free shipping
   * @return freeShippingMinimum
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The minimum aount that this profile has to purchase to qualify for free shipping")

  public BigDecimal getFreeShippingMinimum() {
    return freeShippingMinimum;
  }


  public void setFreeShippingMinimum(BigDecimal freeShippingMinimum) {
    this.freeShippingMinimum = freeShippingMinimum;
  }


  public CartCustomerProfile maximumItemCount(Integer maximumItemCount) {
    
    this.maximumItemCount = maximumItemCount;
    return this;
  }

   /**
   * Maximum item count this profile can purchase
   * @return maximumItemCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Maximum item count this profile can purchase")

  public Integer getMaximumItemCount() {
    return maximumItemCount;
  }


  public void setMaximumItemCount(Integer maximumItemCount) {
    this.maximumItemCount = maximumItemCount;
  }


  public CartCustomerProfile minimumItemCount(Integer minimumItemCount) {
    
    this.minimumItemCount = minimumItemCount;
    return this;
  }

   /**
   * Minimum item count this profile must purchase
   * @return minimumItemCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Minimum item count this profile must purchase")

  public Integer getMinimumItemCount() {
    return minimumItemCount;
  }


  public void setMinimumItemCount(Integer minimumItemCount) {
    this.minimumItemCount = minimumItemCount;
  }


  public CartCustomerProfile minimumSubtotal(BigDecimal minimumSubtotal) {
    
    this.minimumSubtotal = minimumSubtotal;
    return this;
  }

   /**
   * Minimum subtotal this profile must purchase
   * @return minimumSubtotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Minimum subtotal this profile must purchase")

  public BigDecimal getMinimumSubtotal() {
    return minimumSubtotal;
  }


  public void setMinimumSubtotal(BigDecimal minimumSubtotal) {
    this.minimumSubtotal = minimumSubtotal;
  }


  public CartCustomerProfile noCoupons(Boolean noCoupons) {
    
    this.noCoupons = noCoupons;
    return this;
  }

   /**
   * True if this profile is prevented from using coupons
   * @return noCoupons
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if this profile is prevented from using coupons")

  public Boolean getNoCoupons() {
    return noCoupons;
  }


  public void setNoCoupons(Boolean noCoupons) {
    this.noCoupons = noCoupons;
  }


  public CartCustomerProfile noFreeShipping(Boolean noFreeShipping) {
    
    this.noFreeShipping = noFreeShipping;
    return this;
  }

   /**
   * True if this profile is never given free shipping
   * @return noFreeShipping
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if this profile is never given free shipping")

  public Boolean getNoFreeShipping() {
    return noFreeShipping;
  }


  public void setNoFreeShipping(Boolean noFreeShipping) {
    this.noFreeShipping = noFreeShipping;
  }


  public CartCustomerProfile noRealtimeCharge(Boolean noRealtimeCharge) {
    
    this.noRealtimeCharge = noRealtimeCharge;
    return this;
  }

   /**
   * True if this customers orders are not charged in real-time
   * @return noRealtimeCharge
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if this customers orders are not charged in real-time")

  public Boolean getNoRealtimeCharge() {
    return noRealtimeCharge;
  }


  public void setNoRealtimeCharge(Boolean noRealtimeCharge) {
    this.noRealtimeCharge = noRealtimeCharge;
  }


  public CartCustomerProfile pricingTiers(List<String> pricingTiers) {
    
    this.pricingTiers = pricingTiers;
    return this;
  }

  public CartCustomerProfile addPricingTiersItem(String pricingTiersItem) {
    if (this.pricingTiers == null) {
      this.pricingTiers = new ArrayList<>();
    }
    this.pricingTiers.add(pricingTiersItem);
    return this;
  }

   /**
   * Pricing tier names this profile qualifies for
   * @return pricingTiers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Pricing tier names this profile qualifies for")

  public List<String> getPricingTiers() {
    return pricingTiers;
  }


  public void setPricingTiers(List<String> pricingTiers) {
    this.pricingTiers = pricingTiers;
  }


  public CartCustomerProfile shippingAddresses(List<CartCustomerProfileAddress> shippingAddresses) {
    
    this.shippingAddresses = shippingAddresses;
    return this;
  }

  public CartCustomerProfile addShippingAddressesItem(CartCustomerProfileAddress shippingAddressesItem) {
    if (this.shippingAddresses == null) {
      this.shippingAddresses = new ArrayList<>();
    }
    this.shippingAddresses.add(shippingAddressesItem);
    return this;
  }

   /**
   * Shipping addresses on file for this profile
   * @return shippingAddresses
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Shipping addresses on file for this profile")

  public List<CartCustomerProfileAddress> getShippingAddresses() {
    return shippingAddresses;
  }


  public void setShippingAddresses(List<CartCustomerProfileAddress> shippingAddresses) {
    this.shippingAddresses = shippingAddresses;
  }


  public CartCustomerProfile taxExempt(Boolean taxExempt) {
    
    this.taxExempt = taxExempt;
    return this;
  }

   /**
   * True if this profile is exempt from sales tax
   * @return taxExempt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if this profile is exempt from sales tax")

  public Boolean getTaxExempt() {
    return taxExempt;
  }


  public void setTaxExempt(Boolean taxExempt) {
    this.taxExempt = taxExempt;
  }


  public CartCustomerProfile upsAccountNumber(String upsAccountNumber) {
    
    this.upsAccountNumber = upsAccountNumber;
    return this;
  }

   /**
   * UPS account number on file
   * @return upsAccountNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "UPS account number on file")

  public String getUpsAccountNumber() {
    return upsAccountNumber;
  }


  public void setUpsAccountNumber(String upsAccountNumber) {
    this.upsAccountNumber = upsAccountNumber;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CartCustomerProfile cartCustomerProfile = (CartCustomerProfile) o;
    return Objects.equals(this.allow3rdPartyBilling, cartCustomerProfile.allow3rdPartyBilling) &&
        Objects.equals(this.allowCod, cartCustomerProfile.allowCod) &&
        Objects.equals(this.allowPurchaseOrder, cartCustomerProfile.allowPurchaseOrder) &&
        Objects.equals(this.billingAddresses, cartCustomerProfile.billingAddresses) &&
        Objects.equals(this.creditCards, cartCustomerProfile.creditCards) &&
        Objects.equals(this.customerProfileOid, cartCustomerProfile.customerProfileOid) &&
        Objects.equals(this.dhlAccountNumber, cartCustomerProfile.dhlAccountNumber) &&
        Objects.equals(this.dhlDutyAccountNumber, cartCustomerProfile.dhlDutyAccountNumber) &&
        Objects.equals(this.email, cartCustomerProfile.email) &&
        Objects.equals(this.fedexAccountNumber, cartCustomerProfile.fedexAccountNumber) &&
        Objects.equals(this.freeShipping, cartCustomerProfile.freeShipping) &&
        Objects.equals(this.freeShippingMinimum, cartCustomerProfile.freeShippingMinimum) &&
        Objects.equals(this.maximumItemCount, cartCustomerProfile.maximumItemCount) &&
        Objects.equals(this.minimumItemCount, cartCustomerProfile.minimumItemCount) &&
        Objects.equals(this.minimumSubtotal, cartCustomerProfile.minimumSubtotal) &&
        Objects.equals(this.noCoupons, cartCustomerProfile.noCoupons) &&
        Objects.equals(this.noFreeShipping, cartCustomerProfile.noFreeShipping) &&
        Objects.equals(this.noRealtimeCharge, cartCustomerProfile.noRealtimeCharge) &&
        Objects.equals(this.pricingTiers, cartCustomerProfile.pricingTiers) &&
        Objects.equals(this.shippingAddresses, cartCustomerProfile.shippingAddresses) &&
        Objects.equals(this.taxExempt, cartCustomerProfile.taxExempt) &&
        Objects.equals(this.upsAccountNumber, cartCustomerProfile.upsAccountNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allow3rdPartyBilling, allowCod, allowPurchaseOrder, billingAddresses, creditCards, customerProfileOid, dhlAccountNumber, dhlDutyAccountNumber, email, fedexAccountNumber, freeShipping, freeShippingMinimum, maximumItemCount, minimumItemCount, minimumSubtotal, noCoupons, noFreeShipping, noRealtimeCharge, pricingTiers, shippingAddresses, taxExempt, upsAccountNumber);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CartCustomerProfile {\n");
    sb.append("    allow3rdPartyBilling: ").append(toIndentedString(allow3rdPartyBilling)).append("\n");
    sb.append("    allowCod: ").append(toIndentedString(allowCod)).append("\n");
    sb.append("    allowPurchaseOrder: ").append(toIndentedString(allowPurchaseOrder)).append("\n");
    sb.append("    billingAddresses: ").append(toIndentedString(billingAddresses)).append("\n");
    sb.append("    creditCards: ").append(toIndentedString(creditCards)).append("\n");
    sb.append("    customerProfileOid: ").append(toIndentedString(customerProfileOid)).append("\n");
    sb.append("    dhlAccountNumber: ").append(toIndentedString(dhlAccountNumber)).append("\n");
    sb.append("    dhlDutyAccountNumber: ").append(toIndentedString(dhlDutyAccountNumber)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    fedexAccountNumber: ").append(toIndentedString(fedexAccountNumber)).append("\n");
    sb.append("    freeShipping: ").append(toIndentedString(freeShipping)).append("\n");
    sb.append("    freeShippingMinimum: ").append(toIndentedString(freeShippingMinimum)).append("\n");
    sb.append("    maximumItemCount: ").append(toIndentedString(maximumItemCount)).append("\n");
    sb.append("    minimumItemCount: ").append(toIndentedString(minimumItemCount)).append("\n");
    sb.append("    minimumSubtotal: ").append(toIndentedString(minimumSubtotal)).append("\n");
    sb.append("    noCoupons: ").append(toIndentedString(noCoupons)).append("\n");
    sb.append("    noFreeShipping: ").append(toIndentedString(noFreeShipping)).append("\n");
    sb.append("    noRealtimeCharge: ").append(toIndentedString(noRealtimeCharge)).append("\n");
    sb.append("    pricingTiers: ").append(toIndentedString(pricingTiers)).append("\n");
    sb.append("    shippingAddresses: ").append(toIndentedString(shippingAddresses)).append("\n");
    sb.append("    taxExempt: ").append(toIndentedString(taxExempt)).append("\n");
    sb.append("    upsAccountNumber: ").append(toIndentedString(upsAccountNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("allow_3rd_party_billing");
    openapiFields.add("allow_cod");
    openapiFields.add("allow_purchase_order");
    openapiFields.add("billing_addresses");
    openapiFields.add("credit_cards");
    openapiFields.add("customer_profile_oid");
    openapiFields.add("dhl_account_number");
    openapiFields.add("dhl_duty_account_number");
    openapiFields.add("email");
    openapiFields.add("fedex_account_number");
    openapiFields.add("free_shipping");
    openapiFields.add("free_shipping_minimum");
    openapiFields.add("maximum_item_count");
    openapiFields.add("minimum_item_count");
    openapiFields.add("minimum_subtotal");
    openapiFields.add("no_coupons");
    openapiFields.add("no_free_shipping");
    openapiFields.add("no_realtime_charge");
    openapiFields.add("pricing_tiers");
    openapiFields.add("shipping_addresses");
    openapiFields.add("tax_exempt");
    openapiFields.add("ups_account_number");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CartCustomerProfile
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (CartCustomerProfile.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in CartCustomerProfile is not found in the empty JSON string", CartCustomerProfile.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!CartCustomerProfile.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CartCustomerProfile` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      JsonArray jsonArraybillingAddresses = jsonObj.getAsJsonArray("billing_addresses");
      if (jsonArraybillingAddresses != null) {
        // ensure the json data is an array
        if (!jsonObj.get("billing_addresses").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `billing_addresses` to be an array in the JSON string but got `%s`", jsonObj.get("billing_addresses").toString()));
        }

        // validate the optional field `billing_addresses` (array)
        for (int i = 0; i < jsonArraybillingAddresses.size(); i++) {
          CartCustomerProfileAddress.validateJsonObject(jsonArraybillingAddresses.get(i).getAsJsonObject());
        };
      }
      JsonArray jsonArraycreditCards = jsonObj.getAsJsonArray("credit_cards");
      if (jsonArraycreditCards != null) {
        // ensure the json data is an array
        if (!jsonObj.get("credit_cards").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `credit_cards` to be an array in the JSON string but got `%s`", jsonObj.get("credit_cards").toString()));
        }

        // validate the optional field `credit_cards` (array)
        for (int i = 0; i < jsonArraycreditCards.size(); i++) {
          CartCustomerProfileCreditCard.validateJsonObject(jsonArraycreditCards.get(i).getAsJsonObject());
        };
      }
      if (jsonObj.get("dhl_account_number") != null && !jsonObj.get("dhl_account_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dhl_account_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dhl_account_number").toString()));
      }
      if (jsonObj.get("dhl_duty_account_number") != null && !jsonObj.get("dhl_duty_account_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dhl_duty_account_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dhl_duty_account_number").toString()));
      }
      if (jsonObj.get("email") != null && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if (jsonObj.get("fedex_account_number") != null && !jsonObj.get("fedex_account_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fedex_account_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fedex_account_number").toString()));
      }
      // ensure the json data is an array
      if (jsonObj.get("pricing_tiers") != null && !jsonObj.get("pricing_tiers").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `pricing_tiers` to be an array in the JSON string but got `%s`", jsonObj.get("pricing_tiers").toString()));
      }
      JsonArray jsonArrayshippingAddresses = jsonObj.getAsJsonArray("shipping_addresses");
      if (jsonArrayshippingAddresses != null) {
        // ensure the json data is an array
        if (!jsonObj.get("shipping_addresses").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `shipping_addresses` to be an array in the JSON string but got `%s`", jsonObj.get("shipping_addresses").toString()));
        }

        // validate the optional field `shipping_addresses` (array)
        for (int i = 0; i < jsonArrayshippingAddresses.size(); i++) {
          CartCustomerProfileAddress.validateJsonObject(jsonArrayshippingAddresses.get(i).getAsJsonObject());
        };
      }
      if (jsonObj.get("ups_account_number") != null && !jsonObj.get("ups_account_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ups_account_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ups_account_number").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CartCustomerProfile.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CartCustomerProfile' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CartCustomerProfile> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CartCustomerProfile.class));

       return (TypeAdapter<T>) new TypeAdapter<CartCustomerProfile>() {
           @Override
           public void write(JsonWriter out, CartCustomerProfile value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CartCustomerProfile read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CartCustomerProfile given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CartCustomerProfile
  * @throws IOException if the JSON string is invalid with respect to CartCustomerProfile
  */
  public static CartCustomerProfile fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CartCustomerProfile.class);
  }

 /**
  * Convert an instance of CartCustomerProfile to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

