/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.EmailListSegmentMembership;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * EmailCampaign
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-12-20T11:44:45.285-05:00[America/Indianapolis]")
public class EmailCampaign {
  public static final String SERIALIZED_NAME_CLICK_RATE_FORMATTED = "click_rate_formatted";
  @SerializedName(SERIALIZED_NAME_CLICK_RATE_FORMATTED)
  private String clickRateFormatted;

  public static final String SERIALIZED_NAME_CREATED_DTS = "created_dts";
  @SerializedName(SERIALIZED_NAME_CREATED_DTS)
  private String createdDts;

  public static final String SERIALIZED_NAME_DELETED = "deleted";
  @SerializedName(SERIALIZED_NAME_DELETED)
  private Boolean deleted;

  public static final String SERIALIZED_NAME_EMAIL_CAMPAIGN_UUID = "email_campaign_uuid";
  @SerializedName(SERIALIZED_NAME_EMAIL_CAMPAIGN_UUID)
  private String emailCampaignUuid;

  public static final String SERIALIZED_NAME_EMAIL_COMMUNICATION_SEQUENCE_UUID = "email_communication_sequence_uuid";
  @SerializedName(SERIALIZED_NAME_EMAIL_COMMUNICATION_SEQUENCE_UUID)
  private String emailCommunicationSequenceUuid;

  public static final String SERIALIZED_NAME_END_ONCE_CUSTOMER_PURCHASES = "end_once_customer_purchases";
  @SerializedName(SERIALIZED_NAME_END_ONCE_CUSTOMER_PURCHASES)
  private Boolean endOnceCustomerPurchases;

  public static final String SERIALIZED_NAME_END_ONCE_CUSTOMER_PURCHASES_ANYWHERE = "end_once_customer_purchases_anywhere";
  @SerializedName(SERIALIZED_NAME_END_ONCE_CUSTOMER_PURCHASES_ANYWHERE)
  private Boolean endOnceCustomerPurchasesAnywhere;

  public static final String SERIALIZED_NAME_ESP_CAMPAIGN_FOLDER_UUID = "esp_campaign_folder_uuid";
  @SerializedName(SERIALIZED_NAME_ESP_CAMPAIGN_FOLDER_UUID)
  private String espCampaignFolderUuid;

  public static final String SERIALIZED_NAME_ESP_DOMAIN_USER = "esp_domain_user";
  @SerializedName(SERIALIZED_NAME_ESP_DOMAIN_USER)
  private String espDomainUser;

  public static final String SERIALIZED_NAME_ESP_DOMAIN_UUID = "esp_domain_uuid";
  @SerializedName(SERIALIZED_NAME_ESP_DOMAIN_UUID)
  private String espDomainUuid;

  public static final String SERIALIZED_NAME_ESP_FRIENDLY_NAME = "esp_friendly_name";
  @SerializedName(SERIALIZED_NAME_ESP_FRIENDLY_NAME)
  private String espFriendlyName;

  public static final String SERIALIZED_NAME_LIBRARY_ITEM_OID = "library_item_oid";
  @SerializedName(SERIALIZED_NAME_LIBRARY_ITEM_OID)
  private Integer libraryItemOid;

  public static final String SERIALIZED_NAME_MEMBERSHIPS = "memberships";
  @SerializedName(SERIALIZED_NAME_MEMBERSHIPS)
  private List<EmailListSegmentMembership> memberships = null;

  public static final String SERIALIZED_NAME_MERCHANT_ID = "merchant_id";
  @SerializedName(SERIALIZED_NAME_MERCHANT_ID)
  private String merchantId;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_OPEN_RATE_FORMATTED = "open_rate_formatted";
  @SerializedName(SERIALIZED_NAME_OPEN_RATE_FORMATTED)
  private String openRateFormatted;

  public static final String SERIALIZED_NAME_PREVENT_SENDING_DUE_TO_SPAM = "prevent_sending_due_to_spam";
  @SerializedName(SERIALIZED_NAME_PREVENT_SENDING_DUE_TO_SPAM)
  private Boolean preventSendingDueToSpam;

  public static final String SERIALIZED_NAME_REVENUE_FORMATTED = "revenue_formatted";
  @SerializedName(SERIALIZED_NAME_REVENUE_FORMATTED)
  private String revenueFormatted;

  public static final String SERIALIZED_NAME_REVENUE_PER_CUSTOMER_FORMATTED = "revenue_per_customer_formatted";
  @SerializedName(SERIALIZED_NAME_REVENUE_PER_CUSTOMER_FORMATTED)
  private String revenuePerCustomerFormatted;

  public static final String SERIALIZED_NAME_SCHEDULED_DTS = "scheduled_dts";
  @SerializedName(SERIALIZED_NAME_SCHEDULED_DTS)
  private String scheduledDts;

  public static final String SERIALIZED_NAME_SCREENSHOT_LARGE_FULL_URL = "screenshot_large_full_url";
  @SerializedName(SERIALIZED_NAME_SCREENSHOT_LARGE_FULL_URL)
  private String screenshotLargeFullUrl;

  public static final String SERIALIZED_NAME_SMS_ESP_TWILIO_UUID = "sms_esp_twilio_uuid";
  @SerializedName(SERIALIZED_NAME_SMS_ESP_TWILIO_UUID)
  private String smsEspTwilioUuid;

  public static final String SERIALIZED_NAME_SMS_PHONE_NUMBER = "sms_phone_number";
  @SerializedName(SERIALIZED_NAME_SMS_PHONE_NUMBER)
  private String smsPhoneNumber;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_STATUS_DTS = "status_dts";
  @SerializedName(SERIALIZED_NAME_STATUS_DTS)
  private String statusDts;

  public static final String SERIALIZED_NAME_STOREFRONT_OID = "storefront_oid";
  @SerializedName(SERIALIZED_NAME_STOREFRONT_OID)
  private Integer storefrontOid;

  public EmailCampaign() { 
  }

  public EmailCampaign clickRateFormatted(String clickRateFormatted) {
    
    this.clickRateFormatted = clickRateFormatted;
    return this;
  }

   /**
   * Click rate of emails
   * @return clickRateFormatted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Click rate of emails")

  public String getClickRateFormatted() {
    return clickRateFormatted;
  }


  public void setClickRateFormatted(String clickRateFormatted) {
    this.clickRateFormatted = clickRateFormatted;
  }


  public EmailCampaign createdDts(String createdDts) {
    
    this.createdDts = createdDts;
    return this;
  }

   /**
   * Created date
   * @return createdDts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Created date")

  public String getCreatedDts() {
    return createdDts;
  }


  public void setCreatedDts(String createdDts) {
    this.createdDts = createdDts;
  }


  public EmailCampaign deleted(Boolean deleted) {
    
    this.deleted = deleted;
    return this;
  }

   /**
   * True if this campaign was deleted
   * @return deleted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if this campaign was deleted")

  public Boolean getDeleted() {
    return deleted;
  }


  public void setDeleted(Boolean deleted) {
    this.deleted = deleted;
  }


  public EmailCampaign emailCampaignUuid(String emailCampaignUuid) {
    
    this.emailCampaignUuid = emailCampaignUuid;
    return this;
  }

   /**
   * Email campaign UUID
   * @return emailCampaignUuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Email campaign UUID")

  public String getEmailCampaignUuid() {
    return emailCampaignUuid;
  }


  public void setEmailCampaignUuid(String emailCampaignUuid) {
    this.emailCampaignUuid = emailCampaignUuid;
  }


  public EmailCampaign emailCommunicationSequenceUuid(String emailCommunicationSequenceUuid) {
    
    this.emailCommunicationSequenceUuid = emailCommunicationSequenceUuid;
    return this;
  }

   /**
   * Email communication sequence UUID
   * @return emailCommunicationSequenceUuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Email communication sequence UUID")

  public String getEmailCommunicationSequenceUuid() {
    return emailCommunicationSequenceUuid;
  }


  public void setEmailCommunicationSequenceUuid(String emailCommunicationSequenceUuid) {
    this.emailCommunicationSequenceUuid = emailCommunicationSequenceUuid;
  }


  public EmailCampaign endOnceCustomerPurchases(Boolean endOnceCustomerPurchases) {
    
    this.endOnceCustomerPurchases = endOnceCustomerPurchases;
    return this;
  }

   /**
   * True if the customer should end the flow once they purchase from this campaign
   * @return endOnceCustomerPurchases
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if the customer should end the flow once they purchase from this campaign")

  public Boolean getEndOnceCustomerPurchases() {
    return endOnceCustomerPurchases;
  }


  public void setEndOnceCustomerPurchases(Boolean endOnceCustomerPurchases) {
    this.endOnceCustomerPurchases = endOnceCustomerPurchases;
  }


  public EmailCampaign endOnceCustomerPurchasesAnywhere(Boolean endOnceCustomerPurchasesAnywhere) {
    
    this.endOnceCustomerPurchasesAnywhere = endOnceCustomerPurchasesAnywhere;
    return this;
  }

   /**
   * True if the customer should end the flow once they purchase from anywhere
   * @return endOnceCustomerPurchasesAnywhere
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if the customer should end the flow once they purchase from anywhere")

  public Boolean getEndOnceCustomerPurchasesAnywhere() {
    return endOnceCustomerPurchasesAnywhere;
  }


  public void setEndOnceCustomerPurchasesAnywhere(Boolean endOnceCustomerPurchasesAnywhere) {
    this.endOnceCustomerPurchasesAnywhere = endOnceCustomerPurchasesAnywhere;
  }


  public EmailCampaign espCampaignFolderUuid(String espCampaignFolderUuid) {
    
    this.espCampaignFolderUuid = espCampaignFolderUuid;
    return this;
  }

   /**
   * Campaign folder UUID.  Null for uncategorized
   * @return espCampaignFolderUuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Campaign folder UUID.  Null for uncategorized")

  public String getEspCampaignFolderUuid() {
    return espCampaignFolderUuid;
  }


  public void setEspCampaignFolderUuid(String espCampaignFolderUuid) {
    this.espCampaignFolderUuid = espCampaignFolderUuid;
  }


  public EmailCampaign espDomainUser(String espDomainUser) {
    
    this.espDomainUser = espDomainUser;
    return this;
  }

   /**
   * User of the sending address
   * @return espDomainUser
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "User of the sending address")

  public String getEspDomainUser() {
    return espDomainUser;
  }


  public void setEspDomainUser(String espDomainUser) {
    this.espDomainUser = espDomainUser;
  }


  public EmailCampaign espDomainUuid(String espDomainUuid) {
    
    this.espDomainUuid = espDomainUuid;
    return this;
  }

   /**
   * UUID of the sending domain
   * @return espDomainUuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "UUID of the sending domain")

  public String getEspDomainUuid() {
    return espDomainUuid;
  }


  public void setEspDomainUuid(String espDomainUuid) {
    this.espDomainUuid = espDomainUuid;
  }


  public EmailCampaign espFriendlyName(String espFriendlyName) {
    
    this.espFriendlyName = espFriendlyName;
    return this;
  }

   /**
   * Friendly name of the sending email
   * @return espFriendlyName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Friendly name of the sending email")

  public String getEspFriendlyName() {
    return espFriendlyName;
  }


  public void setEspFriendlyName(String espFriendlyName) {
    this.espFriendlyName = espFriendlyName;
  }


  public EmailCampaign libraryItemOid(Integer libraryItemOid) {
    
    this.libraryItemOid = libraryItemOid;
    return this;
  }

   /**
   * If this item was ever added to the Code Library, this is the oid for that library item, or 0 if never added before.  This value is used to determine if a library item should be inserted or updated.
   * @return libraryItemOid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If this item was ever added to the Code Library, this is the oid for that library item, or 0 if never added before.  This value is used to determine if a library item should be inserted or updated.")

  public Integer getLibraryItemOid() {
    return libraryItemOid;
  }


  public void setLibraryItemOid(Integer libraryItemOid) {
    this.libraryItemOid = libraryItemOid;
  }


  public EmailCampaign memberships(List<EmailListSegmentMembership> memberships) {
    
    this.memberships = memberships;
    return this;
  }

  public EmailCampaign addMembershipsItem(EmailListSegmentMembership membershipsItem) {
    if (this.memberships == null) {
      this.memberships = new ArrayList<>();
    }
    this.memberships.add(membershipsItem);
    return this;
  }

   /**
   * List and segment memberships
   * @return memberships
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List and segment memberships")

  public List<EmailListSegmentMembership> getMemberships() {
    return memberships;
  }


  public void setMemberships(List<EmailListSegmentMembership> memberships) {
    this.memberships = memberships;
  }


  public EmailCampaign merchantId(String merchantId) {
    
    this.merchantId = merchantId;
    return this;
  }

   /**
   * Merchant ID
   * @return merchantId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Merchant ID")

  public String getMerchantId() {
    return merchantId;
  }


  public void setMerchantId(String merchantId) {
    this.merchantId = merchantId;
  }


  public EmailCampaign name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Name of email campaign
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name of email campaign")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public EmailCampaign openRateFormatted(String openRateFormatted) {
    
    this.openRateFormatted = openRateFormatted;
    return this;
  }

   /**
   * Open rate of emails
   * @return openRateFormatted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Open rate of emails")

  public String getOpenRateFormatted() {
    return openRateFormatted;
  }


  public void setOpenRateFormatted(String openRateFormatted) {
    this.openRateFormatted = openRateFormatted;
  }


  public EmailCampaign preventSendingDueToSpam(Boolean preventSendingDueToSpam) {
    
    this.preventSendingDueToSpam = preventSendingDueToSpam;
    return this;
  }

   /**
   * True if this campaign is prevented from sending at this time due to spam complaints.
   * @return preventSendingDueToSpam
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if this campaign is prevented from sending at this time due to spam complaints.")

  public Boolean getPreventSendingDueToSpam() {
    return preventSendingDueToSpam;
  }


  public void setPreventSendingDueToSpam(Boolean preventSendingDueToSpam) {
    this.preventSendingDueToSpam = preventSendingDueToSpam;
  }


  public EmailCampaign revenueFormatted(String revenueFormatted) {
    
    this.revenueFormatted = revenueFormatted;
    return this;
  }

   /**
   * Revenue associated with campaign
   * @return revenueFormatted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Revenue associated with campaign")

  public String getRevenueFormatted() {
    return revenueFormatted;
  }


  public void setRevenueFormatted(String revenueFormatted) {
    this.revenueFormatted = revenueFormatted;
  }


  public EmailCampaign revenuePerCustomerFormatted(String revenuePerCustomerFormatted) {
    
    this.revenuePerCustomerFormatted = revenuePerCustomerFormatted;
    return this;
  }

   /**
   * Revenue per customer associated with campaign
   * @return revenuePerCustomerFormatted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Revenue per customer associated with campaign")

  public String getRevenuePerCustomerFormatted() {
    return revenuePerCustomerFormatted;
  }


  public void setRevenuePerCustomerFormatted(String revenuePerCustomerFormatted) {
    this.revenuePerCustomerFormatted = revenuePerCustomerFormatted;
  }


  public EmailCampaign scheduledDts(String scheduledDts) {
    
    this.scheduledDts = scheduledDts;
    return this;
  }

   /**
   * Scheduled date
   * @return scheduledDts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Scheduled date")

  public String getScheduledDts() {
    return scheduledDts;
  }


  public void setScheduledDts(String scheduledDts) {
    this.scheduledDts = scheduledDts;
  }


  public EmailCampaign screenshotLargeFullUrl(String screenshotLargeFullUrl) {
    
    this.screenshotLargeFullUrl = screenshotLargeFullUrl;
    return this;
  }

   /**
   * URL to a large full length screenshot
   * @return screenshotLargeFullUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "URL to a large full length screenshot")

  public String getScreenshotLargeFullUrl() {
    return screenshotLargeFullUrl;
  }


  public void setScreenshotLargeFullUrl(String screenshotLargeFullUrl) {
    this.screenshotLargeFullUrl = screenshotLargeFullUrl;
  }


  public EmailCampaign smsEspTwilioUuid(String smsEspTwilioUuid) {
    
    this.smsEspTwilioUuid = smsEspTwilioUuid;
    return this;
  }

   /**
   * Twilio Account UUID.  Null for none
   * @return smsEspTwilioUuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Twilio Account UUID.  Null for none")

  public String getSmsEspTwilioUuid() {
    return smsEspTwilioUuid;
  }


  public void setSmsEspTwilioUuid(String smsEspTwilioUuid) {
    this.smsEspTwilioUuid = smsEspTwilioUuid;
  }


  public EmailCampaign smsPhoneNumber(String smsPhoneNumber) {
    
    this.smsPhoneNumber = smsPhoneNumber;
    return this;
  }

   /**
   * Twilio SMS Phone Number.  Null for none
   * @return smsPhoneNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Twilio SMS Phone Number.  Null for none")

  public String getSmsPhoneNumber() {
    return smsPhoneNumber;
  }


  public void setSmsPhoneNumber(String smsPhoneNumber) {
    this.smsPhoneNumber = smsPhoneNumber;
  }


  public EmailCampaign status(String status) {
    
    this.status = status;
    return this;
  }

   /**
   * Status of the campaign of draft, archived, and sent
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Status of the campaign of draft, archived, and sent")

  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    this.status = status;
  }


  public EmailCampaign statusDts(String statusDts) {
    
    this.statusDts = statusDts;
    return this;
  }

   /**
   * Timestamp when the last status change happened
   * @return statusDts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Timestamp when the last status change happened")

  public String getStatusDts() {
    return statusDts;
  }


  public void setStatusDts(String statusDts) {
    this.statusDts = statusDts;
  }


  public EmailCampaign storefrontOid(Integer storefrontOid) {
    
    this.storefrontOid = storefrontOid;
    return this;
  }

   /**
   * Storefront oid
   * @return storefrontOid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Storefront oid")

  public Integer getStorefrontOid() {
    return storefrontOid;
  }


  public void setStorefrontOid(Integer storefrontOid) {
    this.storefrontOid = storefrontOid;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmailCampaign emailCampaign = (EmailCampaign) o;
    return Objects.equals(this.clickRateFormatted, emailCampaign.clickRateFormatted) &&
        Objects.equals(this.createdDts, emailCampaign.createdDts) &&
        Objects.equals(this.deleted, emailCampaign.deleted) &&
        Objects.equals(this.emailCampaignUuid, emailCampaign.emailCampaignUuid) &&
        Objects.equals(this.emailCommunicationSequenceUuid, emailCampaign.emailCommunicationSequenceUuid) &&
        Objects.equals(this.endOnceCustomerPurchases, emailCampaign.endOnceCustomerPurchases) &&
        Objects.equals(this.endOnceCustomerPurchasesAnywhere, emailCampaign.endOnceCustomerPurchasesAnywhere) &&
        Objects.equals(this.espCampaignFolderUuid, emailCampaign.espCampaignFolderUuid) &&
        Objects.equals(this.espDomainUser, emailCampaign.espDomainUser) &&
        Objects.equals(this.espDomainUuid, emailCampaign.espDomainUuid) &&
        Objects.equals(this.espFriendlyName, emailCampaign.espFriendlyName) &&
        Objects.equals(this.libraryItemOid, emailCampaign.libraryItemOid) &&
        Objects.equals(this.memberships, emailCampaign.memberships) &&
        Objects.equals(this.merchantId, emailCampaign.merchantId) &&
        Objects.equals(this.name, emailCampaign.name) &&
        Objects.equals(this.openRateFormatted, emailCampaign.openRateFormatted) &&
        Objects.equals(this.preventSendingDueToSpam, emailCampaign.preventSendingDueToSpam) &&
        Objects.equals(this.revenueFormatted, emailCampaign.revenueFormatted) &&
        Objects.equals(this.revenuePerCustomerFormatted, emailCampaign.revenuePerCustomerFormatted) &&
        Objects.equals(this.scheduledDts, emailCampaign.scheduledDts) &&
        Objects.equals(this.screenshotLargeFullUrl, emailCampaign.screenshotLargeFullUrl) &&
        Objects.equals(this.smsEspTwilioUuid, emailCampaign.smsEspTwilioUuid) &&
        Objects.equals(this.smsPhoneNumber, emailCampaign.smsPhoneNumber) &&
        Objects.equals(this.status, emailCampaign.status) &&
        Objects.equals(this.statusDts, emailCampaign.statusDts) &&
        Objects.equals(this.storefrontOid, emailCampaign.storefrontOid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clickRateFormatted, createdDts, deleted, emailCampaignUuid, emailCommunicationSequenceUuid, endOnceCustomerPurchases, endOnceCustomerPurchasesAnywhere, espCampaignFolderUuid, espDomainUser, espDomainUuid, espFriendlyName, libraryItemOid, memberships, merchantId, name, openRateFormatted, preventSendingDueToSpam, revenueFormatted, revenuePerCustomerFormatted, scheduledDts, screenshotLargeFullUrl, smsEspTwilioUuid, smsPhoneNumber, status, statusDts, storefrontOid);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmailCampaign {\n");
    sb.append("    clickRateFormatted: ").append(toIndentedString(clickRateFormatted)).append("\n");
    sb.append("    createdDts: ").append(toIndentedString(createdDts)).append("\n");
    sb.append("    deleted: ").append(toIndentedString(deleted)).append("\n");
    sb.append("    emailCampaignUuid: ").append(toIndentedString(emailCampaignUuid)).append("\n");
    sb.append("    emailCommunicationSequenceUuid: ").append(toIndentedString(emailCommunicationSequenceUuid)).append("\n");
    sb.append("    endOnceCustomerPurchases: ").append(toIndentedString(endOnceCustomerPurchases)).append("\n");
    sb.append("    endOnceCustomerPurchasesAnywhere: ").append(toIndentedString(endOnceCustomerPurchasesAnywhere)).append("\n");
    sb.append("    espCampaignFolderUuid: ").append(toIndentedString(espCampaignFolderUuid)).append("\n");
    sb.append("    espDomainUser: ").append(toIndentedString(espDomainUser)).append("\n");
    sb.append("    espDomainUuid: ").append(toIndentedString(espDomainUuid)).append("\n");
    sb.append("    espFriendlyName: ").append(toIndentedString(espFriendlyName)).append("\n");
    sb.append("    libraryItemOid: ").append(toIndentedString(libraryItemOid)).append("\n");
    sb.append("    memberships: ").append(toIndentedString(memberships)).append("\n");
    sb.append("    merchantId: ").append(toIndentedString(merchantId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    openRateFormatted: ").append(toIndentedString(openRateFormatted)).append("\n");
    sb.append("    preventSendingDueToSpam: ").append(toIndentedString(preventSendingDueToSpam)).append("\n");
    sb.append("    revenueFormatted: ").append(toIndentedString(revenueFormatted)).append("\n");
    sb.append("    revenuePerCustomerFormatted: ").append(toIndentedString(revenuePerCustomerFormatted)).append("\n");
    sb.append("    scheduledDts: ").append(toIndentedString(scheduledDts)).append("\n");
    sb.append("    screenshotLargeFullUrl: ").append(toIndentedString(screenshotLargeFullUrl)).append("\n");
    sb.append("    smsEspTwilioUuid: ").append(toIndentedString(smsEspTwilioUuid)).append("\n");
    sb.append("    smsPhoneNumber: ").append(toIndentedString(smsPhoneNumber)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusDts: ").append(toIndentedString(statusDts)).append("\n");
    sb.append("    storefrontOid: ").append(toIndentedString(storefrontOid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("click_rate_formatted");
    openapiFields.add("created_dts");
    openapiFields.add("deleted");
    openapiFields.add("email_campaign_uuid");
    openapiFields.add("email_communication_sequence_uuid");
    openapiFields.add("end_once_customer_purchases");
    openapiFields.add("end_once_customer_purchases_anywhere");
    openapiFields.add("esp_campaign_folder_uuid");
    openapiFields.add("esp_domain_user");
    openapiFields.add("esp_domain_uuid");
    openapiFields.add("esp_friendly_name");
    openapiFields.add("library_item_oid");
    openapiFields.add("memberships");
    openapiFields.add("merchant_id");
    openapiFields.add("name");
    openapiFields.add("open_rate_formatted");
    openapiFields.add("prevent_sending_due_to_spam");
    openapiFields.add("revenue_formatted");
    openapiFields.add("revenue_per_customer_formatted");
    openapiFields.add("scheduled_dts");
    openapiFields.add("screenshot_large_full_url");
    openapiFields.add("sms_esp_twilio_uuid");
    openapiFields.add("sms_phone_number");
    openapiFields.add("status");
    openapiFields.add("status_dts");
    openapiFields.add("storefront_oid");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to EmailCampaign
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (EmailCampaign.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in EmailCampaign is not found in the empty JSON string", EmailCampaign.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!EmailCampaign.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EmailCampaign` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("click_rate_formatted") != null && !jsonObj.get("click_rate_formatted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `click_rate_formatted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("click_rate_formatted").toString()));
      }
      if (jsonObj.get("created_dts") != null && !jsonObj.get("created_dts").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `created_dts` to be a primitive type in the JSON string but got `%s`", jsonObj.get("created_dts").toString()));
      }
      if (jsonObj.get("email_campaign_uuid") != null && !jsonObj.get("email_campaign_uuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email_campaign_uuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email_campaign_uuid").toString()));
      }
      if (jsonObj.get("email_communication_sequence_uuid") != null && !jsonObj.get("email_communication_sequence_uuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email_communication_sequence_uuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email_communication_sequence_uuid").toString()));
      }
      if (jsonObj.get("esp_campaign_folder_uuid") != null && !jsonObj.get("esp_campaign_folder_uuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `esp_campaign_folder_uuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("esp_campaign_folder_uuid").toString()));
      }
      if (jsonObj.get("esp_domain_user") != null && !jsonObj.get("esp_domain_user").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `esp_domain_user` to be a primitive type in the JSON string but got `%s`", jsonObj.get("esp_domain_user").toString()));
      }
      if (jsonObj.get("esp_domain_uuid") != null && !jsonObj.get("esp_domain_uuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `esp_domain_uuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("esp_domain_uuid").toString()));
      }
      if (jsonObj.get("esp_friendly_name") != null && !jsonObj.get("esp_friendly_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `esp_friendly_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("esp_friendly_name").toString()));
      }
      JsonArray jsonArraymemberships = jsonObj.getAsJsonArray("memberships");
      if (jsonArraymemberships != null) {
        // ensure the json data is an array
        if (!jsonObj.get("memberships").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `memberships` to be an array in the JSON string but got `%s`", jsonObj.get("memberships").toString()));
        }

        // validate the optional field `memberships` (array)
        for (int i = 0; i < jsonArraymemberships.size(); i++) {
          EmailListSegmentMembership.validateJsonObject(jsonArraymemberships.get(i).getAsJsonObject());
        };
      }
      if (jsonObj.get("merchant_id") != null && !jsonObj.get("merchant_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `merchant_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("merchant_id").toString()));
      }
      if (jsonObj.get("name") != null && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (jsonObj.get("open_rate_formatted") != null && !jsonObj.get("open_rate_formatted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `open_rate_formatted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("open_rate_formatted").toString()));
      }
      if (jsonObj.get("revenue_formatted") != null && !jsonObj.get("revenue_formatted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `revenue_formatted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("revenue_formatted").toString()));
      }
      if (jsonObj.get("revenue_per_customer_formatted") != null && !jsonObj.get("revenue_per_customer_formatted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `revenue_per_customer_formatted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("revenue_per_customer_formatted").toString()));
      }
      if (jsonObj.get("scheduled_dts") != null && !jsonObj.get("scheduled_dts").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `scheduled_dts` to be a primitive type in the JSON string but got `%s`", jsonObj.get("scheduled_dts").toString()));
      }
      if (jsonObj.get("screenshot_large_full_url") != null && !jsonObj.get("screenshot_large_full_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `screenshot_large_full_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("screenshot_large_full_url").toString()));
      }
      if (jsonObj.get("sms_esp_twilio_uuid") != null && !jsonObj.get("sms_esp_twilio_uuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sms_esp_twilio_uuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sms_esp_twilio_uuid").toString()));
      }
      if (jsonObj.get("sms_phone_number") != null && !jsonObj.get("sms_phone_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sms_phone_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sms_phone_number").toString()));
      }
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if (jsonObj.get("status_dts") != null && !jsonObj.get("status_dts").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status_dts` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status_dts").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EmailCampaign.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EmailCampaign' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EmailCampaign> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EmailCampaign.class));

       return (TypeAdapter<T>) new TypeAdapter<EmailCampaign>() {
           @Override
           public void write(JsonWriter out, EmailCampaign value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EmailCampaign read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of EmailCampaign given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of EmailCampaign
  * @throws IOException if the JSON string is invalid with respect to EmailCampaign
  */
  public static EmailCampaign fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EmailCampaign.class);
  }

 /**
  * Convert an instance of EmailCampaign to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

