/**
 * UltraCart Rest API V2
 * This is the next generation UltraCart REST API...
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import com.ultracart.admin.v2.models.ApiUserApplicationProfile;
import com.ultracart.admin.v2.models.WebhookEventCategory;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;


/**
 * Webhook
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2016-09-01T10:25:38.669-04:00")
public class Webhook   {
  @SerializedName("api_user_oid")
  private Integer apiUserOid = null;

  @SerializedName("application_profile")
  private ApiUserApplicationProfile applicationProfile = null;

  @SerializedName("authentication_type")
  private String authenticationType = null;

  @SerializedName("basic_password")
  private String basicPassword = null;

  @SerializedName("basic_username")
  private String basicUsername = null;

  @SerializedName("consecutive_failures")
  private Integer consecutiveFailures = null;

  @SerializedName("disabled")
  private Boolean disabled = null;

  @SerializedName("event_categories")
  private List<WebhookEventCategory> eventCategories = new ArrayList<WebhookEventCategory>();

  @SerializedName("maximum_events")
  private Integer maximumEvents = null;

  @SerializedName("maximum_size")
  private Integer maximumSize = null;

  @SerializedName("merchant_id")
  private String merchantId = null;

  @SerializedName("next_retry_after")
  private String nextRetryAfter = null;

  @SerializedName("pending")
  private Integer pending = null;

  @SerializedName("webhook_oid")
  private Integer webhookOid = null;

  @SerializedName("webhook_url")
  private String webhookUrl = null;

  public Webhook apiUserOid(Integer apiUserOid) {
    this.apiUserOid = apiUserOid;
    return this;
  }

   /**
   * Get apiUserOid
   * @return apiUserOid
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getApiUserOid() {
    return apiUserOid;
  }

  public void setApiUserOid(Integer apiUserOid) {
    this.apiUserOid = apiUserOid;
  }

  public Webhook applicationProfile(ApiUserApplicationProfile applicationProfile) {
    this.applicationProfile = applicationProfile;
    return this;
  }

   /**
   * Get applicationProfile
   * @return applicationProfile
  **/
  @ApiModelProperty(example = "null", value = "")
  public ApiUserApplicationProfile getApplicationProfile() {
    return applicationProfile;
  }

  public void setApplicationProfile(ApiUserApplicationProfile applicationProfile) {
    this.applicationProfile = applicationProfile;
  }

  public Webhook authenticationType(String authenticationType) {
    this.authenticationType = authenticationType;
    return this;
  }

   /**
   * Get authenticationType
   * @return authenticationType
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getAuthenticationType() {
    return authenticationType;
  }

  public void setAuthenticationType(String authenticationType) {
    this.authenticationType = authenticationType;
  }

  public Webhook basicPassword(String basicPassword) {
    this.basicPassword = basicPassword;
    return this;
  }

   /**
   * Get basicPassword
   * @return basicPassword
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getBasicPassword() {
    return basicPassword;
  }

  public void setBasicPassword(String basicPassword) {
    this.basicPassword = basicPassword;
  }

  public Webhook basicUsername(String basicUsername) {
    this.basicUsername = basicUsername;
    return this;
  }

   /**
   * Get basicUsername
   * @return basicUsername
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getBasicUsername() {
    return basicUsername;
  }

  public void setBasicUsername(String basicUsername) {
    this.basicUsername = basicUsername;
  }

  public Webhook consecutiveFailures(Integer consecutiveFailures) {
    this.consecutiveFailures = consecutiveFailures;
    return this;
  }

   /**
   * Get consecutiveFailures
   * @return consecutiveFailures
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getConsecutiveFailures() {
    return consecutiveFailures;
  }

  public void setConsecutiveFailures(Integer consecutiveFailures) {
    this.consecutiveFailures = consecutiveFailures;
  }

  public Webhook disabled(Boolean disabled) {
    this.disabled = disabled;
    return this;
  }

   /**
   * Get disabled
   * @return disabled
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getDisabled() {
    return disabled;
  }

  public void setDisabled(Boolean disabled) {
    this.disabled = disabled;
  }

  public Webhook eventCategories(List<WebhookEventCategory> eventCategories) {
    this.eventCategories = eventCategories;
    return this;
  }

  public Webhook addEventCategoriesItem(WebhookEventCategory eventCategoriesItem) {
    this.eventCategories.add(eventCategoriesItem);
    return this;
  }

   /**
   * Get eventCategories
   * @return eventCategories
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<WebhookEventCategory> getEventCategories() {
    return eventCategories;
  }

  public void setEventCategories(List<WebhookEventCategory> eventCategories) {
    this.eventCategories = eventCategories;
  }

  public Webhook maximumEvents(Integer maximumEvents) {
    this.maximumEvents = maximumEvents;
    return this;
  }

   /**
   * Get maximumEvents
   * @return maximumEvents
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getMaximumEvents() {
    return maximumEvents;
  }

  public void setMaximumEvents(Integer maximumEvents) {
    this.maximumEvents = maximumEvents;
  }

  public Webhook maximumSize(Integer maximumSize) {
    this.maximumSize = maximumSize;
    return this;
  }

   /**
   * Get maximumSize
   * @return maximumSize
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getMaximumSize() {
    return maximumSize;
  }

  public void setMaximumSize(Integer maximumSize) {
    this.maximumSize = maximumSize;
  }

  public Webhook merchantId(String merchantId) {
    this.merchantId = merchantId;
    return this;
  }

   /**
   * Get merchantId
   * @return merchantId
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getMerchantId() {
    return merchantId;
  }

  public void setMerchantId(String merchantId) {
    this.merchantId = merchantId;
  }

  public Webhook nextRetryAfter(String nextRetryAfter) {
    this.nextRetryAfter = nextRetryAfter;
    return this;
  }

   /**
   * Get nextRetryAfter
   * @return nextRetryAfter
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getNextRetryAfter() {
    return nextRetryAfter;
  }

  public void setNextRetryAfter(String nextRetryAfter) {
    this.nextRetryAfter = nextRetryAfter;
  }

  public Webhook pending(Integer pending) {
    this.pending = pending;
    return this;
  }

   /**
   * Get pending
   * @return pending
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getPending() {
    return pending;
  }

  public void setPending(Integer pending) {
    this.pending = pending;
  }

  public Webhook webhookOid(Integer webhookOid) {
    this.webhookOid = webhookOid;
    return this;
  }

   /**
   * Get webhookOid
   * @return webhookOid
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getWebhookOid() {
    return webhookOid;
  }

  public void setWebhookOid(Integer webhookOid) {
    this.webhookOid = webhookOid;
  }

  public Webhook webhookUrl(String webhookUrl) {
    this.webhookUrl = webhookUrl;
    return this;
  }

   /**
   * Get webhookUrl
   * @return webhookUrl
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getWebhookUrl() {
    return webhookUrl;
  }

  public void setWebhookUrl(String webhookUrl) {
    this.webhookUrl = webhookUrl;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Webhook webhook = (Webhook) o;
    return Objects.equals(this.apiUserOid, webhook.apiUserOid) &&
        Objects.equals(this.applicationProfile, webhook.applicationProfile) &&
        Objects.equals(this.authenticationType, webhook.authenticationType) &&
        Objects.equals(this.basicPassword, webhook.basicPassword) &&
        Objects.equals(this.basicUsername, webhook.basicUsername) &&
        Objects.equals(this.consecutiveFailures, webhook.consecutiveFailures) &&
        Objects.equals(this.disabled, webhook.disabled) &&
        Objects.equals(this.eventCategories, webhook.eventCategories) &&
        Objects.equals(this.maximumEvents, webhook.maximumEvents) &&
        Objects.equals(this.maximumSize, webhook.maximumSize) &&
        Objects.equals(this.merchantId, webhook.merchantId) &&
        Objects.equals(this.nextRetryAfter, webhook.nextRetryAfter) &&
        Objects.equals(this.pending, webhook.pending) &&
        Objects.equals(this.webhookOid, webhook.webhookOid) &&
        Objects.equals(this.webhookUrl, webhook.webhookUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(apiUserOid, applicationProfile, authenticationType, basicPassword, basicUsername, consecutiveFailures, disabled, eventCategories, maximumEvents, maximumSize, merchantId, nextRetryAfter, pending, webhookOid, webhookUrl);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Webhook {\n");
    
    sb.append("    apiUserOid: ").append(toIndentedString(apiUserOid)).append("\n");
    sb.append("    applicationProfile: ").append(toIndentedString(applicationProfile)).append("\n");
    sb.append("    authenticationType: ").append(toIndentedString(authenticationType)).append("\n");
    sb.append("    basicPassword: ").append(toIndentedString(basicPassword)).append("\n");
    sb.append("    basicUsername: ").append(toIndentedString(basicUsername)).append("\n");
    sb.append("    consecutiveFailures: ").append(toIndentedString(consecutiveFailures)).append("\n");
    sb.append("    disabled: ").append(toIndentedString(disabled)).append("\n");
    sb.append("    eventCategories: ").append(toIndentedString(eventCategories)).append("\n");
    sb.append("    maximumEvents: ").append(toIndentedString(maximumEvents)).append("\n");
    sb.append("    maximumSize: ").append(toIndentedString(maximumSize)).append("\n");
    sb.append("    merchantId: ").append(toIndentedString(merchantId)).append("\n");
    sb.append("    nextRetryAfter: ").append(toIndentedString(nextRetryAfter)).append("\n");
    sb.append("    pending: ").append(toIndentedString(pending)).append("\n");
    sb.append("    webhookOid: ").append(toIndentedString(webhookOid)).append("\n");
    sb.append("    webhookUrl: ").append(toIndentedString(webhookUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

