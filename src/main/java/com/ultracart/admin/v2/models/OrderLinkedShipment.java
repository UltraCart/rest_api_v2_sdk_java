/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * OrderLinkedShipment
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-23T00:47:02.286-04:00[America/Indianapolis]")
public class OrderLinkedShipment {
  public static final String SERIALIZED_NAME_HAS_LINKED_SHIPMENT = "has_linked_shipment";
  @SerializedName(SERIALIZED_NAME_HAS_LINKED_SHIPMENT)
  private Boolean hasLinkedShipment;

  public static final String SERIALIZED_NAME_LINKED_SHIPMENT = "linked_shipment";
  @SerializedName(SERIALIZED_NAME_LINKED_SHIPMENT)
  private Boolean linkedShipment;

  public static final String SERIALIZED_NAME_LINKED_SHIPMENT_CHANNEL_PARTNER_ORDER_IDS = "linked_shipment_channel_partner_order_ids";
  @SerializedName(SERIALIZED_NAME_LINKED_SHIPMENT_CHANNEL_PARTNER_ORDER_IDS)
  private List<String> linkedShipmentChannelPartnerOrderIds = null;

  public static final String SERIALIZED_NAME_LINKED_SHIPMENT_ORDER_IDS = "linked_shipment_order_ids";
  @SerializedName(SERIALIZED_NAME_LINKED_SHIPMENT_ORDER_IDS)
  private List<String> linkedShipmentOrderIds = null;

  public static final String SERIALIZED_NAME_LINKED_SHIPMENT_TO_ORDER_ID = "linked_shipment_to_order_id";
  @SerializedName(SERIALIZED_NAME_LINKED_SHIPMENT_TO_ORDER_ID)
  private String linkedShipmentToOrderId;

  public OrderLinkedShipment() { 
  }

  public OrderLinkedShipment hasLinkedShipment(Boolean hasLinkedShipment) {
    
    this.hasLinkedShipment = hasLinkedShipment;
    return this;
  }

   /**
   * True if this order has child linked shipments
   * @return hasLinkedShipment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if this order has child linked shipments")

  public Boolean getHasLinkedShipment() {
    return hasLinkedShipment;
  }


  public void setHasLinkedShipment(Boolean hasLinkedShipment) {
    this.hasLinkedShipment = hasLinkedShipment;
  }


  public OrderLinkedShipment linkedShipment(Boolean linkedShipment) {
    
    this.linkedShipment = linkedShipment;
    return this;
  }

   /**
   * True if this order is linked to another parent order
   * @return linkedShipment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if this order is linked to another parent order")

  public Boolean getLinkedShipment() {
    return linkedShipment;
  }


  public void setLinkedShipment(Boolean linkedShipment) {
    this.linkedShipment = linkedShipment;
  }


  public OrderLinkedShipment linkedShipmentChannelPartnerOrderIds(List<String> linkedShipmentChannelPartnerOrderIds) {
    
    this.linkedShipmentChannelPartnerOrderIds = linkedShipmentChannelPartnerOrderIds;
    return this;
  }

  public OrderLinkedShipment addLinkedShipmentChannelPartnerOrderIdsItem(String linkedShipmentChannelPartnerOrderIdsItem) {
    if (this.linkedShipmentChannelPartnerOrderIds == null) {
      this.linkedShipmentChannelPartnerOrderIds = new ArrayList<>();
    }
    this.linkedShipmentChannelPartnerOrderIds.add(linkedShipmentChannelPartnerOrderIdsItem);
    return this;
  }

   /**
   * The child linked shipment channel partner order ids
   * @return linkedShipmentChannelPartnerOrderIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The child linked shipment channel partner order ids")

  public List<String> getLinkedShipmentChannelPartnerOrderIds() {
    return linkedShipmentChannelPartnerOrderIds;
  }


  public void setLinkedShipmentChannelPartnerOrderIds(List<String> linkedShipmentChannelPartnerOrderIds) {
    this.linkedShipmentChannelPartnerOrderIds = linkedShipmentChannelPartnerOrderIds;
  }


  public OrderLinkedShipment linkedShipmentOrderIds(List<String> linkedShipmentOrderIds) {
    
    this.linkedShipmentOrderIds = linkedShipmentOrderIds;
    return this;
  }

  public OrderLinkedShipment addLinkedShipmentOrderIdsItem(String linkedShipmentOrderIdsItem) {
    if (this.linkedShipmentOrderIds == null) {
      this.linkedShipmentOrderIds = new ArrayList<>();
    }
    this.linkedShipmentOrderIds.add(linkedShipmentOrderIdsItem);
    return this;
  }

   /**
   * The child linked shipment order ids
   * @return linkedShipmentOrderIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The child linked shipment order ids")

  public List<String> getLinkedShipmentOrderIds() {
    return linkedShipmentOrderIds;
  }


  public void setLinkedShipmentOrderIds(List<String> linkedShipmentOrderIds) {
    this.linkedShipmentOrderIds = linkedShipmentOrderIds;
  }


  public OrderLinkedShipment linkedShipmentToOrderId(String linkedShipmentToOrderId) {
    
    this.linkedShipmentToOrderId = linkedShipmentToOrderId;
    return this;
  }

   /**
   * The parent order id that this one is linked to
   * @return linkedShipmentToOrderId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The parent order id that this one is linked to")

  public String getLinkedShipmentToOrderId() {
    return linkedShipmentToOrderId;
  }


  public void setLinkedShipmentToOrderId(String linkedShipmentToOrderId) {
    this.linkedShipmentToOrderId = linkedShipmentToOrderId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderLinkedShipment orderLinkedShipment = (OrderLinkedShipment) o;
    return Objects.equals(this.hasLinkedShipment, orderLinkedShipment.hasLinkedShipment) &&
        Objects.equals(this.linkedShipment, orderLinkedShipment.linkedShipment) &&
        Objects.equals(this.linkedShipmentChannelPartnerOrderIds, orderLinkedShipment.linkedShipmentChannelPartnerOrderIds) &&
        Objects.equals(this.linkedShipmentOrderIds, orderLinkedShipment.linkedShipmentOrderIds) &&
        Objects.equals(this.linkedShipmentToOrderId, orderLinkedShipment.linkedShipmentToOrderId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(hasLinkedShipment, linkedShipment, linkedShipmentChannelPartnerOrderIds, linkedShipmentOrderIds, linkedShipmentToOrderId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderLinkedShipment {\n");
    sb.append("    hasLinkedShipment: ").append(toIndentedString(hasLinkedShipment)).append("\n");
    sb.append("    linkedShipment: ").append(toIndentedString(linkedShipment)).append("\n");
    sb.append("    linkedShipmentChannelPartnerOrderIds: ").append(toIndentedString(linkedShipmentChannelPartnerOrderIds)).append("\n");
    sb.append("    linkedShipmentOrderIds: ").append(toIndentedString(linkedShipmentOrderIds)).append("\n");
    sb.append("    linkedShipmentToOrderId: ").append(toIndentedString(linkedShipmentToOrderId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("has_linked_shipment");
    openapiFields.add("linked_shipment");
    openapiFields.add("linked_shipment_channel_partner_order_ids");
    openapiFields.add("linked_shipment_order_ids");
    openapiFields.add("linked_shipment_to_order_id");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to OrderLinkedShipment
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (OrderLinkedShipment.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in OrderLinkedShipment is not found in the empty JSON string", OrderLinkedShipment.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!OrderLinkedShipment.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OrderLinkedShipment` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      // ensure the json data is an array
      if (jsonObj.get("linked_shipment_channel_partner_order_ids") != null && !jsonObj.get("linked_shipment_channel_partner_order_ids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `linked_shipment_channel_partner_order_ids` to be an array in the JSON string but got `%s`", jsonObj.get("linked_shipment_channel_partner_order_ids").toString()));
      }
      // ensure the json data is an array
      if (jsonObj.get("linked_shipment_order_ids") != null && !jsonObj.get("linked_shipment_order_ids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `linked_shipment_order_ids` to be an array in the JSON string but got `%s`", jsonObj.get("linked_shipment_order_ids").toString()));
      }
      if (jsonObj.get("linked_shipment_to_order_id") != null && !jsonObj.get("linked_shipment_to_order_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `linked_shipment_to_order_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("linked_shipment_to_order_id").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OrderLinkedShipment.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OrderLinkedShipment' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OrderLinkedShipment> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OrderLinkedShipment.class));

       return (TypeAdapter<T>) new TypeAdapter<OrderLinkedShipment>() {
           @Override
           public void write(JsonWriter out, OrderLinkedShipment value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OrderLinkedShipment read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of OrderLinkedShipment given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of OrderLinkedShipment
  * @throws IOException if the JSON string is invalid with respect to OrderLinkedShipment
  */
  public static OrderLinkedShipment fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OrderLinkedShipment.class);
  }

 /**
  * Convert an instance of OrderLinkedShipment to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

