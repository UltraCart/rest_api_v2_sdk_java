/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * ItemShippingDestinationRestriction
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-12-08T09:55:21.387-05:00")



public class ItemShippingDestinationRestriction {
  @SerializedName("country_code")
  private String countryCode = null;

  @SerializedName("state")
  private String state = null;

  /**
   * Validity
   */
  @JsonAdapter(ValidityEnum.Adapter.class)
  public enum ValidityEnum {
    VALID_ONLY_FOR("valid only for"),
    
    INVALID_FOR("invalid for");

    private String value;

    ValidityEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ValidityEnum fromValue(String text) {
      for (ValidityEnum b : ValidityEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<ValidityEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ValidityEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ValidityEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return ValidityEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("validity")
  private ValidityEnum validity = null;

  public ItemShippingDestinationRestriction countryCode(String countryCode) {
    this.countryCode = countryCode;
    return this;
  }

   /**
   * Country code (ISO-3166 two letter)
   * @return countryCode
  **/
  @ApiModelProperty(value = "Country code (ISO-3166 two letter)")
  public String getCountryCode() {
    return countryCode;
  }

  public void setCountryCode(String countryCode) {
    this.countryCode = countryCode;
  }

  public ItemShippingDestinationRestriction state(String state) {
    this.state = state;
    return this;
  }

   /**
   * State
   * @return state
  **/
  @ApiModelProperty(value = "State")
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }

  public ItemShippingDestinationRestriction validity(ValidityEnum validity) {
    this.validity = validity;
    return this;
  }

   /**
   * Validity
   * @return validity
  **/
  @ApiModelProperty(value = "Validity")
  public ValidityEnum getValidity() {
    return validity;
  }

  public void setValidity(ValidityEnum validity) {
    this.validity = validity;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ItemShippingDestinationRestriction itemShippingDestinationRestriction = (ItemShippingDestinationRestriction) o;
    return Objects.equals(this.countryCode, itemShippingDestinationRestriction.countryCode) &&
        Objects.equals(this.state, itemShippingDestinationRestriction.state) &&
        Objects.equals(this.validity, itemShippingDestinationRestriction.validity);
  }

  @Override
  public int hashCode() {
    return Objects.hash(countryCode, state, validity);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ItemShippingDestinationRestriction {\n");
    
    sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    validity: ").append(toIndentedString(validity)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

