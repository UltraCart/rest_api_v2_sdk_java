/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.EmailPlanAdditional;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * EmailPlan
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-12-08T15:42:41.031-05:00[America/Indianapolis]")
public class EmailPlan {
  public static final String SERIALIZED_NAME_ADDITIONAL_CUSTOMERS = "additional_customers";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_CUSTOMERS)
  private Integer additionalCustomers;

  public static final String SERIALIZED_NAME_ADDITIONAL_EMAILS = "additional_emails";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_EMAILS)
  private Integer additionalEmails;

  public static final String SERIALIZED_NAME_ADDITIONAL_FEE = "additional_fee";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_FEE)
  private BigDecimal additionalFee;

  public static final String SERIALIZED_NAME_ALLOW_LIST_IMPORT = "allow_list_import";
  @SerializedName(SERIALIZED_NAME_ALLOW_LIST_IMPORT)
  private Boolean allowListImport;

  public static final String SERIALIZED_NAME_ALLOW_TRACKING_EMAILS = "allow_tracking_emails";
  @SerializedName(SERIALIZED_NAME_ALLOW_TRACKING_EMAILS)
  private Boolean allowTrackingEmails;

  public static final String SERIALIZED_NAME_CUSTOMER_TIERS = "customer_tiers";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_TIERS)
  private List<EmailPlanAdditional> customerTiers = null;

  public static final String SERIALIZED_NAME_INITIAL_SENDING_LIMITS = "initial_sending_limits";
  @SerializedName(SERIALIZED_NAME_INITIAL_SENDING_LIMITS)
  private Integer initialSendingLimits;

  public static final String SERIALIZED_NAME_PLAN_CUSTOMERS = "plan_customers";
  @SerializedName(SERIALIZED_NAME_PLAN_CUSTOMERS)
  private Integer planCustomers;

  public static final String SERIALIZED_NAME_PLAN_EMAILS = "plan_emails";
  @SerializedName(SERIALIZED_NAME_PLAN_EMAILS)
  private Integer planEmails;

  public static final String SERIALIZED_NAME_PLAN_NAME = "plan_name";
  @SerializedName(SERIALIZED_NAME_PLAN_NAME)
  private String planName;

  public static final String SERIALIZED_NAME_PLAN_NAME_FORMATTED = "plan_name_formatted";
  @SerializedName(SERIALIZED_NAME_PLAN_NAME_FORMATTED)
  private String planNameFormatted;

  public static final String SERIALIZED_NAME_REQUIRE_ORDER_WITHIN_LAST_DAYS = "require_order_within_last_days";
  @SerializedName(SERIALIZED_NAME_REQUIRE_ORDER_WITHIN_LAST_DAYS)
  private Integer requireOrderWithinLastDays;

  public static final String SERIALIZED_NAME_REVENUE_PERCENT = "revenue_percent";
  @SerializedName(SERIALIZED_NAME_REVENUE_PERCENT)
  private Integer revenuePercent;

  public static final String SERIALIZED_NAME_SPAM_PERCENT_LIMIT = "spam_percent_limit";
  @SerializedName(SERIALIZED_NAME_SPAM_PERCENT_LIMIT)
  private Integer spamPercentLimit;

  public static final String SERIALIZED_NAME_TOTAL_CUSTOMERS = "total_customers";
  @SerializedName(SERIALIZED_NAME_TOTAL_CUSTOMERS)
  private Integer totalCustomers;

  public static final String SERIALIZED_NAME_TOTAL_EMAILS = "total_emails";
  @SerializedName(SERIALIZED_NAME_TOTAL_EMAILS)
  private Integer totalEmails;

  public static final String SERIALIZED_NAME_UPGRADE_TO = "upgrade_to";
  @SerializedName(SERIALIZED_NAME_UPGRADE_TO)
  private Integer upgradeTo;

  public EmailPlan() { 
  }

  public EmailPlan additionalCustomers(Integer additionalCustomers) {
    
    this.additionalCustomers = additionalCustomers;
    return this;
  }

   /**
   * Get additionalCustomers
   * @return additionalCustomers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getAdditionalCustomers() {
    return additionalCustomers;
  }


  public void setAdditionalCustomers(Integer additionalCustomers) {
    this.additionalCustomers = additionalCustomers;
  }


  public EmailPlan additionalEmails(Integer additionalEmails) {
    
    this.additionalEmails = additionalEmails;
    return this;
  }

   /**
   * Get additionalEmails
   * @return additionalEmails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getAdditionalEmails() {
    return additionalEmails;
  }


  public void setAdditionalEmails(Integer additionalEmails) {
    this.additionalEmails = additionalEmails;
  }


  public EmailPlan additionalFee(BigDecimal additionalFee) {
    
    this.additionalFee = additionalFee;
    return this;
  }

   /**
   * Get additionalFee
   * @return additionalFee
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getAdditionalFee() {
    return additionalFee;
  }


  public void setAdditionalFee(BigDecimal additionalFee) {
    this.additionalFee = additionalFee;
  }


  public EmailPlan allowListImport(Boolean allowListImport) {
    
    this.allowListImport = allowListImport;
    return this;
  }

   /**
   * Get allowListImport
   * @return allowListImport
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getAllowListImport() {
    return allowListImport;
  }


  public void setAllowListImport(Boolean allowListImport) {
    this.allowListImport = allowListImport;
  }


  public EmailPlan allowTrackingEmails(Boolean allowTrackingEmails) {
    
    this.allowTrackingEmails = allowTrackingEmails;
    return this;
  }

   /**
   * Get allowTrackingEmails
   * @return allowTrackingEmails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getAllowTrackingEmails() {
    return allowTrackingEmails;
  }


  public void setAllowTrackingEmails(Boolean allowTrackingEmails) {
    this.allowTrackingEmails = allowTrackingEmails;
  }


  public EmailPlan customerTiers(List<EmailPlanAdditional> customerTiers) {
    
    this.customerTiers = customerTiers;
    return this;
  }

  public EmailPlan addCustomerTiersItem(EmailPlanAdditional customerTiersItem) {
    if (this.customerTiers == null) {
      this.customerTiers = new ArrayList<>();
    }
    this.customerTiers.add(customerTiersItem);
    return this;
  }

   /**
   * Get customerTiers
   * @return customerTiers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<EmailPlanAdditional> getCustomerTiers() {
    return customerTiers;
  }


  public void setCustomerTiers(List<EmailPlanAdditional> customerTiers) {
    this.customerTiers = customerTiers;
  }


  public EmailPlan initialSendingLimits(Integer initialSendingLimits) {
    
    this.initialSendingLimits = initialSendingLimits;
    return this;
  }

   /**
   * Get initialSendingLimits
   * @return initialSendingLimits
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getInitialSendingLimits() {
    return initialSendingLimits;
  }


  public void setInitialSendingLimits(Integer initialSendingLimits) {
    this.initialSendingLimits = initialSendingLimits;
  }


  public EmailPlan planCustomers(Integer planCustomers) {
    
    this.planCustomers = planCustomers;
    return this;
  }

   /**
   * Get planCustomers
   * @return planCustomers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getPlanCustomers() {
    return planCustomers;
  }


  public void setPlanCustomers(Integer planCustomers) {
    this.planCustomers = planCustomers;
  }


  public EmailPlan planEmails(Integer planEmails) {
    
    this.planEmails = planEmails;
    return this;
  }

   /**
   * Get planEmails
   * @return planEmails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getPlanEmails() {
    return planEmails;
  }


  public void setPlanEmails(Integer planEmails) {
    this.planEmails = planEmails;
  }


  public EmailPlan planName(String planName) {
    
    this.planName = planName;
    return this;
  }

   /**
   * Get planName
   * @return planName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPlanName() {
    return planName;
  }


  public void setPlanName(String planName) {
    this.planName = planName;
  }


  public EmailPlan planNameFormatted(String planNameFormatted) {
    
    this.planNameFormatted = planNameFormatted;
    return this;
  }

   /**
   * Get planNameFormatted
   * @return planNameFormatted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPlanNameFormatted() {
    return planNameFormatted;
  }


  public void setPlanNameFormatted(String planNameFormatted) {
    this.planNameFormatted = planNameFormatted;
  }


  public EmailPlan requireOrderWithinLastDays(Integer requireOrderWithinLastDays) {
    
    this.requireOrderWithinLastDays = requireOrderWithinLastDays;
    return this;
  }

   /**
   * Get requireOrderWithinLastDays
   * @return requireOrderWithinLastDays
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getRequireOrderWithinLastDays() {
    return requireOrderWithinLastDays;
  }


  public void setRequireOrderWithinLastDays(Integer requireOrderWithinLastDays) {
    this.requireOrderWithinLastDays = requireOrderWithinLastDays;
  }


  public EmailPlan revenuePercent(Integer revenuePercent) {
    
    this.revenuePercent = revenuePercent;
    return this;
  }

   /**
   * Get revenuePercent
   * @return revenuePercent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getRevenuePercent() {
    return revenuePercent;
  }


  public void setRevenuePercent(Integer revenuePercent) {
    this.revenuePercent = revenuePercent;
  }


  public EmailPlan spamPercentLimit(Integer spamPercentLimit) {
    
    this.spamPercentLimit = spamPercentLimit;
    return this;
  }

   /**
   * Get spamPercentLimit
   * @return spamPercentLimit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getSpamPercentLimit() {
    return spamPercentLimit;
  }


  public void setSpamPercentLimit(Integer spamPercentLimit) {
    this.spamPercentLimit = spamPercentLimit;
  }


  public EmailPlan totalCustomers(Integer totalCustomers) {
    
    this.totalCustomers = totalCustomers;
    return this;
  }

   /**
   * Get totalCustomers
   * @return totalCustomers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getTotalCustomers() {
    return totalCustomers;
  }


  public void setTotalCustomers(Integer totalCustomers) {
    this.totalCustomers = totalCustomers;
  }


  public EmailPlan totalEmails(Integer totalEmails) {
    
    this.totalEmails = totalEmails;
    return this;
  }

   /**
   * Get totalEmails
   * @return totalEmails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getTotalEmails() {
    return totalEmails;
  }


  public void setTotalEmails(Integer totalEmails) {
    this.totalEmails = totalEmails;
  }


  public EmailPlan upgradeTo(Integer upgradeTo) {
    
    this.upgradeTo = upgradeTo;
    return this;
  }

   /**
   * Get upgradeTo
   * @return upgradeTo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getUpgradeTo() {
    return upgradeTo;
  }


  public void setUpgradeTo(Integer upgradeTo) {
    this.upgradeTo = upgradeTo;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmailPlan emailPlan = (EmailPlan) o;
    return Objects.equals(this.additionalCustomers, emailPlan.additionalCustomers) &&
        Objects.equals(this.additionalEmails, emailPlan.additionalEmails) &&
        Objects.equals(this.additionalFee, emailPlan.additionalFee) &&
        Objects.equals(this.allowListImport, emailPlan.allowListImport) &&
        Objects.equals(this.allowTrackingEmails, emailPlan.allowTrackingEmails) &&
        Objects.equals(this.customerTiers, emailPlan.customerTiers) &&
        Objects.equals(this.initialSendingLimits, emailPlan.initialSendingLimits) &&
        Objects.equals(this.planCustomers, emailPlan.planCustomers) &&
        Objects.equals(this.planEmails, emailPlan.planEmails) &&
        Objects.equals(this.planName, emailPlan.planName) &&
        Objects.equals(this.planNameFormatted, emailPlan.planNameFormatted) &&
        Objects.equals(this.requireOrderWithinLastDays, emailPlan.requireOrderWithinLastDays) &&
        Objects.equals(this.revenuePercent, emailPlan.revenuePercent) &&
        Objects.equals(this.spamPercentLimit, emailPlan.spamPercentLimit) &&
        Objects.equals(this.totalCustomers, emailPlan.totalCustomers) &&
        Objects.equals(this.totalEmails, emailPlan.totalEmails) &&
        Objects.equals(this.upgradeTo, emailPlan.upgradeTo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(additionalCustomers, additionalEmails, additionalFee, allowListImport, allowTrackingEmails, customerTiers, initialSendingLimits, planCustomers, planEmails, planName, planNameFormatted, requireOrderWithinLastDays, revenuePercent, spamPercentLimit, totalCustomers, totalEmails, upgradeTo);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmailPlan {\n");
    sb.append("    additionalCustomers: ").append(toIndentedString(additionalCustomers)).append("\n");
    sb.append("    additionalEmails: ").append(toIndentedString(additionalEmails)).append("\n");
    sb.append("    additionalFee: ").append(toIndentedString(additionalFee)).append("\n");
    sb.append("    allowListImport: ").append(toIndentedString(allowListImport)).append("\n");
    sb.append("    allowTrackingEmails: ").append(toIndentedString(allowTrackingEmails)).append("\n");
    sb.append("    customerTiers: ").append(toIndentedString(customerTiers)).append("\n");
    sb.append("    initialSendingLimits: ").append(toIndentedString(initialSendingLimits)).append("\n");
    sb.append("    planCustomers: ").append(toIndentedString(planCustomers)).append("\n");
    sb.append("    planEmails: ").append(toIndentedString(planEmails)).append("\n");
    sb.append("    planName: ").append(toIndentedString(planName)).append("\n");
    sb.append("    planNameFormatted: ").append(toIndentedString(planNameFormatted)).append("\n");
    sb.append("    requireOrderWithinLastDays: ").append(toIndentedString(requireOrderWithinLastDays)).append("\n");
    sb.append("    revenuePercent: ").append(toIndentedString(revenuePercent)).append("\n");
    sb.append("    spamPercentLimit: ").append(toIndentedString(spamPercentLimit)).append("\n");
    sb.append("    totalCustomers: ").append(toIndentedString(totalCustomers)).append("\n");
    sb.append("    totalEmails: ").append(toIndentedString(totalEmails)).append("\n");
    sb.append("    upgradeTo: ").append(toIndentedString(upgradeTo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("additional_customers");
    openapiFields.add("additional_emails");
    openapiFields.add("additional_fee");
    openapiFields.add("allow_list_import");
    openapiFields.add("allow_tracking_emails");
    openapiFields.add("customer_tiers");
    openapiFields.add("initial_sending_limits");
    openapiFields.add("plan_customers");
    openapiFields.add("plan_emails");
    openapiFields.add("plan_name");
    openapiFields.add("plan_name_formatted");
    openapiFields.add("require_order_within_last_days");
    openapiFields.add("revenue_percent");
    openapiFields.add("spam_percent_limit");
    openapiFields.add("total_customers");
    openapiFields.add("total_emails");
    openapiFields.add("upgrade_to");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to EmailPlan
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (EmailPlan.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in EmailPlan is not found in the empty JSON string", EmailPlan.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!EmailPlan.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EmailPlan` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      JsonArray jsonArraycustomerTiers = jsonObj.getAsJsonArray("customer_tiers");
      if (jsonArraycustomerTiers != null) {
        // ensure the json data is an array
        if (!jsonObj.get("customer_tiers").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `customer_tiers` to be an array in the JSON string but got `%s`", jsonObj.get("customer_tiers").toString()));
        }

        // validate the optional field `customer_tiers` (array)
        for (int i = 0; i < jsonArraycustomerTiers.size(); i++) {
          EmailPlanAdditional.validateJsonObject(jsonArraycustomerTiers.get(i).getAsJsonObject());
        };
      }
      if (jsonObj.get("plan_name") != null && !jsonObj.get("plan_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `plan_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("plan_name").toString()));
      }
      if (jsonObj.get("plan_name_formatted") != null && !jsonObj.get("plan_name_formatted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `plan_name_formatted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("plan_name_formatted").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EmailPlan.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EmailPlan' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EmailPlan> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EmailPlan.class));

       return (TypeAdapter<T>) new TypeAdapter<EmailPlan>() {
           @Override
           public void write(JsonWriter out, EmailPlan value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EmailPlan read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of EmailPlan given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of EmailPlan
  * @throws IOException if the JSON string is invalid with respect to EmailPlan
  */
  public static EmailPlan fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EmailPlan.class);
  }

 /**
  * Convert an instance of EmailPlan to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

