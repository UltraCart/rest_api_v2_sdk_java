/**
 * UltraCart Rest API V2
 * This is the next generation UltraCart REST API...
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import com.ultracart.admin.v2.models.ItemChargebackAddendum;
import com.ultracart.admin.v2.models.ItemChargebackAdjustmentRequest;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;


/**
 * ItemChargeback
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2016-08-31T10:46:57.712-04:00")
public class ItemChargeback   {
  @SerializedName("addendums")
  private List<ItemChargebackAddendum> addendums = new ArrayList<ItemChargebackAddendum>();

  @SerializedName("adjustment_requests")
  private List<ItemChargebackAdjustmentRequest> adjustmentRequests = new ArrayList<ItemChargebackAdjustmentRequest>();

  public ItemChargeback addendums(List<ItemChargebackAddendum> addendums) {
    this.addendums = addendums;
    return this;
  }

  public ItemChargeback addAddendumsItem(ItemChargebackAddendum addendumsItem) {
    this.addendums.add(addendumsItem);
    return this;
  }

   /**
   * Get addendums
   * @return addendums
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<ItemChargebackAddendum> getAddendums() {
    return addendums;
  }

  public void setAddendums(List<ItemChargebackAddendum> addendums) {
    this.addendums = addendums;
  }

  public ItemChargeback adjustmentRequests(List<ItemChargebackAdjustmentRequest> adjustmentRequests) {
    this.adjustmentRequests = adjustmentRequests;
    return this;
  }

  public ItemChargeback addAdjustmentRequestsItem(ItemChargebackAdjustmentRequest adjustmentRequestsItem) {
    this.adjustmentRequests.add(adjustmentRequestsItem);
    return this;
  }

   /**
   * Get adjustmentRequests
   * @return adjustmentRequests
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<ItemChargebackAdjustmentRequest> getAdjustmentRequests() {
    return adjustmentRequests;
  }

  public void setAdjustmentRequests(List<ItemChargebackAdjustmentRequest> adjustmentRequests) {
    this.adjustmentRequests = adjustmentRequests;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ItemChargeback itemChargeback = (ItemChargeback) o;
    return Objects.equals(this.addendums, itemChargeback.addendums) &&
        Objects.equals(this.adjustmentRequests, itemChargeback.adjustmentRequests);
  }

  @Override
  public int hashCode() {
    return Objects.hash(addendums, adjustmentRequests);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ItemChargeback {\n");
    
    sb.append("    addendums: ").append(toIndentedString(addendums)).append("\n");
    sb.append("    adjustmentRequests: ").append(toIndentedString(adjustmentRequests)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

