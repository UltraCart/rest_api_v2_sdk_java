/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * ItemShippingMethod
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-06-16T12:57:58.126-04:00")



public class ItemShippingMethod {
  @SerializedName("cost")
  private BigDecimal cost = null;

  @SerializedName("each_additional_item_markup")
  private BigDecimal eachAdditionalItemMarkup = null;

  @SerializedName("filter_to_if_available")
  private Boolean filterToIfAvailable = null;

  @SerializedName("first_item_markup")
  private BigDecimal firstItemMarkup = null;

  @SerializedName("fixed_shipping_cost")
  private BigDecimal fixedShippingCost = null;

  @SerializedName("flat_fee_markup")
  private BigDecimal flatFeeMarkup = null;

  @SerializedName("free_shipping")
  private Boolean freeShipping = null;

  @SerializedName("per_item_fee_markup")
  private BigDecimal perItemFeeMarkup = null;

  @SerializedName("percentage_markup")
  private BigDecimal percentageMarkup = null;

  @SerializedName("percentage_of_item_markup")
  private BigDecimal percentageOfItemMarkup = null;

  @SerializedName("relax_restrictions_on_upsell")
  private Boolean relaxRestrictionsOnUpsell = null;

  @SerializedName("shipping_method")
  private String shippingMethod = null;

  @SerializedName("shipping_method_oid")
  private Integer shippingMethodOid = null;

  /**
   * Shipping method validity
   */
  @JsonAdapter(ShippingMethodValidityEnum.Adapter.class)
  public enum ShippingMethodValidityEnum {
    INVALID_FOR("invalid for"),
    
    VALID_FOR("valid for"),
    
    VALID_ONLY_FOR("valid only for");

    private String value;

    ShippingMethodValidityEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ShippingMethodValidityEnum fromValue(String text) {
      for (ShippingMethodValidityEnum b : ShippingMethodValidityEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<ShippingMethodValidityEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ShippingMethodValidityEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ShippingMethodValidityEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return ShippingMethodValidityEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("shipping_method_validity")
  private ShippingMethodValidityEnum shippingMethodValidity = null;

  @SerializedName("signature_required")
  private Boolean signatureRequired = null;

  public ItemShippingMethod cost(BigDecimal cost) {
    this.cost = cost;
    return this;
  }

   /**
   * Cost
   * @return cost
  **/
  @ApiModelProperty(value = "Cost")
  public BigDecimal getCost() {
    return cost;
  }

  public void setCost(BigDecimal cost) {
    this.cost = cost;
  }

  public ItemShippingMethod eachAdditionalItemMarkup(BigDecimal eachAdditionalItemMarkup) {
    this.eachAdditionalItemMarkup = eachAdditionalItemMarkup;
    return this;
  }

   /**
   * Each additional item markup
   * @return eachAdditionalItemMarkup
  **/
  @ApiModelProperty(value = "Each additional item markup")
  public BigDecimal getEachAdditionalItemMarkup() {
    return eachAdditionalItemMarkup;
  }

  public void setEachAdditionalItemMarkup(BigDecimal eachAdditionalItemMarkup) {
    this.eachAdditionalItemMarkup = eachAdditionalItemMarkup;
  }

  public ItemShippingMethod filterToIfAvailable(Boolean filterToIfAvailable) {
    this.filterToIfAvailable = filterToIfAvailable;
    return this;
  }

   /**
   * Filter to this method if available
   * @return filterToIfAvailable
  **/
  @ApiModelProperty(value = "Filter to this method if available")
  public Boolean isFilterToIfAvailable() {
    return filterToIfAvailable;
  }

  public void setFilterToIfAvailable(Boolean filterToIfAvailable) {
    this.filterToIfAvailable = filterToIfAvailable;
  }

  public ItemShippingMethod firstItemMarkup(BigDecimal firstItemMarkup) {
    this.firstItemMarkup = firstItemMarkup;
    return this;
  }

   /**
   * First item markup
   * @return firstItemMarkup
  **/
  @ApiModelProperty(value = "First item markup")
  public BigDecimal getFirstItemMarkup() {
    return firstItemMarkup;
  }

  public void setFirstItemMarkup(BigDecimal firstItemMarkup) {
    this.firstItemMarkup = firstItemMarkup;
  }

  public ItemShippingMethod fixedShippingCost(BigDecimal fixedShippingCost) {
    this.fixedShippingCost = fixedShippingCost;
    return this;
  }

   /**
   * Fixed shipping cost
   * @return fixedShippingCost
  **/
  @ApiModelProperty(value = "Fixed shipping cost")
  public BigDecimal getFixedShippingCost() {
    return fixedShippingCost;
  }

  public void setFixedShippingCost(BigDecimal fixedShippingCost) {
    this.fixedShippingCost = fixedShippingCost;
  }

  public ItemShippingMethod flatFeeMarkup(BigDecimal flatFeeMarkup) {
    this.flatFeeMarkup = flatFeeMarkup;
    return this;
  }

   /**
   * Flat fee markup
   * @return flatFeeMarkup
  **/
  @ApiModelProperty(value = "Flat fee markup")
  public BigDecimal getFlatFeeMarkup() {
    return flatFeeMarkup;
  }

  public void setFlatFeeMarkup(BigDecimal flatFeeMarkup) {
    this.flatFeeMarkup = flatFeeMarkup;
  }

  public ItemShippingMethod freeShipping(Boolean freeShipping) {
    this.freeShipping = freeShipping;
    return this;
  }

   /**
   * Free shipping
   * @return freeShipping
  **/
  @ApiModelProperty(value = "Free shipping")
  public Boolean isFreeShipping() {
    return freeShipping;
  }

  public void setFreeShipping(Boolean freeShipping) {
    this.freeShipping = freeShipping;
  }

  public ItemShippingMethod perItemFeeMarkup(BigDecimal perItemFeeMarkup) {
    this.perItemFeeMarkup = perItemFeeMarkup;
    return this;
  }

   /**
   * Per item fee markup
   * @return perItemFeeMarkup
  **/
  @ApiModelProperty(value = "Per item fee markup")
  public BigDecimal getPerItemFeeMarkup() {
    return perItemFeeMarkup;
  }

  public void setPerItemFeeMarkup(BigDecimal perItemFeeMarkup) {
    this.perItemFeeMarkup = perItemFeeMarkup;
  }

  public ItemShippingMethod percentageMarkup(BigDecimal percentageMarkup) {
    this.percentageMarkup = percentageMarkup;
    return this;
  }

   /**
   * Percentage markup
   * @return percentageMarkup
  **/
  @ApiModelProperty(value = "Percentage markup")
  public BigDecimal getPercentageMarkup() {
    return percentageMarkup;
  }

  public void setPercentageMarkup(BigDecimal percentageMarkup) {
    this.percentageMarkup = percentageMarkup;
  }

  public ItemShippingMethod percentageOfItemMarkup(BigDecimal percentageOfItemMarkup) {
    this.percentageOfItemMarkup = percentageOfItemMarkup;
    return this;
  }

   /**
   * Percentage of item markup
   * @return percentageOfItemMarkup
  **/
  @ApiModelProperty(value = "Percentage of item markup")
  public BigDecimal getPercentageOfItemMarkup() {
    return percentageOfItemMarkup;
  }

  public void setPercentageOfItemMarkup(BigDecimal percentageOfItemMarkup) {
    this.percentageOfItemMarkup = percentageOfItemMarkup;
  }

  public ItemShippingMethod relaxRestrictionsOnUpsell(Boolean relaxRestrictionsOnUpsell) {
    this.relaxRestrictionsOnUpsell = relaxRestrictionsOnUpsell;
    return this;
  }

   /**
   * Relax restrictions on upsell
   * @return relaxRestrictionsOnUpsell
  **/
  @ApiModelProperty(value = "Relax restrictions on upsell")
  public Boolean isRelaxRestrictionsOnUpsell() {
    return relaxRestrictionsOnUpsell;
  }

  public void setRelaxRestrictionsOnUpsell(Boolean relaxRestrictionsOnUpsell) {
    this.relaxRestrictionsOnUpsell = relaxRestrictionsOnUpsell;
  }

  public ItemShippingMethod shippingMethod(String shippingMethod) {
    this.shippingMethod = shippingMethod;
    return this;
  }

   /**
   * Shipping method name
   * @return shippingMethod
  **/
  @ApiModelProperty(value = "Shipping method name")
  public String getShippingMethod() {
    return shippingMethod;
  }

  public void setShippingMethod(String shippingMethod) {
    this.shippingMethod = shippingMethod;
  }

  public ItemShippingMethod shippingMethodOid(Integer shippingMethodOid) {
    this.shippingMethodOid = shippingMethodOid;
    return this;
  }

   /**
   * Shipping method object identifier
   * @return shippingMethodOid
  **/
  @ApiModelProperty(value = "Shipping method object identifier")
  public Integer getShippingMethodOid() {
    return shippingMethodOid;
  }

  public void setShippingMethodOid(Integer shippingMethodOid) {
    this.shippingMethodOid = shippingMethodOid;
  }

  public ItemShippingMethod shippingMethodValidity(ShippingMethodValidityEnum shippingMethodValidity) {
    this.shippingMethodValidity = shippingMethodValidity;
    return this;
  }

   /**
   * Shipping method validity
   * @return shippingMethodValidity
  **/
  @ApiModelProperty(value = "Shipping method validity")
  public ShippingMethodValidityEnum getShippingMethodValidity() {
    return shippingMethodValidity;
  }

  public void setShippingMethodValidity(ShippingMethodValidityEnum shippingMethodValidity) {
    this.shippingMethodValidity = shippingMethodValidity;
  }

  public ItemShippingMethod signatureRequired(Boolean signatureRequired) {
    this.signatureRequired = signatureRequired;
    return this;
  }

   /**
   * Signature required
   * @return signatureRequired
  **/
  @ApiModelProperty(value = "Signature required")
  public Boolean isSignatureRequired() {
    return signatureRequired;
  }

  public void setSignatureRequired(Boolean signatureRequired) {
    this.signatureRequired = signatureRequired;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ItemShippingMethod itemShippingMethod = (ItemShippingMethod) o;
    return Objects.equals(this.cost, itemShippingMethod.cost) &&
        Objects.equals(this.eachAdditionalItemMarkup, itemShippingMethod.eachAdditionalItemMarkup) &&
        Objects.equals(this.filterToIfAvailable, itemShippingMethod.filterToIfAvailable) &&
        Objects.equals(this.firstItemMarkup, itemShippingMethod.firstItemMarkup) &&
        Objects.equals(this.fixedShippingCost, itemShippingMethod.fixedShippingCost) &&
        Objects.equals(this.flatFeeMarkup, itemShippingMethod.flatFeeMarkup) &&
        Objects.equals(this.freeShipping, itemShippingMethod.freeShipping) &&
        Objects.equals(this.perItemFeeMarkup, itemShippingMethod.perItemFeeMarkup) &&
        Objects.equals(this.percentageMarkup, itemShippingMethod.percentageMarkup) &&
        Objects.equals(this.percentageOfItemMarkup, itemShippingMethod.percentageOfItemMarkup) &&
        Objects.equals(this.relaxRestrictionsOnUpsell, itemShippingMethod.relaxRestrictionsOnUpsell) &&
        Objects.equals(this.shippingMethod, itemShippingMethod.shippingMethod) &&
        Objects.equals(this.shippingMethodOid, itemShippingMethod.shippingMethodOid) &&
        Objects.equals(this.shippingMethodValidity, itemShippingMethod.shippingMethodValidity) &&
        Objects.equals(this.signatureRequired, itemShippingMethod.signatureRequired);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cost, eachAdditionalItemMarkup, filterToIfAvailable, firstItemMarkup, fixedShippingCost, flatFeeMarkup, freeShipping, perItemFeeMarkup, percentageMarkup, percentageOfItemMarkup, relaxRestrictionsOnUpsell, shippingMethod, shippingMethodOid, shippingMethodValidity, signatureRequired);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ItemShippingMethod {\n");
    
    sb.append("    cost: ").append(toIndentedString(cost)).append("\n");
    sb.append("    eachAdditionalItemMarkup: ").append(toIndentedString(eachAdditionalItemMarkup)).append("\n");
    sb.append("    filterToIfAvailable: ").append(toIndentedString(filterToIfAvailable)).append("\n");
    sb.append("    firstItemMarkup: ").append(toIndentedString(firstItemMarkup)).append("\n");
    sb.append("    fixedShippingCost: ").append(toIndentedString(fixedShippingCost)).append("\n");
    sb.append("    flatFeeMarkup: ").append(toIndentedString(flatFeeMarkup)).append("\n");
    sb.append("    freeShipping: ").append(toIndentedString(freeShipping)).append("\n");
    sb.append("    perItemFeeMarkup: ").append(toIndentedString(perItemFeeMarkup)).append("\n");
    sb.append("    percentageMarkup: ").append(toIndentedString(percentageMarkup)).append("\n");
    sb.append("    percentageOfItemMarkup: ").append(toIndentedString(percentageOfItemMarkup)).append("\n");
    sb.append("    relaxRestrictionsOnUpsell: ").append(toIndentedString(relaxRestrictionsOnUpsell)).append("\n");
    sb.append("    shippingMethod: ").append(toIndentedString(shippingMethod)).append("\n");
    sb.append("    shippingMethodOid: ").append(toIndentedString(shippingMethodOid)).append("\n");
    sb.append("    shippingMethodValidity: ").append(toIndentedString(shippingMethodValidity)).append("\n");
    sb.append("    signatureRequired: ").append(toIndentedString(signatureRequired)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

