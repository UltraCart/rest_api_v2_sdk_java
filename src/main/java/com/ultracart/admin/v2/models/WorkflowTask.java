/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.Property;
import com.ultracart.admin.v2.models.WorkflowAttachment;
import com.ultracart.admin.v2.models.WorkflowNote;
import com.ultracart.admin.v2.models.WorkflowTaskHistory;
import com.ultracart.admin.v2.models.WorkflowUser;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * WorkflowTask
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2025-02-28T09:16:56.926-05:00")



public class WorkflowTask {
  @SerializedName("assigned_to_group")
  private String assignedToGroup = null;

  @SerializedName("assigned_to_group_id")
  private Integer assignedToGroupId = null;

  @SerializedName("assigned_to_user")
  private String assignedToUser = null;

  @SerializedName("assigned_to_user_id")
  private Integer assignedToUserId = null;

  @SerializedName("assigned_to_user_or_group")
  private String assignedToUserOrGroup = null;

  @SerializedName("attachments")
  private List<WorkflowAttachment> attachments = null;

  @SerializedName("created_by")
  private WorkflowUser createdBy = null;

  @SerializedName("created_dts")
  private String createdDts = null;

  @SerializedName("delay_until_dts")
  private String delayUntilDts = null;

  @SerializedName("dependant_workflow_task_uuid")
  private String dependantWorkflowTaskUuid = null;

  @SerializedName("due_dts")
  private String dueDts = null;

  @SerializedName("expiration_dts")
  private String expirationDts = null;

  @SerializedName("global_task_number")
  private Integer globalTaskNumber = null;

  @SerializedName("histories")
  private List<WorkflowTaskHistory> histories = null;

  @SerializedName("last_update_dts")
  private String lastUpdateDts = null;

  @SerializedName("merchant_id")
  private String merchantId = null;

  @SerializedName("notes")
  private List<WorkflowNote> notes = null;

  @SerializedName("object_email")
  private String objectEmail = null;

  @SerializedName("object_id")
  private String objectId = null;

  @SerializedName("object_task_number")
  private Integer objectTaskNumber = null;

  /**
   * Object Type
   */
  @JsonAdapter(ObjectTypeEnum.Adapter.class)
  public enum ObjectTypeEnum {
    ORDER("order"),
    
    AUTO_ORDER("auto order"),
    
    ITEM("item"),
    
    CUSTOMER_PROFILE("customer profile"),
    
    STOREFRONT("storefront");

    private String value;

    ObjectTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ObjectTypeEnum fromValue(String text) {
      for (ObjectTypeEnum b : ObjectTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<ObjectTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ObjectTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ObjectTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return ObjectTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("object_type")
  private ObjectTypeEnum objectType = null;

  @SerializedName("object_url")
  private String objectUrl = null;

  /**
   * Priority
   */
  @JsonAdapter(PriorityEnum.Adapter.class)
  public enum PriorityEnum {
    _1_LOW("1 - low"),
    
    _2_MEDIUM("2 - medium"),
    
    _3_HIGH("3 - high"),
    
    _4_CRITICAL("4 - critical");

    private String value;

    PriorityEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PriorityEnum fromValue(String text) {
      for (PriorityEnum b : PriorityEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<PriorityEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PriorityEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PriorityEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return PriorityEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("priority")
  private PriorityEnum priority = null;

  @SerializedName("properties")
  private List<Property> properties = null;

  @SerializedName("related_workflow_task_uuid")
  private String relatedWorkflowTaskUuid = null;

  /**
   * Status of the workflow task
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    OPEN("open"),
    
    CLOSED("closed"),
    
    DELAYED("delayed"),
    
    AWAITING_CUSTOMER_FEEDBACK("awaiting customer feedback"),
    
    CLOSED_SYSTEM("closed - system"),
    
    CLOSED_CUSTOMER("closed - customer"),
    
    CLOSED_EXPIRATION("closed - expiration");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("status")
  private StatusEnum status = null;

  /**
   * Constant for the type of system generated task
   */
  @JsonAdapter(SystemTaskTypeEnum.Adapter.class)
  public enum SystemTaskTypeEnum {
    ORDER_ACCOUNTS_RECEIVABLE("order_accounts_receivable"),
    
    ORDER_FRAUD_REVIEW("order_fraud_review"),
    
    AUTO_ORDER_CARD_UPDATE_ISSUE("auto_order_card_update_issue"),
    
    AUTO_ORDER_CANCELED_PAYMENT("auto_order_canceled_payment"),
    
    ITEM_LOW_STOCK("item_low_stock"),
    
    ITEM_OUT_OF_STOCK("item_out_of_stock");

    private String value;

    SystemTaskTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SystemTaskTypeEnum fromValue(String text) {
      for (SystemTaskTypeEnum b : SystemTaskTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<SystemTaskTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SystemTaskTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SystemTaskTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return SystemTaskTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("system_task_type")
  private SystemTaskTypeEnum systemTaskType = null;

  @SerializedName("tags")
  private List<String> tags = null;

  @SerializedName("task_context")
  private String taskContext = null;

  @SerializedName("task_details")
  private String taskDetails = null;

  @SerializedName("task_name")
  private String taskName = null;

  @SerializedName("workflow_task_uuid")
  private String workflowTaskUuid = null;

  public WorkflowTask assignedToGroup(String assignedToGroup) {
    this.assignedToGroup = assignedToGroup;
    return this;
  }

   /**
   * Assigned to group
   * @return assignedToGroup
  **/
  @ApiModelProperty(value = "Assigned to group")
  public String getAssignedToGroup() {
    return assignedToGroup;
  }

  public void setAssignedToGroup(String assignedToGroup) {
    this.assignedToGroup = assignedToGroup;
  }

  public WorkflowTask assignedToGroupId(Integer assignedToGroupId) {
    this.assignedToGroupId = assignedToGroupId;
    return this;
  }

   /**
   * Assigned to group ID
   * @return assignedToGroupId
  **/
  @ApiModelProperty(value = "Assigned to group ID")
  public Integer getAssignedToGroupId() {
    return assignedToGroupId;
  }

  public void setAssignedToGroupId(Integer assignedToGroupId) {
    this.assignedToGroupId = assignedToGroupId;
  }

  public WorkflowTask assignedToUser(String assignedToUser) {
    this.assignedToUser = assignedToUser;
    return this;
  }

   /**
   * Assigned to user
   * @return assignedToUser
  **/
  @ApiModelProperty(value = "Assigned to user")
  public String getAssignedToUser() {
    return assignedToUser;
  }

  public void setAssignedToUser(String assignedToUser) {
    this.assignedToUser = assignedToUser;
  }

  public WorkflowTask assignedToUserId(Integer assignedToUserId) {
    this.assignedToUserId = assignedToUserId;
    return this;
  }

   /**
   * Assigned to user ID
   * @return assignedToUserId
  **/
  @ApiModelProperty(value = "Assigned to user ID")
  public Integer getAssignedToUserId() {
    return assignedToUserId;
  }

  public void setAssignedToUserId(Integer assignedToUserId) {
    this.assignedToUserId = assignedToUserId;
  }

  public WorkflowTask assignedToUserOrGroup(String assignedToUserOrGroup) {
    this.assignedToUserOrGroup = assignedToUserOrGroup;
    return this;
  }

   /**
   * Assigned to user or group (used for sorting)
   * @return assignedToUserOrGroup
  **/
  @ApiModelProperty(value = "Assigned to user or group (used for sorting)")
  public String getAssignedToUserOrGroup() {
    return assignedToUserOrGroup;
  }

  public void setAssignedToUserOrGroup(String assignedToUserOrGroup) {
    this.assignedToUserOrGroup = assignedToUserOrGroup;
  }

  public WorkflowTask attachments(List<WorkflowAttachment> attachments) {
    this.attachments = attachments;
    return this;
  }

  public WorkflowTask addAttachmentsItem(WorkflowAttachment attachmentsItem) {
    if (this.attachments == null) {
      this.attachments = new ArrayList<WorkflowAttachment>();
    }
    this.attachments.add(attachmentsItem);
    return this;
  }

   /**
   * Attachments to the Workflow Task
   * @return attachments
  **/
  @ApiModelProperty(value = "Attachments to the Workflow Task")
  public List<WorkflowAttachment> getAttachments() {
    return attachments;
  }

  public void setAttachments(List<WorkflowAttachment> attachments) {
    this.attachments = attachments;
  }

  public WorkflowTask createdBy(WorkflowUser createdBy) {
    this.createdBy = createdBy;
    return this;
  }

   /**
   * Get createdBy
   * @return createdBy
  **/
  @ApiModelProperty(value = "")
  public WorkflowUser getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(WorkflowUser createdBy) {
    this.createdBy = createdBy;
  }

  public WorkflowTask createdDts(String createdDts) {
    this.createdDts = createdDts;
    return this;
  }

   /**
   * Date/time that the workflow task was created
   * @return createdDts
  **/
  @ApiModelProperty(value = "Date/time that the workflow task was created")
  public String getCreatedDts() {
    return createdDts;
  }

  public void setCreatedDts(String createdDts) {
    this.createdDts = createdDts;
  }

  public WorkflowTask delayUntilDts(String delayUntilDts) {
    this.delayUntilDts = delayUntilDts;
    return this;
  }

   /**
   * Date/time that the workflow task should delay until
   * @return delayUntilDts
  **/
  @ApiModelProperty(value = "Date/time that the workflow task should delay until")
  public String getDelayUntilDts() {
    return delayUntilDts;
  }

  public void setDelayUntilDts(String delayUntilDts) {
    this.delayUntilDts = delayUntilDts;
  }

  public WorkflowTask dependantWorkflowTaskUuid(String dependantWorkflowTaskUuid) {
    this.dependantWorkflowTaskUuid = dependantWorkflowTaskUuid;
    return this;
  }

   /**
   * Dependant Workflow Task UUID (must be completed before this task can be completed)
   * @return dependantWorkflowTaskUuid
  **/
  @ApiModelProperty(value = "Dependant Workflow Task UUID (must be completed before this task can be completed)")
  public String getDependantWorkflowTaskUuid() {
    return dependantWorkflowTaskUuid;
  }

  public void setDependantWorkflowTaskUuid(String dependantWorkflowTaskUuid) {
    this.dependantWorkflowTaskUuid = dependantWorkflowTaskUuid;
  }

  public WorkflowTask dueDts(String dueDts) {
    this.dueDts = dueDts;
    return this;
  }

   /**
   * Date/time that the workflow task is due
   * @return dueDts
  **/
  @ApiModelProperty(value = "Date/time that the workflow task is due")
  public String getDueDts() {
    return dueDts;
  }

  public void setDueDts(String dueDts) {
    this.dueDts = dueDts;
  }

  public WorkflowTask expirationDts(String expirationDts) {
    this.expirationDts = expirationDts;
    return this;
  }

   /**
   * Date/time that the workflow task will expire and be closed.  This is set by system generated tasks.
   * @return expirationDts
  **/
  @ApiModelProperty(value = "Date/time that the workflow task will expire and be closed.  This is set by system generated tasks.")
  public String getExpirationDts() {
    return expirationDts;
  }

  public void setExpirationDts(String expirationDts) {
    this.expirationDts = expirationDts;
  }

  public WorkflowTask globalTaskNumber(Integer globalTaskNumber) {
    this.globalTaskNumber = globalTaskNumber;
    return this;
  }

   /**
   * Global task number
   * @return globalTaskNumber
  **/
  @ApiModelProperty(value = "Global task number")
  public Integer getGlobalTaskNumber() {
    return globalTaskNumber;
  }

  public void setGlobalTaskNumber(Integer globalTaskNumber) {
    this.globalTaskNumber = globalTaskNumber;
  }

  public WorkflowTask histories(List<WorkflowTaskHistory> histories) {
    this.histories = histories;
    return this;
  }

  public WorkflowTask addHistoriesItem(WorkflowTaskHistory historiesItem) {
    if (this.histories == null) {
      this.histories = new ArrayList<WorkflowTaskHistory>();
    }
    this.histories.add(historiesItem);
    return this;
  }

   /**
   * Array of history records for the task
   * @return histories
  **/
  @ApiModelProperty(value = "Array of history records for the task")
  public List<WorkflowTaskHistory> getHistories() {
    return histories;
  }

  public void setHistories(List<WorkflowTaskHistory> histories) {
    this.histories = histories;
  }

  public WorkflowTask lastUpdateDts(String lastUpdateDts) {
    this.lastUpdateDts = lastUpdateDts;
    return this;
  }

   /**
   * Date/time that the workflow task was last updated
   * @return lastUpdateDts
  **/
  @ApiModelProperty(value = "Date/time that the workflow task was last updated")
  public String getLastUpdateDts() {
    return lastUpdateDts;
  }

  public void setLastUpdateDts(String lastUpdateDts) {
    this.lastUpdateDts = lastUpdateDts;
  }

  public WorkflowTask merchantId(String merchantId) {
    this.merchantId = merchantId;
    return this;
  }

   /**
   * Merchant ID
   * @return merchantId
  **/
  @ApiModelProperty(value = "Merchant ID")
  public String getMerchantId() {
    return merchantId;
  }

  public void setMerchantId(String merchantId) {
    this.merchantId = merchantId;
  }

  public WorkflowTask notes(List<WorkflowNote> notes) {
    this.notes = notes;
    return this;
  }

  public WorkflowTask addNotesItem(WorkflowNote notesItem) {
    if (this.notes == null) {
      this.notes = new ArrayList<WorkflowNote>();
    }
    this.notes.add(notesItem);
    return this;
  }

   /**
   * Notes on the Workflow Task
   * @return notes
  **/
  @ApiModelProperty(value = "Notes on the Workflow Task")
  public List<WorkflowNote> getNotes() {
    return notes;
  }

  public void setNotes(List<WorkflowNote> notes) {
    this.notes = notes;
  }

  public WorkflowTask objectEmail(String objectEmail) {
    this.objectEmail = objectEmail;
    return this;
  }

   /**
   * Object is associated with customer email
   * @return objectEmail
  **/
  @ApiModelProperty(value = "Object is associated with customer email")
  public String getObjectEmail() {
    return objectEmail;
  }

  public void setObjectEmail(String objectEmail) {
    this.objectEmail = objectEmail;
  }

  public WorkflowTask objectId(String objectId) {
    this.objectId = objectId;
    return this;
  }

   /**
   * Object ID
   * @return objectId
  **/
  @ApiModelProperty(value = "Object ID")
  public String getObjectId() {
    return objectId;
  }

  public void setObjectId(String objectId) {
    this.objectId = objectId;
  }

  public WorkflowTask objectTaskNumber(Integer objectTaskNumber) {
    this.objectTaskNumber = objectTaskNumber;
    return this;
  }

   /**
   * Object specific task number
   * @return objectTaskNumber
  **/
  @ApiModelProperty(value = "Object specific task number")
  public Integer getObjectTaskNumber() {
    return objectTaskNumber;
  }

  public void setObjectTaskNumber(Integer objectTaskNumber) {
    this.objectTaskNumber = objectTaskNumber;
  }

  public WorkflowTask objectType(ObjectTypeEnum objectType) {
    this.objectType = objectType;
    return this;
  }

   /**
   * Object Type
   * @return objectType
  **/
  @ApiModelProperty(value = "Object Type")
  public ObjectTypeEnum getObjectType() {
    return objectType;
  }

  public void setObjectType(ObjectTypeEnum objectType) {
    this.objectType = objectType;
  }

  public WorkflowTask objectUrl(String objectUrl) {
    this.objectUrl = objectUrl;
    return this;
  }

   /**
   * Object URL
   * @return objectUrl
  **/
  @ApiModelProperty(value = "Object URL")
  public String getObjectUrl() {
    return objectUrl;
  }

  public void setObjectUrl(String objectUrl) {
    this.objectUrl = objectUrl;
  }

  public WorkflowTask priority(PriorityEnum priority) {
    this.priority = priority;
    return this;
  }

   /**
   * Priority
   * @return priority
  **/
  @ApiModelProperty(value = "Priority")
  public PriorityEnum getPriority() {
    return priority;
  }

  public void setPriority(PriorityEnum priority) {
    this.priority = priority;
  }

  public WorkflowTask properties(List<Property> properties) {
    this.properties = properties;
    return this;
  }

  public WorkflowTask addPropertiesItem(Property propertiesItem) {
    if (this.properties == null) {
      this.properties = new ArrayList<Property>();
    }
    this.properties.add(propertiesItem);
    return this;
  }

   /**
   * Properties
   * @return properties
  **/
  @ApiModelProperty(value = "Properties")
  public List<Property> getProperties() {
    return properties;
  }

  public void setProperties(List<Property> properties) {
    this.properties = properties;
  }

  public WorkflowTask relatedWorkflowTaskUuid(String relatedWorkflowTaskUuid) {
    this.relatedWorkflowTaskUuid = relatedWorkflowTaskUuid;
    return this;
  }

   /**
   * Related Workflow Task UUID
   * @return relatedWorkflowTaskUuid
  **/
  @ApiModelProperty(value = "Related Workflow Task UUID")
  public String getRelatedWorkflowTaskUuid() {
    return relatedWorkflowTaskUuid;
  }

  public void setRelatedWorkflowTaskUuid(String relatedWorkflowTaskUuid) {
    this.relatedWorkflowTaskUuid = relatedWorkflowTaskUuid;
  }

  public WorkflowTask status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Status of the workflow task
   * @return status
  **/
  @ApiModelProperty(value = "Status of the workflow task")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public WorkflowTask systemTaskType(SystemTaskTypeEnum systemTaskType) {
    this.systemTaskType = systemTaskType;
    return this;
  }

   /**
   * Constant for the type of system generated task
   * @return systemTaskType
  **/
  @ApiModelProperty(value = "Constant for the type of system generated task")
  public SystemTaskTypeEnum getSystemTaskType() {
    return systemTaskType;
  }

  public void setSystemTaskType(SystemTaskTypeEnum systemTaskType) {
    this.systemTaskType = systemTaskType;
  }

  public WorkflowTask tags(List<String> tags) {
    this.tags = tags;
    return this;
  }

  public WorkflowTask addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<String>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Tags
   * @return tags
  **/
  @ApiModelProperty(value = "Tags")
  public List<String> getTags() {
    return tags;
  }

  public void setTags(List<String> tags) {
    this.tags = tags;
  }

  public WorkflowTask taskContext(String taskContext) {
    this.taskContext = taskContext;
    return this;
  }

   /**
   * User friendly string of the task context
   * @return taskContext
  **/
  @ApiModelProperty(value = "User friendly string of the task context")
  public String getTaskContext() {
    return taskContext;
  }

  public void setTaskContext(String taskContext) {
    this.taskContext = taskContext;
  }

  public WorkflowTask taskDetails(String taskDetails) {
    this.taskDetails = taskDetails;
    return this;
  }

   /**
   * Task Details
   * @return taskDetails
  **/
  @ApiModelProperty(value = "Task Details")
  public String getTaskDetails() {
    return taskDetails;
  }

  public void setTaskDetails(String taskDetails) {
    this.taskDetails = taskDetails;
  }

  public WorkflowTask taskName(String taskName) {
    this.taskName = taskName;
    return this;
  }

   /**
   * Task Name
   * @return taskName
  **/
  @ApiModelProperty(value = "Task Name")
  public String getTaskName() {
    return taskName;
  }

  public void setTaskName(String taskName) {
    this.taskName = taskName;
  }

  public WorkflowTask workflowTaskUuid(String workflowTaskUuid) {
    this.workflowTaskUuid = workflowTaskUuid;
    return this;
  }

   /**
   * Workflow Task UUID
   * @return workflowTaskUuid
  **/
  @ApiModelProperty(value = "Workflow Task UUID")
  public String getWorkflowTaskUuid() {
    return workflowTaskUuid;
  }

  public void setWorkflowTaskUuid(String workflowTaskUuid) {
    this.workflowTaskUuid = workflowTaskUuid;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WorkflowTask workflowTask = (WorkflowTask) o;
    return Objects.equals(this.assignedToGroup, workflowTask.assignedToGroup) &&
        Objects.equals(this.assignedToGroupId, workflowTask.assignedToGroupId) &&
        Objects.equals(this.assignedToUser, workflowTask.assignedToUser) &&
        Objects.equals(this.assignedToUserId, workflowTask.assignedToUserId) &&
        Objects.equals(this.assignedToUserOrGroup, workflowTask.assignedToUserOrGroup) &&
        Objects.equals(this.attachments, workflowTask.attachments) &&
        Objects.equals(this.createdBy, workflowTask.createdBy) &&
        Objects.equals(this.createdDts, workflowTask.createdDts) &&
        Objects.equals(this.delayUntilDts, workflowTask.delayUntilDts) &&
        Objects.equals(this.dependantWorkflowTaskUuid, workflowTask.dependantWorkflowTaskUuid) &&
        Objects.equals(this.dueDts, workflowTask.dueDts) &&
        Objects.equals(this.expirationDts, workflowTask.expirationDts) &&
        Objects.equals(this.globalTaskNumber, workflowTask.globalTaskNumber) &&
        Objects.equals(this.histories, workflowTask.histories) &&
        Objects.equals(this.lastUpdateDts, workflowTask.lastUpdateDts) &&
        Objects.equals(this.merchantId, workflowTask.merchantId) &&
        Objects.equals(this.notes, workflowTask.notes) &&
        Objects.equals(this.objectEmail, workflowTask.objectEmail) &&
        Objects.equals(this.objectId, workflowTask.objectId) &&
        Objects.equals(this.objectTaskNumber, workflowTask.objectTaskNumber) &&
        Objects.equals(this.objectType, workflowTask.objectType) &&
        Objects.equals(this.objectUrl, workflowTask.objectUrl) &&
        Objects.equals(this.priority, workflowTask.priority) &&
        Objects.equals(this.properties, workflowTask.properties) &&
        Objects.equals(this.relatedWorkflowTaskUuid, workflowTask.relatedWorkflowTaskUuid) &&
        Objects.equals(this.status, workflowTask.status) &&
        Objects.equals(this.systemTaskType, workflowTask.systemTaskType) &&
        Objects.equals(this.tags, workflowTask.tags) &&
        Objects.equals(this.taskContext, workflowTask.taskContext) &&
        Objects.equals(this.taskDetails, workflowTask.taskDetails) &&
        Objects.equals(this.taskName, workflowTask.taskName) &&
        Objects.equals(this.workflowTaskUuid, workflowTask.workflowTaskUuid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(assignedToGroup, assignedToGroupId, assignedToUser, assignedToUserId, assignedToUserOrGroup, attachments, createdBy, createdDts, delayUntilDts, dependantWorkflowTaskUuid, dueDts, expirationDts, globalTaskNumber, histories, lastUpdateDts, merchantId, notes, objectEmail, objectId, objectTaskNumber, objectType, objectUrl, priority, properties, relatedWorkflowTaskUuid, status, systemTaskType, tags, taskContext, taskDetails, taskName, workflowTaskUuid);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WorkflowTask {\n");
    
    sb.append("    assignedToGroup: ").append(toIndentedString(assignedToGroup)).append("\n");
    sb.append("    assignedToGroupId: ").append(toIndentedString(assignedToGroupId)).append("\n");
    sb.append("    assignedToUser: ").append(toIndentedString(assignedToUser)).append("\n");
    sb.append("    assignedToUserId: ").append(toIndentedString(assignedToUserId)).append("\n");
    sb.append("    assignedToUserOrGroup: ").append(toIndentedString(assignedToUserOrGroup)).append("\n");
    sb.append("    attachments: ").append(toIndentedString(attachments)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    createdDts: ").append(toIndentedString(createdDts)).append("\n");
    sb.append("    delayUntilDts: ").append(toIndentedString(delayUntilDts)).append("\n");
    sb.append("    dependantWorkflowTaskUuid: ").append(toIndentedString(dependantWorkflowTaskUuid)).append("\n");
    sb.append("    dueDts: ").append(toIndentedString(dueDts)).append("\n");
    sb.append("    expirationDts: ").append(toIndentedString(expirationDts)).append("\n");
    sb.append("    globalTaskNumber: ").append(toIndentedString(globalTaskNumber)).append("\n");
    sb.append("    histories: ").append(toIndentedString(histories)).append("\n");
    sb.append("    lastUpdateDts: ").append(toIndentedString(lastUpdateDts)).append("\n");
    sb.append("    merchantId: ").append(toIndentedString(merchantId)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    objectEmail: ").append(toIndentedString(objectEmail)).append("\n");
    sb.append("    objectId: ").append(toIndentedString(objectId)).append("\n");
    sb.append("    objectTaskNumber: ").append(toIndentedString(objectTaskNumber)).append("\n");
    sb.append("    objectType: ").append(toIndentedString(objectType)).append("\n");
    sb.append("    objectUrl: ").append(toIndentedString(objectUrl)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("    relatedWorkflowTaskUuid: ").append(toIndentedString(relatedWorkflowTaskUuid)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    systemTaskType: ").append(toIndentedString(systemTaskType)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    taskContext: ").append(toIndentedString(taskContext)).append("\n");
    sb.append("    taskDetails: ").append(toIndentedString(taskDetails)).append("\n");
    sb.append("    taskName: ").append(toIndentedString(taskName)).append("\n");
    sb.append("    workflowTaskUuid: ").append(toIndentedString(workflowTaskUuid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

