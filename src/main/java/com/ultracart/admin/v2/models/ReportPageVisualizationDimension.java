/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * ReportPageVisualizationDimension
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2025-10-14T11:50:44.731-04:00")



public class ReportPageVisualizationDimension {
  @SerializedName("as")
  private String as = null;

  @SerializedName("cast")
  private String cast = null;

  @SerializedName("column")
  private String column = null;

  @SerializedName("datetime_timezone")
  private String datetimeTimezone = null;

  @SerializedName("datetime_trunc")
  private String datetimeTrunc = null;

  @SerializedName("extract")
  private String extract = null;

  @SerializedName("function")
  private String function = null;

  public ReportPageVisualizationDimension as(String as) {
    this.as = as;
    return this;
  }

   /**
   * Return the column as a different name
   * @return as
  **/
  @ApiModelProperty(value = "Return the column as a different name")
  public String getAs() {
    return as;
  }

  public void setAs(String as) {
    this.as = as;
  }

  public ReportPageVisualizationDimension cast(String cast) {
    this.cast = cast;
    return this;
  }

   /**
   * Cast the column to a different data type such as DATETIME -&gt; DATE
   * @return cast
  **/
  @ApiModelProperty(value = "Cast the column to a different data type such as DATETIME -> DATE")
  public String getCast() {
    return cast;
  }

  public void setCast(String cast) {
    this.cast = cast;
  }

  public ReportPageVisualizationDimension column(String column) {
    this.column = column;
    return this;
  }

   /**
   * Get column
   * @return column
  **/
  @ApiModelProperty(value = "")
  public String getColumn() {
    return column;
  }

  public void setColumn(String column) {
    this.column = column;
  }

  public ReportPageVisualizationDimension datetimeTimezone(String datetimeTimezone) {
    this.datetimeTimezone = datetimeTimezone;
    return this;
  }

   /**
   * The timezone to shift the date to
   * @return datetimeTimezone
  **/
  @ApiModelProperty(value = "The timezone to shift the date to")
  public String getDatetimeTimezone() {
    return datetimeTimezone;
  }

  public void setDatetimeTimezone(String datetimeTimezone) {
    this.datetimeTimezone = datetimeTimezone;
  }

  public ReportPageVisualizationDimension datetimeTrunc(String datetimeTrunc) {
    this.datetimeTrunc = datetimeTrunc;
    return this;
  }

   /**
   * The type of truncation to perform on the date, DAY, WEEK(MONDAY), etc.
   * @return datetimeTrunc
  **/
  @ApiModelProperty(value = "The type of truncation to perform on the date, DAY, WEEK(MONDAY), etc.")
  public String getDatetimeTrunc() {
    return datetimeTrunc;
  }

  public void setDatetimeTrunc(String datetimeTrunc) {
    this.datetimeTrunc = datetimeTrunc;
  }

  public ReportPageVisualizationDimension extract(String extract) {
    this.extract = extract;
    return this;
  }

   /**
   * Part of a datetime to extract
   * @return extract
  **/
  @ApiModelProperty(value = "Part of a datetime to extract")
  public String getExtract() {
    return extract;
  }

  public void setExtract(String extract) {
    this.extract = extract;
  }

  public ReportPageVisualizationDimension function(String function) {
    this.function = function;
    return this;
  }

   /**
   * The function to perform around the column such as DATE_TRUNC(@column, day)
   * @return function
  **/
  @ApiModelProperty(value = "The function to perform around the column such as DATE_TRUNC(@column, day)")
  public String getFunction() {
    return function;
  }

  public void setFunction(String function) {
    this.function = function;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReportPageVisualizationDimension reportPageVisualizationDimension = (ReportPageVisualizationDimension) o;
    return Objects.equals(this.as, reportPageVisualizationDimension.as) &&
        Objects.equals(this.cast, reportPageVisualizationDimension.cast) &&
        Objects.equals(this.column, reportPageVisualizationDimension.column) &&
        Objects.equals(this.datetimeTimezone, reportPageVisualizationDimension.datetimeTimezone) &&
        Objects.equals(this.datetimeTrunc, reportPageVisualizationDimension.datetimeTrunc) &&
        Objects.equals(this.extract, reportPageVisualizationDimension.extract) &&
        Objects.equals(this.function, reportPageVisualizationDimension.function);
  }

  @Override
  public int hashCode() {
    return Objects.hash(as, cast, column, datetimeTimezone, datetimeTrunc, extract, function);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReportPageVisualizationDimension {\n");
    
    sb.append("    as: ").append(toIndentedString(as)).append("\n");
    sb.append("    cast: ").append(toIndentedString(cast)).append("\n");
    sb.append("    column: ").append(toIndentedString(column)).append("\n");
    sb.append("    datetimeTimezone: ").append(toIndentedString(datetimeTimezone)).append("\n");
    sb.append("    datetimeTrunc: ").append(toIndentedString(datetimeTrunc)).append("\n");
    sb.append("    extract: ").append(toIndentedString(extract)).append("\n");
    sb.append("    function: ").append(toIndentedString(function)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

