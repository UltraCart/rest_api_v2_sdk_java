/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.CustomReportParameter;
import com.ultracart.admin.v2.models.CustomReportQuery;
import com.ultracart.admin.v2.models.CustomReportTooltip;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * CustomReport
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-10-14T12:07:35.113-04:00[America/Indianapolis]")
public class CustomReport {
  public static final String SERIALIZED_NAME_BUSINESS_ANALYSIS_PROMPT = "business_analysis_prompt";
  @SerializedName(SERIALIZED_NAME_BUSINESS_ANALYSIS_PROMPT)
  private String businessAnalysisPrompt;

  public static final String SERIALIZED_NAME_CHART_JAVASCRIPT = "chart_javascript";
  @SerializedName(SERIALIZED_NAME_CHART_JAVASCRIPT)
  private String chartJavascript;

  public static final String SERIALIZED_NAME_CHART_JAVASCRIPT_URL = "chart_javascript_url";
  @SerializedName(SERIALIZED_NAME_CHART_JAVASCRIPT_URL)
  private String chartJavascriptUrl;

  public static final String SERIALIZED_NAME_DATA_WAREHOUSE_REPORT_CONFIG_OID = "data_warehouse_report_config_oid";
  @SerializedName(SERIALIZED_NAME_DATA_WAREHOUSE_REPORT_CONFIG_OID)
  private Integer dataWarehouseReportConfigOid;

  public static final String SERIALIZED_NAME_DATASET_SECURITY_LEVEL = "dataset_security_level";
  @SerializedName(SERIALIZED_NAME_DATASET_SECURITY_LEVEL)
  private String datasetSecurityLevel;

  public static final String SERIALIZED_NAME_GROUP_NAME = "group_name";
  @SerializedName(SERIALIZED_NAME_GROUP_NAME)
  private String groupName;

  public static final String SERIALIZED_NAME_MERCHANT_ID = "merchant_id";
  @SerializedName(SERIALIZED_NAME_MERCHANT_ID)
  private String merchantId;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PARAMETERS = "parameters";
  @SerializedName(SERIALIZED_NAME_PARAMETERS)
  private List<CustomReportParameter> parameters = null;

  public static final String SERIALIZED_NAME_QUERIES = "queries";
  @SerializedName(SERIALIZED_NAME_QUERIES)
  private List<CustomReportQuery> queries = null;

  public static final String SERIALIZED_NAME_TOOLTIPS = "tooltips";
  @SerializedName(SERIALIZED_NAME_TOOLTIPS)
  private List<CustomReportTooltip> tooltips = null;

  public CustomReport() { 
  }

  public CustomReport businessAnalysisPrompt(String businessAnalysisPrompt) {
    
    this.businessAnalysisPrompt = businessAnalysisPrompt;
    return this;
  }

   /**
   * Get businessAnalysisPrompt
   * @return businessAnalysisPrompt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getBusinessAnalysisPrompt() {
    return businessAnalysisPrompt;
  }


  public void setBusinessAnalysisPrompt(String businessAnalysisPrompt) {
    this.businessAnalysisPrompt = businessAnalysisPrompt;
  }


  public CustomReport chartJavascript(String chartJavascript) {
    
    this.chartJavascript = chartJavascript;
    return this;
  }

   /**
   * Get chartJavascript
   * @return chartJavascript
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getChartJavascript() {
    return chartJavascript;
  }


  public void setChartJavascript(String chartJavascript) {
    this.chartJavascript = chartJavascript;
  }


  public CustomReport chartJavascriptUrl(String chartJavascriptUrl) {
    
    this.chartJavascriptUrl = chartJavascriptUrl;
    return this;
  }

   /**
   * Get chartJavascriptUrl
   * @return chartJavascriptUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getChartJavascriptUrl() {
    return chartJavascriptUrl;
  }


  public void setChartJavascriptUrl(String chartJavascriptUrl) {
    this.chartJavascriptUrl = chartJavascriptUrl;
  }


  public CustomReport dataWarehouseReportConfigOid(Integer dataWarehouseReportConfigOid) {
    
    this.dataWarehouseReportConfigOid = dataWarehouseReportConfigOid;
    return this;
  }

   /**
   * Get dataWarehouseReportConfigOid
   * @return dataWarehouseReportConfigOid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getDataWarehouseReportConfigOid() {
    return dataWarehouseReportConfigOid;
  }


  public void setDataWarehouseReportConfigOid(Integer dataWarehouseReportConfigOid) {
    this.dataWarehouseReportConfigOid = dataWarehouseReportConfigOid;
  }


  public CustomReport datasetSecurityLevel(String datasetSecurityLevel) {
    
    this.datasetSecurityLevel = datasetSecurityLevel;
    return this;
  }

   /**
   * Get datasetSecurityLevel
   * @return datasetSecurityLevel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDatasetSecurityLevel() {
    return datasetSecurityLevel;
  }


  public void setDatasetSecurityLevel(String datasetSecurityLevel) {
    this.datasetSecurityLevel = datasetSecurityLevel;
  }


  public CustomReport groupName(String groupName) {
    
    this.groupName = groupName;
    return this;
  }

   /**
   * Get groupName
   * @return groupName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getGroupName() {
    return groupName;
  }


  public void setGroupName(String groupName) {
    this.groupName = groupName;
  }


  public CustomReport merchantId(String merchantId) {
    
    this.merchantId = merchantId;
    return this;
  }

   /**
   * Get merchantId
   * @return merchantId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMerchantId() {
    return merchantId;
  }


  public void setMerchantId(String merchantId) {
    this.merchantId = merchantId;
  }


  public CustomReport name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public CustomReport parameters(List<CustomReportParameter> parameters) {
    
    this.parameters = parameters;
    return this;
  }

  public CustomReport addParametersItem(CustomReportParameter parametersItem) {
    if (this.parameters == null) {
      this.parameters = new ArrayList<>();
    }
    this.parameters.add(parametersItem);
    return this;
  }

   /**
   * Get parameters
   * @return parameters
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<CustomReportParameter> getParameters() {
    return parameters;
  }


  public void setParameters(List<CustomReportParameter> parameters) {
    this.parameters = parameters;
  }


  public CustomReport queries(List<CustomReportQuery> queries) {
    
    this.queries = queries;
    return this;
  }

  public CustomReport addQueriesItem(CustomReportQuery queriesItem) {
    if (this.queries == null) {
      this.queries = new ArrayList<>();
    }
    this.queries.add(queriesItem);
    return this;
  }

   /**
   * Get queries
   * @return queries
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<CustomReportQuery> getQueries() {
    return queries;
  }


  public void setQueries(List<CustomReportQuery> queries) {
    this.queries = queries;
  }


  public CustomReport tooltips(List<CustomReportTooltip> tooltips) {
    
    this.tooltips = tooltips;
    return this;
  }

  public CustomReport addTooltipsItem(CustomReportTooltip tooltipsItem) {
    if (this.tooltips == null) {
      this.tooltips = new ArrayList<>();
    }
    this.tooltips.add(tooltipsItem);
    return this;
  }

   /**
   * Get tooltips
   * @return tooltips
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<CustomReportTooltip> getTooltips() {
    return tooltips;
  }


  public void setTooltips(List<CustomReportTooltip> tooltips) {
    this.tooltips = tooltips;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomReport customReport = (CustomReport) o;
    return Objects.equals(this.businessAnalysisPrompt, customReport.businessAnalysisPrompt) &&
        Objects.equals(this.chartJavascript, customReport.chartJavascript) &&
        Objects.equals(this.chartJavascriptUrl, customReport.chartJavascriptUrl) &&
        Objects.equals(this.dataWarehouseReportConfigOid, customReport.dataWarehouseReportConfigOid) &&
        Objects.equals(this.datasetSecurityLevel, customReport.datasetSecurityLevel) &&
        Objects.equals(this.groupName, customReport.groupName) &&
        Objects.equals(this.merchantId, customReport.merchantId) &&
        Objects.equals(this.name, customReport.name) &&
        Objects.equals(this.parameters, customReport.parameters) &&
        Objects.equals(this.queries, customReport.queries) &&
        Objects.equals(this.tooltips, customReport.tooltips);
  }

  @Override
  public int hashCode() {
    return Objects.hash(businessAnalysisPrompt, chartJavascript, chartJavascriptUrl, dataWarehouseReportConfigOid, datasetSecurityLevel, groupName, merchantId, name, parameters, queries, tooltips);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomReport {\n");
    sb.append("    businessAnalysisPrompt: ").append(toIndentedString(businessAnalysisPrompt)).append("\n");
    sb.append("    chartJavascript: ").append(toIndentedString(chartJavascript)).append("\n");
    sb.append("    chartJavascriptUrl: ").append(toIndentedString(chartJavascriptUrl)).append("\n");
    sb.append("    dataWarehouseReportConfigOid: ").append(toIndentedString(dataWarehouseReportConfigOid)).append("\n");
    sb.append("    datasetSecurityLevel: ").append(toIndentedString(datasetSecurityLevel)).append("\n");
    sb.append("    groupName: ").append(toIndentedString(groupName)).append("\n");
    sb.append("    merchantId: ").append(toIndentedString(merchantId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("    queries: ").append(toIndentedString(queries)).append("\n");
    sb.append("    tooltips: ").append(toIndentedString(tooltips)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("business_analysis_prompt");
    openapiFields.add("chart_javascript");
    openapiFields.add("chart_javascript_url");
    openapiFields.add("data_warehouse_report_config_oid");
    openapiFields.add("dataset_security_level");
    openapiFields.add("group_name");
    openapiFields.add("merchant_id");
    openapiFields.add("name");
    openapiFields.add("parameters");
    openapiFields.add("queries");
    openapiFields.add("tooltips");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CustomReport
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (CustomReport.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in CustomReport is not found in the empty JSON string", CustomReport.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!CustomReport.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CustomReport` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("business_analysis_prompt") != null && !jsonObj.get("business_analysis_prompt").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `business_analysis_prompt` to be a primitive type in the JSON string but got `%s`", jsonObj.get("business_analysis_prompt").toString()));
      }
      if (jsonObj.get("chart_javascript") != null && !jsonObj.get("chart_javascript").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `chart_javascript` to be a primitive type in the JSON string but got `%s`", jsonObj.get("chart_javascript").toString()));
      }
      if (jsonObj.get("chart_javascript_url") != null && !jsonObj.get("chart_javascript_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `chart_javascript_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("chart_javascript_url").toString()));
      }
      if (jsonObj.get("dataset_security_level") != null && !jsonObj.get("dataset_security_level").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dataset_security_level` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dataset_security_level").toString()));
      }
      if (jsonObj.get("group_name") != null && !jsonObj.get("group_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `group_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("group_name").toString()));
      }
      if (jsonObj.get("merchant_id") != null && !jsonObj.get("merchant_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `merchant_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("merchant_id").toString()));
      }
      if (jsonObj.get("name") != null && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      JsonArray jsonArrayparameters = jsonObj.getAsJsonArray("parameters");
      if (jsonArrayparameters != null) {
        // ensure the json data is an array
        if (!jsonObj.get("parameters").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `parameters` to be an array in the JSON string but got `%s`", jsonObj.get("parameters").toString()));
        }

        // validate the optional field `parameters` (array)
        for (int i = 0; i < jsonArrayparameters.size(); i++) {
          CustomReportParameter.validateJsonObject(jsonArrayparameters.get(i).getAsJsonObject());
        };
      }
      JsonArray jsonArrayqueries = jsonObj.getAsJsonArray("queries");
      if (jsonArrayqueries != null) {
        // ensure the json data is an array
        if (!jsonObj.get("queries").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `queries` to be an array in the JSON string but got `%s`", jsonObj.get("queries").toString()));
        }

        // validate the optional field `queries` (array)
        for (int i = 0; i < jsonArrayqueries.size(); i++) {
          CustomReportQuery.validateJsonObject(jsonArrayqueries.get(i).getAsJsonObject());
        };
      }
      JsonArray jsonArraytooltips = jsonObj.getAsJsonArray("tooltips");
      if (jsonArraytooltips != null) {
        // ensure the json data is an array
        if (!jsonObj.get("tooltips").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `tooltips` to be an array in the JSON string but got `%s`", jsonObj.get("tooltips").toString()));
        }

        // validate the optional field `tooltips` (array)
        for (int i = 0; i < jsonArraytooltips.size(); i++) {
          CustomReportTooltip.validateJsonObject(jsonArraytooltips.get(i).getAsJsonObject());
        };
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CustomReport.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CustomReport' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CustomReport> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CustomReport.class));

       return (TypeAdapter<T>) new TypeAdapter<CustomReport>() {
           @Override
           public void write(JsonWriter out, CustomReport value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CustomReport read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CustomReport given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CustomReport
  * @throws IOException if the JSON string is invalid with respect to CustomReport
  */
  public static CustomReport fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CustomReport.class);
  }

 /**
  * Convert an instance of CustomReport to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

