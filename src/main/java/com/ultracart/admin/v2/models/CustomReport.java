/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.CustomReportParameter;
import com.ultracart.admin.v2.models.CustomReportQuery;
import com.ultracart.admin.v2.models.CustomReportTooltip;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * CustomReport
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2025-07-28T15:18:21.446-04:00")



public class CustomReport {
  @SerializedName("chart_javascript")
  private String chartJavascript = null;

  @SerializedName("chart_javascript_url")
  private String chartJavascriptUrl = null;

  @SerializedName("data_warehouse_report_config_oid")
  private Integer dataWarehouseReportConfigOid = null;

  @SerializedName("dataset_security_level")
  private String datasetSecurityLevel = null;

  @SerializedName("group_name")
  private String groupName = null;

  @SerializedName("merchant_id")
  private String merchantId = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("parameters")
  private List<CustomReportParameter> parameters = null;

  @SerializedName("queries")
  private List<CustomReportQuery> queries = null;

  @SerializedName("tooltips")
  private List<CustomReportTooltip> tooltips = null;

  public CustomReport chartJavascript(String chartJavascript) {
    this.chartJavascript = chartJavascript;
    return this;
  }

   /**
   * Get chartJavascript
   * @return chartJavascript
  **/
  @ApiModelProperty(value = "")
  public String getChartJavascript() {
    return chartJavascript;
  }

  public void setChartJavascript(String chartJavascript) {
    this.chartJavascript = chartJavascript;
  }

  public CustomReport chartJavascriptUrl(String chartJavascriptUrl) {
    this.chartJavascriptUrl = chartJavascriptUrl;
    return this;
  }

   /**
   * Get chartJavascriptUrl
   * @return chartJavascriptUrl
  **/
  @ApiModelProperty(value = "")
  public String getChartJavascriptUrl() {
    return chartJavascriptUrl;
  }

  public void setChartJavascriptUrl(String chartJavascriptUrl) {
    this.chartJavascriptUrl = chartJavascriptUrl;
  }

  public CustomReport dataWarehouseReportConfigOid(Integer dataWarehouseReportConfigOid) {
    this.dataWarehouseReportConfigOid = dataWarehouseReportConfigOid;
    return this;
  }

   /**
   * Get dataWarehouseReportConfigOid
   * @return dataWarehouseReportConfigOid
  **/
  @ApiModelProperty(value = "")
  public Integer getDataWarehouseReportConfigOid() {
    return dataWarehouseReportConfigOid;
  }

  public void setDataWarehouseReportConfigOid(Integer dataWarehouseReportConfigOid) {
    this.dataWarehouseReportConfigOid = dataWarehouseReportConfigOid;
  }

  public CustomReport datasetSecurityLevel(String datasetSecurityLevel) {
    this.datasetSecurityLevel = datasetSecurityLevel;
    return this;
  }

   /**
   * Get datasetSecurityLevel
   * @return datasetSecurityLevel
  **/
  @ApiModelProperty(value = "")
  public String getDatasetSecurityLevel() {
    return datasetSecurityLevel;
  }

  public void setDatasetSecurityLevel(String datasetSecurityLevel) {
    this.datasetSecurityLevel = datasetSecurityLevel;
  }

  public CustomReport groupName(String groupName) {
    this.groupName = groupName;
    return this;
  }

   /**
   * Get groupName
   * @return groupName
  **/
  @ApiModelProperty(value = "")
  public String getGroupName() {
    return groupName;
  }

  public void setGroupName(String groupName) {
    this.groupName = groupName;
  }

  public CustomReport merchantId(String merchantId) {
    this.merchantId = merchantId;
    return this;
  }

   /**
   * Get merchantId
   * @return merchantId
  **/
  @ApiModelProperty(value = "")
  public String getMerchantId() {
    return merchantId;
  }

  public void setMerchantId(String merchantId) {
    this.merchantId = merchantId;
  }

  public CustomReport name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CustomReport parameters(List<CustomReportParameter> parameters) {
    this.parameters = parameters;
    return this;
  }

  public CustomReport addParametersItem(CustomReportParameter parametersItem) {
    if (this.parameters == null) {
      this.parameters = new ArrayList<CustomReportParameter>();
    }
    this.parameters.add(parametersItem);
    return this;
  }

   /**
   * Get parameters
   * @return parameters
  **/
  @ApiModelProperty(value = "")
  public List<CustomReportParameter> getParameters() {
    return parameters;
  }

  public void setParameters(List<CustomReportParameter> parameters) {
    this.parameters = parameters;
  }

  public CustomReport queries(List<CustomReportQuery> queries) {
    this.queries = queries;
    return this;
  }

  public CustomReport addQueriesItem(CustomReportQuery queriesItem) {
    if (this.queries == null) {
      this.queries = new ArrayList<CustomReportQuery>();
    }
    this.queries.add(queriesItem);
    return this;
  }

   /**
   * Get queries
   * @return queries
  **/
  @ApiModelProperty(value = "")
  public List<CustomReportQuery> getQueries() {
    return queries;
  }

  public void setQueries(List<CustomReportQuery> queries) {
    this.queries = queries;
  }

  public CustomReport tooltips(List<CustomReportTooltip> tooltips) {
    this.tooltips = tooltips;
    return this;
  }

  public CustomReport addTooltipsItem(CustomReportTooltip tooltipsItem) {
    if (this.tooltips == null) {
      this.tooltips = new ArrayList<CustomReportTooltip>();
    }
    this.tooltips.add(tooltipsItem);
    return this;
  }

   /**
   * Get tooltips
   * @return tooltips
  **/
  @ApiModelProperty(value = "")
  public List<CustomReportTooltip> getTooltips() {
    return tooltips;
  }

  public void setTooltips(List<CustomReportTooltip> tooltips) {
    this.tooltips = tooltips;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomReport customReport = (CustomReport) o;
    return Objects.equals(this.chartJavascript, customReport.chartJavascript) &&
        Objects.equals(this.chartJavascriptUrl, customReport.chartJavascriptUrl) &&
        Objects.equals(this.dataWarehouseReportConfigOid, customReport.dataWarehouseReportConfigOid) &&
        Objects.equals(this.datasetSecurityLevel, customReport.datasetSecurityLevel) &&
        Objects.equals(this.groupName, customReport.groupName) &&
        Objects.equals(this.merchantId, customReport.merchantId) &&
        Objects.equals(this.name, customReport.name) &&
        Objects.equals(this.parameters, customReport.parameters) &&
        Objects.equals(this.queries, customReport.queries) &&
        Objects.equals(this.tooltips, customReport.tooltips);
  }

  @Override
  public int hashCode() {
    return Objects.hash(chartJavascript, chartJavascriptUrl, dataWarehouseReportConfigOid, datasetSecurityLevel, groupName, merchantId, name, parameters, queries, tooltips);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomReport {\n");
    
    sb.append("    chartJavascript: ").append(toIndentedString(chartJavascript)).append("\n");
    sb.append("    chartJavascriptUrl: ").append(toIndentedString(chartJavascriptUrl)).append("\n");
    sb.append("    dataWarehouseReportConfigOid: ").append(toIndentedString(dataWarehouseReportConfigOid)).append("\n");
    sb.append("    datasetSecurityLevel: ").append(toIndentedString(datasetSecurityLevel)).append("\n");
    sb.append("    groupName: ").append(toIndentedString(groupName)).append("\n");
    sb.append("    merchantId: ").append(toIndentedString(merchantId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("    queries: ").append(toIndentedString(queries)).append("\n");
    sb.append("    tooltips: ").append(toIndentedString(tooltips)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

