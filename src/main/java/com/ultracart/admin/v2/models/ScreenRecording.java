/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.GeoPoint;
import com.ultracart.admin.v2.models.ScreenRecordingPageView;
import com.ultracart.admin.v2.models.ScreenRecordingStoreFront;
import com.ultracart.admin.v2.models.ScreenRecordingUserAgent;
import com.ultracart.admin.v2.models.ScreenRecordingUserProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * ScreenRecording
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-02-11T14:54:16.321-05:00")



public class ScreenRecording {
  @SerializedName("analytics_client_oid")
  private Long analyticsClientOid = null;

  @SerializedName("analytics_session_dts")
  private Long analyticsSessionDts = null;

  @SerializedName("analytics_session_oid")
  private Long analyticsSessionOid = null;

  @SerializedName("email")
  private String email = null;

  @SerializedName("end_timestamp")
  private String endTimestamp = null;

  @SerializedName("esp_customer_uuid")
  private String espCustomerUuid = null;

  @SerializedName("events_gz_size")
  private Integer eventsGzSize = null;

  @SerializedName("events_json_key")
  private String eventsJsonKey = null;

  @SerializedName("favorite")
  private Boolean favorite = null;

  @SerializedName("favorites")
  private List<Integer> favorites = null;

  @SerializedName("geolocation")
  private GeoPoint geolocation = null;

  @SerializedName("geolocation_country")
  private String geolocationCountry = null;

  @SerializedName("geolocation_state")
  private String geolocationState = null;

  @SerializedName("merchant_id")
  private String merchantId = null;

  @SerializedName("order_id")
  private String orderId = null;

  @SerializedName("page_view_count")
  private Integer pageViewCount = null;

  @SerializedName("page_views")
  private List<ScreenRecordingPageView> pageViews = null;

  @SerializedName("rrweb_version")
  private String rrwebVersion = null;

  @SerializedName("screen_recording_uuid")
  private String screenRecordingUuid = null;

  @SerializedName("signed_download_url")
  private String signedDownloadUrl = null;

  @SerializedName("start_timestamp")
  private String startTimestamp = null;

  @SerializedName("storefront_oids")
  private List<Integer> storefrontOids = null;

  @SerializedName("storefronts")
  private List<ScreenRecordingStoreFront> storefronts = null;

  @SerializedName("tags")
  private List<String> tags = null;

  @SerializedName("time_on_site")
  private Integer timeOnSite = null;

  @SerializedName("ucacid")
  private String ucacid = null;

  @SerializedName("user_agent")
  private ScreenRecordingUserAgent userAgent = null;

  @SerializedName("user_agent_raw")
  private String userAgentRaw = null;

  @SerializedName("user_ip")
  private String userIp = null;

  @SerializedName("user_properties")
  private List<ScreenRecordingUserProperty> userProperties = null;

  @SerializedName("watched")
  private Boolean watched = null;

  @SerializedName("window_height")
  private Integer windowHeight = null;

  @SerializedName("window_width")
  private Integer windowWidth = null;

  public ScreenRecording analyticsClientOid(Long analyticsClientOid) {
    this.analyticsClientOid = analyticsClientOid;
    return this;
  }

   /**
   * Get analyticsClientOid
   * @return analyticsClientOid
  **/
  @ApiModelProperty(value = "")
  public Long getAnalyticsClientOid() {
    return analyticsClientOid;
  }

  public void setAnalyticsClientOid(Long analyticsClientOid) {
    this.analyticsClientOid = analyticsClientOid;
  }

  public ScreenRecording analyticsSessionDts(Long analyticsSessionDts) {
    this.analyticsSessionDts = analyticsSessionDts;
    return this;
  }

   /**
   * Get analyticsSessionDts
   * @return analyticsSessionDts
  **/
  @ApiModelProperty(value = "")
  public Long getAnalyticsSessionDts() {
    return analyticsSessionDts;
  }

  public void setAnalyticsSessionDts(Long analyticsSessionDts) {
    this.analyticsSessionDts = analyticsSessionDts;
  }

  public ScreenRecording analyticsSessionOid(Long analyticsSessionOid) {
    this.analyticsSessionOid = analyticsSessionOid;
    return this;
  }

   /**
   * Get analyticsSessionOid
   * @return analyticsSessionOid
  **/
  @ApiModelProperty(value = "")
  public Long getAnalyticsSessionOid() {
    return analyticsSessionOid;
  }

  public void setAnalyticsSessionOid(Long analyticsSessionOid) {
    this.analyticsSessionOid = analyticsSessionOid;
  }

  public ScreenRecording email(String email) {
    this.email = email;
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @ApiModelProperty(value = "")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public ScreenRecording endTimestamp(String endTimestamp) {
    this.endTimestamp = endTimestamp;
    return this;
  }

   /**
   * Ending timestamp
   * @return endTimestamp
  **/
  @ApiModelProperty(value = "Ending timestamp")
  public String getEndTimestamp() {
    return endTimestamp;
  }

  public void setEndTimestamp(String endTimestamp) {
    this.endTimestamp = endTimestamp;
  }

  public ScreenRecording espCustomerUuid(String espCustomerUuid) {
    this.espCustomerUuid = espCustomerUuid;
    return this;
  }

   /**
   * Get espCustomerUuid
   * @return espCustomerUuid
  **/
  @ApiModelProperty(value = "")
  public String getEspCustomerUuid() {
    return espCustomerUuid;
  }

  public void setEspCustomerUuid(String espCustomerUuid) {
    this.espCustomerUuid = espCustomerUuid;
  }

  public ScreenRecording eventsGzSize(Integer eventsGzSize) {
    this.eventsGzSize = eventsGzSize;
    return this;
  }

   /**
   * Get eventsGzSize
   * @return eventsGzSize
  **/
  @ApiModelProperty(value = "")
  public Integer getEventsGzSize() {
    return eventsGzSize;
  }

  public void setEventsGzSize(Integer eventsGzSize) {
    this.eventsGzSize = eventsGzSize;
  }

  public ScreenRecording eventsJsonKey(String eventsJsonKey) {
    this.eventsJsonKey = eventsJsonKey;
    return this;
  }

   /**
   * Get eventsJsonKey
   * @return eventsJsonKey
  **/
  @ApiModelProperty(value = "")
  public String getEventsJsonKey() {
    return eventsJsonKey;
  }

  public void setEventsJsonKey(String eventsJsonKey) {
    this.eventsJsonKey = eventsJsonKey;
  }

  public ScreenRecording favorite(Boolean favorite) {
    this.favorite = favorite;
    return this;
  }

   /**
   * True if the user calling the API has favorited this particular screen recording.
   * @return favorite
  **/
  @ApiModelProperty(value = "True if the user calling the API has favorited this particular screen recording.")
  public Boolean isFavorite() {
    return favorite;
  }

  public void setFavorite(Boolean favorite) {
    this.favorite = favorite;
  }

  public ScreenRecording favorites(List<Integer> favorites) {
    this.favorites = favorites;
    return this;
  }

  public ScreenRecording addFavoritesItem(Integer favoritesItem) {
    if (this.favorites == null) {
      this.favorites = new ArrayList<Integer>();
    }
    this.favorites.add(favoritesItem);
    return this;
  }

   /**
   * Array of user ids that favorited this particular screen recording.
   * @return favorites
  **/
  @ApiModelProperty(value = "Array of user ids that favorited this particular screen recording.")
  public List<Integer> getFavorites() {
    return favorites;
  }

  public void setFavorites(List<Integer> favorites) {
    this.favorites = favorites;
  }

  public ScreenRecording geolocation(GeoPoint geolocation) {
    this.geolocation = geolocation;
    return this;
  }

   /**
   * Get geolocation
   * @return geolocation
  **/
  @ApiModelProperty(value = "")
  public GeoPoint getGeolocation() {
    return geolocation;
  }

  public void setGeolocation(GeoPoint geolocation) {
    this.geolocation = geolocation;
  }

  public ScreenRecording geolocationCountry(String geolocationCountry) {
    this.geolocationCountry = geolocationCountry;
    return this;
  }

   /**
   * Get geolocationCountry
   * @return geolocationCountry
  **/
  @ApiModelProperty(value = "")
  public String getGeolocationCountry() {
    return geolocationCountry;
  }

  public void setGeolocationCountry(String geolocationCountry) {
    this.geolocationCountry = geolocationCountry;
  }

  public ScreenRecording geolocationState(String geolocationState) {
    this.geolocationState = geolocationState;
    return this;
  }

   /**
   * Get geolocationState
   * @return geolocationState
  **/
  @ApiModelProperty(value = "")
  public String getGeolocationState() {
    return geolocationState;
  }

  public void setGeolocationState(String geolocationState) {
    this.geolocationState = geolocationState;
  }

  public ScreenRecording merchantId(String merchantId) {
    this.merchantId = merchantId;
    return this;
  }

   /**
   * Get merchantId
   * @return merchantId
  **/
  @ApiModelProperty(value = "")
  public String getMerchantId() {
    return merchantId;
  }

  public void setMerchantId(String merchantId) {
    this.merchantId = merchantId;
  }

  public ScreenRecording orderId(String orderId) {
    this.orderId = orderId;
    return this;
  }

   /**
   * Get orderId
   * @return orderId
  **/
  @ApiModelProperty(value = "")
  public String getOrderId() {
    return orderId;
  }

  public void setOrderId(String orderId) {
    this.orderId = orderId;
  }

  public ScreenRecording pageViewCount(Integer pageViewCount) {
    this.pageViewCount = pageViewCount;
    return this;
  }

   /**
   * Get pageViewCount
   * @return pageViewCount
  **/
  @ApiModelProperty(value = "")
  public Integer getPageViewCount() {
    return pageViewCount;
  }

  public void setPageViewCount(Integer pageViewCount) {
    this.pageViewCount = pageViewCount;
  }

  public ScreenRecording pageViews(List<ScreenRecordingPageView> pageViews) {
    this.pageViews = pageViews;
    return this;
  }

  public ScreenRecording addPageViewsItem(ScreenRecordingPageView pageViewsItem) {
    if (this.pageViews == null) {
      this.pageViews = new ArrayList<ScreenRecordingPageView>();
    }
    this.pageViews.add(pageViewsItem);
    return this;
  }

   /**
   * Get pageViews
   * @return pageViews
  **/
  @ApiModelProperty(value = "")
  public List<ScreenRecordingPageView> getPageViews() {
    return pageViews;
  }

  public void setPageViews(List<ScreenRecordingPageView> pageViews) {
    this.pageViews = pageViews;
  }

  public ScreenRecording rrwebVersion(String rrwebVersion) {
    this.rrwebVersion = rrwebVersion;
    return this;
  }

   /**
   * Get rrwebVersion
   * @return rrwebVersion
  **/
  @ApiModelProperty(value = "")
  public String getRrwebVersion() {
    return rrwebVersion;
  }

  public void setRrwebVersion(String rrwebVersion) {
    this.rrwebVersion = rrwebVersion;
  }

  public ScreenRecording screenRecordingUuid(String screenRecordingUuid) {
    this.screenRecordingUuid = screenRecordingUuid;
    return this;
  }

   /**
   * Get screenRecordingUuid
   * @return screenRecordingUuid
  **/
  @ApiModelProperty(value = "")
  public String getScreenRecordingUuid() {
    return screenRecordingUuid;
  }

  public void setScreenRecordingUuid(String screenRecordingUuid) {
    this.screenRecordingUuid = screenRecordingUuid;
  }

  public ScreenRecording signedDownloadUrl(String signedDownloadUrl) {
    this.signedDownloadUrl = signedDownloadUrl;
    return this;
  }

   /**
   * Get signedDownloadUrl
   * @return signedDownloadUrl
  **/
  @ApiModelProperty(value = "")
  public String getSignedDownloadUrl() {
    return signedDownloadUrl;
  }

  public void setSignedDownloadUrl(String signedDownloadUrl) {
    this.signedDownloadUrl = signedDownloadUrl;
  }

  public ScreenRecording startTimestamp(String startTimestamp) {
    this.startTimestamp = startTimestamp;
    return this;
  }

   /**
   * Starting timestamp
   * @return startTimestamp
  **/
  @ApiModelProperty(value = "Starting timestamp")
  public String getStartTimestamp() {
    return startTimestamp;
  }

  public void setStartTimestamp(String startTimestamp) {
    this.startTimestamp = startTimestamp;
  }

  public ScreenRecording storefrontOids(List<Integer> storefrontOids) {
    this.storefrontOids = storefrontOids;
    return this;
  }

  public ScreenRecording addStorefrontOidsItem(Integer storefrontOidsItem) {
    if (this.storefrontOids == null) {
      this.storefrontOids = new ArrayList<Integer>();
    }
    this.storefrontOids.add(storefrontOidsItem);
    return this;
  }

   /**
   * Get storefrontOids
   * @return storefrontOids
  **/
  @ApiModelProperty(value = "")
  public List<Integer> getStorefrontOids() {
    return storefrontOids;
  }

  public void setStorefrontOids(List<Integer> storefrontOids) {
    this.storefrontOids = storefrontOids;
  }

  public ScreenRecording storefronts(List<ScreenRecordingStoreFront> storefronts) {
    this.storefronts = storefronts;
    return this;
  }

  public ScreenRecording addStorefrontsItem(ScreenRecordingStoreFront storefrontsItem) {
    if (this.storefronts == null) {
      this.storefronts = new ArrayList<ScreenRecordingStoreFront>();
    }
    this.storefronts.add(storefrontsItem);
    return this;
  }

   /**
   * Get storefronts
   * @return storefronts
  **/
  @ApiModelProperty(value = "")
  public List<ScreenRecordingStoreFront> getStorefronts() {
    return storefronts;
  }

  public void setStorefronts(List<ScreenRecordingStoreFront> storefronts) {
    this.storefronts = storefronts;
  }

  public ScreenRecording tags(List<String> tags) {
    this.tags = tags;
    return this;
  }

  public ScreenRecording addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<String>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @ApiModelProperty(value = "")
  public List<String> getTags() {
    return tags;
  }

  public void setTags(List<String> tags) {
    this.tags = tags;
  }

  public ScreenRecording timeOnSite(Integer timeOnSite) {
    this.timeOnSite = timeOnSite;
    return this;
  }

   /**
   * Get timeOnSite
   * @return timeOnSite
  **/
  @ApiModelProperty(value = "")
  public Integer getTimeOnSite() {
    return timeOnSite;
  }

  public void setTimeOnSite(Integer timeOnSite) {
    this.timeOnSite = timeOnSite;
  }

  public ScreenRecording ucacid(String ucacid) {
    this.ucacid = ucacid;
    return this;
  }

   /**
   * Get ucacid
   * @return ucacid
  **/
  @ApiModelProperty(value = "")
  public String getUcacid() {
    return ucacid;
  }

  public void setUcacid(String ucacid) {
    this.ucacid = ucacid;
  }

  public ScreenRecording userAgent(ScreenRecordingUserAgent userAgent) {
    this.userAgent = userAgent;
    return this;
  }

   /**
   * Get userAgent
   * @return userAgent
  **/
  @ApiModelProperty(value = "")
  public ScreenRecordingUserAgent getUserAgent() {
    return userAgent;
  }

  public void setUserAgent(ScreenRecordingUserAgent userAgent) {
    this.userAgent = userAgent;
  }

  public ScreenRecording userAgentRaw(String userAgentRaw) {
    this.userAgentRaw = userAgentRaw;
    return this;
  }

   /**
   * Get userAgentRaw
   * @return userAgentRaw
  **/
  @ApiModelProperty(value = "")
  public String getUserAgentRaw() {
    return userAgentRaw;
  }

  public void setUserAgentRaw(String userAgentRaw) {
    this.userAgentRaw = userAgentRaw;
  }

  public ScreenRecording userIp(String userIp) {
    this.userIp = userIp;
    return this;
  }

   /**
   * Get userIp
   * @return userIp
  **/
  @ApiModelProperty(value = "")
  public String getUserIp() {
    return userIp;
  }

  public void setUserIp(String userIp) {
    this.userIp = userIp;
  }

  public ScreenRecording userProperties(List<ScreenRecordingUserProperty> userProperties) {
    this.userProperties = userProperties;
    return this;
  }

  public ScreenRecording addUserPropertiesItem(ScreenRecordingUserProperty userPropertiesItem) {
    if (this.userProperties == null) {
      this.userProperties = new ArrayList<ScreenRecordingUserProperty>();
    }
    this.userProperties.add(userPropertiesItem);
    return this;
  }

   /**
   * Get userProperties
   * @return userProperties
  **/
  @ApiModelProperty(value = "")
  public List<ScreenRecordingUserProperty> getUserProperties() {
    return userProperties;
  }

  public void setUserProperties(List<ScreenRecordingUserProperty> userProperties) {
    this.userProperties = userProperties;
  }

  public ScreenRecording watched(Boolean watched) {
    this.watched = watched;
    return this;
  }

   /**
   * Get watched
   * @return watched
  **/
  @ApiModelProperty(value = "")
  public Boolean isWatched() {
    return watched;
  }

  public void setWatched(Boolean watched) {
    this.watched = watched;
  }

  public ScreenRecording windowHeight(Integer windowHeight) {
    this.windowHeight = windowHeight;
    return this;
  }

   /**
   * Get windowHeight
   * @return windowHeight
  **/
  @ApiModelProperty(value = "")
  public Integer getWindowHeight() {
    return windowHeight;
  }

  public void setWindowHeight(Integer windowHeight) {
    this.windowHeight = windowHeight;
  }

  public ScreenRecording windowWidth(Integer windowWidth) {
    this.windowWidth = windowWidth;
    return this;
  }

   /**
   * Get windowWidth
   * @return windowWidth
  **/
  @ApiModelProperty(value = "")
  public Integer getWindowWidth() {
    return windowWidth;
  }

  public void setWindowWidth(Integer windowWidth) {
    this.windowWidth = windowWidth;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ScreenRecording screenRecording = (ScreenRecording) o;
    return Objects.equals(this.analyticsClientOid, screenRecording.analyticsClientOid) &&
        Objects.equals(this.analyticsSessionDts, screenRecording.analyticsSessionDts) &&
        Objects.equals(this.analyticsSessionOid, screenRecording.analyticsSessionOid) &&
        Objects.equals(this.email, screenRecording.email) &&
        Objects.equals(this.endTimestamp, screenRecording.endTimestamp) &&
        Objects.equals(this.espCustomerUuid, screenRecording.espCustomerUuid) &&
        Objects.equals(this.eventsGzSize, screenRecording.eventsGzSize) &&
        Objects.equals(this.eventsJsonKey, screenRecording.eventsJsonKey) &&
        Objects.equals(this.favorite, screenRecording.favorite) &&
        Objects.equals(this.favorites, screenRecording.favorites) &&
        Objects.equals(this.geolocation, screenRecording.geolocation) &&
        Objects.equals(this.geolocationCountry, screenRecording.geolocationCountry) &&
        Objects.equals(this.geolocationState, screenRecording.geolocationState) &&
        Objects.equals(this.merchantId, screenRecording.merchantId) &&
        Objects.equals(this.orderId, screenRecording.orderId) &&
        Objects.equals(this.pageViewCount, screenRecording.pageViewCount) &&
        Objects.equals(this.pageViews, screenRecording.pageViews) &&
        Objects.equals(this.rrwebVersion, screenRecording.rrwebVersion) &&
        Objects.equals(this.screenRecordingUuid, screenRecording.screenRecordingUuid) &&
        Objects.equals(this.signedDownloadUrl, screenRecording.signedDownloadUrl) &&
        Objects.equals(this.startTimestamp, screenRecording.startTimestamp) &&
        Objects.equals(this.storefrontOids, screenRecording.storefrontOids) &&
        Objects.equals(this.storefronts, screenRecording.storefronts) &&
        Objects.equals(this.tags, screenRecording.tags) &&
        Objects.equals(this.timeOnSite, screenRecording.timeOnSite) &&
        Objects.equals(this.ucacid, screenRecording.ucacid) &&
        Objects.equals(this.userAgent, screenRecording.userAgent) &&
        Objects.equals(this.userAgentRaw, screenRecording.userAgentRaw) &&
        Objects.equals(this.userIp, screenRecording.userIp) &&
        Objects.equals(this.userProperties, screenRecording.userProperties) &&
        Objects.equals(this.watched, screenRecording.watched) &&
        Objects.equals(this.windowHeight, screenRecording.windowHeight) &&
        Objects.equals(this.windowWidth, screenRecording.windowWidth);
  }

  @Override
  public int hashCode() {
    return Objects.hash(analyticsClientOid, analyticsSessionDts, analyticsSessionOid, email, endTimestamp, espCustomerUuid, eventsGzSize, eventsJsonKey, favorite, favorites, geolocation, geolocationCountry, geolocationState, merchantId, orderId, pageViewCount, pageViews, rrwebVersion, screenRecordingUuid, signedDownloadUrl, startTimestamp, storefrontOids, storefronts, tags, timeOnSite, ucacid, userAgent, userAgentRaw, userIp, userProperties, watched, windowHeight, windowWidth);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ScreenRecording {\n");
    
    sb.append("    analyticsClientOid: ").append(toIndentedString(analyticsClientOid)).append("\n");
    sb.append("    analyticsSessionDts: ").append(toIndentedString(analyticsSessionDts)).append("\n");
    sb.append("    analyticsSessionOid: ").append(toIndentedString(analyticsSessionOid)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    endTimestamp: ").append(toIndentedString(endTimestamp)).append("\n");
    sb.append("    espCustomerUuid: ").append(toIndentedString(espCustomerUuid)).append("\n");
    sb.append("    eventsGzSize: ").append(toIndentedString(eventsGzSize)).append("\n");
    sb.append("    eventsJsonKey: ").append(toIndentedString(eventsJsonKey)).append("\n");
    sb.append("    favorite: ").append(toIndentedString(favorite)).append("\n");
    sb.append("    favorites: ").append(toIndentedString(favorites)).append("\n");
    sb.append("    geolocation: ").append(toIndentedString(geolocation)).append("\n");
    sb.append("    geolocationCountry: ").append(toIndentedString(geolocationCountry)).append("\n");
    sb.append("    geolocationState: ").append(toIndentedString(geolocationState)).append("\n");
    sb.append("    merchantId: ").append(toIndentedString(merchantId)).append("\n");
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    pageViewCount: ").append(toIndentedString(pageViewCount)).append("\n");
    sb.append("    pageViews: ").append(toIndentedString(pageViews)).append("\n");
    sb.append("    rrwebVersion: ").append(toIndentedString(rrwebVersion)).append("\n");
    sb.append("    screenRecordingUuid: ").append(toIndentedString(screenRecordingUuid)).append("\n");
    sb.append("    signedDownloadUrl: ").append(toIndentedString(signedDownloadUrl)).append("\n");
    sb.append("    startTimestamp: ").append(toIndentedString(startTimestamp)).append("\n");
    sb.append("    storefrontOids: ").append(toIndentedString(storefrontOids)).append("\n");
    sb.append("    storefronts: ").append(toIndentedString(storefronts)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    timeOnSite: ").append(toIndentedString(timeOnSite)).append("\n");
    sb.append("    ucacid: ").append(toIndentedString(ucacid)).append("\n");
    sb.append("    userAgent: ").append(toIndentedString(userAgent)).append("\n");
    sb.append("    userAgentRaw: ").append(toIndentedString(userAgentRaw)).append("\n");
    sb.append("    userIp: ").append(toIndentedString(userIp)).append("\n");
    sb.append("    userProperties: ").append(toIndentedString(userProperties)).append("\n");
    sb.append("    watched: ").append(toIndentedString(watched)).append("\n");
    sb.append("    windowHeight: ").append(toIndentedString(windowHeight)).append("\n");
    sb.append("    windowWidth: ").append(toIndentedString(windowWidth)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

