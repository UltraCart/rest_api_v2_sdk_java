/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.GeoPoint;
import com.ultracart.admin.v2.models.ScreenRecordingAdPlatform;
import com.ultracart.admin.v2.models.ScreenRecordingPageView;
import com.ultracart.admin.v2.models.ScreenRecordingStoreFront;
import com.ultracart.admin.v2.models.ScreenRecordingUserAgent;
import com.ultracart.admin.v2.models.ScreenRecordingUserProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * ScreenRecording
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-10-20T17:21:52.957-04:00[America/Indianapolis]")
public class ScreenRecording {
  public static final String SERIALIZED_NAME_AD_PLATFORM = "ad_platform";
  @SerializedName(SERIALIZED_NAME_AD_PLATFORM)
  private ScreenRecordingAdPlatform adPlatform;

  public static final String SERIALIZED_NAME_ANALYTICS_CLIENT_OID = "analytics_client_oid";
  @SerializedName(SERIALIZED_NAME_ANALYTICS_CLIENT_OID)
  private Long analyticsClientOid;

  public static final String SERIALIZED_NAME_ANALYTICS_SESSION_DTS = "analytics_session_dts";
  @SerializedName(SERIALIZED_NAME_ANALYTICS_SESSION_DTS)
  private Long analyticsSessionDts;

  public static final String SERIALIZED_NAME_ANALYTICS_SESSION_OID = "analytics_session_oid";
  @SerializedName(SERIALIZED_NAME_ANALYTICS_SESSION_OID)
  private Long analyticsSessionOid;

  public static final String SERIALIZED_NAME_COMMUNICATIONS_CAMPAIGN_NAME = "communications_campaign_name";
  @SerializedName(SERIALIZED_NAME_COMMUNICATIONS_CAMPAIGN_NAME)
  private String communicationsCampaignName;

  public static final String SERIALIZED_NAME_COMMUNICATIONS_CAMPAIGN_UUID = "communications_campaign_uuid";
  @SerializedName(SERIALIZED_NAME_COMMUNICATIONS_CAMPAIGN_UUID)
  private String communicationsCampaignUuid;

  public static final String SERIALIZED_NAME_COMMUNICATIONS_EMAIL_SUBJECT = "communications_email_subject";
  @SerializedName(SERIALIZED_NAME_COMMUNICATIONS_EMAIL_SUBJECT)
  private String communicationsEmailSubject;

  public static final String SERIALIZED_NAME_COMMUNICATIONS_EMAIL_UUID = "communications_email_uuid";
  @SerializedName(SERIALIZED_NAME_COMMUNICATIONS_EMAIL_UUID)
  private String communicationsEmailUuid;

  public static final String SERIALIZED_NAME_COMMUNICATIONS_FLOW_NAME = "communications_flow_name";
  @SerializedName(SERIALIZED_NAME_COMMUNICATIONS_FLOW_NAME)
  private String communicationsFlowName;

  public static final String SERIALIZED_NAME_COMMUNICATIONS_FLOW_UUID = "communications_flow_uuid";
  @SerializedName(SERIALIZED_NAME_COMMUNICATIONS_FLOW_UUID)
  private String communicationsFlowUuid;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_EMAIL_DOMAIN = "email_domain";
  @SerializedName(SERIALIZED_NAME_EMAIL_DOMAIN)
  private String emailDomain;

  public static final String SERIALIZED_NAME_END_TIMESTAMP = "end_timestamp";
  @SerializedName(SERIALIZED_NAME_END_TIMESTAMP)
  private String endTimestamp;

  public static final String SERIALIZED_NAME_ESP_CUSTOMER_UUID = "esp_customer_uuid";
  @SerializedName(SERIALIZED_NAME_ESP_CUSTOMER_UUID)
  private String espCustomerUuid;

  public static final String SERIALIZED_NAME_EVENTS_GZ_SIZE = "events_gz_size";
  @SerializedName(SERIALIZED_NAME_EVENTS_GZ_SIZE)
  private Integer eventsGzSize;

  public static final String SERIALIZED_NAME_EVENTS_JSON_KEY = "events_json_key";
  @SerializedName(SERIALIZED_NAME_EVENTS_JSON_KEY)
  private String eventsJsonKey;

  public static final String SERIALIZED_NAME_FAVORITE = "favorite";
  @SerializedName(SERIALIZED_NAME_FAVORITE)
  private Boolean favorite;

  public static final String SERIALIZED_NAME_FAVORITES = "favorites";
  @SerializedName(SERIALIZED_NAME_FAVORITES)
  private List<Integer> favorites = null;

  public static final String SERIALIZED_NAME_GEOLOCATION = "geolocation";
  @SerializedName(SERIALIZED_NAME_GEOLOCATION)
  private GeoPoint geolocation;

  public static final String SERIALIZED_NAME_GEOLOCATION_COUNTRY = "geolocation_country";
  @SerializedName(SERIALIZED_NAME_GEOLOCATION_COUNTRY)
  private String geolocationCountry;

  public static final String SERIALIZED_NAME_GEOLOCATION_STATE = "geolocation_state";
  @SerializedName(SERIALIZED_NAME_GEOLOCATION_STATE)
  private String geolocationState;

  public static final String SERIALIZED_NAME_LANGUAGE_ISO_CODE = "language_iso_code";
  @SerializedName(SERIALIZED_NAME_LANGUAGE_ISO_CODE)
  private String languageIsoCode;

  public static final String SERIALIZED_NAME_MERCHANT_ID = "merchant_id";
  @SerializedName(SERIALIZED_NAME_MERCHANT_ID)
  private String merchantId;

  public static final String SERIALIZED_NAME_MERCHANT_NOTES = "merchant_notes";
  @SerializedName(SERIALIZED_NAME_MERCHANT_NOTES)
  private String merchantNotes;

  public static final String SERIALIZED_NAME_MISSING_EXTERNAL_TRACKING = "missing_external_tracking";
  @SerializedName(SERIALIZED_NAME_MISSING_EXTERNAL_TRACKING)
  private Boolean missingExternalTracking;

  public static final String SERIALIZED_NAME_ORDER_ID = "order_id";
  @SerializedName(SERIALIZED_NAME_ORDER_ID)
  private String orderId;

  public static final String SERIALIZED_NAME_PAGE_VIEW_COUNT = "page_view_count";
  @SerializedName(SERIALIZED_NAME_PAGE_VIEW_COUNT)
  private Integer pageViewCount;

  public static final String SERIALIZED_NAME_PAGE_VIEWS = "page_views";
  @SerializedName(SERIALIZED_NAME_PAGE_VIEWS)
  private List<ScreenRecordingPageView> pageViews = null;

  public static final String SERIALIZED_NAME_PREFERRED_LANGUAGE = "preferred_language";
  @SerializedName(SERIALIZED_NAME_PREFERRED_LANGUAGE)
  private String preferredLanguage;

  public static final String SERIALIZED_NAME_REFERRER_DOMAIN = "referrer_domain";
  @SerializedName(SERIALIZED_NAME_REFERRER_DOMAIN)
  private String referrerDomain;

  public static final String SERIALIZED_NAME_RRWEB_VERSION = "rrweb_version";
  @SerializedName(SERIALIZED_NAME_RRWEB_VERSION)
  private String rrwebVersion;

  public static final String SERIALIZED_NAME_SCREEN_RECORDING_UUID = "screen_recording_uuid";
  @SerializedName(SERIALIZED_NAME_SCREEN_RECORDING_UUID)
  private String screenRecordingUuid;

  public static final String SERIALIZED_NAME_SIGNED_DOWNLOAD_URL = "signed_download_url";
  @SerializedName(SERIALIZED_NAME_SIGNED_DOWNLOAD_URL)
  private String signedDownloadUrl;

  public static final String SERIALIZED_NAME_START_TIMESTAMP = "start_timestamp";
  @SerializedName(SERIALIZED_NAME_START_TIMESTAMP)
  private String startTimestamp;

  public static final String SERIALIZED_NAME_STOREFRONT_OIDS = "storefront_oids";
  @SerializedName(SERIALIZED_NAME_STOREFRONT_OIDS)
  private List<Integer> storefrontOids = null;

  public static final String SERIALIZED_NAME_STOREFRONTS = "storefronts";
  @SerializedName(SERIALIZED_NAME_STOREFRONTS)
  private List<ScreenRecordingStoreFront> storefronts = null;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<String> tags = null;

  public static final String SERIALIZED_NAME_TIME_ON_SITE = "time_on_site";
  @SerializedName(SERIALIZED_NAME_TIME_ON_SITE)
  private Integer timeOnSite;

  public static final String SERIALIZED_NAME_UCACID = "ucacid";
  @SerializedName(SERIALIZED_NAME_UCACID)
  private String ucacid;

  public static final String SERIALIZED_NAME_USER_AGENT = "user_agent";
  @SerializedName(SERIALIZED_NAME_USER_AGENT)
  private ScreenRecordingUserAgent userAgent;

  public static final String SERIALIZED_NAME_USER_AGENT_RAW = "user_agent_raw";
  @SerializedName(SERIALIZED_NAME_USER_AGENT_RAW)
  private String userAgentRaw;

  public static final String SERIALIZED_NAME_USER_IP = "user_ip";
  @SerializedName(SERIALIZED_NAME_USER_IP)
  private String userIp;

  public static final String SERIALIZED_NAME_USER_PROPERTIES = "user_properties";
  @SerializedName(SERIALIZED_NAME_USER_PROPERTIES)
  private List<ScreenRecordingUserProperty> userProperties = null;

  public static final String SERIALIZED_NAME_UTM_CAMPAIGN = "utm_campaign";
  @SerializedName(SERIALIZED_NAME_UTM_CAMPAIGN)
  private String utmCampaign;

  public static final String SERIALIZED_NAME_UTM_SOURCE = "utm_source";
  @SerializedName(SERIALIZED_NAME_UTM_SOURCE)
  private String utmSource;

  public static final String SERIALIZED_NAME_VISITOR_FIRST_SEEN = "visitor_first_seen";
  @SerializedName(SERIALIZED_NAME_VISITOR_FIRST_SEEN)
  private String visitorFirstSeen;

  public static final String SERIALIZED_NAME_VISITOR_NUMBER = "visitor_number";
  @SerializedName(SERIALIZED_NAME_VISITOR_NUMBER)
  private Integer visitorNumber;

  public static final String SERIALIZED_NAME_WATCHED = "watched";
  @SerializedName(SERIALIZED_NAME_WATCHED)
  private Boolean watched;

  public static final String SERIALIZED_NAME_WINDOW_HEIGHT = "window_height";
  @SerializedName(SERIALIZED_NAME_WINDOW_HEIGHT)
  private Integer windowHeight;

  public static final String SERIALIZED_NAME_WINDOW_WIDTH = "window_width";
  @SerializedName(SERIALIZED_NAME_WINDOW_WIDTH)
  private Integer windowWidth;

  public ScreenRecording() { 
  }

  public ScreenRecording adPlatform(ScreenRecordingAdPlatform adPlatform) {
    
    this.adPlatform = adPlatform;
    return this;
  }

   /**
   * Get adPlatform
   * @return adPlatform
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ScreenRecordingAdPlatform getAdPlatform() {
    return adPlatform;
  }


  public void setAdPlatform(ScreenRecordingAdPlatform adPlatform) {
    this.adPlatform = adPlatform;
  }


  public ScreenRecording analyticsClientOid(Long analyticsClientOid) {
    
    this.analyticsClientOid = analyticsClientOid;
    return this;
  }

   /**
   * Get analyticsClientOid
   * @return analyticsClientOid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getAnalyticsClientOid() {
    return analyticsClientOid;
  }


  public void setAnalyticsClientOid(Long analyticsClientOid) {
    this.analyticsClientOid = analyticsClientOid;
  }


  public ScreenRecording analyticsSessionDts(Long analyticsSessionDts) {
    
    this.analyticsSessionDts = analyticsSessionDts;
    return this;
  }

   /**
   * Get analyticsSessionDts
   * @return analyticsSessionDts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getAnalyticsSessionDts() {
    return analyticsSessionDts;
  }


  public void setAnalyticsSessionDts(Long analyticsSessionDts) {
    this.analyticsSessionDts = analyticsSessionDts;
  }


  public ScreenRecording analyticsSessionOid(Long analyticsSessionOid) {
    
    this.analyticsSessionOid = analyticsSessionOid;
    return this;
  }

   /**
   * Get analyticsSessionOid
   * @return analyticsSessionOid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getAnalyticsSessionOid() {
    return analyticsSessionOid;
  }


  public void setAnalyticsSessionOid(Long analyticsSessionOid) {
    this.analyticsSessionOid = analyticsSessionOid;
  }


  public ScreenRecording communicationsCampaignName(String communicationsCampaignName) {
    
    this.communicationsCampaignName = communicationsCampaignName;
    return this;
  }

   /**
   * Campaign Name
   * @return communicationsCampaignName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Campaign Name")

  public String getCommunicationsCampaignName() {
    return communicationsCampaignName;
  }


  public void setCommunicationsCampaignName(String communicationsCampaignName) {
    this.communicationsCampaignName = communicationsCampaignName;
  }


  public ScreenRecording communicationsCampaignUuid(String communicationsCampaignUuid) {
    
    this.communicationsCampaignUuid = communicationsCampaignUuid;
    return this;
  }

   /**
   * Campaign UUID
   * @return communicationsCampaignUuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Campaign UUID")

  public String getCommunicationsCampaignUuid() {
    return communicationsCampaignUuid;
  }


  public void setCommunicationsCampaignUuid(String communicationsCampaignUuid) {
    this.communicationsCampaignUuid = communicationsCampaignUuid;
  }


  public ScreenRecording communicationsEmailSubject(String communicationsEmailSubject) {
    
    this.communicationsEmailSubject = communicationsEmailSubject;
    return this;
  }

   /**
   * Email subject
   * @return communicationsEmailSubject
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Email subject")

  public String getCommunicationsEmailSubject() {
    return communicationsEmailSubject;
  }


  public void setCommunicationsEmailSubject(String communicationsEmailSubject) {
    this.communicationsEmailSubject = communicationsEmailSubject;
  }


  public ScreenRecording communicationsEmailUuid(String communicationsEmailUuid) {
    
    this.communicationsEmailUuid = communicationsEmailUuid;
    return this;
  }

   /**
   * Email UUID
   * @return communicationsEmailUuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Email UUID")

  public String getCommunicationsEmailUuid() {
    return communicationsEmailUuid;
  }


  public void setCommunicationsEmailUuid(String communicationsEmailUuid) {
    this.communicationsEmailUuid = communicationsEmailUuid;
  }


  public ScreenRecording communicationsFlowName(String communicationsFlowName) {
    
    this.communicationsFlowName = communicationsFlowName;
    return this;
  }

   /**
   * Flow Name
   * @return communicationsFlowName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Flow Name")

  public String getCommunicationsFlowName() {
    return communicationsFlowName;
  }


  public void setCommunicationsFlowName(String communicationsFlowName) {
    this.communicationsFlowName = communicationsFlowName;
  }


  public ScreenRecording communicationsFlowUuid(String communicationsFlowUuid) {
    
    this.communicationsFlowUuid = communicationsFlowUuid;
    return this;
  }

   /**
   * Flow UUID
   * @return communicationsFlowUuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Flow UUID")

  public String getCommunicationsFlowUuid() {
    return communicationsFlowUuid;
  }


  public void setCommunicationsFlowUuid(String communicationsFlowUuid) {
    this.communicationsFlowUuid = communicationsFlowUuid;
  }


  public ScreenRecording email(String email) {
    
    this.email = email;
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEmail() {
    return email;
  }


  public void setEmail(String email) {
    this.email = email;
  }


  public ScreenRecording emailDomain(String emailDomain) {
    
    this.emailDomain = emailDomain;
    return this;
  }

   /**
   * Get emailDomain
   * @return emailDomain
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEmailDomain() {
    return emailDomain;
  }


  public void setEmailDomain(String emailDomain) {
    this.emailDomain = emailDomain;
  }


  public ScreenRecording endTimestamp(String endTimestamp) {
    
    this.endTimestamp = endTimestamp;
    return this;
  }

   /**
   * Ending timestamp
   * @return endTimestamp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Ending timestamp")

  public String getEndTimestamp() {
    return endTimestamp;
  }


  public void setEndTimestamp(String endTimestamp) {
    this.endTimestamp = endTimestamp;
  }


  public ScreenRecording espCustomerUuid(String espCustomerUuid) {
    
    this.espCustomerUuid = espCustomerUuid;
    return this;
  }

   /**
   * Get espCustomerUuid
   * @return espCustomerUuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEspCustomerUuid() {
    return espCustomerUuid;
  }


  public void setEspCustomerUuid(String espCustomerUuid) {
    this.espCustomerUuid = espCustomerUuid;
  }


  public ScreenRecording eventsGzSize(Integer eventsGzSize) {
    
    this.eventsGzSize = eventsGzSize;
    return this;
  }

   /**
   * Get eventsGzSize
   * @return eventsGzSize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getEventsGzSize() {
    return eventsGzSize;
  }


  public void setEventsGzSize(Integer eventsGzSize) {
    this.eventsGzSize = eventsGzSize;
  }


  public ScreenRecording eventsJsonKey(String eventsJsonKey) {
    
    this.eventsJsonKey = eventsJsonKey;
    return this;
  }

   /**
   * Get eventsJsonKey
   * @return eventsJsonKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEventsJsonKey() {
    return eventsJsonKey;
  }


  public void setEventsJsonKey(String eventsJsonKey) {
    this.eventsJsonKey = eventsJsonKey;
  }


  public ScreenRecording favorite(Boolean favorite) {
    
    this.favorite = favorite;
    return this;
  }

   /**
   * True if the user calling the API has favorited this particular screen recording.
   * @return favorite
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if the user calling the API has favorited this particular screen recording.")

  public Boolean getFavorite() {
    return favorite;
  }


  public void setFavorite(Boolean favorite) {
    this.favorite = favorite;
  }


  public ScreenRecording favorites(List<Integer> favorites) {
    
    this.favorites = favorites;
    return this;
  }

  public ScreenRecording addFavoritesItem(Integer favoritesItem) {
    if (this.favorites == null) {
      this.favorites = new ArrayList<>();
    }
    this.favorites.add(favoritesItem);
    return this;
  }

   /**
   * Array of user ids that favorited this particular screen recording.
   * @return favorites
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Array of user ids that favorited this particular screen recording.")

  public List<Integer> getFavorites() {
    return favorites;
  }


  public void setFavorites(List<Integer> favorites) {
    this.favorites = favorites;
  }


  public ScreenRecording geolocation(GeoPoint geolocation) {
    
    this.geolocation = geolocation;
    return this;
  }

   /**
   * Get geolocation
   * @return geolocation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public GeoPoint getGeolocation() {
    return geolocation;
  }


  public void setGeolocation(GeoPoint geolocation) {
    this.geolocation = geolocation;
  }


  public ScreenRecording geolocationCountry(String geolocationCountry) {
    
    this.geolocationCountry = geolocationCountry;
    return this;
  }

   /**
   * Get geolocationCountry
   * @return geolocationCountry
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getGeolocationCountry() {
    return geolocationCountry;
  }


  public void setGeolocationCountry(String geolocationCountry) {
    this.geolocationCountry = geolocationCountry;
  }


  public ScreenRecording geolocationState(String geolocationState) {
    
    this.geolocationState = geolocationState;
    return this;
  }

   /**
   * Get geolocationState
   * @return geolocationState
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getGeolocationState() {
    return geolocationState;
  }


  public void setGeolocationState(String geolocationState) {
    this.geolocationState = geolocationState;
  }


  public ScreenRecording languageIsoCode(String languageIsoCode) {
    
    this.languageIsoCode = languageIsoCode;
    return this;
  }

   /**
   * Language ISO code
   * @return languageIsoCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Language ISO code")

  public String getLanguageIsoCode() {
    return languageIsoCode;
  }


  public void setLanguageIsoCode(String languageIsoCode) {
    this.languageIsoCode = languageIsoCode;
  }


  public ScreenRecording merchantId(String merchantId) {
    
    this.merchantId = merchantId;
    return this;
  }

   /**
   * Get merchantId
   * @return merchantId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMerchantId() {
    return merchantId;
  }


  public void setMerchantId(String merchantId) {
    this.merchantId = merchantId;
  }


  public ScreenRecording merchantNotes(String merchantNotes) {
    
    this.merchantNotes = merchantNotes;
    return this;
  }

   /**
   * Get merchantNotes
   * @return merchantNotes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMerchantNotes() {
    return merchantNotes;
  }


  public void setMerchantNotes(String merchantNotes) {
    this.merchantNotes = merchantNotes;
  }


  public ScreenRecording missingExternalTracking(Boolean missingExternalTracking) {
    
    this.missingExternalTracking = missingExternalTracking;
    return this;
  }

   /**
   * True if external page view was not tracked
   * @return missingExternalTracking
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if external page view was not tracked")

  public Boolean getMissingExternalTracking() {
    return missingExternalTracking;
  }


  public void setMissingExternalTracking(Boolean missingExternalTracking) {
    this.missingExternalTracking = missingExternalTracking;
  }


  public ScreenRecording orderId(String orderId) {
    
    this.orderId = orderId;
    return this;
  }

   /**
   * Get orderId
   * @return orderId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOrderId() {
    return orderId;
  }


  public void setOrderId(String orderId) {
    this.orderId = orderId;
  }


  public ScreenRecording pageViewCount(Integer pageViewCount) {
    
    this.pageViewCount = pageViewCount;
    return this;
  }

   /**
   * Get pageViewCount
   * @return pageViewCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getPageViewCount() {
    return pageViewCount;
  }


  public void setPageViewCount(Integer pageViewCount) {
    this.pageViewCount = pageViewCount;
  }


  public ScreenRecording pageViews(List<ScreenRecordingPageView> pageViews) {
    
    this.pageViews = pageViews;
    return this;
  }

  public ScreenRecording addPageViewsItem(ScreenRecordingPageView pageViewsItem) {
    if (this.pageViews == null) {
      this.pageViews = new ArrayList<>();
    }
    this.pageViews.add(pageViewsItem);
    return this;
  }

   /**
   * Get pageViews
   * @return pageViews
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ScreenRecordingPageView> getPageViews() {
    return pageViews;
  }


  public void setPageViews(List<ScreenRecordingPageView> pageViews) {
    this.pageViews = pageViews;
  }


  public ScreenRecording preferredLanguage(String preferredLanguage) {
    
    this.preferredLanguage = preferredLanguage;
    return this;
  }

   /**
   * ISO 3 Letter language code that the customer would prefer
   * @return preferredLanguage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ISO 3 Letter language code that the customer would prefer")

  public String getPreferredLanguage() {
    return preferredLanguage;
  }


  public void setPreferredLanguage(String preferredLanguage) {
    this.preferredLanguage = preferredLanguage;
  }


  public ScreenRecording referrerDomain(String referrerDomain) {
    
    this.referrerDomain = referrerDomain;
    return this;
  }

   /**
   * Get referrerDomain
   * @return referrerDomain
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getReferrerDomain() {
    return referrerDomain;
  }


  public void setReferrerDomain(String referrerDomain) {
    this.referrerDomain = referrerDomain;
  }


  public ScreenRecording rrwebVersion(String rrwebVersion) {
    
    this.rrwebVersion = rrwebVersion;
    return this;
  }

   /**
   * Get rrwebVersion
   * @return rrwebVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getRrwebVersion() {
    return rrwebVersion;
  }


  public void setRrwebVersion(String rrwebVersion) {
    this.rrwebVersion = rrwebVersion;
  }


  public ScreenRecording screenRecordingUuid(String screenRecordingUuid) {
    
    this.screenRecordingUuid = screenRecordingUuid;
    return this;
  }

   /**
   * Get screenRecordingUuid
   * @return screenRecordingUuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getScreenRecordingUuid() {
    return screenRecordingUuid;
  }


  public void setScreenRecordingUuid(String screenRecordingUuid) {
    this.screenRecordingUuid = screenRecordingUuid;
  }


  public ScreenRecording signedDownloadUrl(String signedDownloadUrl) {
    
    this.signedDownloadUrl = signedDownloadUrl;
    return this;
  }

   /**
   * Get signedDownloadUrl
   * @return signedDownloadUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSignedDownloadUrl() {
    return signedDownloadUrl;
  }


  public void setSignedDownloadUrl(String signedDownloadUrl) {
    this.signedDownloadUrl = signedDownloadUrl;
  }


  public ScreenRecording startTimestamp(String startTimestamp) {
    
    this.startTimestamp = startTimestamp;
    return this;
  }

   /**
   * Starting timestamp
   * @return startTimestamp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Starting timestamp")

  public String getStartTimestamp() {
    return startTimestamp;
  }


  public void setStartTimestamp(String startTimestamp) {
    this.startTimestamp = startTimestamp;
  }


  public ScreenRecording storefrontOids(List<Integer> storefrontOids) {
    
    this.storefrontOids = storefrontOids;
    return this;
  }

  public ScreenRecording addStorefrontOidsItem(Integer storefrontOidsItem) {
    if (this.storefrontOids == null) {
      this.storefrontOids = new ArrayList<>();
    }
    this.storefrontOids.add(storefrontOidsItem);
    return this;
  }

   /**
   * Get storefrontOids
   * @return storefrontOids
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Integer> getStorefrontOids() {
    return storefrontOids;
  }


  public void setStorefrontOids(List<Integer> storefrontOids) {
    this.storefrontOids = storefrontOids;
  }


  public ScreenRecording storefronts(List<ScreenRecordingStoreFront> storefronts) {
    
    this.storefronts = storefronts;
    return this;
  }

  public ScreenRecording addStorefrontsItem(ScreenRecordingStoreFront storefrontsItem) {
    if (this.storefronts == null) {
      this.storefronts = new ArrayList<>();
    }
    this.storefronts.add(storefrontsItem);
    return this;
  }

   /**
   * Get storefronts
   * @return storefronts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ScreenRecordingStoreFront> getStorefronts() {
    return storefronts;
  }


  public void setStorefronts(List<ScreenRecordingStoreFront> storefronts) {
    this.storefronts = storefronts;
  }


  public ScreenRecording tags(List<String> tags) {
    
    this.tags = tags;
    return this;
  }

  public ScreenRecording addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getTags() {
    return tags;
  }


  public void setTags(List<String> tags) {
    this.tags = tags;
  }


  public ScreenRecording timeOnSite(Integer timeOnSite) {
    
    this.timeOnSite = timeOnSite;
    return this;
  }

   /**
   * Get timeOnSite
   * @return timeOnSite
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getTimeOnSite() {
    return timeOnSite;
  }


  public void setTimeOnSite(Integer timeOnSite) {
    this.timeOnSite = timeOnSite;
  }


  public ScreenRecording ucacid(String ucacid) {
    
    this.ucacid = ucacid;
    return this;
  }

   /**
   * Get ucacid
   * @return ucacid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUcacid() {
    return ucacid;
  }


  public void setUcacid(String ucacid) {
    this.ucacid = ucacid;
  }


  public ScreenRecording userAgent(ScreenRecordingUserAgent userAgent) {
    
    this.userAgent = userAgent;
    return this;
  }

   /**
   * Get userAgent
   * @return userAgent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ScreenRecordingUserAgent getUserAgent() {
    return userAgent;
  }


  public void setUserAgent(ScreenRecordingUserAgent userAgent) {
    this.userAgent = userAgent;
  }


  public ScreenRecording userAgentRaw(String userAgentRaw) {
    
    this.userAgentRaw = userAgentRaw;
    return this;
  }

   /**
   * Get userAgentRaw
   * @return userAgentRaw
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUserAgentRaw() {
    return userAgentRaw;
  }


  public void setUserAgentRaw(String userAgentRaw) {
    this.userAgentRaw = userAgentRaw;
  }


  public ScreenRecording userIp(String userIp) {
    
    this.userIp = userIp;
    return this;
  }

   /**
   * Get userIp
   * @return userIp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUserIp() {
    return userIp;
  }


  public void setUserIp(String userIp) {
    this.userIp = userIp;
  }


  public ScreenRecording userProperties(List<ScreenRecordingUserProperty> userProperties) {
    
    this.userProperties = userProperties;
    return this;
  }

  public ScreenRecording addUserPropertiesItem(ScreenRecordingUserProperty userPropertiesItem) {
    if (this.userProperties == null) {
      this.userProperties = new ArrayList<>();
    }
    this.userProperties.add(userPropertiesItem);
    return this;
  }

   /**
   * Get userProperties
   * @return userProperties
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ScreenRecordingUserProperty> getUserProperties() {
    return userProperties;
  }


  public void setUserProperties(List<ScreenRecordingUserProperty> userProperties) {
    this.userProperties = userProperties;
  }


  public ScreenRecording utmCampaign(String utmCampaign) {
    
    this.utmCampaign = utmCampaign;
    return this;
  }

   /**
   * UTM Campaign
   * @return utmCampaign
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "UTM Campaign")

  public String getUtmCampaign() {
    return utmCampaign;
  }


  public void setUtmCampaign(String utmCampaign) {
    this.utmCampaign = utmCampaign;
  }


  public ScreenRecording utmSource(String utmSource) {
    
    this.utmSource = utmSource;
    return this;
  }

   /**
   * UTM Source
   * @return utmSource
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "UTM Source")

  public String getUtmSource() {
    return utmSource;
  }


  public void setUtmSource(String utmSource) {
    this.utmSource = utmSource;
  }


  public ScreenRecording visitorFirstSeen(String visitorFirstSeen) {
    
    this.visitorFirstSeen = visitorFirstSeen;
    return this;
  }

   /**
   * Timestamp this visitor was first seen
   * @return visitorFirstSeen
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Timestamp this visitor was first seen")

  public String getVisitorFirstSeen() {
    return visitorFirstSeen;
  }


  public void setVisitorFirstSeen(String visitorFirstSeen) {
    this.visitorFirstSeen = visitorFirstSeen;
  }


  public ScreenRecording visitorNumber(Integer visitorNumber) {
    
    this.visitorNumber = visitorNumber;
    return this;
  }

   /**
   * Get visitorNumber
   * @return visitorNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getVisitorNumber() {
    return visitorNumber;
  }


  public void setVisitorNumber(Integer visitorNumber) {
    this.visitorNumber = visitorNumber;
  }


  public ScreenRecording watched(Boolean watched) {
    
    this.watched = watched;
    return this;
  }

   /**
   * Get watched
   * @return watched
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getWatched() {
    return watched;
  }


  public void setWatched(Boolean watched) {
    this.watched = watched;
  }


  public ScreenRecording windowHeight(Integer windowHeight) {
    
    this.windowHeight = windowHeight;
    return this;
  }

   /**
   * Get windowHeight
   * @return windowHeight
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getWindowHeight() {
    return windowHeight;
  }


  public void setWindowHeight(Integer windowHeight) {
    this.windowHeight = windowHeight;
  }


  public ScreenRecording windowWidth(Integer windowWidth) {
    
    this.windowWidth = windowWidth;
    return this;
  }

   /**
   * Get windowWidth
   * @return windowWidth
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getWindowWidth() {
    return windowWidth;
  }


  public void setWindowWidth(Integer windowWidth) {
    this.windowWidth = windowWidth;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ScreenRecording screenRecording = (ScreenRecording) o;
    return Objects.equals(this.adPlatform, screenRecording.adPlatform) &&
        Objects.equals(this.analyticsClientOid, screenRecording.analyticsClientOid) &&
        Objects.equals(this.analyticsSessionDts, screenRecording.analyticsSessionDts) &&
        Objects.equals(this.analyticsSessionOid, screenRecording.analyticsSessionOid) &&
        Objects.equals(this.communicationsCampaignName, screenRecording.communicationsCampaignName) &&
        Objects.equals(this.communicationsCampaignUuid, screenRecording.communicationsCampaignUuid) &&
        Objects.equals(this.communicationsEmailSubject, screenRecording.communicationsEmailSubject) &&
        Objects.equals(this.communicationsEmailUuid, screenRecording.communicationsEmailUuid) &&
        Objects.equals(this.communicationsFlowName, screenRecording.communicationsFlowName) &&
        Objects.equals(this.communicationsFlowUuid, screenRecording.communicationsFlowUuid) &&
        Objects.equals(this.email, screenRecording.email) &&
        Objects.equals(this.emailDomain, screenRecording.emailDomain) &&
        Objects.equals(this.endTimestamp, screenRecording.endTimestamp) &&
        Objects.equals(this.espCustomerUuid, screenRecording.espCustomerUuid) &&
        Objects.equals(this.eventsGzSize, screenRecording.eventsGzSize) &&
        Objects.equals(this.eventsJsonKey, screenRecording.eventsJsonKey) &&
        Objects.equals(this.favorite, screenRecording.favorite) &&
        Objects.equals(this.favorites, screenRecording.favorites) &&
        Objects.equals(this.geolocation, screenRecording.geolocation) &&
        Objects.equals(this.geolocationCountry, screenRecording.geolocationCountry) &&
        Objects.equals(this.geolocationState, screenRecording.geolocationState) &&
        Objects.equals(this.languageIsoCode, screenRecording.languageIsoCode) &&
        Objects.equals(this.merchantId, screenRecording.merchantId) &&
        Objects.equals(this.merchantNotes, screenRecording.merchantNotes) &&
        Objects.equals(this.missingExternalTracking, screenRecording.missingExternalTracking) &&
        Objects.equals(this.orderId, screenRecording.orderId) &&
        Objects.equals(this.pageViewCount, screenRecording.pageViewCount) &&
        Objects.equals(this.pageViews, screenRecording.pageViews) &&
        Objects.equals(this.preferredLanguage, screenRecording.preferredLanguage) &&
        Objects.equals(this.referrerDomain, screenRecording.referrerDomain) &&
        Objects.equals(this.rrwebVersion, screenRecording.rrwebVersion) &&
        Objects.equals(this.screenRecordingUuid, screenRecording.screenRecordingUuid) &&
        Objects.equals(this.signedDownloadUrl, screenRecording.signedDownloadUrl) &&
        Objects.equals(this.startTimestamp, screenRecording.startTimestamp) &&
        Objects.equals(this.storefrontOids, screenRecording.storefrontOids) &&
        Objects.equals(this.storefronts, screenRecording.storefronts) &&
        Objects.equals(this.tags, screenRecording.tags) &&
        Objects.equals(this.timeOnSite, screenRecording.timeOnSite) &&
        Objects.equals(this.ucacid, screenRecording.ucacid) &&
        Objects.equals(this.userAgent, screenRecording.userAgent) &&
        Objects.equals(this.userAgentRaw, screenRecording.userAgentRaw) &&
        Objects.equals(this.userIp, screenRecording.userIp) &&
        Objects.equals(this.userProperties, screenRecording.userProperties) &&
        Objects.equals(this.utmCampaign, screenRecording.utmCampaign) &&
        Objects.equals(this.utmSource, screenRecording.utmSource) &&
        Objects.equals(this.visitorFirstSeen, screenRecording.visitorFirstSeen) &&
        Objects.equals(this.visitorNumber, screenRecording.visitorNumber) &&
        Objects.equals(this.watched, screenRecording.watched) &&
        Objects.equals(this.windowHeight, screenRecording.windowHeight) &&
        Objects.equals(this.windowWidth, screenRecording.windowWidth);
  }

  @Override
  public int hashCode() {
    return Objects.hash(adPlatform, analyticsClientOid, analyticsSessionDts, analyticsSessionOid, communicationsCampaignName, communicationsCampaignUuid, communicationsEmailSubject, communicationsEmailUuid, communicationsFlowName, communicationsFlowUuid, email, emailDomain, endTimestamp, espCustomerUuid, eventsGzSize, eventsJsonKey, favorite, favorites, geolocation, geolocationCountry, geolocationState, languageIsoCode, merchantId, merchantNotes, missingExternalTracking, orderId, pageViewCount, pageViews, preferredLanguage, referrerDomain, rrwebVersion, screenRecordingUuid, signedDownloadUrl, startTimestamp, storefrontOids, storefronts, tags, timeOnSite, ucacid, userAgent, userAgentRaw, userIp, userProperties, utmCampaign, utmSource, visitorFirstSeen, visitorNumber, watched, windowHeight, windowWidth);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ScreenRecording {\n");
    sb.append("    adPlatform: ").append(toIndentedString(adPlatform)).append("\n");
    sb.append("    analyticsClientOid: ").append(toIndentedString(analyticsClientOid)).append("\n");
    sb.append("    analyticsSessionDts: ").append(toIndentedString(analyticsSessionDts)).append("\n");
    sb.append("    analyticsSessionOid: ").append(toIndentedString(analyticsSessionOid)).append("\n");
    sb.append("    communicationsCampaignName: ").append(toIndentedString(communicationsCampaignName)).append("\n");
    sb.append("    communicationsCampaignUuid: ").append(toIndentedString(communicationsCampaignUuid)).append("\n");
    sb.append("    communicationsEmailSubject: ").append(toIndentedString(communicationsEmailSubject)).append("\n");
    sb.append("    communicationsEmailUuid: ").append(toIndentedString(communicationsEmailUuid)).append("\n");
    sb.append("    communicationsFlowName: ").append(toIndentedString(communicationsFlowName)).append("\n");
    sb.append("    communicationsFlowUuid: ").append(toIndentedString(communicationsFlowUuid)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    emailDomain: ").append(toIndentedString(emailDomain)).append("\n");
    sb.append("    endTimestamp: ").append(toIndentedString(endTimestamp)).append("\n");
    sb.append("    espCustomerUuid: ").append(toIndentedString(espCustomerUuid)).append("\n");
    sb.append("    eventsGzSize: ").append(toIndentedString(eventsGzSize)).append("\n");
    sb.append("    eventsJsonKey: ").append(toIndentedString(eventsJsonKey)).append("\n");
    sb.append("    favorite: ").append(toIndentedString(favorite)).append("\n");
    sb.append("    favorites: ").append(toIndentedString(favorites)).append("\n");
    sb.append("    geolocation: ").append(toIndentedString(geolocation)).append("\n");
    sb.append("    geolocationCountry: ").append(toIndentedString(geolocationCountry)).append("\n");
    sb.append("    geolocationState: ").append(toIndentedString(geolocationState)).append("\n");
    sb.append("    languageIsoCode: ").append(toIndentedString(languageIsoCode)).append("\n");
    sb.append("    merchantId: ").append(toIndentedString(merchantId)).append("\n");
    sb.append("    merchantNotes: ").append(toIndentedString(merchantNotes)).append("\n");
    sb.append("    missingExternalTracking: ").append(toIndentedString(missingExternalTracking)).append("\n");
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    pageViewCount: ").append(toIndentedString(pageViewCount)).append("\n");
    sb.append("    pageViews: ").append(toIndentedString(pageViews)).append("\n");
    sb.append("    preferredLanguage: ").append(toIndentedString(preferredLanguage)).append("\n");
    sb.append("    referrerDomain: ").append(toIndentedString(referrerDomain)).append("\n");
    sb.append("    rrwebVersion: ").append(toIndentedString(rrwebVersion)).append("\n");
    sb.append("    screenRecordingUuid: ").append(toIndentedString(screenRecordingUuid)).append("\n");
    sb.append("    signedDownloadUrl: ").append(toIndentedString(signedDownloadUrl)).append("\n");
    sb.append("    startTimestamp: ").append(toIndentedString(startTimestamp)).append("\n");
    sb.append("    storefrontOids: ").append(toIndentedString(storefrontOids)).append("\n");
    sb.append("    storefronts: ").append(toIndentedString(storefronts)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    timeOnSite: ").append(toIndentedString(timeOnSite)).append("\n");
    sb.append("    ucacid: ").append(toIndentedString(ucacid)).append("\n");
    sb.append("    userAgent: ").append(toIndentedString(userAgent)).append("\n");
    sb.append("    userAgentRaw: ").append(toIndentedString(userAgentRaw)).append("\n");
    sb.append("    userIp: ").append(toIndentedString(userIp)).append("\n");
    sb.append("    userProperties: ").append(toIndentedString(userProperties)).append("\n");
    sb.append("    utmCampaign: ").append(toIndentedString(utmCampaign)).append("\n");
    sb.append("    utmSource: ").append(toIndentedString(utmSource)).append("\n");
    sb.append("    visitorFirstSeen: ").append(toIndentedString(visitorFirstSeen)).append("\n");
    sb.append("    visitorNumber: ").append(toIndentedString(visitorNumber)).append("\n");
    sb.append("    watched: ").append(toIndentedString(watched)).append("\n");
    sb.append("    windowHeight: ").append(toIndentedString(windowHeight)).append("\n");
    sb.append("    windowWidth: ").append(toIndentedString(windowWidth)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ad_platform");
    openapiFields.add("analytics_client_oid");
    openapiFields.add("analytics_session_dts");
    openapiFields.add("analytics_session_oid");
    openapiFields.add("communications_campaign_name");
    openapiFields.add("communications_campaign_uuid");
    openapiFields.add("communications_email_subject");
    openapiFields.add("communications_email_uuid");
    openapiFields.add("communications_flow_name");
    openapiFields.add("communications_flow_uuid");
    openapiFields.add("email");
    openapiFields.add("email_domain");
    openapiFields.add("end_timestamp");
    openapiFields.add("esp_customer_uuid");
    openapiFields.add("events_gz_size");
    openapiFields.add("events_json_key");
    openapiFields.add("favorite");
    openapiFields.add("favorites");
    openapiFields.add("geolocation");
    openapiFields.add("geolocation_country");
    openapiFields.add("geolocation_state");
    openapiFields.add("language_iso_code");
    openapiFields.add("merchant_id");
    openapiFields.add("merchant_notes");
    openapiFields.add("missing_external_tracking");
    openapiFields.add("order_id");
    openapiFields.add("page_view_count");
    openapiFields.add("page_views");
    openapiFields.add("preferred_language");
    openapiFields.add("referrer_domain");
    openapiFields.add("rrweb_version");
    openapiFields.add("screen_recording_uuid");
    openapiFields.add("signed_download_url");
    openapiFields.add("start_timestamp");
    openapiFields.add("storefront_oids");
    openapiFields.add("storefronts");
    openapiFields.add("tags");
    openapiFields.add("time_on_site");
    openapiFields.add("ucacid");
    openapiFields.add("user_agent");
    openapiFields.add("user_agent_raw");
    openapiFields.add("user_ip");
    openapiFields.add("user_properties");
    openapiFields.add("utm_campaign");
    openapiFields.add("utm_source");
    openapiFields.add("visitor_first_seen");
    openapiFields.add("visitor_number");
    openapiFields.add("watched");
    openapiFields.add("window_height");
    openapiFields.add("window_width");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ScreenRecording
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (ScreenRecording.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in ScreenRecording is not found in the empty JSON string", ScreenRecording.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!ScreenRecording.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ScreenRecording` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      // validate the optional field `ad_platform`
      if (jsonObj.getAsJsonObject("ad_platform") != null) {
        ScreenRecordingAdPlatform.validateJsonObject(jsonObj.getAsJsonObject("ad_platform"));
      }
      if (jsonObj.get("communications_campaign_name") != null && !jsonObj.get("communications_campaign_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `communications_campaign_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("communications_campaign_name").toString()));
      }
      if (jsonObj.get("communications_campaign_uuid") != null && !jsonObj.get("communications_campaign_uuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `communications_campaign_uuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("communications_campaign_uuid").toString()));
      }
      if (jsonObj.get("communications_email_subject") != null && !jsonObj.get("communications_email_subject").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `communications_email_subject` to be a primitive type in the JSON string but got `%s`", jsonObj.get("communications_email_subject").toString()));
      }
      if (jsonObj.get("communications_email_uuid") != null && !jsonObj.get("communications_email_uuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `communications_email_uuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("communications_email_uuid").toString()));
      }
      if (jsonObj.get("communications_flow_name") != null && !jsonObj.get("communications_flow_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `communications_flow_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("communications_flow_name").toString()));
      }
      if (jsonObj.get("communications_flow_uuid") != null && !jsonObj.get("communications_flow_uuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `communications_flow_uuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("communications_flow_uuid").toString()));
      }
      if (jsonObj.get("email") != null && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if (jsonObj.get("email_domain") != null && !jsonObj.get("email_domain").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email_domain` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email_domain").toString()));
      }
      if (jsonObj.get("end_timestamp") != null && !jsonObj.get("end_timestamp").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `end_timestamp` to be a primitive type in the JSON string but got `%s`", jsonObj.get("end_timestamp").toString()));
      }
      if (jsonObj.get("esp_customer_uuid") != null && !jsonObj.get("esp_customer_uuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `esp_customer_uuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("esp_customer_uuid").toString()));
      }
      if (jsonObj.get("events_json_key") != null && !jsonObj.get("events_json_key").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `events_json_key` to be a primitive type in the JSON string but got `%s`", jsonObj.get("events_json_key").toString()));
      }
      // ensure the json data is an array
      if (jsonObj.get("favorites") != null && !jsonObj.get("favorites").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `favorites` to be an array in the JSON string but got `%s`", jsonObj.get("favorites").toString()));
      }
      // validate the optional field `geolocation`
      if (jsonObj.getAsJsonObject("geolocation") != null) {
        GeoPoint.validateJsonObject(jsonObj.getAsJsonObject("geolocation"));
      }
      if (jsonObj.get("geolocation_country") != null && !jsonObj.get("geolocation_country").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `geolocation_country` to be a primitive type in the JSON string but got `%s`", jsonObj.get("geolocation_country").toString()));
      }
      if (jsonObj.get("geolocation_state") != null && !jsonObj.get("geolocation_state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `geolocation_state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("geolocation_state").toString()));
      }
      if (jsonObj.get("language_iso_code") != null && !jsonObj.get("language_iso_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `language_iso_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("language_iso_code").toString()));
      }
      if (jsonObj.get("merchant_id") != null && !jsonObj.get("merchant_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `merchant_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("merchant_id").toString()));
      }
      if (jsonObj.get("merchant_notes") != null && !jsonObj.get("merchant_notes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `merchant_notes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("merchant_notes").toString()));
      }
      if (jsonObj.get("order_id") != null && !jsonObj.get("order_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `order_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("order_id").toString()));
      }
      JsonArray jsonArraypageViews = jsonObj.getAsJsonArray("page_views");
      if (jsonArraypageViews != null) {
        // ensure the json data is an array
        if (!jsonObj.get("page_views").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `page_views` to be an array in the JSON string but got `%s`", jsonObj.get("page_views").toString()));
        }

        // validate the optional field `page_views` (array)
        for (int i = 0; i < jsonArraypageViews.size(); i++) {
          ScreenRecordingPageView.validateJsonObject(jsonArraypageViews.get(i).getAsJsonObject());
        };
      }
      if (jsonObj.get("preferred_language") != null && !jsonObj.get("preferred_language").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `preferred_language` to be a primitive type in the JSON string but got `%s`", jsonObj.get("preferred_language").toString()));
      }
      if (jsonObj.get("referrer_domain") != null && !jsonObj.get("referrer_domain").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `referrer_domain` to be a primitive type in the JSON string but got `%s`", jsonObj.get("referrer_domain").toString()));
      }
      if (jsonObj.get("rrweb_version") != null && !jsonObj.get("rrweb_version").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `rrweb_version` to be a primitive type in the JSON string but got `%s`", jsonObj.get("rrweb_version").toString()));
      }
      if (jsonObj.get("screen_recording_uuid") != null && !jsonObj.get("screen_recording_uuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `screen_recording_uuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("screen_recording_uuid").toString()));
      }
      if (jsonObj.get("signed_download_url") != null && !jsonObj.get("signed_download_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `signed_download_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("signed_download_url").toString()));
      }
      if (jsonObj.get("start_timestamp") != null && !jsonObj.get("start_timestamp").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `start_timestamp` to be a primitive type in the JSON string but got `%s`", jsonObj.get("start_timestamp").toString()));
      }
      // ensure the json data is an array
      if (jsonObj.get("storefront_oids") != null && !jsonObj.get("storefront_oids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `storefront_oids` to be an array in the JSON string but got `%s`", jsonObj.get("storefront_oids").toString()));
      }
      JsonArray jsonArraystorefronts = jsonObj.getAsJsonArray("storefronts");
      if (jsonArraystorefronts != null) {
        // ensure the json data is an array
        if (!jsonObj.get("storefronts").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `storefronts` to be an array in the JSON string but got `%s`", jsonObj.get("storefronts").toString()));
        }

        // validate the optional field `storefronts` (array)
        for (int i = 0; i < jsonArraystorefronts.size(); i++) {
          ScreenRecordingStoreFront.validateJsonObject(jsonArraystorefronts.get(i).getAsJsonObject());
        };
      }
      // ensure the json data is an array
      if (jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `tags` to be an array in the JSON string but got `%s`", jsonObj.get("tags").toString()));
      }
      if (jsonObj.get("ucacid") != null && !jsonObj.get("ucacid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ucacid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ucacid").toString()));
      }
      // validate the optional field `user_agent`
      if (jsonObj.getAsJsonObject("user_agent") != null) {
        ScreenRecordingUserAgent.validateJsonObject(jsonObj.getAsJsonObject("user_agent"));
      }
      if (jsonObj.get("user_agent_raw") != null && !jsonObj.get("user_agent_raw").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `user_agent_raw` to be a primitive type in the JSON string but got `%s`", jsonObj.get("user_agent_raw").toString()));
      }
      if (jsonObj.get("user_ip") != null && !jsonObj.get("user_ip").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `user_ip` to be a primitive type in the JSON string but got `%s`", jsonObj.get("user_ip").toString()));
      }
      JsonArray jsonArrayuserProperties = jsonObj.getAsJsonArray("user_properties");
      if (jsonArrayuserProperties != null) {
        // ensure the json data is an array
        if (!jsonObj.get("user_properties").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `user_properties` to be an array in the JSON string but got `%s`", jsonObj.get("user_properties").toString()));
        }

        // validate the optional field `user_properties` (array)
        for (int i = 0; i < jsonArrayuserProperties.size(); i++) {
          ScreenRecordingUserProperty.validateJsonObject(jsonArrayuserProperties.get(i).getAsJsonObject());
        };
      }
      if (jsonObj.get("utm_campaign") != null && !jsonObj.get("utm_campaign").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `utm_campaign` to be a primitive type in the JSON string but got `%s`", jsonObj.get("utm_campaign").toString()));
      }
      if (jsonObj.get("utm_source") != null && !jsonObj.get("utm_source").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `utm_source` to be a primitive type in the JSON string but got `%s`", jsonObj.get("utm_source").toString()));
      }
      if (jsonObj.get("visitor_first_seen") != null && !jsonObj.get("visitor_first_seen").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `visitor_first_seen` to be a primitive type in the JSON string but got `%s`", jsonObj.get("visitor_first_seen").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ScreenRecording.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ScreenRecording' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ScreenRecording> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ScreenRecording.class));

       return (TypeAdapter<T>) new TypeAdapter<ScreenRecording>() {
           @Override
           public void write(JsonWriter out, ScreenRecording value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ScreenRecording read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ScreenRecording given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ScreenRecording
  * @throws IOException if the JSON string is invalid with respect to ScreenRecording
  */
  public static ScreenRecording fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ScreenRecording.class);
  }

 /**
  * Convert an instance of ScreenRecording to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

