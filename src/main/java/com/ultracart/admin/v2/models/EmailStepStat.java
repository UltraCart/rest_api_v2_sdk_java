/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * EmailStepStat
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-07-18T13:33:29.229-04:00[America/Indianapolis]")
public class EmailStepStat {
  public static final String SERIALIZED_NAME_LEFT_CONVERSION_COUNT = "left_conversion_count";
  @SerializedName(SERIALIZED_NAME_LEFT_CONVERSION_COUNT)
  private Integer leftConversionCount;

  public static final String SERIALIZED_NAME_LEFT_CONVERSION_COUNT_FORMATTED = "left_conversion_count_formatted";
  @SerializedName(SERIALIZED_NAME_LEFT_CONVERSION_COUNT_FORMATTED)
  private String leftConversionCountFormatted;

  public static final String SERIALIZED_NAME_LEFT_CUSTOMER_COUNT = "left_customer_count";
  @SerializedName(SERIALIZED_NAME_LEFT_CUSTOMER_COUNT)
  private Integer leftCustomerCount;

  public static final String SERIALIZED_NAME_LEFT_CUSTOMER_COUNT_FORMATTED = "left_customer_count_formatted";
  @SerializedName(SERIALIZED_NAME_LEFT_CUSTOMER_COUNT_FORMATTED)
  private String leftCustomerCountFormatted;

  public static final String SERIALIZED_NAME_LEFT_ORDER_COUNT = "left_order_count";
  @SerializedName(SERIALIZED_NAME_LEFT_ORDER_COUNT)
  private Integer leftOrderCount;

  public static final String SERIALIZED_NAME_LEFT_ORDER_COUNT_FORMATTED = "left_order_count_formatted";
  @SerializedName(SERIALIZED_NAME_LEFT_ORDER_COUNT_FORMATTED)
  private String leftOrderCountFormatted;

  public static final String SERIALIZED_NAME_LEFT_PROFIT = "left_profit";
  @SerializedName(SERIALIZED_NAME_LEFT_PROFIT)
  private BigDecimal leftProfit;

  public static final String SERIALIZED_NAME_LEFT_PROFIT_FORMATTED = "left_profit_formatted";
  @SerializedName(SERIALIZED_NAME_LEFT_PROFIT_FORMATTED)
  private String leftProfitFormatted;

  public static final String SERIALIZED_NAME_LEFT_REVENUE = "left_revenue";
  @SerializedName(SERIALIZED_NAME_LEFT_REVENUE)
  private BigDecimal leftRevenue;

  public static final String SERIALIZED_NAME_LEFT_REVENUE_FORMATTED = "left_revenue_formatted";
  @SerializedName(SERIALIZED_NAME_LEFT_REVENUE_FORMATTED)
  private String leftRevenueFormatted;

  public static final String SERIALIZED_NAME_RIGHT_CONVERSION_COUNT = "right_conversion_count";
  @SerializedName(SERIALIZED_NAME_RIGHT_CONVERSION_COUNT)
  private Integer rightConversionCount;

  public static final String SERIALIZED_NAME_RIGHT_CONVERSION_COUNT_FORMATTED = "right_conversion_count_formatted";
  @SerializedName(SERIALIZED_NAME_RIGHT_CONVERSION_COUNT_FORMATTED)
  private String rightConversionCountFormatted;

  public static final String SERIALIZED_NAME_RIGHT_CUSTOMER_COUNT = "right_customer_count";
  @SerializedName(SERIALIZED_NAME_RIGHT_CUSTOMER_COUNT)
  private Integer rightCustomerCount;

  public static final String SERIALIZED_NAME_RIGHT_CUSTOMER_COUNT_FORMATTED = "right_customer_count_formatted";
  @SerializedName(SERIALIZED_NAME_RIGHT_CUSTOMER_COUNT_FORMATTED)
  private String rightCustomerCountFormatted;

  public static final String SERIALIZED_NAME_RIGHT_ORDER_COUNT = "right_order_count";
  @SerializedName(SERIALIZED_NAME_RIGHT_ORDER_COUNT)
  private Integer rightOrderCount;

  public static final String SERIALIZED_NAME_RIGHT_ORDER_COUNT_FORMATTED = "right_order_count_formatted";
  @SerializedName(SERIALIZED_NAME_RIGHT_ORDER_COUNT_FORMATTED)
  private String rightOrderCountFormatted;

  public static final String SERIALIZED_NAME_RIGHT_PROFIT = "right_profit";
  @SerializedName(SERIALIZED_NAME_RIGHT_PROFIT)
  private BigDecimal rightProfit;

  public static final String SERIALIZED_NAME_RIGHT_PROFIT_FORMATTED = "right_profit_formatted";
  @SerializedName(SERIALIZED_NAME_RIGHT_PROFIT_FORMATTED)
  private String rightProfitFormatted;

  public static final String SERIALIZED_NAME_RIGHT_REVENUE = "right_revenue";
  @SerializedName(SERIALIZED_NAME_RIGHT_REVENUE)
  private BigDecimal rightRevenue;

  public static final String SERIALIZED_NAME_RIGHT_REVENUE_FORMATTED = "right_revenue_formatted";
  @SerializedName(SERIALIZED_NAME_RIGHT_REVENUE_FORMATTED)
  private String rightRevenueFormatted;

  public EmailStepStat() { 
  }

  public EmailStepStat leftConversionCount(Integer leftConversionCount) {
    
    this.leftConversionCount = leftConversionCount;
    return this;
  }

   /**
   * conversion count (left/default side)
   * @return leftConversionCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "conversion count (left/default side)")

  public Integer getLeftConversionCount() {
    return leftConversionCount;
  }


  public void setLeftConversionCount(Integer leftConversionCount) {
    this.leftConversionCount = leftConversionCount;
  }


  public EmailStepStat leftConversionCountFormatted(String leftConversionCountFormatted) {
    
    this.leftConversionCountFormatted = leftConversionCountFormatted;
    return this;
  }

   /**
   * conversion count formatted (left/default side)
   * @return leftConversionCountFormatted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "conversion count formatted (left/default side)")

  public String getLeftConversionCountFormatted() {
    return leftConversionCountFormatted;
  }


  public void setLeftConversionCountFormatted(String leftConversionCountFormatted) {
    this.leftConversionCountFormatted = leftConversionCountFormatted;
  }


  public EmailStepStat leftCustomerCount(Integer leftCustomerCount) {
    
    this.leftCustomerCount = leftCustomerCount;
    return this;
  }

   /**
   * customer count (left/default side)
   * @return leftCustomerCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "customer count (left/default side)")

  public Integer getLeftCustomerCount() {
    return leftCustomerCount;
  }


  public void setLeftCustomerCount(Integer leftCustomerCount) {
    this.leftCustomerCount = leftCustomerCount;
  }


  public EmailStepStat leftCustomerCountFormatted(String leftCustomerCountFormatted) {
    
    this.leftCustomerCountFormatted = leftCustomerCountFormatted;
    return this;
  }

   /**
   * customer count formatted (left/default side)
   * @return leftCustomerCountFormatted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "customer count formatted (left/default side)")

  public String getLeftCustomerCountFormatted() {
    return leftCustomerCountFormatted;
  }


  public void setLeftCustomerCountFormatted(String leftCustomerCountFormatted) {
    this.leftCustomerCountFormatted = leftCustomerCountFormatted;
  }


  public EmailStepStat leftOrderCount(Integer leftOrderCount) {
    
    this.leftOrderCount = leftOrderCount;
    return this;
  }

   /**
   * order count (left/default side)
   * @return leftOrderCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "order count (left/default side)")

  public Integer getLeftOrderCount() {
    return leftOrderCount;
  }


  public void setLeftOrderCount(Integer leftOrderCount) {
    this.leftOrderCount = leftOrderCount;
  }


  public EmailStepStat leftOrderCountFormatted(String leftOrderCountFormatted) {
    
    this.leftOrderCountFormatted = leftOrderCountFormatted;
    return this;
  }

   /**
   * order count formatted (left/default side)
   * @return leftOrderCountFormatted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "order count formatted (left/default side)")

  public String getLeftOrderCountFormatted() {
    return leftOrderCountFormatted;
  }


  public void setLeftOrderCountFormatted(String leftOrderCountFormatted) {
    this.leftOrderCountFormatted = leftOrderCountFormatted;
  }


  public EmailStepStat leftProfit(BigDecimal leftProfit) {
    
    this.leftProfit = leftProfit;
    return this;
  }

   /**
   * profit (left/default side)
   * @return leftProfit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "profit (left/default side)")

  public BigDecimal getLeftProfit() {
    return leftProfit;
  }


  public void setLeftProfit(BigDecimal leftProfit) {
    this.leftProfit = leftProfit;
  }


  public EmailStepStat leftProfitFormatted(String leftProfitFormatted) {
    
    this.leftProfitFormatted = leftProfitFormatted;
    return this;
  }

   /**
   * profit formatted (left/default side)
   * @return leftProfitFormatted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "profit formatted (left/default side)")

  public String getLeftProfitFormatted() {
    return leftProfitFormatted;
  }


  public void setLeftProfitFormatted(String leftProfitFormatted) {
    this.leftProfitFormatted = leftProfitFormatted;
  }


  public EmailStepStat leftRevenue(BigDecimal leftRevenue) {
    
    this.leftRevenue = leftRevenue;
    return this;
  }

   /**
   * revenue (left/default side)
   * @return leftRevenue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "revenue (left/default side)")

  public BigDecimal getLeftRevenue() {
    return leftRevenue;
  }


  public void setLeftRevenue(BigDecimal leftRevenue) {
    this.leftRevenue = leftRevenue;
  }


  public EmailStepStat leftRevenueFormatted(String leftRevenueFormatted) {
    
    this.leftRevenueFormatted = leftRevenueFormatted;
    return this;
  }

   /**
   * revenue formatted (left/default side)
   * @return leftRevenueFormatted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "revenue formatted (left/default side)")

  public String getLeftRevenueFormatted() {
    return leftRevenueFormatted;
  }


  public void setLeftRevenueFormatted(String leftRevenueFormatted) {
    this.leftRevenueFormatted = leftRevenueFormatted;
  }


  public EmailStepStat rightConversionCount(Integer rightConversionCount) {
    
    this.rightConversionCount = rightConversionCount;
    return this;
  }

   /**
   * conversion count (right side)
   * @return rightConversionCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "conversion count (right side)")

  public Integer getRightConversionCount() {
    return rightConversionCount;
  }


  public void setRightConversionCount(Integer rightConversionCount) {
    this.rightConversionCount = rightConversionCount;
  }


  public EmailStepStat rightConversionCountFormatted(String rightConversionCountFormatted) {
    
    this.rightConversionCountFormatted = rightConversionCountFormatted;
    return this;
  }

   /**
   * conversion count formatted (right side)
   * @return rightConversionCountFormatted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "conversion count formatted (right side)")

  public String getRightConversionCountFormatted() {
    return rightConversionCountFormatted;
  }


  public void setRightConversionCountFormatted(String rightConversionCountFormatted) {
    this.rightConversionCountFormatted = rightConversionCountFormatted;
  }


  public EmailStepStat rightCustomerCount(Integer rightCustomerCount) {
    
    this.rightCustomerCount = rightCustomerCount;
    return this;
  }

   /**
   * customer count (right side)
   * @return rightCustomerCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "customer count (right side)")

  public Integer getRightCustomerCount() {
    return rightCustomerCount;
  }


  public void setRightCustomerCount(Integer rightCustomerCount) {
    this.rightCustomerCount = rightCustomerCount;
  }


  public EmailStepStat rightCustomerCountFormatted(String rightCustomerCountFormatted) {
    
    this.rightCustomerCountFormatted = rightCustomerCountFormatted;
    return this;
  }

   /**
   * customer count formatted (right side)
   * @return rightCustomerCountFormatted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "customer count formatted (right side)")

  public String getRightCustomerCountFormatted() {
    return rightCustomerCountFormatted;
  }


  public void setRightCustomerCountFormatted(String rightCustomerCountFormatted) {
    this.rightCustomerCountFormatted = rightCustomerCountFormatted;
  }


  public EmailStepStat rightOrderCount(Integer rightOrderCount) {
    
    this.rightOrderCount = rightOrderCount;
    return this;
  }

   /**
   * order count (right side)
   * @return rightOrderCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "order count (right side)")

  public Integer getRightOrderCount() {
    return rightOrderCount;
  }


  public void setRightOrderCount(Integer rightOrderCount) {
    this.rightOrderCount = rightOrderCount;
  }


  public EmailStepStat rightOrderCountFormatted(String rightOrderCountFormatted) {
    
    this.rightOrderCountFormatted = rightOrderCountFormatted;
    return this;
  }

   /**
   * order count formatted (right side)
   * @return rightOrderCountFormatted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "order count formatted (right side)")

  public String getRightOrderCountFormatted() {
    return rightOrderCountFormatted;
  }


  public void setRightOrderCountFormatted(String rightOrderCountFormatted) {
    this.rightOrderCountFormatted = rightOrderCountFormatted;
  }


  public EmailStepStat rightProfit(BigDecimal rightProfit) {
    
    this.rightProfit = rightProfit;
    return this;
  }

   /**
   * profit (right side)
   * @return rightProfit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "profit (right side)")

  public BigDecimal getRightProfit() {
    return rightProfit;
  }


  public void setRightProfit(BigDecimal rightProfit) {
    this.rightProfit = rightProfit;
  }


  public EmailStepStat rightProfitFormatted(String rightProfitFormatted) {
    
    this.rightProfitFormatted = rightProfitFormatted;
    return this;
  }

   /**
   * profit formatted (right side)
   * @return rightProfitFormatted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "profit formatted (right side)")

  public String getRightProfitFormatted() {
    return rightProfitFormatted;
  }


  public void setRightProfitFormatted(String rightProfitFormatted) {
    this.rightProfitFormatted = rightProfitFormatted;
  }


  public EmailStepStat rightRevenue(BigDecimal rightRevenue) {
    
    this.rightRevenue = rightRevenue;
    return this;
  }

   /**
   * revenue (right side)
   * @return rightRevenue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "revenue (right side)")

  public BigDecimal getRightRevenue() {
    return rightRevenue;
  }


  public void setRightRevenue(BigDecimal rightRevenue) {
    this.rightRevenue = rightRevenue;
  }


  public EmailStepStat rightRevenueFormatted(String rightRevenueFormatted) {
    
    this.rightRevenueFormatted = rightRevenueFormatted;
    return this;
  }

   /**
   * revenue formatted (right side)
   * @return rightRevenueFormatted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "revenue formatted (right side)")

  public String getRightRevenueFormatted() {
    return rightRevenueFormatted;
  }


  public void setRightRevenueFormatted(String rightRevenueFormatted) {
    this.rightRevenueFormatted = rightRevenueFormatted;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmailStepStat emailStepStat = (EmailStepStat) o;
    return Objects.equals(this.leftConversionCount, emailStepStat.leftConversionCount) &&
        Objects.equals(this.leftConversionCountFormatted, emailStepStat.leftConversionCountFormatted) &&
        Objects.equals(this.leftCustomerCount, emailStepStat.leftCustomerCount) &&
        Objects.equals(this.leftCustomerCountFormatted, emailStepStat.leftCustomerCountFormatted) &&
        Objects.equals(this.leftOrderCount, emailStepStat.leftOrderCount) &&
        Objects.equals(this.leftOrderCountFormatted, emailStepStat.leftOrderCountFormatted) &&
        Objects.equals(this.leftProfit, emailStepStat.leftProfit) &&
        Objects.equals(this.leftProfitFormatted, emailStepStat.leftProfitFormatted) &&
        Objects.equals(this.leftRevenue, emailStepStat.leftRevenue) &&
        Objects.equals(this.leftRevenueFormatted, emailStepStat.leftRevenueFormatted) &&
        Objects.equals(this.rightConversionCount, emailStepStat.rightConversionCount) &&
        Objects.equals(this.rightConversionCountFormatted, emailStepStat.rightConversionCountFormatted) &&
        Objects.equals(this.rightCustomerCount, emailStepStat.rightCustomerCount) &&
        Objects.equals(this.rightCustomerCountFormatted, emailStepStat.rightCustomerCountFormatted) &&
        Objects.equals(this.rightOrderCount, emailStepStat.rightOrderCount) &&
        Objects.equals(this.rightOrderCountFormatted, emailStepStat.rightOrderCountFormatted) &&
        Objects.equals(this.rightProfit, emailStepStat.rightProfit) &&
        Objects.equals(this.rightProfitFormatted, emailStepStat.rightProfitFormatted) &&
        Objects.equals(this.rightRevenue, emailStepStat.rightRevenue) &&
        Objects.equals(this.rightRevenueFormatted, emailStepStat.rightRevenueFormatted);
  }

  @Override
  public int hashCode() {
    return Objects.hash(leftConversionCount, leftConversionCountFormatted, leftCustomerCount, leftCustomerCountFormatted, leftOrderCount, leftOrderCountFormatted, leftProfit, leftProfitFormatted, leftRevenue, leftRevenueFormatted, rightConversionCount, rightConversionCountFormatted, rightCustomerCount, rightCustomerCountFormatted, rightOrderCount, rightOrderCountFormatted, rightProfit, rightProfitFormatted, rightRevenue, rightRevenueFormatted);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmailStepStat {\n");
    sb.append("    leftConversionCount: ").append(toIndentedString(leftConversionCount)).append("\n");
    sb.append("    leftConversionCountFormatted: ").append(toIndentedString(leftConversionCountFormatted)).append("\n");
    sb.append("    leftCustomerCount: ").append(toIndentedString(leftCustomerCount)).append("\n");
    sb.append("    leftCustomerCountFormatted: ").append(toIndentedString(leftCustomerCountFormatted)).append("\n");
    sb.append("    leftOrderCount: ").append(toIndentedString(leftOrderCount)).append("\n");
    sb.append("    leftOrderCountFormatted: ").append(toIndentedString(leftOrderCountFormatted)).append("\n");
    sb.append("    leftProfit: ").append(toIndentedString(leftProfit)).append("\n");
    sb.append("    leftProfitFormatted: ").append(toIndentedString(leftProfitFormatted)).append("\n");
    sb.append("    leftRevenue: ").append(toIndentedString(leftRevenue)).append("\n");
    sb.append("    leftRevenueFormatted: ").append(toIndentedString(leftRevenueFormatted)).append("\n");
    sb.append("    rightConversionCount: ").append(toIndentedString(rightConversionCount)).append("\n");
    sb.append("    rightConversionCountFormatted: ").append(toIndentedString(rightConversionCountFormatted)).append("\n");
    sb.append("    rightCustomerCount: ").append(toIndentedString(rightCustomerCount)).append("\n");
    sb.append("    rightCustomerCountFormatted: ").append(toIndentedString(rightCustomerCountFormatted)).append("\n");
    sb.append("    rightOrderCount: ").append(toIndentedString(rightOrderCount)).append("\n");
    sb.append("    rightOrderCountFormatted: ").append(toIndentedString(rightOrderCountFormatted)).append("\n");
    sb.append("    rightProfit: ").append(toIndentedString(rightProfit)).append("\n");
    sb.append("    rightProfitFormatted: ").append(toIndentedString(rightProfitFormatted)).append("\n");
    sb.append("    rightRevenue: ").append(toIndentedString(rightRevenue)).append("\n");
    sb.append("    rightRevenueFormatted: ").append(toIndentedString(rightRevenueFormatted)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("left_conversion_count");
    openapiFields.add("left_conversion_count_formatted");
    openapiFields.add("left_customer_count");
    openapiFields.add("left_customer_count_formatted");
    openapiFields.add("left_order_count");
    openapiFields.add("left_order_count_formatted");
    openapiFields.add("left_profit");
    openapiFields.add("left_profit_formatted");
    openapiFields.add("left_revenue");
    openapiFields.add("left_revenue_formatted");
    openapiFields.add("right_conversion_count");
    openapiFields.add("right_conversion_count_formatted");
    openapiFields.add("right_customer_count");
    openapiFields.add("right_customer_count_formatted");
    openapiFields.add("right_order_count");
    openapiFields.add("right_order_count_formatted");
    openapiFields.add("right_profit");
    openapiFields.add("right_profit_formatted");
    openapiFields.add("right_revenue");
    openapiFields.add("right_revenue_formatted");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to EmailStepStat
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (EmailStepStat.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in EmailStepStat is not found in the empty JSON string", EmailStepStat.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!EmailStepStat.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EmailStepStat` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("left_conversion_count_formatted") != null && !jsonObj.get("left_conversion_count_formatted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `left_conversion_count_formatted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("left_conversion_count_formatted").toString()));
      }
      if (jsonObj.get("left_customer_count_formatted") != null && !jsonObj.get("left_customer_count_formatted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `left_customer_count_formatted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("left_customer_count_formatted").toString()));
      }
      if (jsonObj.get("left_order_count_formatted") != null && !jsonObj.get("left_order_count_formatted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `left_order_count_formatted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("left_order_count_formatted").toString()));
      }
      if (jsonObj.get("left_profit_formatted") != null && !jsonObj.get("left_profit_formatted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `left_profit_formatted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("left_profit_formatted").toString()));
      }
      if (jsonObj.get("left_revenue_formatted") != null && !jsonObj.get("left_revenue_formatted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `left_revenue_formatted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("left_revenue_formatted").toString()));
      }
      if (jsonObj.get("right_conversion_count_formatted") != null && !jsonObj.get("right_conversion_count_formatted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `right_conversion_count_formatted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("right_conversion_count_formatted").toString()));
      }
      if (jsonObj.get("right_customer_count_formatted") != null && !jsonObj.get("right_customer_count_formatted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `right_customer_count_formatted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("right_customer_count_formatted").toString()));
      }
      if (jsonObj.get("right_order_count_formatted") != null && !jsonObj.get("right_order_count_formatted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `right_order_count_formatted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("right_order_count_formatted").toString()));
      }
      if (jsonObj.get("right_profit_formatted") != null && !jsonObj.get("right_profit_formatted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `right_profit_formatted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("right_profit_formatted").toString()));
      }
      if (jsonObj.get("right_revenue_formatted") != null && !jsonObj.get("right_revenue_formatted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `right_revenue_formatted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("right_revenue_formatted").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EmailStepStat.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EmailStepStat' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EmailStepStat> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EmailStepStat.class));

       return (TypeAdapter<T>) new TypeAdapter<EmailStepStat>() {
           @Override
           public void write(JsonWriter out, EmailStepStat value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EmailStepStat read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of EmailStepStat given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of EmailStepStat
  * @throws IOException if the JSON string is invalid with respect to EmailStepStat
  */
  public static EmailStepStat fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EmailStepStat.class);
  }

 /**
  * Convert an instance of EmailStepStat to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

