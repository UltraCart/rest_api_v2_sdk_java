/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * EmailCommseqStat
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-10-17T14:45:06.636-04:00[America/Indianapolis]")
public class EmailCommseqStat {
  public static final String SERIALIZED_NAME_CLICK_COUNT = "click_count";
  @SerializedName(SERIALIZED_NAME_CLICK_COUNT)
  private Integer clickCount;

  public static final String SERIALIZED_NAME_CLICK_COUNT_FORMATTED = "click_count_formatted";
  @SerializedName(SERIALIZED_NAME_CLICK_COUNT_FORMATTED)
  private String clickCountFormatted;

  public static final String SERIALIZED_NAME_CONVERSION_COUNT = "conversion_count";
  @SerializedName(SERIALIZED_NAME_CONVERSION_COUNT)
  private Integer conversionCount;

  public static final String SERIALIZED_NAME_CONVERSION_COUNT_FORMATTED = "conversion_count_formatted";
  @SerializedName(SERIALIZED_NAME_CONVERSION_COUNT_FORMATTED)
  private String conversionCountFormatted;

  public static final String SERIALIZED_NAME_DELIVERED_COUNT = "delivered_count";
  @SerializedName(SERIALIZED_NAME_DELIVERED_COUNT)
  private Integer deliveredCount;

  public static final String SERIALIZED_NAME_DELIVERED_COUNT_FORMATTED = "delivered_count_formatted";
  @SerializedName(SERIALIZED_NAME_DELIVERED_COUNT_FORMATTED)
  private String deliveredCountFormatted;

  public static final String SERIALIZED_NAME_EMAIL_COMMUNICATION_SEQUENCE_UUID = "email_communication_sequence_uuid";
  @SerializedName(SERIALIZED_NAME_EMAIL_COMMUNICATION_SEQUENCE_UUID)
  private String emailCommunicationSequenceUuid;

  public static final String SERIALIZED_NAME_FINISHED_COUNT = "finished_count";
  @SerializedName(SERIALIZED_NAME_FINISHED_COUNT)
  private Integer finishedCount;

  public static final String SERIALIZED_NAME_FINISHED_COUNT_FORMATTED = "finished_count_formatted";
  @SerializedName(SERIALIZED_NAME_FINISHED_COUNT_FORMATTED)
  private String finishedCountFormatted;

  public static final String SERIALIZED_NAME_IN_PROGRESS_COUNT = "in_progress_count";
  @SerializedName(SERIALIZED_NAME_IN_PROGRESS_COUNT)
  private Integer inProgressCount;

  public static final String SERIALIZED_NAME_IN_PROGRESS_COUNT_FORMATTED = "in_progress_count_formatted";
  @SerializedName(SERIALIZED_NAME_IN_PROGRESS_COUNT_FORMATTED)
  private String inProgressCountFormatted;

  public static final String SERIALIZED_NAME_KICKBOX_COUNT = "kickbox_count";
  @SerializedName(SERIALIZED_NAME_KICKBOX_COUNT)
  private Integer kickboxCount;

  public static final String SERIALIZED_NAME_KICKBOX_COUNT_FORMATTED = "kickbox_count_formatted";
  @SerializedName(SERIALIZED_NAME_KICKBOX_COUNT_FORMATTED)
  private String kickboxCountFormatted;

  public static final String SERIALIZED_NAME_MERCHANT_ID = "merchant_id";
  @SerializedName(SERIALIZED_NAME_MERCHANT_ID)
  private String merchantId;

  public static final String SERIALIZED_NAME_OPEN_COUNT = "open_count";
  @SerializedName(SERIALIZED_NAME_OPEN_COUNT)
  private Integer openCount;

  public static final String SERIALIZED_NAME_OPEN_COUNT_FORMATTED = "open_count_formatted";
  @SerializedName(SERIALIZED_NAME_OPEN_COUNT_FORMATTED)
  private String openCountFormatted;

  public static final String SERIALIZED_NAME_ORDER_COUNT = "order_count";
  @SerializedName(SERIALIZED_NAME_ORDER_COUNT)
  private Integer orderCount;

  public static final String SERIALIZED_NAME_ORDER_COUNT_FORMATTED = "order_count_formatted";
  @SerializedName(SERIALIZED_NAME_ORDER_COUNT_FORMATTED)
  private String orderCountFormatted;

  public static final String SERIALIZED_NAME_PERMANENT_BOUNCE_COUNT = "permanent_bounce_count";
  @SerializedName(SERIALIZED_NAME_PERMANENT_BOUNCE_COUNT)
  private Integer permanentBounceCount;

  public static final String SERIALIZED_NAME_PERMANENT_BOUNCE_COUNT_FORMATTED = "permanent_bounce_count_formatted";
  @SerializedName(SERIALIZED_NAME_PERMANENT_BOUNCE_COUNT_FORMATTED)
  private String permanentBounceCountFormatted;

  public static final String SERIALIZED_NAME_PROFIT = "profit";
  @SerializedName(SERIALIZED_NAME_PROFIT)
  private BigDecimal profit;

  public static final String SERIALIZED_NAME_PROFIT_FORMATTED = "profit_formatted";
  @SerializedName(SERIALIZED_NAME_PROFIT_FORMATTED)
  private String profitFormatted;

  public static final String SERIALIZED_NAME_REVENUE = "revenue";
  @SerializedName(SERIALIZED_NAME_REVENUE)
  private BigDecimal revenue;

  public static final String SERIALIZED_NAME_REVENUE_FORMATTED = "revenue_formatted";
  @SerializedName(SERIALIZED_NAME_REVENUE_FORMATTED)
  private String revenueFormatted;

  public static final String SERIALIZED_NAME_SEND_COUNT = "send_count";
  @SerializedName(SERIALIZED_NAME_SEND_COUNT)
  private Integer sendCount;

  public static final String SERIALIZED_NAME_SEND_COUNT_FORMATTED = "send_count_formatted";
  @SerializedName(SERIALIZED_NAME_SEND_COUNT_FORMATTED)
  private String sendCountFormatted;

  public static final String SERIALIZED_NAME_SKIPPED_COUNT = "skipped_count";
  @SerializedName(SERIALIZED_NAME_SKIPPED_COUNT)
  private Integer skippedCount;

  public static final String SERIALIZED_NAME_SKIPPED_COUNT_FORMATTED = "skipped_count_formatted";
  @SerializedName(SERIALIZED_NAME_SKIPPED_COUNT_FORMATTED)
  private String skippedCountFormatted;

  public static final String SERIALIZED_NAME_SPAM_COUNT = "spam_count";
  @SerializedName(SERIALIZED_NAME_SPAM_COUNT)
  private Integer spamCount;

  public static final String SERIALIZED_NAME_SPAM_COUNT_FORMATTED = "spam_count_formatted";
  @SerializedName(SERIALIZED_NAME_SPAM_COUNT_FORMATTED)
  private String spamCountFormatted;

  public static final String SERIALIZED_NAME_STARTED_COUNT = "started_count";
  @SerializedName(SERIALIZED_NAME_STARTED_COUNT)
  private Integer startedCount;

  public static final String SERIALIZED_NAME_STARTED_COUNT_FORMATTED = "started_count_formatted";
  @SerializedName(SERIALIZED_NAME_STARTED_COUNT_FORMATTED)
  private String startedCountFormatted;

  public static final String SERIALIZED_NAME_STOREFRONT_OID = "storefront_oid";
  @SerializedName(SERIALIZED_NAME_STOREFRONT_OID)
  private Integer storefrontOid;

  public static final String SERIALIZED_NAME_UNSUBSCRIBE_COUNT = "unsubscribe_count";
  @SerializedName(SERIALIZED_NAME_UNSUBSCRIBE_COUNT)
  private Integer unsubscribeCount;

  public static final String SERIALIZED_NAME_UNSUBSCRIBE_COUNT_FORMATTED = "unsubscribe_count_formatted";
  @SerializedName(SERIALIZED_NAME_UNSUBSCRIBE_COUNT_FORMATTED)
  private String unsubscribeCountFormatted;

  public static final String SERIALIZED_NAME_VIEW_COUNT = "view_count";
  @SerializedName(SERIALIZED_NAME_VIEW_COUNT)
  private Integer viewCount;

  public static final String SERIALIZED_NAME_VIEW_COUNT_FORMATTED = "view_count_formatted";
  @SerializedName(SERIALIZED_NAME_VIEW_COUNT_FORMATTED)
  private String viewCountFormatted;

  public EmailCommseqStat() { 
  }

  public EmailCommseqStat clickCount(Integer clickCount) {
    
    this.clickCount = clickCount;
    return this;
  }

   /**
   * Count of clicked emails
   * @return clickCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Count of clicked emails")

  public Integer getClickCount() {
    return clickCount;
  }


  public void setClickCount(Integer clickCount) {
    this.clickCount = clickCount;
  }


  public EmailCommseqStat clickCountFormatted(String clickCountFormatted) {
    
    this.clickCountFormatted = clickCountFormatted;
    return this;
  }

   /**
   * Count of clicked emails, formatted
   * @return clickCountFormatted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Count of clicked emails, formatted")

  public String getClickCountFormatted() {
    return clickCountFormatted;
  }


  public void setClickCountFormatted(String clickCountFormatted) {
    this.clickCountFormatted = clickCountFormatted;
  }


  public EmailCommseqStat conversionCount(Integer conversionCount) {
    
    this.conversionCount = conversionCount;
    return this;
  }

   /**
   * Count of conversion
   * @return conversionCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Count of conversion")

  public Integer getConversionCount() {
    return conversionCount;
  }


  public void setConversionCount(Integer conversionCount) {
    this.conversionCount = conversionCount;
  }


  public EmailCommseqStat conversionCountFormatted(String conversionCountFormatted) {
    
    this.conversionCountFormatted = conversionCountFormatted;
    return this;
  }

   /**
   * Count of conversions, formatted
   * @return conversionCountFormatted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Count of conversions, formatted")

  public String getConversionCountFormatted() {
    return conversionCountFormatted;
  }


  public void setConversionCountFormatted(String conversionCountFormatted) {
    this.conversionCountFormatted = conversionCountFormatted;
  }


  public EmailCommseqStat deliveredCount(Integer deliveredCount) {
    
    this.deliveredCount = deliveredCount;
    return this;
  }

   /**
   * Count of delivered emails
   * @return deliveredCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Count of delivered emails")

  public Integer getDeliveredCount() {
    return deliveredCount;
  }


  public void setDeliveredCount(Integer deliveredCount) {
    this.deliveredCount = deliveredCount;
  }


  public EmailCommseqStat deliveredCountFormatted(String deliveredCountFormatted) {
    
    this.deliveredCountFormatted = deliveredCountFormatted;
    return this;
  }

   /**
   * Count of delivered emails, formatted
   * @return deliveredCountFormatted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Count of delivered emails, formatted")

  public String getDeliveredCountFormatted() {
    return deliveredCountFormatted;
  }


  public void setDeliveredCountFormatted(String deliveredCountFormatted) {
    this.deliveredCountFormatted = deliveredCountFormatted;
  }


  public EmailCommseqStat emailCommunicationSequenceUuid(String emailCommunicationSequenceUuid) {
    
    this.emailCommunicationSequenceUuid = emailCommunicationSequenceUuid;
    return this;
  }

   /**
   * UUID associated with the communication sequence
   * @return emailCommunicationSequenceUuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "UUID associated with the communication sequence")

  public String getEmailCommunicationSequenceUuid() {
    return emailCommunicationSequenceUuid;
  }


  public void setEmailCommunicationSequenceUuid(String emailCommunicationSequenceUuid) {
    this.emailCommunicationSequenceUuid = emailCommunicationSequenceUuid;
  }


  public EmailCommseqStat finishedCount(Integer finishedCount) {
    
    this.finishedCount = finishedCount;
    return this;
  }

   /**
   * Count of customers that finished the sequence
   * @return finishedCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Count of customers that finished the sequence")

  public Integer getFinishedCount() {
    return finishedCount;
  }


  public void setFinishedCount(Integer finishedCount) {
    this.finishedCount = finishedCount;
  }


  public EmailCommseqStat finishedCountFormatted(String finishedCountFormatted) {
    
    this.finishedCountFormatted = finishedCountFormatted;
    return this;
  }

   /**
   * Count of customers that finished the sequence, formatted
   * @return finishedCountFormatted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Count of customers that finished the sequence, formatted")

  public String getFinishedCountFormatted() {
    return finishedCountFormatted;
  }


  public void setFinishedCountFormatted(String finishedCountFormatted) {
    this.finishedCountFormatted = finishedCountFormatted;
  }


  public EmailCommseqStat inProgressCount(Integer inProgressCount) {
    
    this.inProgressCount = inProgressCount;
    return this;
  }

   /**
   * Count of customers in progress
   * @return inProgressCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Count of customers in progress")

  public Integer getInProgressCount() {
    return inProgressCount;
  }


  public void setInProgressCount(Integer inProgressCount) {
    this.inProgressCount = inProgressCount;
  }


  public EmailCommseqStat inProgressCountFormatted(String inProgressCountFormatted) {
    
    this.inProgressCountFormatted = inProgressCountFormatted;
    return this;
  }

   /**
   * Count of customers in progress, formatted
   * @return inProgressCountFormatted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Count of customers in progress, formatted")

  public String getInProgressCountFormatted() {
    return inProgressCountFormatted;
  }


  public void setInProgressCountFormatted(String inProgressCountFormatted) {
    this.inProgressCountFormatted = inProgressCountFormatted;
  }


  public EmailCommseqStat kickboxCount(Integer kickboxCount) {
    
    this.kickboxCount = kickboxCount;
    return this;
  }

   /**
   * Count of emails kicked
   * @return kickboxCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Count of emails kicked")

  public Integer getKickboxCount() {
    return kickboxCount;
  }


  public void setKickboxCount(Integer kickboxCount) {
    this.kickboxCount = kickboxCount;
  }


  public EmailCommseqStat kickboxCountFormatted(String kickboxCountFormatted) {
    
    this.kickboxCountFormatted = kickboxCountFormatted;
    return this;
  }

   /**
   * Count of emails kicked, formatted
   * @return kickboxCountFormatted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Count of emails kicked, formatted")

  public String getKickboxCountFormatted() {
    return kickboxCountFormatted;
  }


  public void setKickboxCountFormatted(String kickboxCountFormatted) {
    this.kickboxCountFormatted = kickboxCountFormatted;
  }


  public EmailCommseqStat merchantId(String merchantId) {
    
    this.merchantId = merchantId;
    return this;
  }

   /**
   * Merchant ID
   * @return merchantId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Merchant ID")

  public String getMerchantId() {
    return merchantId;
  }


  public void setMerchantId(String merchantId) {
    this.merchantId = merchantId;
  }


  public EmailCommseqStat openCount(Integer openCount) {
    
    this.openCount = openCount;
    return this;
  }

   /**
   * Count of opened emails
   * @return openCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Count of opened emails")

  public Integer getOpenCount() {
    return openCount;
  }


  public void setOpenCount(Integer openCount) {
    this.openCount = openCount;
  }


  public EmailCommseqStat openCountFormatted(String openCountFormatted) {
    
    this.openCountFormatted = openCountFormatted;
    return this;
  }

   /**
   * Count of opened emails, formatted
   * @return openCountFormatted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Count of opened emails, formatted")

  public String getOpenCountFormatted() {
    return openCountFormatted;
  }


  public void setOpenCountFormatted(String openCountFormatted) {
    this.openCountFormatted = openCountFormatted;
  }


  public EmailCommseqStat orderCount(Integer orderCount) {
    
    this.orderCount = orderCount;
    return this;
  }

   /**
   * Count of orders
   * @return orderCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Count of orders")

  public Integer getOrderCount() {
    return orderCount;
  }


  public void setOrderCount(Integer orderCount) {
    this.orderCount = orderCount;
  }


  public EmailCommseqStat orderCountFormatted(String orderCountFormatted) {
    
    this.orderCountFormatted = orderCountFormatted;
    return this;
  }

   /**
   * Count of orders, formatted
   * @return orderCountFormatted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Count of orders, formatted")

  public String getOrderCountFormatted() {
    return orderCountFormatted;
  }


  public void setOrderCountFormatted(String orderCountFormatted) {
    this.orderCountFormatted = orderCountFormatted;
  }


  public EmailCommseqStat permanentBounceCount(Integer permanentBounceCount) {
    
    this.permanentBounceCount = permanentBounceCount;
    return this;
  }

   /**
   * Count of emails permanently bounced
   * @return permanentBounceCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Count of emails permanently bounced")

  public Integer getPermanentBounceCount() {
    return permanentBounceCount;
  }


  public void setPermanentBounceCount(Integer permanentBounceCount) {
    this.permanentBounceCount = permanentBounceCount;
  }


  public EmailCommseqStat permanentBounceCountFormatted(String permanentBounceCountFormatted) {
    
    this.permanentBounceCountFormatted = permanentBounceCountFormatted;
    return this;
  }

   /**
   * Count of emails permanently bounced, formatted
   * @return permanentBounceCountFormatted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Count of emails permanently bounced, formatted")

  public String getPermanentBounceCountFormatted() {
    return permanentBounceCountFormatted;
  }


  public void setPermanentBounceCountFormatted(String permanentBounceCountFormatted) {
    this.permanentBounceCountFormatted = permanentBounceCountFormatted;
  }


  public EmailCommseqStat profit(BigDecimal profit) {
    
    this.profit = profit;
    return this;
  }

   /**
   * Profit
   * @return profit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Profit")

  public BigDecimal getProfit() {
    return profit;
  }


  public void setProfit(BigDecimal profit) {
    this.profit = profit;
  }


  public EmailCommseqStat profitFormatted(String profitFormatted) {
    
    this.profitFormatted = profitFormatted;
    return this;
  }

   /**
   * Profit, formatted
   * @return profitFormatted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Profit, formatted")

  public String getProfitFormatted() {
    return profitFormatted;
  }


  public void setProfitFormatted(String profitFormatted) {
    this.profitFormatted = profitFormatted;
  }


  public EmailCommseqStat revenue(BigDecimal revenue) {
    
    this.revenue = revenue;
    return this;
  }

   /**
   * Revenue
   * @return revenue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Revenue")

  public BigDecimal getRevenue() {
    return revenue;
  }


  public void setRevenue(BigDecimal revenue) {
    this.revenue = revenue;
  }


  public EmailCommseqStat revenueFormatted(String revenueFormatted) {
    
    this.revenueFormatted = revenueFormatted;
    return this;
  }

   /**
   * Revenue, formatted
   * @return revenueFormatted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Revenue, formatted")

  public String getRevenueFormatted() {
    return revenueFormatted;
  }


  public void setRevenueFormatted(String revenueFormatted) {
    this.revenueFormatted = revenueFormatted;
  }


  public EmailCommseqStat sendCount(Integer sendCount) {
    
    this.sendCount = sendCount;
    return this;
  }

   /**
   * Count of emails sent
   * @return sendCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Count of emails sent")

  public Integer getSendCount() {
    return sendCount;
  }


  public void setSendCount(Integer sendCount) {
    this.sendCount = sendCount;
  }


  public EmailCommseqStat sendCountFormatted(String sendCountFormatted) {
    
    this.sendCountFormatted = sendCountFormatted;
    return this;
  }

   /**
   * Count of emails sent, formatted
   * @return sendCountFormatted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Count of emails sent, formatted")

  public String getSendCountFormatted() {
    return sendCountFormatted;
  }


  public void setSendCountFormatted(String sendCountFormatted) {
    this.sendCountFormatted = sendCountFormatted;
  }


  public EmailCommseqStat skippedCount(Integer skippedCount) {
    
    this.skippedCount = skippedCount;
    return this;
  }

   /**
   * Count of skipped emails
   * @return skippedCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Count of skipped emails")

  public Integer getSkippedCount() {
    return skippedCount;
  }


  public void setSkippedCount(Integer skippedCount) {
    this.skippedCount = skippedCount;
  }


  public EmailCommseqStat skippedCountFormatted(String skippedCountFormatted) {
    
    this.skippedCountFormatted = skippedCountFormatted;
    return this;
  }

   /**
   * Count of skipped emails, formatted
   * @return skippedCountFormatted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Count of skipped emails, formatted")

  public String getSkippedCountFormatted() {
    return skippedCountFormatted;
  }


  public void setSkippedCountFormatted(String skippedCountFormatted) {
    this.skippedCountFormatted = skippedCountFormatted;
  }


  public EmailCommseqStat spamCount(Integer spamCount) {
    
    this.spamCount = spamCount;
    return this;
  }

   /**
   * Count of emails classified as spam
   * @return spamCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Count of emails classified as spam")

  public Integer getSpamCount() {
    return spamCount;
  }


  public void setSpamCount(Integer spamCount) {
    this.spamCount = spamCount;
  }


  public EmailCommseqStat spamCountFormatted(String spamCountFormatted) {
    
    this.spamCountFormatted = spamCountFormatted;
    return this;
  }

   /**
   * Count of emails classified as spam, formatted
   * @return spamCountFormatted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Count of emails classified as spam, formatted")

  public String getSpamCountFormatted() {
    return spamCountFormatted;
  }


  public void setSpamCountFormatted(String spamCountFormatted) {
    this.spamCountFormatted = spamCountFormatted;
  }


  public EmailCommseqStat startedCount(Integer startedCount) {
    
    this.startedCount = startedCount;
    return this;
  }

   /**
   * Count of customers that started the sequence
   * @return startedCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Count of customers that started the sequence")

  public Integer getStartedCount() {
    return startedCount;
  }


  public void setStartedCount(Integer startedCount) {
    this.startedCount = startedCount;
  }


  public EmailCommseqStat startedCountFormatted(String startedCountFormatted) {
    
    this.startedCountFormatted = startedCountFormatted;
    return this;
  }

   /**
   * Count of customers that started the sequence, formatted
   * @return startedCountFormatted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Count of customers that started the sequence, formatted")

  public String getStartedCountFormatted() {
    return startedCountFormatted;
  }


  public void setStartedCountFormatted(String startedCountFormatted) {
    this.startedCountFormatted = startedCountFormatted;
  }


  public EmailCommseqStat storefrontOid(Integer storefrontOid) {
    
    this.storefrontOid = storefrontOid;
    return this;
  }

   /**
   * Storefront oid
   * @return storefrontOid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Storefront oid")

  public Integer getStorefrontOid() {
    return storefrontOid;
  }


  public void setStorefrontOid(Integer storefrontOid) {
    this.storefrontOid = storefrontOid;
  }


  public EmailCommseqStat unsubscribeCount(Integer unsubscribeCount) {
    
    this.unsubscribeCount = unsubscribeCount;
    return this;
  }

   /**
   * Count of unsubscribes caused
   * @return unsubscribeCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Count of unsubscribes caused")

  public Integer getUnsubscribeCount() {
    return unsubscribeCount;
  }


  public void setUnsubscribeCount(Integer unsubscribeCount) {
    this.unsubscribeCount = unsubscribeCount;
  }


  public EmailCommseqStat unsubscribeCountFormatted(String unsubscribeCountFormatted) {
    
    this.unsubscribeCountFormatted = unsubscribeCountFormatted;
    return this;
  }

   /**
   * Count of unsubscribes caused, formatted
   * @return unsubscribeCountFormatted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Count of unsubscribes caused, formatted")

  public String getUnsubscribeCountFormatted() {
    return unsubscribeCountFormatted;
  }


  public void setUnsubscribeCountFormatted(String unsubscribeCountFormatted) {
    this.unsubscribeCountFormatted = unsubscribeCountFormatted;
  }


  public EmailCommseqStat viewCount(Integer viewCount) {
    
    this.viewCount = viewCount;
    return this;
  }

   /**
   * Count of views
   * @return viewCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Count of views")

  public Integer getViewCount() {
    return viewCount;
  }


  public void setViewCount(Integer viewCount) {
    this.viewCount = viewCount;
  }


  public EmailCommseqStat viewCountFormatted(String viewCountFormatted) {
    
    this.viewCountFormatted = viewCountFormatted;
    return this;
  }

   /**
   * Count of views, formatted
   * @return viewCountFormatted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Count of views, formatted")

  public String getViewCountFormatted() {
    return viewCountFormatted;
  }


  public void setViewCountFormatted(String viewCountFormatted) {
    this.viewCountFormatted = viewCountFormatted;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmailCommseqStat emailCommseqStat = (EmailCommseqStat) o;
    return Objects.equals(this.clickCount, emailCommseqStat.clickCount) &&
        Objects.equals(this.clickCountFormatted, emailCommseqStat.clickCountFormatted) &&
        Objects.equals(this.conversionCount, emailCommseqStat.conversionCount) &&
        Objects.equals(this.conversionCountFormatted, emailCommseqStat.conversionCountFormatted) &&
        Objects.equals(this.deliveredCount, emailCommseqStat.deliveredCount) &&
        Objects.equals(this.deliveredCountFormatted, emailCommseqStat.deliveredCountFormatted) &&
        Objects.equals(this.emailCommunicationSequenceUuid, emailCommseqStat.emailCommunicationSequenceUuid) &&
        Objects.equals(this.finishedCount, emailCommseqStat.finishedCount) &&
        Objects.equals(this.finishedCountFormatted, emailCommseqStat.finishedCountFormatted) &&
        Objects.equals(this.inProgressCount, emailCommseqStat.inProgressCount) &&
        Objects.equals(this.inProgressCountFormatted, emailCommseqStat.inProgressCountFormatted) &&
        Objects.equals(this.kickboxCount, emailCommseqStat.kickboxCount) &&
        Objects.equals(this.kickboxCountFormatted, emailCommseqStat.kickboxCountFormatted) &&
        Objects.equals(this.merchantId, emailCommseqStat.merchantId) &&
        Objects.equals(this.openCount, emailCommseqStat.openCount) &&
        Objects.equals(this.openCountFormatted, emailCommseqStat.openCountFormatted) &&
        Objects.equals(this.orderCount, emailCommseqStat.orderCount) &&
        Objects.equals(this.orderCountFormatted, emailCommseqStat.orderCountFormatted) &&
        Objects.equals(this.permanentBounceCount, emailCommseqStat.permanentBounceCount) &&
        Objects.equals(this.permanentBounceCountFormatted, emailCommseqStat.permanentBounceCountFormatted) &&
        Objects.equals(this.profit, emailCommseqStat.profit) &&
        Objects.equals(this.profitFormatted, emailCommseqStat.profitFormatted) &&
        Objects.equals(this.revenue, emailCommseqStat.revenue) &&
        Objects.equals(this.revenueFormatted, emailCommseqStat.revenueFormatted) &&
        Objects.equals(this.sendCount, emailCommseqStat.sendCount) &&
        Objects.equals(this.sendCountFormatted, emailCommseqStat.sendCountFormatted) &&
        Objects.equals(this.skippedCount, emailCommseqStat.skippedCount) &&
        Objects.equals(this.skippedCountFormatted, emailCommseqStat.skippedCountFormatted) &&
        Objects.equals(this.spamCount, emailCommseqStat.spamCount) &&
        Objects.equals(this.spamCountFormatted, emailCommseqStat.spamCountFormatted) &&
        Objects.equals(this.startedCount, emailCommseqStat.startedCount) &&
        Objects.equals(this.startedCountFormatted, emailCommseqStat.startedCountFormatted) &&
        Objects.equals(this.storefrontOid, emailCommseqStat.storefrontOid) &&
        Objects.equals(this.unsubscribeCount, emailCommseqStat.unsubscribeCount) &&
        Objects.equals(this.unsubscribeCountFormatted, emailCommseqStat.unsubscribeCountFormatted) &&
        Objects.equals(this.viewCount, emailCommseqStat.viewCount) &&
        Objects.equals(this.viewCountFormatted, emailCommseqStat.viewCountFormatted);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clickCount, clickCountFormatted, conversionCount, conversionCountFormatted, deliveredCount, deliveredCountFormatted, emailCommunicationSequenceUuid, finishedCount, finishedCountFormatted, inProgressCount, inProgressCountFormatted, kickboxCount, kickboxCountFormatted, merchantId, openCount, openCountFormatted, orderCount, orderCountFormatted, permanentBounceCount, permanentBounceCountFormatted, profit, profitFormatted, revenue, revenueFormatted, sendCount, sendCountFormatted, skippedCount, skippedCountFormatted, spamCount, spamCountFormatted, startedCount, startedCountFormatted, storefrontOid, unsubscribeCount, unsubscribeCountFormatted, viewCount, viewCountFormatted);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmailCommseqStat {\n");
    sb.append("    clickCount: ").append(toIndentedString(clickCount)).append("\n");
    sb.append("    clickCountFormatted: ").append(toIndentedString(clickCountFormatted)).append("\n");
    sb.append("    conversionCount: ").append(toIndentedString(conversionCount)).append("\n");
    sb.append("    conversionCountFormatted: ").append(toIndentedString(conversionCountFormatted)).append("\n");
    sb.append("    deliveredCount: ").append(toIndentedString(deliveredCount)).append("\n");
    sb.append("    deliveredCountFormatted: ").append(toIndentedString(deliveredCountFormatted)).append("\n");
    sb.append("    emailCommunicationSequenceUuid: ").append(toIndentedString(emailCommunicationSequenceUuid)).append("\n");
    sb.append("    finishedCount: ").append(toIndentedString(finishedCount)).append("\n");
    sb.append("    finishedCountFormatted: ").append(toIndentedString(finishedCountFormatted)).append("\n");
    sb.append("    inProgressCount: ").append(toIndentedString(inProgressCount)).append("\n");
    sb.append("    inProgressCountFormatted: ").append(toIndentedString(inProgressCountFormatted)).append("\n");
    sb.append("    kickboxCount: ").append(toIndentedString(kickboxCount)).append("\n");
    sb.append("    kickboxCountFormatted: ").append(toIndentedString(kickboxCountFormatted)).append("\n");
    sb.append("    merchantId: ").append(toIndentedString(merchantId)).append("\n");
    sb.append("    openCount: ").append(toIndentedString(openCount)).append("\n");
    sb.append("    openCountFormatted: ").append(toIndentedString(openCountFormatted)).append("\n");
    sb.append("    orderCount: ").append(toIndentedString(orderCount)).append("\n");
    sb.append("    orderCountFormatted: ").append(toIndentedString(orderCountFormatted)).append("\n");
    sb.append("    permanentBounceCount: ").append(toIndentedString(permanentBounceCount)).append("\n");
    sb.append("    permanentBounceCountFormatted: ").append(toIndentedString(permanentBounceCountFormatted)).append("\n");
    sb.append("    profit: ").append(toIndentedString(profit)).append("\n");
    sb.append("    profitFormatted: ").append(toIndentedString(profitFormatted)).append("\n");
    sb.append("    revenue: ").append(toIndentedString(revenue)).append("\n");
    sb.append("    revenueFormatted: ").append(toIndentedString(revenueFormatted)).append("\n");
    sb.append("    sendCount: ").append(toIndentedString(sendCount)).append("\n");
    sb.append("    sendCountFormatted: ").append(toIndentedString(sendCountFormatted)).append("\n");
    sb.append("    skippedCount: ").append(toIndentedString(skippedCount)).append("\n");
    sb.append("    skippedCountFormatted: ").append(toIndentedString(skippedCountFormatted)).append("\n");
    sb.append("    spamCount: ").append(toIndentedString(spamCount)).append("\n");
    sb.append("    spamCountFormatted: ").append(toIndentedString(spamCountFormatted)).append("\n");
    sb.append("    startedCount: ").append(toIndentedString(startedCount)).append("\n");
    sb.append("    startedCountFormatted: ").append(toIndentedString(startedCountFormatted)).append("\n");
    sb.append("    storefrontOid: ").append(toIndentedString(storefrontOid)).append("\n");
    sb.append("    unsubscribeCount: ").append(toIndentedString(unsubscribeCount)).append("\n");
    sb.append("    unsubscribeCountFormatted: ").append(toIndentedString(unsubscribeCountFormatted)).append("\n");
    sb.append("    viewCount: ").append(toIndentedString(viewCount)).append("\n");
    sb.append("    viewCountFormatted: ").append(toIndentedString(viewCountFormatted)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("click_count");
    openapiFields.add("click_count_formatted");
    openapiFields.add("conversion_count");
    openapiFields.add("conversion_count_formatted");
    openapiFields.add("delivered_count");
    openapiFields.add("delivered_count_formatted");
    openapiFields.add("email_communication_sequence_uuid");
    openapiFields.add("finished_count");
    openapiFields.add("finished_count_formatted");
    openapiFields.add("in_progress_count");
    openapiFields.add("in_progress_count_formatted");
    openapiFields.add("kickbox_count");
    openapiFields.add("kickbox_count_formatted");
    openapiFields.add("merchant_id");
    openapiFields.add("open_count");
    openapiFields.add("open_count_formatted");
    openapiFields.add("order_count");
    openapiFields.add("order_count_formatted");
    openapiFields.add("permanent_bounce_count");
    openapiFields.add("permanent_bounce_count_formatted");
    openapiFields.add("profit");
    openapiFields.add("profit_formatted");
    openapiFields.add("revenue");
    openapiFields.add("revenue_formatted");
    openapiFields.add("send_count");
    openapiFields.add("send_count_formatted");
    openapiFields.add("skipped_count");
    openapiFields.add("skipped_count_formatted");
    openapiFields.add("spam_count");
    openapiFields.add("spam_count_formatted");
    openapiFields.add("started_count");
    openapiFields.add("started_count_formatted");
    openapiFields.add("storefront_oid");
    openapiFields.add("unsubscribe_count");
    openapiFields.add("unsubscribe_count_formatted");
    openapiFields.add("view_count");
    openapiFields.add("view_count_formatted");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to EmailCommseqStat
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (EmailCommseqStat.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in EmailCommseqStat is not found in the empty JSON string", EmailCommseqStat.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!EmailCommseqStat.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EmailCommseqStat` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("click_count_formatted") != null && !jsonObj.get("click_count_formatted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `click_count_formatted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("click_count_formatted").toString()));
      }
      if (jsonObj.get("conversion_count_formatted") != null && !jsonObj.get("conversion_count_formatted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `conversion_count_formatted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("conversion_count_formatted").toString()));
      }
      if (jsonObj.get("delivered_count_formatted") != null && !jsonObj.get("delivered_count_formatted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `delivered_count_formatted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("delivered_count_formatted").toString()));
      }
      if (jsonObj.get("email_communication_sequence_uuid") != null && !jsonObj.get("email_communication_sequence_uuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email_communication_sequence_uuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email_communication_sequence_uuid").toString()));
      }
      if (jsonObj.get("finished_count_formatted") != null && !jsonObj.get("finished_count_formatted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `finished_count_formatted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("finished_count_formatted").toString()));
      }
      if (jsonObj.get("in_progress_count_formatted") != null && !jsonObj.get("in_progress_count_formatted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `in_progress_count_formatted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("in_progress_count_formatted").toString()));
      }
      if (jsonObj.get("kickbox_count_formatted") != null && !jsonObj.get("kickbox_count_formatted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kickbox_count_formatted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kickbox_count_formatted").toString()));
      }
      if (jsonObj.get("merchant_id") != null && !jsonObj.get("merchant_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `merchant_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("merchant_id").toString()));
      }
      if (jsonObj.get("open_count_formatted") != null && !jsonObj.get("open_count_formatted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `open_count_formatted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("open_count_formatted").toString()));
      }
      if (jsonObj.get("order_count_formatted") != null && !jsonObj.get("order_count_formatted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `order_count_formatted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("order_count_formatted").toString()));
      }
      if (jsonObj.get("permanent_bounce_count_formatted") != null && !jsonObj.get("permanent_bounce_count_formatted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `permanent_bounce_count_formatted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("permanent_bounce_count_formatted").toString()));
      }
      if (jsonObj.get("profit_formatted") != null && !jsonObj.get("profit_formatted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `profit_formatted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("profit_formatted").toString()));
      }
      if (jsonObj.get("revenue_formatted") != null && !jsonObj.get("revenue_formatted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `revenue_formatted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("revenue_formatted").toString()));
      }
      if (jsonObj.get("send_count_formatted") != null && !jsonObj.get("send_count_formatted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `send_count_formatted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("send_count_formatted").toString()));
      }
      if (jsonObj.get("skipped_count_formatted") != null && !jsonObj.get("skipped_count_formatted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `skipped_count_formatted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("skipped_count_formatted").toString()));
      }
      if (jsonObj.get("spam_count_formatted") != null && !jsonObj.get("spam_count_formatted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `spam_count_formatted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("spam_count_formatted").toString()));
      }
      if (jsonObj.get("started_count_formatted") != null && !jsonObj.get("started_count_formatted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `started_count_formatted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("started_count_formatted").toString()));
      }
      if (jsonObj.get("unsubscribe_count_formatted") != null && !jsonObj.get("unsubscribe_count_formatted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `unsubscribe_count_formatted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("unsubscribe_count_formatted").toString()));
      }
      if (jsonObj.get("view_count_formatted") != null && !jsonObj.get("view_count_formatted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `view_count_formatted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("view_count_formatted").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EmailCommseqStat.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EmailCommseqStat' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EmailCommseqStat> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EmailCommseqStat.class));

       return (TypeAdapter<T>) new TypeAdapter<EmailCommseqStat>() {
           @Override
           public void write(JsonWriter out, EmailCommseqStat value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EmailCommseqStat read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of EmailCommseqStat given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of EmailCommseqStat
  * @throws IOException if the JSON string is invalid with respect to EmailCommseqStat
  */
  public static EmailCommseqStat fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EmailCommseqStat.class);
  }

 /**
  * Convert an instance of EmailCommseqStat to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

