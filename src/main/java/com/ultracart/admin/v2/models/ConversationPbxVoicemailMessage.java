/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * ConversationPbxVoicemailMessage
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-04T14:46:06.786-04:00[America/Indianapolis]")
public class ConversationPbxVoicemailMessage {
  public static final String SERIALIZED_NAME_CALL_SID = "call_sid";
  @SerializedName(SERIALIZED_NAME_CALL_SID)
  private String callSid;

  public static final String SERIALIZED_NAME_DURATION = "duration";
  @SerializedName(SERIALIZED_NAME_DURATION)
  private Integer duration;

  public static final String SERIALIZED_NAME_FROM = "from";
  @SerializedName(SERIALIZED_NAME_FROM)
  private String from;

  public static final String SERIALIZED_NAME_FROM_CALLER_ID = "from_caller_id";
  @SerializedName(SERIALIZED_NAME_FROM_CALLER_ID)
  private String fromCallerId;

  public static final String SERIALIZED_NAME_LISTENED = "listened";
  @SerializedName(SERIALIZED_NAME_LISTENED)
  private Boolean listened;

  public static final String SERIALIZED_NAME_MERCHANT_ID = "merchant_id";
  @SerializedName(SERIALIZED_NAME_MERCHANT_ID)
  private String merchantId;

  public static final String SERIALIZED_NAME_RECORDING_SID = "recording_sid";
  @SerializedName(SERIALIZED_NAME_RECORDING_SID)
  private String recordingSid;

  public static final String SERIALIZED_NAME_RECORDING_SIZE_BYTES = "recording_size_bytes";
  @SerializedName(SERIALIZED_NAME_RECORDING_SIZE_BYTES)
  private Integer recordingSizeBytes;

  /**
   * Recording Status
   */
  @JsonAdapter(RecordingStatusEnum.Adapter.class)
  public enum RecordingStatusEnum {
    COMPLETED("completed");

    private String value;

    RecordingStatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static RecordingStatusEnum fromValue(String value) {
      for (RecordingStatusEnum b : RecordingStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<RecordingStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RecordingStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public RecordingStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return RecordingStatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_RECORDING_STATUS = "recording_status";
  @SerializedName(SERIALIZED_NAME_RECORDING_STATUS)
  private RecordingStatusEnum recordingStatus;

  public static final String SERIALIZED_NAME_RECORDING_URL = "recording_url";
  @SerializedName(SERIALIZED_NAME_RECORDING_URL)
  private String recordingUrl;

  public static final String SERIALIZED_NAME_TRANSCRIPT_JSON = "transcript_json";
  @SerializedName(SERIALIZED_NAME_TRANSCRIPT_JSON)
  private String transcriptJson;

  public static final String SERIALIZED_NAME_TRANSCRIPT_TEXT = "transcript_text";
  @SerializedName(SERIALIZED_NAME_TRANSCRIPT_TEXT)
  private String transcriptText;

  public static final String SERIALIZED_NAME_VOICEMAIL_DTS = "voicemail_dts";
  @SerializedName(SERIALIZED_NAME_VOICEMAIL_DTS)
  private String voicemailDts;

  public ConversationPbxVoicemailMessage() { 
  }

  public ConversationPbxVoicemailMessage callSid(String callSid) {
    
    this.callSid = callSid;
    return this;
  }

   /**
   * Call SID
   * @return callSid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Call SID")

  public String getCallSid() {
    return callSid;
  }


  public void setCallSid(String callSid) {
    this.callSid = callSid;
  }


  public ConversationPbxVoicemailMessage duration(Integer duration) {
    
    this.duration = duration;
    return this;
  }

   /**
   * Duration in seconds
   * @return duration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Duration in seconds")

  public Integer getDuration() {
    return duration;
  }


  public void setDuration(Integer duration) {
    this.duration = duration;
  }


  public ConversationPbxVoicemailMessage from(String from) {
    
    this.from = from;
    return this;
  }

   /**
   * From phone number in E.164
   * @return from
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "From phone number in E.164")

  public String getFrom() {
    return from;
  }


  public void setFrom(String from) {
    this.from = from;
  }


  public ConversationPbxVoicemailMessage fromCallerId(String fromCallerId) {
    
    this.fromCallerId = fromCallerId;
    return this;
  }

   /**
   * From caller id (if available)
   * @return fromCallerId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "From caller id (if available)")

  public String getFromCallerId() {
    return fromCallerId;
  }


  public void setFromCallerId(String fromCallerId) {
    this.fromCallerId = fromCallerId;
  }


  public ConversationPbxVoicemailMessage listened(Boolean listened) {
    
    this.listened = listened;
    return this;
  }

   /**
   * True if the voicemail has been listened to in the user interface
   * @return listened
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if the voicemail has been listened to in the user interface")

  public Boolean getListened() {
    return listened;
  }


  public void setListened(Boolean listened) {
    this.listened = listened;
  }


  public ConversationPbxVoicemailMessage merchantId(String merchantId) {
    
    this.merchantId = merchantId;
    return this;
  }

   /**
   * Merchant ID
   * @return merchantId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Merchant ID")

  public String getMerchantId() {
    return merchantId;
  }


  public void setMerchantId(String merchantId) {
    this.merchantId = merchantId;
  }


  public ConversationPbxVoicemailMessage recordingSid(String recordingSid) {
    
    this.recordingSid = recordingSid;
    return this;
  }

   /**
   * Recording SID
   * @return recordingSid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Recording SID")

  public String getRecordingSid() {
    return recordingSid;
  }


  public void setRecordingSid(String recordingSid) {
    this.recordingSid = recordingSid;
  }


  public ConversationPbxVoicemailMessage recordingSizeBytes(Integer recordingSizeBytes) {
    
    this.recordingSizeBytes = recordingSizeBytes;
    return this;
  }

   /**
   * Recording size in bytes
   * @return recordingSizeBytes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Recording size in bytes")

  public Integer getRecordingSizeBytes() {
    return recordingSizeBytes;
  }


  public void setRecordingSizeBytes(Integer recordingSizeBytes) {
    this.recordingSizeBytes = recordingSizeBytes;
  }


  public ConversationPbxVoicemailMessage recordingStatus(RecordingStatusEnum recordingStatus) {
    
    this.recordingStatus = recordingStatus;
    return this;
  }

   /**
   * Recording Status
   * @return recordingStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Recording Status")

  public RecordingStatusEnum getRecordingStatus() {
    return recordingStatus;
  }


  public void setRecordingStatus(RecordingStatusEnum recordingStatus) {
    this.recordingStatus = recordingStatus;
  }


  public ConversationPbxVoicemailMessage recordingUrl(String recordingUrl) {
    
    this.recordingUrl = recordingUrl;
    return this;
  }

   /**
   * Recording URL (expires in 4 hours)
   * @return recordingUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Recording URL (expires in 4 hours)")

  public String getRecordingUrl() {
    return recordingUrl;
  }


  public void setRecordingUrl(String recordingUrl) {
    this.recordingUrl = recordingUrl;
  }


  public ConversationPbxVoicemailMessage transcriptJson(String transcriptJson) {
    
    this.transcriptJson = transcriptJson;
    return this;
  }

   /**
   * JSON version of the transcript
   * @return transcriptJson
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "JSON version of the transcript")

  public String getTranscriptJson() {
    return transcriptJson;
  }


  public void setTranscriptJson(String transcriptJson) {
    this.transcriptJson = transcriptJson;
  }


  public ConversationPbxVoicemailMessage transcriptText(String transcriptText) {
    
    this.transcriptText = transcriptText;
    return this;
  }

   /**
   * Formatted text of the transcript
   * @return transcriptText
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Formatted text of the transcript")

  public String getTranscriptText() {
    return transcriptText;
  }


  public void setTranscriptText(String transcriptText) {
    this.transcriptText = transcriptText;
  }


  public ConversationPbxVoicemailMessage voicemailDts(String voicemailDts) {
    
    this.voicemailDts = voicemailDts;
    return this;
  }

   /**
   * Voicemail date/time
   * @return voicemailDts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Voicemail date/time")

  public String getVoicemailDts() {
    return voicemailDts;
  }


  public void setVoicemailDts(String voicemailDts) {
    this.voicemailDts = voicemailDts;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConversationPbxVoicemailMessage conversationPbxVoicemailMessage = (ConversationPbxVoicemailMessage) o;
    return Objects.equals(this.callSid, conversationPbxVoicemailMessage.callSid) &&
        Objects.equals(this.duration, conversationPbxVoicemailMessage.duration) &&
        Objects.equals(this.from, conversationPbxVoicemailMessage.from) &&
        Objects.equals(this.fromCallerId, conversationPbxVoicemailMessage.fromCallerId) &&
        Objects.equals(this.listened, conversationPbxVoicemailMessage.listened) &&
        Objects.equals(this.merchantId, conversationPbxVoicemailMessage.merchantId) &&
        Objects.equals(this.recordingSid, conversationPbxVoicemailMessage.recordingSid) &&
        Objects.equals(this.recordingSizeBytes, conversationPbxVoicemailMessage.recordingSizeBytes) &&
        Objects.equals(this.recordingStatus, conversationPbxVoicemailMessage.recordingStatus) &&
        Objects.equals(this.recordingUrl, conversationPbxVoicemailMessage.recordingUrl) &&
        Objects.equals(this.transcriptJson, conversationPbxVoicemailMessage.transcriptJson) &&
        Objects.equals(this.transcriptText, conversationPbxVoicemailMessage.transcriptText) &&
        Objects.equals(this.voicemailDts, conversationPbxVoicemailMessage.voicemailDts);
  }

  @Override
  public int hashCode() {
    return Objects.hash(callSid, duration, from, fromCallerId, listened, merchantId, recordingSid, recordingSizeBytes, recordingStatus, recordingUrl, transcriptJson, transcriptText, voicemailDts);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConversationPbxVoicemailMessage {\n");
    sb.append("    callSid: ").append(toIndentedString(callSid)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    from: ").append(toIndentedString(from)).append("\n");
    sb.append("    fromCallerId: ").append(toIndentedString(fromCallerId)).append("\n");
    sb.append("    listened: ").append(toIndentedString(listened)).append("\n");
    sb.append("    merchantId: ").append(toIndentedString(merchantId)).append("\n");
    sb.append("    recordingSid: ").append(toIndentedString(recordingSid)).append("\n");
    sb.append("    recordingSizeBytes: ").append(toIndentedString(recordingSizeBytes)).append("\n");
    sb.append("    recordingStatus: ").append(toIndentedString(recordingStatus)).append("\n");
    sb.append("    recordingUrl: ").append(toIndentedString(recordingUrl)).append("\n");
    sb.append("    transcriptJson: ").append(toIndentedString(transcriptJson)).append("\n");
    sb.append("    transcriptText: ").append(toIndentedString(transcriptText)).append("\n");
    sb.append("    voicemailDts: ").append(toIndentedString(voicemailDts)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("call_sid");
    openapiFields.add("duration");
    openapiFields.add("from");
    openapiFields.add("from_caller_id");
    openapiFields.add("listened");
    openapiFields.add("merchant_id");
    openapiFields.add("recording_sid");
    openapiFields.add("recording_size_bytes");
    openapiFields.add("recording_status");
    openapiFields.add("recording_url");
    openapiFields.add("transcript_json");
    openapiFields.add("transcript_text");
    openapiFields.add("voicemail_dts");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ConversationPbxVoicemailMessage
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (ConversationPbxVoicemailMessage.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in ConversationPbxVoicemailMessage is not found in the empty JSON string", ConversationPbxVoicemailMessage.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!ConversationPbxVoicemailMessage.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ConversationPbxVoicemailMessage` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("call_sid") != null && !jsonObj.get("call_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `call_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("call_sid").toString()));
      }
      if (jsonObj.get("from") != null && !jsonObj.get("from").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `from` to be a primitive type in the JSON string but got `%s`", jsonObj.get("from").toString()));
      }
      if (jsonObj.get("from_caller_id") != null && !jsonObj.get("from_caller_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `from_caller_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("from_caller_id").toString()));
      }
      if (jsonObj.get("merchant_id") != null && !jsonObj.get("merchant_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `merchant_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("merchant_id").toString()));
      }
      if (jsonObj.get("recording_sid") != null && !jsonObj.get("recording_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `recording_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("recording_sid").toString()));
      }
      if (jsonObj.get("recording_status") != null && !jsonObj.get("recording_status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `recording_status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("recording_status").toString()));
      }
      if (jsonObj.get("recording_url") != null && !jsonObj.get("recording_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `recording_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("recording_url").toString()));
      }
      if (jsonObj.get("transcript_json") != null && !jsonObj.get("transcript_json").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `transcript_json` to be a primitive type in the JSON string but got `%s`", jsonObj.get("transcript_json").toString()));
      }
      if (jsonObj.get("transcript_text") != null && !jsonObj.get("transcript_text").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `transcript_text` to be a primitive type in the JSON string but got `%s`", jsonObj.get("transcript_text").toString()));
      }
      if (jsonObj.get("voicemail_dts") != null && !jsonObj.get("voicemail_dts").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `voicemail_dts` to be a primitive type in the JSON string but got `%s`", jsonObj.get("voicemail_dts").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ConversationPbxVoicemailMessage.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ConversationPbxVoicemailMessage' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ConversationPbxVoicemailMessage> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ConversationPbxVoicemailMessage.class));

       return (TypeAdapter<T>) new TypeAdapter<ConversationPbxVoicemailMessage>() {
           @Override
           public void write(JsonWriter out, ConversationPbxVoicemailMessage value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ConversationPbxVoicemailMessage read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ConversationPbxVoicemailMessage given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ConversationPbxVoicemailMessage
  * @throws IOException if the JSON string is invalid with respect to ConversationPbxVoicemailMessage
  */
  public static ConversationPbxVoicemailMessage fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ConversationPbxVoicemailMessage.class);
  }

 /**
  * Convert an instance of ConversationPbxVoicemailMessage to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

