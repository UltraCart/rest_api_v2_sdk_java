/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * ItemTag
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-04-26T11:37:38.556-04:00")



public class ItemTag {
  /**
   * tag_tpe
   */
  @JsonAdapter(TagTypeEnum.Adapter.class)
  public enum TagTypeEnum {
    ITEM("item"),
    
    ORDER("order"),
    
    CUSTOMER("customer");

    private String value;

    TagTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TagTypeEnum fromValue(String text) {
      for (TagTypeEnum b : TagTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TagTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TagTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TagTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TagTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("tagType")
  private TagTypeEnum tagType = null;

  @SerializedName("tagValue")
  private String tagValue = null;

  public ItemTag tagType(TagTypeEnum tagType) {
    this.tagType = tagType;
    return this;
  }

   /**
   * tag_tpe
   * @return tagType
  **/
  @ApiModelProperty(value = "tag_tpe")
  public TagTypeEnum getTagType() {
    return tagType;
  }

  public void setTagType(TagTypeEnum tagType) {
    this.tagType = tagType;
  }

  public ItemTag tagValue(String tagValue) {
    this.tagValue = tagValue;
    return this;
  }

   /**
   * tag_value
   * @return tagValue
  **/
  @ApiModelProperty(value = "tag_value")
  public String getTagValue() {
    return tagValue;
  }

  public void setTagValue(String tagValue) {
    this.tagValue = tagValue;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ItemTag itemTag = (ItemTag) o;
    return Objects.equals(this.tagType, itemTag.tagType) &&
        Objects.equals(this.tagValue, itemTag.tagValue);
  }

  @Override
  public int hashCode() {
    return Objects.hash(tagType, tagValue);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ItemTag {\n");
    
    sb.append("    tagType: ").append(toIndentedString(tagType)).append("\n");
    sb.append("    tagValue: ").append(toIndentedString(tagValue)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

