/**
 * UltraCart Rest API V2
 * This is the next generation UltraCart REST API...
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;


/**
 * ItemInstantPaymentNotification
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-05-06T12:04:56.332-04:00")
public class ItemInstantPaymentNotification   {
  @SerializedName("post_operation")
  private Boolean postOperation = null;

  @SerializedName("successful_response_text")
  private String successfulResponseText = null;

  @SerializedName("url")
  private String url = null;

  public ItemInstantPaymentNotification postOperation(Boolean postOperation) {
    this.postOperation = postOperation;
    return this;
  }

   /**
   * True for HTTP POST instead of GET
   * @return postOperation
  **/
  @ApiModelProperty(example = "null", value = "True for HTTP POST instead of GET")
  public Boolean getPostOperation() {
    return postOperation;
  }

  public void setPostOperation(Boolean postOperation) {
    this.postOperation = postOperation;
  }

  public ItemInstantPaymentNotification successfulResponseText(String successfulResponseText) {
    this.successfulResponseText = successfulResponseText;
    return this;
  }

   /**
   * Successful response text
   * @return successfulResponseText
  **/
  @ApiModelProperty(example = "null", value = "Successful response text")
  public String getSuccessfulResponseText() {
    return successfulResponseText;
  }

  public void setSuccessfulResponseText(String successfulResponseText) {
    this.successfulResponseText = successfulResponseText;
  }

  public ItemInstantPaymentNotification url(String url) {
    this.url = url;
    return this;
  }

   /**
   * URL
   * @return url
  **/
  @ApiModelProperty(example = "null", value = "URL")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ItemInstantPaymentNotification itemInstantPaymentNotification = (ItemInstantPaymentNotification) o;
    return Objects.equals(this.postOperation, itemInstantPaymentNotification.postOperation) &&
        Objects.equals(this.successfulResponseText, itemInstantPaymentNotification.successfulResponseText) &&
        Objects.equals(this.url, itemInstantPaymentNotification.url);
  }

  @Override
  public int hashCode() {
    return Objects.hash(postOperation, successfulResponseText, url);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ItemInstantPaymentNotification {\n");
    
    sb.append("    postOperation: ").append(toIndentedString(postOperation)).append("\n");
    sb.append("    successfulResponseText: ").append(toIndentedString(successfulResponseText)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

