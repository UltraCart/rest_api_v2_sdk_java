/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.EmailCommseqStep;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * EmailCommseq
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-09T16:30:26.529-05:00[America/Indianapolis]")
public class EmailCommseq {
  public static final String SERIALIZED_NAME_EMAIL_COMMUNICATION_SEQUENCE_STEPS = "email_communication_sequence_steps";
  @SerializedName(SERIALIZED_NAME_EMAIL_COMMUNICATION_SEQUENCE_STEPS)
  private List<EmailCommseqStep> emailCommunicationSequenceSteps = null;

  public static final String SERIALIZED_NAME_EMAIL_COMMUNICATION_SEQUENCE_UUID = "email_communication_sequence_uuid";
  @SerializedName(SERIALIZED_NAME_EMAIL_COMMUNICATION_SEQUENCE_UUID)
  private String emailCommunicationSequenceUuid;

  public static final String SERIALIZED_NAME_MERCHANT_ID = "merchant_id";
  @SerializedName(SERIALIZED_NAME_MERCHANT_ID)
  private String merchantId;

  public static final String SERIALIZED_NAME_STOREFRONT_OID = "storefront_oid";
  @SerializedName(SERIALIZED_NAME_STOREFRONT_OID)
  private Integer storefrontOid;

  public EmailCommseq() { 
  }

  public EmailCommseq emailCommunicationSequenceSteps(List<EmailCommseqStep> emailCommunicationSequenceSteps) {
    
    this.emailCommunicationSequenceSteps = emailCommunicationSequenceSteps;
    return this;
  }

  public EmailCommseq addEmailCommunicationSequenceStepsItem(EmailCommseqStep emailCommunicationSequenceStepsItem) {
    if (this.emailCommunicationSequenceSteps == null) {
      this.emailCommunicationSequenceSteps = new ArrayList<>();
    }
    this.emailCommunicationSequenceSteps.add(emailCommunicationSequenceStepsItem);
    return this;
  }

   /**
   * Array of steps
   * @return emailCommunicationSequenceSteps
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Array of steps")

  public List<EmailCommseqStep> getEmailCommunicationSequenceSteps() {
    return emailCommunicationSequenceSteps;
  }


  public void setEmailCommunicationSequenceSteps(List<EmailCommseqStep> emailCommunicationSequenceSteps) {
    this.emailCommunicationSequenceSteps = emailCommunicationSequenceSteps;
  }


  public EmailCommseq emailCommunicationSequenceUuid(String emailCommunicationSequenceUuid) {
    
    this.emailCommunicationSequenceUuid = emailCommunicationSequenceUuid;
    return this;
  }

   /**
   * Email commseq UUID
   * @return emailCommunicationSequenceUuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Email commseq UUID")

  public String getEmailCommunicationSequenceUuid() {
    return emailCommunicationSequenceUuid;
  }


  public void setEmailCommunicationSequenceUuid(String emailCommunicationSequenceUuid) {
    this.emailCommunicationSequenceUuid = emailCommunicationSequenceUuid;
  }


  public EmailCommseq merchantId(String merchantId) {
    
    this.merchantId = merchantId;
    return this;
  }

   /**
   * Merchant ID
   * @return merchantId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Merchant ID")

  public String getMerchantId() {
    return merchantId;
  }


  public void setMerchantId(String merchantId) {
    this.merchantId = merchantId;
  }


  public EmailCommseq storefrontOid(Integer storefrontOid) {
    
    this.storefrontOid = storefrontOid;
    return this;
  }

   /**
   * Storefront oid
   * @return storefrontOid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Storefront oid")

  public Integer getStorefrontOid() {
    return storefrontOid;
  }


  public void setStorefrontOid(Integer storefrontOid) {
    this.storefrontOid = storefrontOid;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmailCommseq emailCommseq = (EmailCommseq) o;
    return Objects.equals(this.emailCommunicationSequenceSteps, emailCommseq.emailCommunicationSequenceSteps) &&
        Objects.equals(this.emailCommunicationSequenceUuid, emailCommseq.emailCommunicationSequenceUuid) &&
        Objects.equals(this.merchantId, emailCommseq.merchantId) &&
        Objects.equals(this.storefrontOid, emailCommseq.storefrontOid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(emailCommunicationSequenceSteps, emailCommunicationSequenceUuid, merchantId, storefrontOid);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmailCommseq {\n");
    sb.append("    emailCommunicationSequenceSteps: ").append(toIndentedString(emailCommunicationSequenceSteps)).append("\n");
    sb.append("    emailCommunicationSequenceUuid: ").append(toIndentedString(emailCommunicationSequenceUuid)).append("\n");
    sb.append("    merchantId: ").append(toIndentedString(merchantId)).append("\n");
    sb.append("    storefrontOid: ").append(toIndentedString(storefrontOid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("email_communication_sequence_steps");
    openapiFields.add("email_communication_sequence_uuid");
    openapiFields.add("merchant_id");
    openapiFields.add("storefront_oid");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to EmailCommseq
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (EmailCommseq.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in EmailCommseq is not found in the empty JSON string", EmailCommseq.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!EmailCommseq.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EmailCommseq` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      JsonArray jsonArrayemailCommunicationSequenceSteps = jsonObj.getAsJsonArray("email_communication_sequence_steps");
      if (jsonArrayemailCommunicationSequenceSteps != null) {
        // ensure the json data is an array
        if (!jsonObj.get("email_communication_sequence_steps").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `email_communication_sequence_steps` to be an array in the JSON string but got `%s`", jsonObj.get("email_communication_sequence_steps").toString()));
        }

        // validate the optional field `email_communication_sequence_steps` (array)
        for (int i = 0; i < jsonArrayemailCommunicationSequenceSteps.size(); i++) {
          EmailCommseqStep.validateJsonObject(jsonArrayemailCommunicationSequenceSteps.get(i).getAsJsonObject());
        };
      }
      if (jsonObj.get("email_communication_sequence_uuid") != null && !jsonObj.get("email_communication_sequence_uuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email_communication_sequence_uuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email_communication_sequence_uuid").toString()));
      }
      if (jsonObj.get("merchant_id") != null && !jsonObj.get("merchant_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `merchant_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("merchant_id").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EmailCommseq.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EmailCommseq' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EmailCommseq> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EmailCommseq.class));

       return (TypeAdapter<T>) new TypeAdapter<EmailCommseq>() {
           @Override
           public void write(JsonWriter out, EmailCommseq value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EmailCommseq read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of EmailCommseq given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of EmailCommseq
  * @throws IOException if the JSON string is invalid with respect to EmailCommseq
  */
  public static EmailCommseq fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EmailCommseq.class);
  }

 /**
  * Convert an instance of EmailCommseq to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

