/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.ConversationEngagementEquation;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * ConversationEngagement
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-01-10T11:13:32.699-05:00")



public class ConversationEngagement {
  @SerializedName("active")
  private Boolean active = null;

  @SerializedName("conversation_engagement_oid")
  private Integer conversationEngagementOid = null;

  @SerializedName("customer_greeting")
  private String customerGreeting = null;

  @SerializedName("department_oids")
  private List<Integer> departmentOids = null;

  @SerializedName("engagement_name")
  private String engagementName = null;

  @SerializedName("equation")
  private ConversationEngagementEquation equation = null;

  @SerializedName("time_on_page")
  private Integer timeOnPage = null;

  /**
   * The type of visitor
   */
  @JsonAdapter(VisitorTypeEnum.Adapter.class)
  public enum VisitorTypeEnum {
    ALL("all"),
    
    FIRST_TIME("first time"),
    
    RETURNING("returning");

    private String value;

    VisitorTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static VisitorTypeEnum fromValue(String text) {
      for (VisitorTypeEnum b : VisitorTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<VisitorTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final VisitorTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public VisitorTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return VisitorTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("visitor_type")
  private VisitorTypeEnum visitorType = null;

  public ConversationEngagement active(Boolean active) {
    this.active = active;
    return this;
  }

   /**
   * Get active
   * @return active
  **/
  @ApiModelProperty(value = "")
  public Boolean isActive() {
    return active;
  }

  public void setActive(Boolean active) {
    this.active = active;
  }

  public ConversationEngagement conversationEngagementOid(Integer conversationEngagementOid) {
    this.conversationEngagementOid = conversationEngagementOid;
    return this;
  }

   /**
   * Get conversationEngagementOid
   * @return conversationEngagementOid
  **/
  @ApiModelProperty(value = "")
  public Integer getConversationEngagementOid() {
    return conversationEngagementOid;
  }

  public void setConversationEngagementOid(Integer conversationEngagementOid) {
    this.conversationEngagementOid = conversationEngagementOid;
  }

  public ConversationEngagement customerGreeting(String customerGreeting) {
    this.customerGreeting = customerGreeting;
    return this;
  }

   /**
   * Get customerGreeting
   * @return customerGreeting
  **/
  @ApiModelProperty(value = "")
  public String getCustomerGreeting() {
    return customerGreeting;
  }

  public void setCustomerGreeting(String customerGreeting) {
    this.customerGreeting = customerGreeting;
  }

  public ConversationEngagement departmentOids(List<Integer> departmentOids) {
    this.departmentOids = departmentOids;
    return this;
  }

  public ConversationEngagement addDepartmentOidsItem(Integer departmentOidsItem) {
    if (this.departmentOids == null) {
      this.departmentOids = new ArrayList<Integer>();
    }
    this.departmentOids.add(departmentOidsItem);
    return this;
  }

   /**
   * Get departmentOids
   * @return departmentOids
  **/
  @ApiModelProperty(value = "")
  public List<Integer> getDepartmentOids() {
    return departmentOids;
  }

  public void setDepartmentOids(List<Integer> departmentOids) {
    this.departmentOids = departmentOids;
  }

  public ConversationEngagement engagementName(String engagementName) {
    this.engagementName = engagementName;
    return this;
  }

   /**
   * Get engagementName
   * @return engagementName
  **/
  @ApiModelProperty(value = "")
  public String getEngagementName() {
    return engagementName;
  }

  public void setEngagementName(String engagementName) {
    this.engagementName = engagementName;
  }

  public ConversationEngagement equation(ConversationEngagementEquation equation) {
    this.equation = equation;
    return this;
  }

   /**
   * Get equation
   * @return equation
  **/
  @ApiModelProperty(value = "")
  public ConversationEngagementEquation getEquation() {
    return equation;
  }

  public void setEquation(ConversationEngagementEquation equation) {
    this.equation = equation;
  }

  public ConversationEngagement timeOnPage(Integer timeOnPage) {
    this.timeOnPage = timeOnPage;
    return this;
  }

   /**
   * Get timeOnPage
   * @return timeOnPage
  **/
  @ApiModelProperty(value = "")
  public Integer getTimeOnPage() {
    return timeOnPage;
  }

  public void setTimeOnPage(Integer timeOnPage) {
    this.timeOnPage = timeOnPage;
  }

  public ConversationEngagement visitorType(VisitorTypeEnum visitorType) {
    this.visitorType = visitorType;
    return this;
  }

   /**
   * The type of visitor
   * @return visitorType
  **/
  @ApiModelProperty(value = "The type of visitor")
  public VisitorTypeEnum getVisitorType() {
    return visitorType;
  }

  public void setVisitorType(VisitorTypeEnum visitorType) {
    this.visitorType = visitorType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConversationEngagement conversationEngagement = (ConversationEngagement) o;
    return Objects.equals(this.active, conversationEngagement.active) &&
        Objects.equals(this.conversationEngagementOid, conversationEngagement.conversationEngagementOid) &&
        Objects.equals(this.customerGreeting, conversationEngagement.customerGreeting) &&
        Objects.equals(this.departmentOids, conversationEngagement.departmentOids) &&
        Objects.equals(this.engagementName, conversationEngagement.engagementName) &&
        Objects.equals(this.equation, conversationEngagement.equation) &&
        Objects.equals(this.timeOnPage, conversationEngagement.timeOnPage) &&
        Objects.equals(this.visitorType, conversationEngagement.visitorType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(active, conversationEngagementOid, customerGreeting, departmentOids, engagementName, equation, timeOnPage, visitorType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConversationEngagement {\n");
    
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    conversationEngagementOid: ").append(toIndentedString(conversationEngagementOid)).append("\n");
    sb.append("    customerGreeting: ").append(toIndentedString(customerGreeting)).append("\n");
    sb.append("    departmentOids: ").append(toIndentedString(departmentOids)).append("\n");
    sb.append("    engagementName: ").append(toIndentedString(engagementName)).append("\n");
    sb.append("    equation: ").append(toIndentedString(equation)).append("\n");
    sb.append("    timeOnPage: ").append(toIndentedString(timeOnPage)).append("\n");
    sb.append("    visitorType: ").append(toIndentedString(visitorType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

