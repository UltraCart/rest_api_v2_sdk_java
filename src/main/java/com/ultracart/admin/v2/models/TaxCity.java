/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.TaxPostalCode;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

/**
 * TaxCity
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-10-26T09:34:51.532-04:00")



public class TaxCity {
  @SerializedName("accounting_code")
  private String accountingCode = null;

  @SerializedName("city")
  private String city = null;

  @SerializedName("city_oid")
  private Integer cityOid = null;

  @SerializedName("county_oid")
  private Integer countyOid = null;

  @SerializedName("dont_collect_city")
  private Boolean dontCollectCity = null;

  @SerializedName("dont_collect_postal_code")
  private Boolean dontCollectPostalCode = null;

  @SerializedName("postal_codes")
  private List<TaxPostalCode> postalCodes = null;

  @SerializedName("tax_rate")
  private BigDecimal taxRate = null;

  @SerializedName("tax_rate_formatted")
  private String taxRateFormatted = null;

  public TaxCity accountingCode(String accountingCode) {
    this.accountingCode = accountingCode;
    return this;
  }

   /**
   * Accounting code for programs such as QuickBooks
   * @return accountingCode
  **/
  @ApiModelProperty(value = "Accounting code for programs such as QuickBooks")
  public String getAccountingCode() {
    return accountingCode;
  }

  public void setAccountingCode(String accountingCode) {
    this.accountingCode = accountingCode;
  }

  public TaxCity city(String city) {
    this.city = city;
    return this;
  }

   /**
   * City
   * @return city
  **/
  @ApiModelProperty(value = "City")
  public String getCity() {
    return city;
  }

  public void setCity(String city) {
    this.city = city;
  }

  public TaxCity cityOid(Integer cityOid) {
    this.cityOid = cityOid;
    return this;
  }

   /**
   * Tax record object identifier used internally by database
   * @return cityOid
  **/
  @ApiModelProperty(value = "Tax record object identifier used internally by database")
  public Integer getCityOid() {
    return cityOid;
  }

  public void setCityOid(Integer cityOid) {
    this.cityOid = cityOid;
  }

  public TaxCity countyOid(Integer countyOid) {
    this.countyOid = countyOid;
    return this;
  }

   /**
   * Tax record object identifier used internally by database
   * @return countyOid
  **/
  @ApiModelProperty(value = "Tax record object identifier used internally by database")
  public Integer getCountyOid() {
    return countyOid;
  }

  public void setCountyOid(Integer countyOid) {
    this.countyOid = countyOid;
  }

  public TaxCity dontCollectCity(Boolean dontCollectCity) {
    this.dontCollectCity = dontCollectCity;
    return this;
  }

   /**
   * Flag instructing engine to not collect city tax for this city
   * @return dontCollectCity
  **/
  @ApiModelProperty(value = "Flag instructing engine to not collect city tax for this city")
  public Boolean isDontCollectCity() {
    return dontCollectCity;
  }

  public void setDontCollectCity(Boolean dontCollectCity) {
    this.dontCollectCity = dontCollectCity;
  }

  public TaxCity dontCollectPostalCode(Boolean dontCollectPostalCode) {
    this.dontCollectPostalCode = dontCollectPostalCode;
    return this;
  }

   /**
   * Flag instructing engine to not collect postal code tax for this city
   * @return dontCollectPostalCode
  **/
  @ApiModelProperty(value = "Flag instructing engine to not collect postal code tax for this city")
  public Boolean isDontCollectPostalCode() {
    return dontCollectPostalCode;
  }

  public void setDontCollectPostalCode(Boolean dontCollectPostalCode) {
    this.dontCollectPostalCode = dontCollectPostalCode;
  }

  public TaxCity postalCodes(List<TaxPostalCode> postalCodes) {
    this.postalCodes = postalCodes;
    return this;
  }

  public TaxCity addPostalCodesItem(TaxPostalCode postalCodesItem) {
    if (this.postalCodes == null) {
      this.postalCodes = new ArrayList<TaxPostalCode>();
    }
    this.postalCodes.add(postalCodesItem);
    return this;
  }

   /**
   * Postal Codes within this city
   * @return postalCodes
  **/
  @ApiModelProperty(value = "Postal Codes within this city")
  public List<TaxPostalCode> getPostalCodes() {
    return postalCodes;
  }

  public void setPostalCodes(List<TaxPostalCode> postalCodes) {
    this.postalCodes = postalCodes;
  }

  public TaxCity taxRate(BigDecimal taxRate) {
    this.taxRate = taxRate;
    return this;
  }

   /**
   * Tax Rate
   * @return taxRate
  **/
  @ApiModelProperty(value = "Tax Rate")
  public BigDecimal getTaxRate() {
    return taxRate;
  }

  public void setTaxRate(BigDecimal taxRate) {
    this.taxRate = taxRate;
  }

  public TaxCity taxRateFormatted(String taxRateFormatted) {
    this.taxRateFormatted = taxRateFormatted;
    return this;
  }

   /**
   * Tax rate formatted
   * @return taxRateFormatted
  **/
  @ApiModelProperty(value = "Tax rate formatted")
  public String getTaxRateFormatted() {
    return taxRateFormatted;
  }

  public void setTaxRateFormatted(String taxRateFormatted) {
    this.taxRateFormatted = taxRateFormatted;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TaxCity taxCity = (TaxCity) o;
    return Objects.equals(this.accountingCode, taxCity.accountingCode) &&
        Objects.equals(this.city, taxCity.city) &&
        Objects.equals(this.cityOid, taxCity.cityOid) &&
        Objects.equals(this.countyOid, taxCity.countyOid) &&
        Objects.equals(this.dontCollectCity, taxCity.dontCollectCity) &&
        Objects.equals(this.dontCollectPostalCode, taxCity.dontCollectPostalCode) &&
        Objects.equals(this.postalCodes, taxCity.postalCodes) &&
        Objects.equals(this.taxRate, taxCity.taxRate) &&
        Objects.equals(this.taxRateFormatted, taxCity.taxRateFormatted);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountingCode, city, cityOid, countyOid, dontCollectCity, dontCollectPostalCode, postalCodes, taxRate, taxRateFormatted);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TaxCity {\n");
    
    sb.append("    accountingCode: ").append(toIndentedString(accountingCode)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    cityOid: ").append(toIndentedString(cityOid)).append("\n");
    sb.append("    countyOid: ").append(toIndentedString(countyOid)).append("\n");
    sb.append("    dontCollectCity: ").append(toIndentedString(dontCollectCity)).append("\n");
    sb.append("    dontCollectPostalCode: ").append(toIndentedString(dontCollectPostalCode)).append("\n");
    sb.append("    postalCodes: ").append(toIndentedString(postalCodes)).append("\n");
    sb.append("    taxRate: ").append(toIndentedString(taxRate)).append("\n");
    sb.append("    taxRateFormatted: ").append(toIndentedString(taxRateFormatted)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

