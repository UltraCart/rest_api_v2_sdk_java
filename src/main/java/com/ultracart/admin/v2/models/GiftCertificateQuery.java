/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * GiftCertificateQuery
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-01-18T11:26:40.966-05:00[America/Indianapolis]")
public class GiftCertificateQuery {
  public static final String SERIALIZED_NAME_CODE = "code";
  @SerializedName(SERIALIZED_NAME_CODE)
  private String code;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_EXPIRATION_DTS_END = "expiration_dts_end";
  @SerializedName(SERIALIZED_NAME_EXPIRATION_DTS_END)
  private String expirationDtsEnd;

  public static final String SERIALIZED_NAME_EXPIRATION_DTS_START = "expiration_dts_start";
  @SerializedName(SERIALIZED_NAME_EXPIRATION_DTS_START)
  private String expirationDtsStart;

  public static final String SERIALIZED_NAME_ORIGINAL_BALANCE_END = "original_balance_end";
  @SerializedName(SERIALIZED_NAME_ORIGINAL_BALANCE_END)
  private BigDecimal originalBalanceEnd;

  public static final String SERIALIZED_NAME_ORIGINAL_BALANCE_START = "original_balance_start";
  @SerializedName(SERIALIZED_NAME_ORIGINAL_BALANCE_START)
  private BigDecimal originalBalanceStart;

  public static final String SERIALIZED_NAME_REFERENCE_ORDER_ID = "reference_order_id";
  @SerializedName(SERIALIZED_NAME_REFERENCE_ORDER_ID)
  private String referenceOrderId;

  public static final String SERIALIZED_NAME_REMAINING_BALANCE_END = "remaining_balance_end";
  @SerializedName(SERIALIZED_NAME_REMAINING_BALANCE_END)
  private BigDecimal remainingBalanceEnd;

  public static final String SERIALIZED_NAME_REMAINING_BALANCE_START = "remaining_balance_start";
  @SerializedName(SERIALIZED_NAME_REMAINING_BALANCE_START)
  private BigDecimal remainingBalanceStart;

  public GiftCertificateQuery() { 
  }

  public GiftCertificateQuery code(String code) {
    
    this.code = code;
    return this;
  }

   /**
   * Gift certificate code
   * @return code
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Gift certificate code")

  public String getCode() {
    return code;
  }


  public void setCode(String code) {
    this.code = code;
  }


  public GiftCertificateQuery email(String email) {
    
    this.email = email;
    return this;
  }

   /**
   * Email address of this gift certificate
   * @return email
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Email address of this gift certificate")

  public String getEmail() {
    return email;
  }


  public void setEmail(String email) {
    this.email = email;
  }


  public GiftCertificateQuery expirationDtsEnd(String expirationDtsEnd) {
    
    this.expirationDtsEnd = expirationDtsEnd;
    return this;
  }

   /**
   * Expiration date end
   * @return expirationDtsEnd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Expiration date end")

  public String getExpirationDtsEnd() {
    return expirationDtsEnd;
  }


  public void setExpirationDtsEnd(String expirationDtsEnd) {
    this.expirationDtsEnd = expirationDtsEnd;
  }


  public GiftCertificateQuery expirationDtsStart(String expirationDtsStart) {
    
    this.expirationDtsStart = expirationDtsStart;
    return this;
  }

   /**
   * Expiration date start
   * @return expirationDtsStart
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Expiration date start")

  public String getExpirationDtsStart() {
    return expirationDtsStart;
  }


  public void setExpirationDtsStart(String expirationDtsStart) {
    this.expirationDtsStart = expirationDtsStart;
  }


  public GiftCertificateQuery originalBalanceEnd(BigDecimal originalBalanceEnd) {
    
    this.originalBalanceEnd = originalBalanceEnd;
    return this;
  }

   /**
   * Original balance end
   * @return originalBalanceEnd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Original balance end")

  public BigDecimal getOriginalBalanceEnd() {
    return originalBalanceEnd;
  }


  public void setOriginalBalanceEnd(BigDecimal originalBalanceEnd) {
    this.originalBalanceEnd = originalBalanceEnd;
  }


  public GiftCertificateQuery originalBalanceStart(BigDecimal originalBalanceStart) {
    
    this.originalBalanceStart = originalBalanceStart;
    return this;
  }

   /**
   * Original balance start
   * @return originalBalanceStart
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Original balance start")

  public BigDecimal getOriginalBalanceStart() {
    return originalBalanceStart;
  }


  public void setOriginalBalanceStart(BigDecimal originalBalanceStart) {
    this.originalBalanceStart = originalBalanceStart;
  }


  public GiftCertificateQuery referenceOrderId(String referenceOrderId) {
    
    this.referenceOrderId = referenceOrderId;
    return this;
  }

   /**
   * Gift certificate reference order id
   * @return referenceOrderId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Gift certificate reference order id")

  public String getReferenceOrderId() {
    return referenceOrderId;
  }


  public void setReferenceOrderId(String referenceOrderId) {
    this.referenceOrderId = referenceOrderId;
  }


  public GiftCertificateQuery remainingBalanceEnd(BigDecimal remainingBalanceEnd) {
    
    this.remainingBalanceEnd = remainingBalanceEnd;
    return this;
  }

   /**
   * Remaining balance end
   * @return remainingBalanceEnd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Remaining balance end")

  public BigDecimal getRemainingBalanceEnd() {
    return remainingBalanceEnd;
  }


  public void setRemainingBalanceEnd(BigDecimal remainingBalanceEnd) {
    this.remainingBalanceEnd = remainingBalanceEnd;
  }


  public GiftCertificateQuery remainingBalanceStart(BigDecimal remainingBalanceStart) {
    
    this.remainingBalanceStart = remainingBalanceStart;
    return this;
  }

   /**
   * Remaining balance start
   * @return remainingBalanceStart
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Remaining balance start")

  public BigDecimal getRemainingBalanceStart() {
    return remainingBalanceStart;
  }


  public void setRemainingBalanceStart(BigDecimal remainingBalanceStart) {
    this.remainingBalanceStart = remainingBalanceStart;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GiftCertificateQuery giftCertificateQuery = (GiftCertificateQuery) o;
    return Objects.equals(this.code, giftCertificateQuery.code) &&
        Objects.equals(this.email, giftCertificateQuery.email) &&
        Objects.equals(this.expirationDtsEnd, giftCertificateQuery.expirationDtsEnd) &&
        Objects.equals(this.expirationDtsStart, giftCertificateQuery.expirationDtsStart) &&
        Objects.equals(this.originalBalanceEnd, giftCertificateQuery.originalBalanceEnd) &&
        Objects.equals(this.originalBalanceStart, giftCertificateQuery.originalBalanceStart) &&
        Objects.equals(this.referenceOrderId, giftCertificateQuery.referenceOrderId) &&
        Objects.equals(this.remainingBalanceEnd, giftCertificateQuery.remainingBalanceEnd) &&
        Objects.equals(this.remainingBalanceStart, giftCertificateQuery.remainingBalanceStart);
  }

  @Override
  public int hashCode() {
    return Objects.hash(code, email, expirationDtsEnd, expirationDtsStart, originalBalanceEnd, originalBalanceStart, referenceOrderId, remainingBalanceEnd, remainingBalanceStart);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GiftCertificateQuery {\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    expirationDtsEnd: ").append(toIndentedString(expirationDtsEnd)).append("\n");
    sb.append("    expirationDtsStart: ").append(toIndentedString(expirationDtsStart)).append("\n");
    sb.append("    originalBalanceEnd: ").append(toIndentedString(originalBalanceEnd)).append("\n");
    sb.append("    originalBalanceStart: ").append(toIndentedString(originalBalanceStart)).append("\n");
    sb.append("    referenceOrderId: ").append(toIndentedString(referenceOrderId)).append("\n");
    sb.append("    remainingBalanceEnd: ").append(toIndentedString(remainingBalanceEnd)).append("\n");
    sb.append("    remainingBalanceStart: ").append(toIndentedString(remainingBalanceStart)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("code");
    openapiFields.add("email");
    openapiFields.add("expiration_dts_end");
    openapiFields.add("expiration_dts_start");
    openapiFields.add("original_balance_end");
    openapiFields.add("original_balance_start");
    openapiFields.add("reference_order_id");
    openapiFields.add("remaining_balance_end");
    openapiFields.add("remaining_balance_start");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to GiftCertificateQuery
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (GiftCertificateQuery.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in GiftCertificateQuery is not found in the empty JSON string", GiftCertificateQuery.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!GiftCertificateQuery.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GiftCertificateQuery` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("code") != null && !jsonObj.get("code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("code").toString()));
      }
      if (jsonObj.get("email") != null && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if (jsonObj.get("expiration_dts_end") != null && !jsonObj.get("expiration_dts_end").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `expiration_dts_end` to be a primitive type in the JSON string but got `%s`", jsonObj.get("expiration_dts_end").toString()));
      }
      if (jsonObj.get("expiration_dts_start") != null && !jsonObj.get("expiration_dts_start").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `expiration_dts_start` to be a primitive type in the JSON string but got `%s`", jsonObj.get("expiration_dts_start").toString()));
      }
      if (jsonObj.get("reference_order_id") != null && !jsonObj.get("reference_order_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reference_order_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reference_order_id").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GiftCertificateQuery.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GiftCertificateQuery' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GiftCertificateQuery> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GiftCertificateQuery.class));

       return (TypeAdapter<T>) new TypeAdapter<GiftCertificateQuery>() {
           @Override
           public void write(JsonWriter out, GiftCertificateQuery value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GiftCertificateQuery read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of GiftCertificateQuery given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of GiftCertificateQuery
  * @throws IOException if the JSON string is invalid with respect to GiftCertificateQuery
  */
  public static GiftCertificateQuery fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GiftCertificateQuery.class);
  }

 /**
  * Convert an instance of GiftCertificateQuery to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

