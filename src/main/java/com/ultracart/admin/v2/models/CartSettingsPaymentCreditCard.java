/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * CartSettingsPaymentCreditCard
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-07-29T15:46:00.238-04:00")



public class CartSettingsPaymentCreditCard {
  @SerializedName("collect_credit_card_verification_number")
  private Boolean collectCreditCardVerificationNumber = null;

  @SerializedName("credit_card_types")
  private List<String> creditCardTypes = null;

  @SerializedName("hosted_fields_shopping_cart_token")
  private String hostedFieldsShoppingCartToken = null;

  public CartSettingsPaymentCreditCard collectCreditCardVerificationNumber(Boolean collectCreditCardVerificationNumber) {
    this.collectCreditCardVerificationNumber = collectCreditCardVerificationNumber;
    return this;
  }

   /**
   * True if the credit card verification number should be collected
   * @return collectCreditCardVerificationNumber
  **/
  @ApiModelProperty(value = "True if the credit card verification number should be collected")
  public Boolean isCollectCreditCardVerificationNumber() {
    return collectCreditCardVerificationNumber;
  }

  public void setCollectCreditCardVerificationNumber(Boolean collectCreditCardVerificationNumber) {
    this.collectCreditCardVerificationNumber = collectCreditCardVerificationNumber;
  }

  public CartSettingsPaymentCreditCard creditCardTypes(List<String> creditCardTypes) {
    this.creditCardTypes = creditCardTypes;
    return this;
  }

  public CartSettingsPaymentCreditCard addCreditCardTypesItem(String creditCardTypesItem) {
    if (this.creditCardTypes == null) {
      this.creditCardTypes = new ArrayList<String>();
    }
    this.creditCardTypes.add(creditCardTypesItem);
    return this;
  }

   /**
   * Available credit card types
   * @return creditCardTypes
  **/
  @ApiModelProperty(value = "Available credit card types")
  public List<String> getCreditCardTypes() {
    return creditCardTypes;
  }

  public void setCreditCardTypes(List<String> creditCardTypes) {
    this.creditCardTypes = creditCardTypes;
  }

  public CartSettingsPaymentCreditCard hostedFieldsShoppingCartToken(String hostedFieldsShoppingCartToken) {
    this.hostedFieldsShoppingCartToken = hostedFieldsShoppingCartToken;
    return this;
  }

   /**
   * The shoppingCartToken needed for proper initialization of hosted fields collection
   * @return hostedFieldsShoppingCartToken
  **/
  @ApiModelProperty(value = "The shoppingCartToken needed for proper initialization of hosted fields collection")
  public String getHostedFieldsShoppingCartToken() {
    return hostedFieldsShoppingCartToken;
  }

  public void setHostedFieldsShoppingCartToken(String hostedFieldsShoppingCartToken) {
    this.hostedFieldsShoppingCartToken = hostedFieldsShoppingCartToken;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CartSettingsPaymentCreditCard cartSettingsPaymentCreditCard = (CartSettingsPaymentCreditCard) o;
    return Objects.equals(this.collectCreditCardVerificationNumber, cartSettingsPaymentCreditCard.collectCreditCardVerificationNumber) &&
        Objects.equals(this.creditCardTypes, cartSettingsPaymentCreditCard.creditCardTypes) &&
        Objects.equals(this.hostedFieldsShoppingCartToken, cartSettingsPaymentCreditCard.hostedFieldsShoppingCartToken);
  }

  @Override
  public int hashCode() {
    return Objects.hash(collectCreditCardVerificationNumber, creditCardTypes, hostedFieldsShoppingCartToken);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CartSettingsPaymentCreditCard {\n");
    
    sb.append("    collectCreditCardVerificationNumber: ").append(toIndentedString(collectCreditCardVerificationNumber)).append("\n");
    sb.append("    creditCardTypes: ").append(toIndentedString(creditCardTypes)).append("\n");
    sb.append("    hostedFieldsShoppingCartToken: ").append(toIndentedString(hostedFieldsShoppingCartToken)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

