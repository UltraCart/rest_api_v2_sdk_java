/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * LibraryItemPurchasedMeta
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-07-16T14:19:28.854-04:00")



public class LibraryItemPurchasedMeta {
  @SerializedName("most_recent_version")
  private Integer mostRecentVersion = null;

  @SerializedName("my_purchased_version")
  private Integer myPurchasedVersion = null;

  @SerializedName("upgrade_available")
  private Boolean upgradeAvailable = null;

  public LibraryItemPurchasedMeta mostRecentVersion(Integer mostRecentVersion) {
    this.mostRecentVersion = mostRecentVersion;
    return this;
  }

   /**
   * The most recent version of the item purchased
   * @return mostRecentVersion
  **/
  @ApiModelProperty(value = "The most recent version of the item purchased")
  public Integer getMostRecentVersion() {
    return mostRecentVersion;
  }

  public void setMostRecentVersion(Integer mostRecentVersion) {
    this.mostRecentVersion = mostRecentVersion;
  }

  public LibraryItemPurchasedMeta myPurchasedVersion(Integer myPurchasedVersion) {
    this.myPurchasedVersion = myPurchasedVersion;
    return this;
  }

   /**
   * If this is a public item and the merchant has already purchased it, this is their version.  If not yet purchased, this will be zero.  This value will only be populated during a searchPublicItems() call.
   * @return myPurchasedVersion
  **/
  @ApiModelProperty(value = "If this is a public item and the merchant has already purchased it, this is their version.  If not yet purchased, this will be zero.  This value will only be populated during a searchPublicItems() call.")
  public Integer getMyPurchasedVersion() {
    return myPurchasedVersion;
  }

  public void setMyPurchasedVersion(Integer myPurchasedVersion) {
    this.myPurchasedVersion = myPurchasedVersion;
  }

  public LibraryItemPurchasedMeta upgradeAvailable(Boolean upgradeAvailable) {
    this.upgradeAvailable = upgradeAvailable;
    return this;
  }

   /**
   * True if the most recent version of this purchase it greater than what was purchased
   * @return upgradeAvailable
  **/
  @ApiModelProperty(value = "True if the most recent version of this purchase it greater than what was purchased")
  public Boolean isUpgradeAvailable() {
    return upgradeAvailable;
  }

  public void setUpgradeAvailable(Boolean upgradeAvailable) {
    this.upgradeAvailable = upgradeAvailable;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LibraryItemPurchasedMeta libraryItemPurchasedMeta = (LibraryItemPurchasedMeta) o;
    return Objects.equals(this.mostRecentVersion, libraryItemPurchasedMeta.mostRecentVersion) &&
        Objects.equals(this.myPurchasedVersion, libraryItemPurchasedMeta.myPurchasedVersion) &&
        Objects.equals(this.upgradeAvailable, libraryItemPurchasedMeta.upgradeAvailable);
  }

  @Override
  public int hashCode() {
    return Objects.hash(mostRecentVersion, myPurchasedVersion, upgradeAvailable);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LibraryItemPurchasedMeta {\n");
    
    sb.append("    mostRecentVersion: ").append(toIndentedString(mostRecentVersion)).append("\n");
    sb.append("    myPurchasedVersion: ").append(toIndentedString(myPurchasedVersion)).append("\n");
    sb.append("    upgradeAvailable: ").append(toIndentedString(upgradeAvailable)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

