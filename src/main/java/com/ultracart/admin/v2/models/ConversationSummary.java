/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * ConversationSummary
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-07-14T09:51:24.129-04:00")



public class ConversationSummary {
  @SerializedName("conversation_arn")
  private String conversationArn = null;

  @SerializedName("conversation_uuid")
  private String conversationUuid = null;

  @SerializedName("last_conversation_message_body")
  private String lastConversationMessageBody = null;

  @SerializedName("last_conversation_participant_arn")
  private String lastConversationParticipantArn = null;

  @SerializedName("last_conversation_participant_name")
  private String lastConversationParticipantName = null;

  @SerializedName("last_message_dts")
  private String lastMessageDts = null;

  @SerializedName("merchant_id")
  private String merchantId = null;

  @SerializedName("message_count")
  private Integer messageCount = null;

  @SerializedName("unread_messages")
  private Boolean unreadMessages = null;

  public ConversationSummary conversationArn(String conversationArn) {
    this.conversationArn = conversationArn;
    return this;
  }

   /**
   * Get conversationArn
   * @return conversationArn
  **/
  @ApiModelProperty(value = "")
  public String getConversationArn() {
    return conversationArn;
  }

  public void setConversationArn(String conversationArn) {
    this.conversationArn = conversationArn;
  }

  public ConversationSummary conversationUuid(String conversationUuid) {
    this.conversationUuid = conversationUuid;
    return this;
  }

   /**
   * Get conversationUuid
   * @return conversationUuid
  **/
  @ApiModelProperty(value = "")
  public String getConversationUuid() {
    return conversationUuid;
  }

  public void setConversationUuid(String conversationUuid) {
    this.conversationUuid = conversationUuid;
  }

  public ConversationSummary lastConversationMessageBody(String lastConversationMessageBody) {
    this.lastConversationMessageBody = lastConversationMessageBody;
    return this;
  }

   /**
   * Get lastConversationMessageBody
   * @return lastConversationMessageBody
  **/
  @ApiModelProperty(value = "")
  public String getLastConversationMessageBody() {
    return lastConversationMessageBody;
  }

  public void setLastConversationMessageBody(String lastConversationMessageBody) {
    this.lastConversationMessageBody = lastConversationMessageBody;
  }

  public ConversationSummary lastConversationParticipantArn(String lastConversationParticipantArn) {
    this.lastConversationParticipantArn = lastConversationParticipantArn;
    return this;
  }

   /**
   * Get lastConversationParticipantArn
   * @return lastConversationParticipantArn
  **/
  @ApiModelProperty(value = "")
  public String getLastConversationParticipantArn() {
    return lastConversationParticipantArn;
  }

  public void setLastConversationParticipantArn(String lastConversationParticipantArn) {
    this.lastConversationParticipantArn = lastConversationParticipantArn;
  }

  public ConversationSummary lastConversationParticipantName(String lastConversationParticipantName) {
    this.lastConversationParticipantName = lastConversationParticipantName;
    return this;
  }

   /**
   * Get lastConversationParticipantName
   * @return lastConversationParticipantName
  **/
  @ApiModelProperty(value = "")
  public String getLastConversationParticipantName() {
    return lastConversationParticipantName;
  }

  public void setLastConversationParticipantName(String lastConversationParticipantName) {
    this.lastConversationParticipantName = lastConversationParticipantName;
  }

  public ConversationSummary lastMessageDts(String lastMessageDts) {
    this.lastMessageDts = lastMessageDts;
    return this;
  }

   /**
   * Last message date/time
   * @return lastMessageDts
  **/
  @ApiModelProperty(value = "Last message date/time")
  public String getLastMessageDts() {
    return lastMessageDts;
  }

  public void setLastMessageDts(String lastMessageDts) {
    this.lastMessageDts = lastMessageDts;
  }

  public ConversationSummary merchantId(String merchantId) {
    this.merchantId = merchantId;
    return this;
  }

   /**
   * Get merchantId
   * @return merchantId
  **/
  @ApiModelProperty(value = "")
  public String getMerchantId() {
    return merchantId;
  }

  public void setMerchantId(String merchantId) {
    this.merchantId = merchantId;
  }

  public ConversationSummary messageCount(Integer messageCount) {
    this.messageCount = messageCount;
    return this;
  }

   /**
   * Get messageCount
   * @return messageCount
  **/
  @ApiModelProperty(value = "")
  public Integer getMessageCount() {
    return messageCount;
  }

  public void setMessageCount(Integer messageCount) {
    this.messageCount = messageCount;
  }

  public ConversationSummary unreadMessages(Boolean unreadMessages) {
    this.unreadMessages = unreadMessages;
    return this;
  }

   /**
   * Get unreadMessages
   * @return unreadMessages
  **/
  @ApiModelProperty(value = "")
  public Boolean isUnreadMessages() {
    return unreadMessages;
  }

  public void setUnreadMessages(Boolean unreadMessages) {
    this.unreadMessages = unreadMessages;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConversationSummary conversationSummary = (ConversationSummary) o;
    return Objects.equals(this.conversationArn, conversationSummary.conversationArn) &&
        Objects.equals(this.conversationUuid, conversationSummary.conversationUuid) &&
        Objects.equals(this.lastConversationMessageBody, conversationSummary.lastConversationMessageBody) &&
        Objects.equals(this.lastConversationParticipantArn, conversationSummary.lastConversationParticipantArn) &&
        Objects.equals(this.lastConversationParticipantName, conversationSummary.lastConversationParticipantName) &&
        Objects.equals(this.lastMessageDts, conversationSummary.lastMessageDts) &&
        Objects.equals(this.merchantId, conversationSummary.merchantId) &&
        Objects.equals(this.messageCount, conversationSummary.messageCount) &&
        Objects.equals(this.unreadMessages, conversationSummary.unreadMessages);
  }

  @Override
  public int hashCode() {
    return Objects.hash(conversationArn, conversationUuid, lastConversationMessageBody, lastConversationParticipantArn, lastConversationParticipantName, lastMessageDts, merchantId, messageCount, unreadMessages);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConversationSummary {\n");
    
    sb.append("    conversationArn: ").append(toIndentedString(conversationArn)).append("\n");
    sb.append("    conversationUuid: ").append(toIndentedString(conversationUuid)).append("\n");
    sb.append("    lastConversationMessageBody: ").append(toIndentedString(lastConversationMessageBody)).append("\n");
    sb.append("    lastConversationParticipantArn: ").append(toIndentedString(lastConversationParticipantArn)).append("\n");
    sb.append("    lastConversationParticipantName: ").append(toIndentedString(lastConversationParticipantName)).append("\n");
    sb.append("    lastMessageDts: ").append(toIndentedString(lastMessageDts)).append("\n");
    sb.append("    merchantId: ").append(toIndentedString(merchantId)).append("\n");
    sb.append("    messageCount: ").append(toIndentedString(messageCount)).append("\n");
    sb.append("    unreadMessages: ").append(toIndentedString(unreadMessages)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

