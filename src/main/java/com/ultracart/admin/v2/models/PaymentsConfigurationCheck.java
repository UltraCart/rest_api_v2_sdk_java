/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.PaymentsConfigurationRestrictions;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * PaymentsConfigurationCheck
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-12-29T11:15:51.350-05:00")



public class PaymentsConfigurationCheck {
  @SerializedName("accept_check_orders")
  private Boolean acceptCheckOrders = null;

  @SerializedName("accounting_code")
  private String accountingCode = null;

  @SerializedName("checks_payable_to")
  private String checksPayableTo = null;

  @SerializedName("deposit_to_account")
  private String depositToAccount = null;

  @SerializedName("mail_to_address1")
  private String mailToAddress1 = null;

  @SerializedName("mail_to_address2")
  private String mailToAddress2 = null;

  @SerializedName("mail_to_city")
  private String mailToCity = null;

  @SerializedName("mail_to_country")
  private String mailToCountry = null;

  @SerializedName("mail_to_name")
  private String mailToName = null;

  @SerializedName("mail_to_postal_code")
  private String mailToPostalCode = null;

  @SerializedName("mail_to_store")
  private String mailToStore = null;

  @SerializedName("restrictions")
  private PaymentsConfigurationRestrictions restrictions = null;

  public PaymentsConfigurationCheck acceptCheckOrders(Boolean acceptCheckOrders) {
    this.acceptCheckOrders = acceptCheckOrders;
    return this;
  }

   /**
   * Master flag indicating this merchant accepts paper checks
   * @return acceptCheckOrders
  **/
  @ApiModelProperty(value = "Master flag indicating this merchant accepts paper checks")
  public Boolean isAcceptCheckOrders() {
    return acceptCheckOrders;
  }

  public void setAcceptCheckOrders(Boolean acceptCheckOrders) {
    this.acceptCheckOrders = acceptCheckOrders;
  }

  public PaymentsConfigurationCheck accountingCode(String accountingCode) {
    this.accountingCode = accountingCode;
    return this;
  }

   /**
   * Optional Quickbooks accounting code
   * @return accountingCode
  **/
  @ApiModelProperty(value = "Optional Quickbooks accounting code")
  public String getAccountingCode() {
    return accountingCode;
  }

  public void setAccountingCode(String accountingCode) {
    this.accountingCode = accountingCode;
  }

  public PaymentsConfigurationCheck checksPayableTo(String checksPayableTo) {
    this.checksPayableTo = checksPayableTo;
    return this;
  }

   /**
   * This is who the customer makes the check out to
   * @return checksPayableTo
  **/
  @ApiModelProperty(value = "This is who the customer makes the check out to")
  public String getChecksPayableTo() {
    return checksPayableTo;
  }

  public void setChecksPayableTo(String checksPayableTo) {
    this.checksPayableTo = checksPayableTo;
  }

  public PaymentsConfigurationCheck depositToAccount(String depositToAccount) {
    this.depositToAccount = depositToAccount;
    return this;
  }

   /**
   * Optional Quickbooks deposit to account
   * @return depositToAccount
  **/
  @ApiModelProperty(value = "Optional Quickbooks deposit to account")
  public String getDepositToAccount() {
    return depositToAccount;
  }

  public void setDepositToAccount(String depositToAccount) {
    this.depositToAccount = depositToAccount;
  }

  public PaymentsConfigurationCheck mailToAddress1(String mailToAddress1) {
    this.mailToAddress1 = mailToAddress1;
    return this;
  }

   /**
   * MailTo address line 1
   * @return mailToAddress1
  **/
  @ApiModelProperty(value = "MailTo address line 1")
  public String getMailToAddress1() {
    return mailToAddress1;
  }

  public void setMailToAddress1(String mailToAddress1) {
    this.mailToAddress1 = mailToAddress1;
  }

  public PaymentsConfigurationCheck mailToAddress2(String mailToAddress2) {
    this.mailToAddress2 = mailToAddress2;
    return this;
  }

   /**
   * MailTo address line 2
   * @return mailToAddress2
  **/
  @ApiModelProperty(value = "MailTo address line 2")
  public String getMailToAddress2() {
    return mailToAddress2;
  }

  public void setMailToAddress2(String mailToAddress2) {
    this.mailToAddress2 = mailToAddress2;
  }

  public PaymentsConfigurationCheck mailToCity(String mailToCity) {
    this.mailToCity = mailToCity;
    return this;
  }

   /**
   * MailTo city
   * @return mailToCity
  **/
  @ApiModelProperty(value = "MailTo city")
  public String getMailToCity() {
    return mailToCity;
  }

  public void setMailToCity(String mailToCity) {
    this.mailToCity = mailToCity;
  }

  public PaymentsConfigurationCheck mailToCountry(String mailToCountry) {
    this.mailToCountry = mailToCountry;
    return this;
  }

   /**
   * MailTo country
   * @return mailToCountry
  **/
  @ApiModelProperty(value = "MailTo country")
  public String getMailToCountry() {
    return mailToCountry;
  }

  public void setMailToCountry(String mailToCountry) {
    this.mailToCountry = mailToCountry;
  }

  public PaymentsConfigurationCheck mailToName(String mailToName) {
    this.mailToName = mailToName;
    return this;
  }

   /**
   * MailTo name
   * @return mailToName
  **/
  @ApiModelProperty(value = "MailTo name")
  public String getMailToName() {
    return mailToName;
  }

  public void setMailToName(String mailToName) {
    this.mailToName = mailToName;
  }

  public PaymentsConfigurationCheck mailToPostalCode(String mailToPostalCode) {
    this.mailToPostalCode = mailToPostalCode;
    return this;
  }

   /**
   * MailTo postal code
   * @return mailToPostalCode
  **/
  @ApiModelProperty(value = "MailTo postal code")
  public String getMailToPostalCode() {
    return mailToPostalCode;
  }

  public void setMailToPostalCode(String mailToPostalCode) {
    this.mailToPostalCode = mailToPostalCode;
  }

  public PaymentsConfigurationCheck mailToStore(String mailToStore) {
    this.mailToStore = mailToStore;
    return this;
  }

   /**
   * MailTo store
   * @return mailToStore
  **/
  @ApiModelProperty(value = "MailTo store")
  public String getMailToStore() {
    return mailToStore;
  }

  public void setMailToStore(String mailToStore) {
    this.mailToStore = mailToStore;
  }

  public PaymentsConfigurationCheck restrictions(PaymentsConfigurationRestrictions restrictions) {
    this.restrictions = restrictions;
    return this;
  }

   /**
   * Get restrictions
   * @return restrictions
  **/
  @ApiModelProperty(value = "")
  public PaymentsConfigurationRestrictions getRestrictions() {
    return restrictions;
  }

  public void setRestrictions(PaymentsConfigurationRestrictions restrictions) {
    this.restrictions = restrictions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentsConfigurationCheck paymentsConfigurationCheck = (PaymentsConfigurationCheck) o;
    return Objects.equals(this.acceptCheckOrders, paymentsConfigurationCheck.acceptCheckOrders) &&
        Objects.equals(this.accountingCode, paymentsConfigurationCheck.accountingCode) &&
        Objects.equals(this.checksPayableTo, paymentsConfigurationCheck.checksPayableTo) &&
        Objects.equals(this.depositToAccount, paymentsConfigurationCheck.depositToAccount) &&
        Objects.equals(this.mailToAddress1, paymentsConfigurationCheck.mailToAddress1) &&
        Objects.equals(this.mailToAddress2, paymentsConfigurationCheck.mailToAddress2) &&
        Objects.equals(this.mailToCity, paymentsConfigurationCheck.mailToCity) &&
        Objects.equals(this.mailToCountry, paymentsConfigurationCheck.mailToCountry) &&
        Objects.equals(this.mailToName, paymentsConfigurationCheck.mailToName) &&
        Objects.equals(this.mailToPostalCode, paymentsConfigurationCheck.mailToPostalCode) &&
        Objects.equals(this.mailToStore, paymentsConfigurationCheck.mailToStore) &&
        Objects.equals(this.restrictions, paymentsConfigurationCheck.restrictions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(acceptCheckOrders, accountingCode, checksPayableTo, depositToAccount, mailToAddress1, mailToAddress2, mailToCity, mailToCountry, mailToName, mailToPostalCode, mailToStore, restrictions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentsConfigurationCheck {\n");
    
    sb.append("    acceptCheckOrders: ").append(toIndentedString(acceptCheckOrders)).append("\n");
    sb.append("    accountingCode: ").append(toIndentedString(accountingCode)).append("\n");
    sb.append("    checksPayableTo: ").append(toIndentedString(checksPayableTo)).append("\n");
    sb.append("    depositToAccount: ").append(toIndentedString(depositToAccount)).append("\n");
    sb.append("    mailToAddress1: ").append(toIndentedString(mailToAddress1)).append("\n");
    sb.append("    mailToAddress2: ").append(toIndentedString(mailToAddress2)).append("\n");
    sb.append("    mailToCity: ").append(toIndentedString(mailToCity)).append("\n");
    sb.append("    mailToCountry: ").append(toIndentedString(mailToCountry)).append("\n");
    sb.append("    mailToName: ").append(toIndentedString(mailToName)).append("\n");
    sb.append("    mailToPostalCode: ").append(toIndentedString(mailToPostalCode)).append("\n");
    sb.append("    mailToStore: ").append(toIndentedString(mailToStore)).append("\n");
    sb.append("    restrictions: ").append(toIndentedString(restrictions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

