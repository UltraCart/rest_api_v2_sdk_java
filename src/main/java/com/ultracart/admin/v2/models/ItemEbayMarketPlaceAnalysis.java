/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.ItemEbayMarketListing;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * ItemEbayMarketPlaceAnalysis
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-09-29T15:24:19.342-04:00[America/Indianapolis]")
public class ItemEbayMarketPlaceAnalysis {
  public static final String SERIALIZED_NAME_ADJUSTED_PRICE = "adjusted_price";
  @SerializedName(SERIALIZED_NAME_ADJUSTED_PRICE)
  private BigDecimal adjustedPrice;

  public static final String SERIALIZED_NAME_ADJUSTED_SHIPPING = "adjusted_shipping";
  @SerializedName(SERIALIZED_NAME_ADJUSTED_SHIPPING)
  private BigDecimal adjustedShipping;

  public static final String SERIALIZED_NAME_ADJUSTED_TOTAL = "adjusted_total";
  @SerializedName(SERIALIZED_NAME_ADJUSTED_TOTAL)
  private BigDecimal adjustedTotal;

  public static final String SERIALIZED_NAME_COGS = "cogs";
  @SerializedName(SERIALIZED_NAME_COGS)
  private BigDecimal cogs;

  public static final String SERIALIZED_NAME_FINAL_VALUE_FEE = "final_value_fee";
  @SerializedName(SERIALIZED_NAME_FINAL_VALUE_FEE)
  private BigDecimal finalValueFee;

  public static final String SERIALIZED_NAME_MINIMUM_ADVERTISED_PRICE = "minimum_advertised_price";
  @SerializedName(SERIALIZED_NAME_MINIMUM_ADVERTISED_PRICE)
  private BigDecimal minimumAdvertisedPrice;

  public static final String SERIALIZED_NAME_OTHER_LISTINGS = "other_listings";
  @SerializedName(SERIALIZED_NAME_OTHER_LISTINGS)
  private List<ItemEbayMarketListing> otherListings = null;

  public static final String SERIALIZED_NAME_OUR_LISTING = "our_listing";
  @SerializedName(SERIALIZED_NAME_OUR_LISTING)
  private ItemEbayMarketListing ourListing;

  public static final String SERIALIZED_NAME_OVERHEAD = "overhead";
  @SerializedName(SERIALIZED_NAME_OVERHEAD)
  private BigDecimal overhead;

  public static final String SERIALIZED_NAME_PROFIT_POTENTIAL = "profit_potential";
  @SerializedName(SERIALIZED_NAME_PROFIT_POTENTIAL)
  private BigDecimal profitPotential;

  public ItemEbayMarketPlaceAnalysis() { 
  }

  public ItemEbayMarketPlaceAnalysis adjustedPrice(BigDecimal adjustedPrice) {
    
    this.adjustedPrice = adjustedPrice;
    return this;
  }

   /**
   * Adjusted price
   * @return adjustedPrice
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Adjusted price")

  public BigDecimal getAdjustedPrice() {
    return adjustedPrice;
  }


  public void setAdjustedPrice(BigDecimal adjustedPrice) {
    this.adjustedPrice = adjustedPrice;
  }


  public ItemEbayMarketPlaceAnalysis adjustedShipping(BigDecimal adjustedShipping) {
    
    this.adjustedShipping = adjustedShipping;
    return this;
  }

   /**
   * Adjusted shipping
   * @return adjustedShipping
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Adjusted shipping")

  public BigDecimal getAdjustedShipping() {
    return adjustedShipping;
  }


  public void setAdjustedShipping(BigDecimal adjustedShipping) {
    this.adjustedShipping = adjustedShipping;
  }


  public ItemEbayMarketPlaceAnalysis adjustedTotal(BigDecimal adjustedTotal) {
    
    this.adjustedTotal = adjustedTotal;
    return this;
  }

   /**
   * Adjusted total
   * @return adjustedTotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Adjusted total")

  public BigDecimal getAdjustedTotal() {
    return adjustedTotal;
  }


  public void setAdjustedTotal(BigDecimal adjustedTotal) {
    this.adjustedTotal = adjustedTotal;
  }


  public ItemEbayMarketPlaceAnalysis cogs(BigDecimal cogs) {
    
    this.cogs = cogs;
    return this;
  }

   /**
   * Cost of goods sold
   * @return cogs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Cost of goods sold")

  public BigDecimal getCogs() {
    return cogs;
  }


  public void setCogs(BigDecimal cogs) {
    this.cogs = cogs;
  }


  public ItemEbayMarketPlaceAnalysis finalValueFee(BigDecimal finalValueFee) {
    
    this.finalValueFee = finalValueFee;
    return this;
  }

   /**
   * Final value fee
   * @return finalValueFee
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Final value fee")

  public BigDecimal getFinalValueFee() {
    return finalValueFee;
  }


  public void setFinalValueFee(BigDecimal finalValueFee) {
    this.finalValueFee = finalValueFee;
  }


  public ItemEbayMarketPlaceAnalysis minimumAdvertisedPrice(BigDecimal minimumAdvertisedPrice) {
    
    this.minimumAdvertisedPrice = minimumAdvertisedPrice;
    return this;
  }

   /**
   * Minimum advertised price
   * @return minimumAdvertisedPrice
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Minimum advertised price")

  public BigDecimal getMinimumAdvertisedPrice() {
    return minimumAdvertisedPrice;
  }


  public void setMinimumAdvertisedPrice(BigDecimal minimumAdvertisedPrice) {
    this.minimumAdvertisedPrice = minimumAdvertisedPrice;
  }


  public ItemEbayMarketPlaceAnalysis otherListings(List<ItemEbayMarketListing> otherListings) {
    
    this.otherListings = otherListings;
    return this;
  }

  public ItemEbayMarketPlaceAnalysis addOtherListingsItem(ItemEbayMarketListing otherListingsItem) {
    if (this.otherListings == null) {
      this.otherListings = new ArrayList<>();
    }
    this.otherListings.add(otherListingsItem);
    return this;
  }

   /**
   * Other listings
   * @return otherListings
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Other listings")

  public List<ItemEbayMarketListing> getOtherListings() {
    return otherListings;
  }


  public void setOtherListings(List<ItemEbayMarketListing> otherListings) {
    this.otherListings = otherListings;
  }


  public ItemEbayMarketPlaceAnalysis ourListing(ItemEbayMarketListing ourListing) {
    
    this.ourListing = ourListing;
    return this;
  }

   /**
   * Get ourListing
   * @return ourListing
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ItemEbayMarketListing getOurListing() {
    return ourListing;
  }


  public void setOurListing(ItemEbayMarketListing ourListing) {
    this.ourListing = ourListing;
  }


  public ItemEbayMarketPlaceAnalysis overhead(BigDecimal overhead) {
    
    this.overhead = overhead;
    return this;
  }

   /**
   * Overhead
   * @return overhead
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Overhead")

  public BigDecimal getOverhead() {
    return overhead;
  }


  public void setOverhead(BigDecimal overhead) {
    this.overhead = overhead;
  }


  public ItemEbayMarketPlaceAnalysis profitPotential(BigDecimal profitPotential) {
    
    this.profitPotential = profitPotential;
    return this;
  }

   /**
   * Profit potential
   * @return profitPotential
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Profit potential")

  public BigDecimal getProfitPotential() {
    return profitPotential;
  }


  public void setProfitPotential(BigDecimal profitPotential) {
    this.profitPotential = profitPotential;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ItemEbayMarketPlaceAnalysis itemEbayMarketPlaceAnalysis = (ItemEbayMarketPlaceAnalysis) o;
    return Objects.equals(this.adjustedPrice, itemEbayMarketPlaceAnalysis.adjustedPrice) &&
        Objects.equals(this.adjustedShipping, itemEbayMarketPlaceAnalysis.adjustedShipping) &&
        Objects.equals(this.adjustedTotal, itemEbayMarketPlaceAnalysis.adjustedTotal) &&
        Objects.equals(this.cogs, itemEbayMarketPlaceAnalysis.cogs) &&
        Objects.equals(this.finalValueFee, itemEbayMarketPlaceAnalysis.finalValueFee) &&
        Objects.equals(this.minimumAdvertisedPrice, itemEbayMarketPlaceAnalysis.minimumAdvertisedPrice) &&
        Objects.equals(this.otherListings, itemEbayMarketPlaceAnalysis.otherListings) &&
        Objects.equals(this.ourListing, itemEbayMarketPlaceAnalysis.ourListing) &&
        Objects.equals(this.overhead, itemEbayMarketPlaceAnalysis.overhead) &&
        Objects.equals(this.profitPotential, itemEbayMarketPlaceAnalysis.profitPotential);
  }

  @Override
  public int hashCode() {
    return Objects.hash(adjustedPrice, adjustedShipping, adjustedTotal, cogs, finalValueFee, minimumAdvertisedPrice, otherListings, ourListing, overhead, profitPotential);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ItemEbayMarketPlaceAnalysis {\n");
    sb.append("    adjustedPrice: ").append(toIndentedString(adjustedPrice)).append("\n");
    sb.append("    adjustedShipping: ").append(toIndentedString(adjustedShipping)).append("\n");
    sb.append("    adjustedTotal: ").append(toIndentedString(adjustedTotal)).append("\n");
    sb.append("    cogs: ").append(toIndentedString(cogs)).append("\n");
    sb.append("    finalValueFee: ").append(toIndentedString(finalValueFee)).append("\n");
    sb.append("    minimumAdvertisedPrice: ").append(toIndentedString(minimumAdvertisedPrice)).append("\n");
    sb.append("    otherListings: ").append(toIndentedString(otherListings)).append("\n");
    sb.append("    ourListing: ").append(toIndentedString(ourListing)).append("\n");
    sb.append("    overhead: ").append(toIndentedString(overhead)).append("\n");
    sb.append("    profitPotential: ").append(toIndentedString(profitPotential)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("adjusted_price");
    openapiFields.add("adjusted_shipping");
    openapiFields.add("adjusted_total");
    openapiFields.add("cogs");
    openapiFields.add("final_value_fee");
    openapiFields.add("minimum_advertised_price");
    openapiFields.add("other_listings");
    openapiFields.add("our_listing");
    openapiFields.add("overhead");
    openapiFields.add("profit_potential");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ItemEbayMarketPlaceAnalysis
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (ItemEbayMarketPlaceAnalysis.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in ItemEbayMarketPlaceAnalysis is not found in the empty JSON string", ItemEbayMarketPlaceAnalysis.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!ItemEbayMarketPlaceAnalysis.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ItemEbayMarketPlaceAnalysis` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      JsonArray jsonArrayotherListings = jsonObj.getAsJsonArray("other_listings");
      if (jsonArrayotherListings != null) {
        // ensure the json data is an array
        if (!jsonObj.get("other_listings").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `other_listings` to be an array in the JSON string but got `%s`", jsonObj.get("other_listings").toString()));
        }

        // validate the optional field `other_listings` (array)
        for (int i = 0; i < jsonArrayotherListings.size(); i++) {
          ItemEbayMarketListing.validateJsonObject(jsonArrayotherListings.get(i).getAsJsonObject());
        };
      }
      // validate the optional field `our_listing`
      if (jsonObj.getAsJsonObject("our_listing") != null) {
        ItemEbayMarketListing.validateJsonObject(jsonObj.getAsJsonObject("our_listing"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ItemEbayMarketPlaceAnalysis.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ItemEbayMarketPlaceAnalysis' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ItemEbayMarketPlaceAnalysis> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ItemEbayMarketPlaceAnalysis.class));

       return (TypeAdapter<T>) new TypeAdapter<ItemEbayMarketPlaceAnalysis>() {
           @Override
           public void write(JsonWriter out, ItemEbayMarketPlaceAnalysis value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ItemEbayMarketPlaceAnalysis read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ItemEbayMarketPlaceAnalysis given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ItemEbayMarketPlaceAnalysis
  * @throws IOException if the JSON string is invalid with respect to ItemEbayMarketPlaceAnalysis
  */
  public static ItemEbayMarketPlaceAnalysis fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ItemEbayMarketPlaceAnalysis.class);
  }

 /**
  * Convert an instance of ItemEbayMarketPlaceAnalysis to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

