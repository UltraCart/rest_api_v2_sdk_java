/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.AutoOrderItem;
import com.ultracart.admin.v2.models.Order;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * OrderAutoOrder
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-01-31T15:48:16.171-05:00")



public class OrderAutoOrder {
  @SerializedName("auto_order_code")
  private String autoOrderCode = null;

  @SerializedName("auto_order_oid")
  private Integer autoOrderOid = null;

  @SerializedName("cancel_after_next_x_orders")
  private Integer cancelAfterNextXOrders = null;

  @SerializedName("cancel_downgrade")
  private Boolean cancelDowngrade = null;

  @SerializedName("cancel_reason")
  private String cancelReason = null;

  @SerializedName("cancel_upgrade")
  private Boolean cancelUpgrade = null;

  @SerializedName("canceled_by_user")
  private String canceledByUser = null;

  @SerializedName("canceled_dts")
  private String canceledDts = null;

  @SerializedName("completed")
  private Boolean completed = null;

  @SerializedName("credit_card_attempt")
  private Integer creditCardAttempt = null;

  @SerializedName("disabled_dts")
  private String disabledDts = null;

  @SerializedName("enabled")
  private Boolean enabled = null;

  @SerializedName("failure_reason")
  private String failureReason = null;

  @SerializedName("items")
  private List<AutoOrderItem> items = null;

  @SerializedName("next_attempt")
  private String nextAttempt = null;

  @SerializedName("original_order_id")
  private String originalOrderId = null;

  @SerializedName("override_affiliate_id")
  private Integer overrideAffiliateId = null;

  @SerializedName("rebill_orders")
  private List<Order> rebillOrders = null;

  @SerializedName("rotating_transaction_gateway_code")
  private String rotatingTransactionGatewayCode = null;

  /**
   * The status of the auto order
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    ACTIVE("active"),
    
    CANCELED("canceled"),
    
    DISABLED("disabled");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("status")
  private StatusEnum status = null;

  public OrderAutoOrder autoOrderCode(String autoOrderCode) {
    this.autoOrderCode = autoOrderCode;
    return this;
  }

   /**
   * Unique code assigned to this auto order
   * @return autoOrderCode
  **/
  @ApiModelProperty(value = "Unique code assigned to this auto order")
  public String getAutoOrderCode() {
    return autoOrderCode;
  }

  public void setAutoOrderCode(String autoOrderCode) {
    this.autoOrderCode = autoOrderCode;
  }

  public OrderAutoOrder autoOrderOid(Integer autoOrderOid) {
    this.autoOrderOid = autoOrderOid;
    return this;
  }

   /**
   * Auto order object identifier
   * @return autoOrderOid
  **/
  @ApiModelProperty(value = "Auto order object identifier")
  public Integer getAutoOrderOid() {
    return autoOrderOid;
  }

  public void setAutoOrderOid(Integer autoOrderOid) {
    this.autoOrderOid = autoOrderOid;
  }

  public OrderAutoOrder cancelAfterNextXOrders(Integer cancelAfterNextXOrders) {
    this.cancelAfterNextXOrders = cancelAfterNextXOrders;
    return this;
  }

   /**
   * Cancel this auto order after X additional rebills
   * @return cancelAfterNextXOrders
  **/
  @ApiModelProperty(value = "Cancel this auto order after X additional rebills")
  public Integer getCancelAfterNextXOrders() {
    return cancelAfterNextXOrders;
  }

  public void setCancelAfterNextXOrders(Integer cancelAfterNextXOrders) {
    this.cancelAfterNextXOrders = cancelAfterNextXOrders;
  }

  public OrderAutoOrder cancelDowngrade(Boolean cancelDowngrade) {
    this.cancelDowngrade = cancelDowngrade;
    return this;
  }

   /**
   * True if the auto order was canceled because the customer purchased a downgrade item
   * @return cancelDowngrade
  **/
  @ApiModelProperty(value = "True if the auto order was canceled because the customer purchased a downgrade item")
  public Boolean isCancelDowngrade() {
    return cancelDowngrade;
  }

  public void setCancelDowngrade(Boolean cancelDowngrade) {
    this.cancelDowngrade = cancelDowngrade;
  }

  public OrderAutoOrder cancelReason(String cancelReason) {
    this.cancelReason = cancelReason;
    return this;
  }

   /**
   * The reason this auto order was canceled by either merchant or customer
   * @return cancelReason
  **/
  @ApiModelProperty(value = "The reason this auto order was canceled by either merchant or customer")
  public String getCancelReason() {
    return cancelReason;
  }

  public void setCancelReason(String cancelReason) {
    this.cancelReason = cancelReason;
  }

  public OrderAutoOrder cancelUpgrade(Boolean cancelUpgrade) {
    this.cancelUpgrade = cancelUpgrade;
    return this;
  }

   /**
   * True if the auto order was canceled because the customer purchased an upgrade item
   * @return cancelUpgrade
  **/
  @ApiModelProperty(value = "True if the auto order was canceled because the customer purchased an upgrade item")
  public Boolean isCancelUpgrade() {
    return cancelUpgrade;
  }

  public void setCancelUpgrade(Boolean cancelUpgrade) {
    this.cancelUpgrade = cancelUpgrade;
  }

  public OrderAutoOrder canceledByUser(String canceledByUser) {
    this.canceledByUser = canceledByUser;
    return this;
  }

   /**
   * The user that canceled the auto order
   * @return canceledByUser
  **/
  @ApiModelProperty(value = "The user that canceled the auto order")
  public String getCanceledByUser() {
    return canceledByUser;
  }

  public void setCanceledByUser(String canceledByUser) {
    this.canceledByUser = canceledByUser;
  }

  public OrderAutoOrder canceledDts(String canceledDts) {
    this.canceledDts = canceledDts;
    return this;
  }

   /**
   * The date/time that the auto order was canceled
   * @return canceledDts
  **/
  @ApiModelProperty(value = "The date/time that the auto order was canceled")
  public String getCanceledDts() {
    return canceledDts;
  }

  public void setCanceledDts(String canceledDts) {
    this.canceledDts = canceledDts;
  }

  public OrderAutoOrder completed(Boolean completed) {
    this.completed = completed;
    return this;
  }

   /**
   * True if the auto order ran successfully to completion
   * @return completed
  **/
  @ApiModelProperty(value = "True if the auto order ran successfully to completion")
  public Boolean isCompleted() {
    return completed;
  }

  public void setCompleted(Boolean completed) {
    this.completed = completed;
  }

  public OrderAutoOrder creditCardAttempt(Integer creditCardAttempt) {
    this.creditCardAttempt = creditCardAttempt;
    return this;
  }

   /**
   * The number of credit card attempts that have taken place
   * @return creditCardAttempt
  **/
  @ApiModelProperty(value = "The number of credit card attempts that have taken place")
  public Integer getCreditCardAttempt() {
    return creditCardAttempt;
  }

  public void setCreditCardAttempt(Integer creditCardAttempt) {
    this.creditCardAttempt = creditCardAttempt;
  }

  public OrderAutoOrder disabledDts(String disabledDts) {
    this.disabledDts = disabledDts;
    return this;
  }

   /**
   * The date/time the auto order was disabled due to failed rebills
   * @return disabledDts
  **/
  @ApiModelProperty(value = "The date/time the auto order was disabled due to failed rebills")
  public String getDisabledDts() {
    return disabledDts;
  }

  public void setDisabledDts(String disabledDts) {
    this.disabledDts = disabledDts;
  }

  public OrderAutoOrder enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * True if this auto order is enabled
   * @return enabled
  **/
  @ApiModelProperty(value = "True if this auto order is enabled")
  public Boolean isEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }

  public OrderAutoOrder failureReason(String failureReason) {
    this.failureReason = failureReason;
    return this;
  }

   /**
   * The reason this auto order failed during the last rebill attempt
   * @return failureReason
  **/
  @ApiModelProperty(value = "The reason this auto order failed during the last rebill attempt")
  public String getFailureReason() {
    return failureReason;
  }

  public void setFailureReason(String failureReason) {
    this.failureReason = failureReason;
  }

  public OrderAutoOrder items(List<AutoOrderItem> items) {
    this.items = items;
    return this;
  }

  public OrderAutoOrder addItemsItem(AutoOrderItem itemsItem) {
    if (this.items == null) {
      this.items = new ArrayList<AutoOrderItem>();
    }
    this.items.add(itemsItem);
    return this;
  }

   /**
   * The items that are setup to rebill
   * @return items
  **/
  @ApiModelProperty(value = "The items that are setup to rebill")
  public List<AutoOrderItem> getItems() {
    return items;
  }

  public void setItems(List<AutoOrderItem> items) {
    this.items = items;
  }

  public OrderAutoOrder nextAttempt(String nextAttempt) {
    this.nextAttempt = nextAttempt;
    return this;
  }

   /**
   * The next time that the auto order will be attempted for processing
   * @return nextAttempt
  **/
  @ApiModelProperty(value = "The next time that the auto order will be attempted for processing")
  public String getNextAttempt() {
    return nextAttempt;
  }

  public void setNextAttempt(String nextAttempt) {
    this.nextAttempt = nextAttempt;
  }

  public OrderAutoOrder originalOrderId(String originalOrderId) {
    this.originalOrderId = originalOrderId;
    return this;
  }

   /**
   * The original order id that this auto order is associated with.
   * @return originalOrderId
  **/
  @ApiModelProperty(value = "The original order id that this auto order is associated with.")
  public String getOriginalOrderId() {
    return originalOrderId;
  }

  public void setOriginalOrderId(String originalOrderId) {
    this.originalOrderId = originalOrderId;
  }

  public OrderAutoOrder overrideAffiliateId(Integer overrideAffiliateId) {
    this.overrideAffiliateId = overrideAffiliateId;
    return this;
  }

   /**
   * Override the affiliate id given credit for rebills of this auto order
   * @return overrideAffiliateId
  **/
  @ApiModelProperty(value = "Override the affiliate id given credit for rebills of this auto order")
  public Integer getOverrideAffiliateId() {
    return overrideAffiliateId;
  }

  public void setOverrideAffiliateId(Integer overrideAffiliateId) {
    this.overrideAffiliateId = overrideAffiliateId;
  }

  public OrderAutoOrder rebillOrders(List<Order> rebillOrders) {
    this.rebillOrders = rebillOrders;
    return this;
  }

  public OrderAutoOrder addRebillOrdersItem(Order rebillOrdersItem) {
    if (this.rebillOrders == null) {
      this.rebillOrders = new ArrayList<Order>();
    }
    this.rebillOrders.add(rebillOrdersItem);
    return this;
  }

   /**
   * Rebill orders that have taken place on this auto order
   * @return rebillOrders
  **/
  @ApiModelProperty(value = "Rebill orders that have taken place on this auto order")
  public List<Order> getRebillOrders() {
    return rebillOrders;
  }

  public void setRebillOrders(List<Order> rebillOrders) {
    this.rebillOrders = rebillOrders;
  }

  public OrderAutoOrder rotatingTransactionGatewayCode(String rotatingTransactionGatewayCode) {
    this.rotatingTransactionGatewayCode = rotatingTransactionGatewayCode;
    return this;
  }

   /**
   * The RTG code associated with this order for future rebills
   * @return rotatingTransactionGatewayCode
  **/
  @ApiModelProperty(value = "The RTG code associated with this order for future rebills")
  public String getRotatingTransactionGatewayCode() {
    return rotatingTransactionGatewayCode;
  }

  public void setRotatingTransactionGatewayCode(String rotatingTransactionGatewayCode) {
    this.rotatingTransactionGatewayCode = rotatingTransactionGatewayCode;
  }

  public OrderAutoOrder status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * The status of the auto order
   * @return status
  **/
  @ApiModelProperty(value = "The status of the auto order")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderAutoOrder orderAutoOrder = (OrderAutoOrder) o;
    return Objects.equals(this.autoOrderCode, orderAutoOrder.autoOrderCode) &&
        Objects.equals(this.autoOrderOid, orderAutoOrder.autoOrderOid) &&
        Objects.equals(this.cancelAfterNextXOrders, orderAutoOrder.cancelAfterNextXOrders) &&
        Objects.equals(this.cancelDowngrade, orderAutoOrder.cancelDowngrade) &&
        Objects.equals(this.cancelReason, orderAutoOrder.cancelReason) &&
        Objects.equals(this.cancelUpgrade, orderAutoOrder.cancelUpgrade) &&
        Objects.equals(this.canceledByUser, orderAutoOrder.canceledByUser) &&
        Objects.equals(this.canceledDts, orderAutoOrder.canceledDts) &&
        Objects.equals(this.completed, orderAutoOrder.completed) &&
        Objects.equals(this.creditCardAttempt, orderAutoOrder.creditCardAttempt) &&
        Objects.equals(this.disabledDts, orderAutoOrder.disabledDts) &&
        Objects.equals(this.enabled, orderAutoOrder.enabled) &&
        Objects.equals(this.failureReason, orderAutoOrder.failureReason) &&
        Objects.equals(this.items, orderAutoOrder.items) &&
        Objects.equals(this.nextAttempt, orderAutoOrder.nextAttempt) &&
        Objects.equals(this.originalOrderId, orderAutoOrder.originalOrderId) &&
        Objects.equals(this.overrideAffiliateId, orderAutoOrder.overrideAffiliateId) &&
        Objects.equals(this.rebillOrders, orderAutoOrder.rebillOrders) &&
        Objects.equals(this.rotatingTransactionGatewayCode, orderAutoOrder.rotatingTransactionGatewayCode) &&
        Objects.equals(this.status, orderAutoOrder.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(autoOrderCode, autoOrderOid, cancelAfterNextXOrders, cancelDowngrade, cancelReason, cancelUpgrade, canceledByUser, canceledDts, completed, creditCardAttempt, disabledDts, enabled, failureReason, items, nextAttempt, originalOrderId, overrideAffiliateId, rebillOrders, rotatingTransactionGatewayCode, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderAutoOrder {\n");
    
    sb.append("    autoOrderCode: ").append(toIndentedString(autoOrderCode)).append("\n");
    sb.append("    autoOrderOid: ").append(toIndentedString(autoOrderOid)).append("\n");
    sb.append("    cancelAfterNextXOrders: ").append(toIndentedString(cancelAfterNextXOrders)).append("\n");
    sb.append("    cancelDowngrade: ").append(toIndentedString(cancelDowngrade)).append("\n");
    sb.append("    cancelReason: ").append(toIndentedString(cancelReason)).append("\n");
    sb.append("    cancelUpgrade: ").append(toIndentedString(cancelUpgrade)).append("\n");
    sb.append("    canceledByUser: ").append(toIndentedString(canceledByUser)).append("\n");
    sb.append("    canceledDts: ").append(toIndentedString(canceledDts)).append("\n");
    sb.append("    completed: ").append(toIndentedString(completed)).append("\n");
    sb.append("    creditCardAttempt: ").append(toIndentedString(creditCardAttempt)).append("\n");
    sb.append("    disabledDts: ").append(toIndentedString(disabledDts)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    failureReason: ").append(toIndentedString(failureReason)).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("    nextAttempt: ").append(toIndentedString(nextAttempt)).append("\n");
    sb.append("    originalOrderId: ").append(toIndentedString(originalOrderId)).append("\n");
    sb.append("    overrideAffiliateId: ").append(toIndentedString(overrideAffiliateId)).append("\n");
    sb.append("    rebillOrders: ").append(toIndentedString(rebillOrders)).append("\n");
    sb.append("    rotatingTransactionGatewayCode: ").append(toIndentedString(rotatingTransactionGatewayCode)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

