/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.PaymentsConfigurationRestrictions;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * PaymentsConfigurationPurchaseOrder
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-02-16T15:51:01.740-05:00")



public class PaymentsConfigurationPurchaseOrder {
  @SerializedName("accept_purchase_orders")
  private Boolean acceptPurchaseOrders = null;

  @SerializedName("approved_customers_only")
  private Boolean approvedCustomersOnly = null;

  @SerializedName("prevent_duplicate_number")
  private Boolean preventDuplicateNumber = null;

  @SerializedName("restrictions")
  private PaymentsConfigurationRestrictions restrictions = null;

  public PaymentsConfigurationPurchaseOrder acceptPurchaseOrders(Boolean acceptPurchaseOrders) {
    this.acceptPurchaseOrders = acceptPurchaseOrders;
    return this;
  }

   /**
   * Master flag indicating this merchant accepts purchase orders
   * @return acceptPurchaseOrders
  **/
  @ApiModelProperty(value = "Master flag indicating this merchant accepts purchase orders")
  public Boolean isAcceptPurchaseOrders() {
    return acceptPurchaseOrders;
  }

  public void setAcceptPurchaseOrders(Boolean acceptPurchaseOrders) {
    this.acceptPurchaseOrders = acceptPurchaseOrders;
  }

  public PaymentsConfigurationPurchaseOrder approvedCustomersOnly(Boolean approvedCustomersOnly) {
    this.approvedCustomersOnly = approvedCustomersOnly;
    return this;
  }

   /**
   * If true, only approved customers may pay with a purchase order
   * @return approvedCustomersOnly
  **/
  @ApiModelProperty(value = "If true, only approved customers may pay with a purchase order")
  public Boolean isApprovedCustomersOnly() {
    return approvedCustomersOnly;
  }

  public void setApprovedCustomersOnly(Boolean approvedCustomersOnly) {
    this.approvedCustomersOnly = approvedCustomersOnly;
  }

  public PaymentsConfigurationPurchaseOrder preventDuplicateNumber(Boolean preventDuplicateNumber) {
    this.preventDuplicateNumber = preventDuplicateNumber;
    return this;
  }

   /**
   * If true, customers may not use duplicate PO numbers for any order
   * @return preventDuplicateNumber
  **/
  @ApiModelProperty(value = "If true, customers may not use duplicate PO numbers for any order")
  public Boolean isPreventDuplicateNumber() {
    return preventDuplicateNumber;
  }

  public void setPreventDuplicateNumber(Boolean preventDuplicateNumber) {
    this.preventDuplicateNumber = preventDuplicateNumber;
  }

  public PaymentsConfigurationPurchaseOrder restrictions(PaymentsConfigurationRestrictions restrictions) {
    this.restrictions = restrictions;
    return this;
  }

   /**
   * Get restrictions
   * @return restrictions
  **/
  @ApiModelProperty(value = "")
  public PaymentsConfigurationRestrictions getRestrictions() {
    return restrictions;
  }

  public void setRestrictions(PaymentsConfigurationRestrictions restrictions) {
    this.restrictions = restrictions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentsConfigurationPurchaseOrder paymentsConfigurationPurchaseOrder = (PaymentsConfigurationPurchaseOrder) o;
    return Objects.equals(this.acceptPurchaseOrders, paymentsConfigurationPurchaseOrder.acceptPurchaseOrders) &&
        Objects.equals(this.approvedCustomersOnly, paymentsConfigurationPurchaseOrder.approvedCustomersOnly) &&
        Objects.equals(this.preventDuplicateNumber, paymentsConfigurationPurchaseOrder.preventDuplicateNumber) &&
        Objects.equals(this.restrictions, paymentsConfigurationPurchaseOrder.restrictions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(acceptPurchaseOrders, approvedCustomersOnly, preventDuplicateNumber, restrictions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentsConfigurationPurchaseOrder {\n");
    
    sb.append("    acceptPurchaseOrders: ").append(toIndentedString(acceptPurchaseOrders)).append("\n");
    sb.append("    approvedCustomersOnly: ").append(toIndentedString(approvedCustomersOnly)).append("\n");
    sb.append("    preventDuplicateNumber: ").append(toIndentedString(preventDuplicateNumber)).append("\n");
    sb.append("    restrictions: ").append(toIndentedString(restrictions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

