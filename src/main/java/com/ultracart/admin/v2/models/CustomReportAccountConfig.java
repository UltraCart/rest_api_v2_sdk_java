/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * CustomReportAccountConfig
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-09-09T15:29:19.921-04:00[America/Indianapolis]")
public class CustomReportAccountConfig {
  public static final String SERIALIZED_NAME_AI_BUDGET = "ai_budget";
  @SerializedName(SERIALIZED_NAME_AI_BUDGET)
  private BigDecimal aiBudget;

  public static final String SERIALIZED_NAME_AI_USAGE = "ai_usage";
  @SerializedName(SERIALIZED_NAME_AI_USAGE)
  private BigDecimal aiUsage;

  public static final String SERIALIZED_NAME_MERCHANT_ID = "merchant_id";
  @SerializedName(SERIALIZED_NAME_MERCHANT_ID)
  private String merchantId;

  public static final String SERIALIZED_NAME_NOVICE_SQL_COMMENTS = "novice_sql_comments";
  @SerializedName(SERIALIZED_NAME_NOVICE_SQL_COMMENTS)
  private Boolean noviceSqlComments;

  public static final String SERIALIZED_NAME_OPT_IN = "opt_in";
  @SerializedName(SERIALIZED_NAME_OPT_IN)
  private Boolean optIn;

  public static final String SERIALIZED_NAME_OPT_IN_BY_USER = "opt_in_by_user";
  @SerializedName(SERIALIZED_NAME_OPT_IN_BY_USER)
  private String optInByUser;

  public static final String SERIALIZED_NAME_OPT_IN_DATE = "opt_in_date";
  @SerializedName(SERIALIZED_NAME_OPT_IN_DATE)
  private String optInDate;

  public static final String SERIALIZED_NAME_READ_ONLY = "read_only";
  @SerializedName(SERIALIZED_NAME_READ_ONLY)
  private Boolean readOnly;

  public static final String SERIALIZED_NAME_SQL_BUDGET = "sql_budget";
  @SerializedName(SERIALIZED_NAME_SQL_BUDGET)
  private BigDecimal sqlBudget;

  public static final String SERIALIZED_NAME_SQL_USAGE = "sql_usage";
  @SerializedName(SERIALIZED_NAME_SQL_USAGE)
  private BigDecimal sqlUsage;

  public CustomReportAccountConfig() { 
  }

  public CustomReportAccountConfig aiBudget(BigDecimal aiBudget) {
    
    this.aiBudget = aiBudget;
    return this;
  }

   /**
   * Get aiBudget
   * @return aiBudget
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getAiBudget() {
    return aiBudget;
  }


  public void setAiBudget(BigDecimal aiBudget) {
    this.aiBudget = aiBudget;
  }


  public CustomReportAccountConfig aiUsage(BigDecimal aiUsage) {
    
    this.aiUsage = aiUsage;
    return this;
  }

   /**
   * Current AI usage creating reports
   * @return aiUsage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Current AI usage creating reports")

  public BigDecimal getAiUsage() {
    return aiUsage;
  }


  public void setAiUsage(BigDecimal aiUsage) {
    this.aiUsage = aiUsage;
  }


  public CustomReportAccountConfig merchantId(String merchantId) {
    
    this.merchantId = merchantId;
    return this;
  }

   /**
   * Current BigQuery SQL usage running reports
   * @return merchantId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Current BigQuery SQL usage running reports")

  public String getMerchantId() {
    return merchantId;
  }


  public void setMerchantId(String merchantId) {
    this.merchantId = merchantId;
  }


  public CustomReportAccountConfig noviceSqlComments(Boolean noviceSqlComments) {
    
    this.noviceSqlComments = noviceSqlComments;
    return this;
  }

   /**
   * Get noviceSqlComments
   * @return noviceSqlComments
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getNoviceSqlComments() {
    return noviceSqlComments;
  }


  public void setNoviceSqlComments(Boolean noviceSqlComments) {
    this.noviceSqlComments = noviceSqlComments;
  }


  public CustomReportAccountConfig optIn(Boolean optIn) {
    
    this.optIn = optIn;
    return this;
  }

   /**
   * True if they have opted into custom reports
   * @return optIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if they have opted into custom reports")

  public Boolean getOptIn() {
    return optIn;
  }


  public void setOptIn(Boolean optIn) {
    this.optIn = optIn;
  }


  public CustomReportAccountConfig optInByUser(String optInByUser) {
    
    this.optInByUser = optInByUser;
    return this;
  }

   /**
   * User that opted into custom reporting
   * @return optInByUser
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "User that opted into custom reporting")

  public String getOptInByUser() {
    return optInByUser;
  }


  public void setOptInByUser(String optInByUser) {
    this.optInByUser = optInByUser;
  }


  public CustomReportAccountConfig optInDate(String optInDate) {
    
    this.optInDate = optInDate;
    return this;
  }

   /**
   * Date/time that custom reporting was opted in to
   * @return optInDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Date/time that custom reporting was opted in to")

  public String getOptInDate() {
    return optInDate;
  }


  public void setOptInDate(String optInDate) {
    this.optInDate = optInDate;
  }


  public CustomReportAccountConfig readOnly(Boolean readOnly) {
    
    this.readOnly = readOnly;
    return this;
  }

   /**
   * Get readOnly
   * @return readOnly
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getReadOnly() {
    return readOnly;
  }


  public void setReadOnly(Boolean readOnly) {
    this.readOnly = readOnly;
  }


  public CustomReportAccountConfig sqlBudget(BigDecimal sqlBudget) {
    
    this.sqlBudget = sqlBudget;
    return this;
  }

   /**
   * Get sqlBudget
   * @return sqlBudget
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getSqlBudget() {
    return sqlBudget;
  }


  public void setSqlBudget(BigDecimal sqlBudget) {
    this.sqlBudget = sqlBudget;
  }


  public CustomReportAccountConfig sqlUsage(BigDecimal sqlUsage) {
    
    this.sqlUsage = sqlUsage;
    return this;
  }

   /**
   * Get sqlUsage
   * @return sqlUsage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getSqlUsage() {
    return sqlUsage;
  }


  public void setSqlUsage(BigDecimal sqlUsage) {
    this.sqlUsage = sqlUsage;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomReportAccountConfig customReportAccountConfig = (CustomReportAccountConfig) o;
    return Objects.equals(this.aiBudget, customReportAccountConfig.aiBudget) &&
        Objects.equals(this.aiUsage, customReportAccountConfig.aiUsage) &&
        Objects.equals(this.merchantId, customReportAccountConfig.merchantId) &&
        Objects.equals(this.noviceSqlComments, customReportAccountConfig.noviceSqlComments) &&
        Objects.equals(this.optIn, customReportAccountConfig.optIn) &&
        Objects.equals(this.optInByUser, customReportAccountConfig.optInByUser) &&
        Objects.equals(this.optInDate, customReportAccountConfig.optInDate) &&
        Objects.equals(this.readOnly, customReportAccountConfig.readOnly) &&
        Objects.equals(this.sqlBudget, customReportAccountConfig.sqlBudget) &&
        Objects.equals(this.sqlUsage, customReportAccountConfig.sqlUsage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(aiBudget, aiUsage, merchantId, noviceSqlComments, optIn, optInByUser, optInDate, readOnly, sqlBudget, sqlUsage);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomReportAccountConfig {\n");
    sb.append("    aiBudget: ").append(toIndentedString(aiBudget)).append("\n");
    sb.append("    aiUsage: ").append(toIndentedString(aiUsage)).append("\n");
    sb.append("    merchantId: ").append(toIndentedString(merchantId)).append("\n");
    sb.append("    noviceSqlComments: ").append(toIndentedString(noviceSqlComments)).append("\n");
    sb.append("    optIn: ").append(toIndentedString(optIn)).append("\n");
    sb.append("    optInByUser: ").append(toIndentedString(optInByUser)).append("\n");
    sb.append("    optInDate: ").append(toIndentedString(optInDate)).append("\n");
    sb.append("    readOnly: ").append(toIndentedString(readOnly)).append("\n");
    sb.append("    sqlBudget: ").append(toIndentedString(sqlBudget)).append("\n");
    sb.append("    sqlUsage: ").append(toIndentedString(sqlUsage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ai_budget");
    openapiFields.add("ai_usage");
    openapiFields.add("merchant_id");
    openapiFields.add("novice_sql_comments");
    openapiFields.add("opt_in");
    openapiFields.add("opt_in_by_user");
    openapiFields.add("opt_in_date");
    openapiFields.add("read_only");
    openapiFields.add("sql_budget");
    openapiFields.add("sql_usage");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CustomReportAccountConfig
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (CustomReportAccountConfig.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in CustomReportAccountConfig is not found in the empty JSON string", CustomReportAccountConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!CustomReportAccountConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CustomReportAccountConfig` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("merchant_id") != null && !jsonObj.get("merchant_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `merchant_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("merchant_id").toString()));
      }
      if (jsonObj.get("opt_in_by_user") != null && !jsonObj.get("opt_in_by_user").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `opt_in_by_user` to be a primitive type in the JSON string but got `%s`", jsonObj.get("opt_in_by_user").toString()));
      }
      if (jsonObj.get("opt_in_date") != null && !jsonObj.get("opt_in_date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `opt_in_date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("opt_in_date").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CustomReportAccountConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CustomReportAccountConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CustomReportAccountConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CustomReportAccountConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<CustomReportAccountConfig>() {
           @Override
           public void write(JsonWriter out, CustomReportAccountConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CustomReportAccountConfig read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CustomReportAccountConfig given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CustomReportAccountConfig
  * @throws IOException if the JSON string is invalid with respect to CustomReportAccountConfig
  */
  public static CustomReportAccountConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CustomReportAccountConfig.class);
  }

 /**
  * Convert an instance of CustomReportAccountConfig to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

