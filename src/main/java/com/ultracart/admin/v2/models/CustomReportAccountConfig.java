/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * CustomReportAccountConfig
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2025-07-28T11:03:40.534-04:00")



public class CustomReportAccountConfig {
  @SerializedName("ai_budget")
  private BigDecimal aiBudget = null;

  @SerializedName("ai_usage")
  private BigDecimal aiUsage = null;

  @SerializedName("merchant_id")
  private String merchantId = null;

  @SerializedName("novice_sql_comments")
  private Boolean noviceSqlComments = null;

  @SerializedName("opt_in")
  private Boolean optIn = null;

  @SerializedName("opt_in_by_user")
  private String optInByUser = null;

  @SerializedName("opt_in_date")
  private String optInDate = null;

  @SerializedName("sql_budget")
  private BigDecimal sqlBudget = null;

  @SerializedName("sql_usage")
  private BigDecimal sqlUsage = null;

  public CustomReportAccountConfig aiBudget(BigDecimal aiBudget) {
    this.aiBudget = aiBudget;
    return this;
  }

   /**
   * Get aiBudget
   * @return aiBudget
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getAiBudget() {
    return aiBudget;
  }

  public void setAiBudget(BigDecimal aiBudget) {
    this.aiBudget = aiBudget;
  }

  public CustomReportAccountConfig aiUsage(BigDecimal aiUsage) {
    this.aiUsage = aiUsage;
    return this;
  }

   /**
   * Current AI usage creating reports
   * @return aiUsage
  **/
  @ApiModelProperty(value = "Current AI usage creating reports")
  public BigDecimal getAiUsage() {
    return aiUsage;
  }

  public void setAiUsage(BigDecimal aiUsage) {
    this.aiUsage = aiUsage;
  }

  public CustomReportAccountConfig merchantId(String merchantId) {
    this.merchantId = merchantId;
    return this;
  }

   /**
   * Current BigQuery SQL usage running reports
   * @return merchantId
  **/
  @ApiModelProperty(value = "Current BigQuery SQL usage running reports")
  public String getMerchantId() {
    return merchantId;
  }

  public void setMerchantId(String merchantId) {
    this.merchantId = merchantId;
  }

  public CustomReportAccountConfig noviceSqlComments(Boolean noviceSqlComments) {
    this.noviceSqlComments = noviceSqlComments;
    return this;
  }

   /**
   * Get noviceSqlComments
   * @return noviceSqlComments
  **/
  @ApiModelProperty(value = "")
  public Boolean isNoviceSqlComments() {
    return noviceSqlComments;
  }

  public void setNoviceSqlComments(Boolean noviceSqlComments) {
    this.noviceSqlComments = noviceSqlComments;
  }

  public CustomReportAccountConfig optIn(Boolean optIn) {
    this.optIn = optIn;
    return this;
  }

   /**
   * True if they have opted into custom reports
   * @return optIn
  **/
  @ApiModelProperty(value = "True if they have opted into custom reports")
  public Boolean isOptIn() {
    return optIn;
  }

  public void setOptIn(Boolean optIn) {
    this.optIn = optIn;
  }

  public CustomReportAccountConfig optInByUser(String optInByUser) {
    this.optInByUser = optInByUser;
    return this;
  }

   /**
   * User that opted into custom reporting
   * @return optInByUser
  **/
  @ApiModelProperty(value = "User that opted into custom reporting")
  public String getOptInByUser() {
    return optInByUser;
  }

  public void setOptInByUser(String optInByUser) {
    this.optInByUser = optInByUser;
  }

  public CustomReportAccountConfig optInDate(String optInDate) {
    this.optInDate = optInDate;
    return this;
  }

   /**
   * Date/time that custom reporting was opted in to
   * @return optInDate
  **/
  @ApiModelProperty(value = "Date/time that custom reporting was opted in to")
  public String getOptInDate() {
    return optInDate;
  }

  public void setOptInDate(String optInDate) {
    this.optInDate = optInDate;
  }

  public CustomReportAccountConfig sqlBudget(BigDecimal sqlBudget) {
    this.sqlBudget = sqlBudget;
    return this;
  }

   /**
   * Get sqlBudget
   * @return sqlBudget
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getSqlBudget() {
    return sqlBudget;
  }

  public void setSqlBudget(BigDecimal sqlBudget) {
    this.sqlBudget = sqlBudget;
  }

  public CustomReportAccountConfig sqlUsage(BigDecimal sqlUsage) {
    this.sqlUsage = sqlUsage;
    return this;
  }

   /**
   * Get sqlUsage
   * @return sqlUsage
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getSqlUsage() {
    return sqlUsage;
  }

  public void setSqlUsage(BigDecimal sqlUsage) {
    this.sqlUsage = sqlUsage;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomReportAccountConfig customReportAccountConfig = (CustomReportAccountConfig) o;
    return Objects.equals(this.aiBudget, customReportAccountConfig.aiBudget) &&
        Objects.equals(this.aiUsage, customReportAccountConfig.aiUsage) &&
        Objects.equals(this.merchantId, customReportAccountConfig.merchantId) &&
        Objects.equals(this.noviceSqlComments, customReportAccountConfig.noviceSqlComments) &&
        Objects.equals(this.optIn, customReportAccountConfig.optIn) &&
        Objects.equals(this.optInByUser, customReportAccountConfig.optInByUser) &&
        Objects.equals(this.optInDate, customReportAccountConfig.optInDate) &&
        Objects.equals(this.sqlBudget, customReportAccountConfig.sqlBudget) &&
        Objects.equals(this.sqlUsage, customReportAccountConfig.sqlUsage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(aiBudget, aiUsage, merchantId, noviceSqlComments, optIn, optInByUser, optInDate, sqlBudget, sqlUsage);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomReportAccountConfig {\n");
    
    sb.append("    aiBudget: ").append(toIndentedString(aiBudget)).append("\n");
    sb.append("    aiUsage: ").append(toIndentedString(aiUsage)).append("\n");
    sb.append("    merchantId: ").append(toIndentedString(merchantId)).append("\n");
    sb.append("    noviceSqlComments: ").append(toIndentedString(noviceSqlComments)).append("\n");
    sb.append("    optIn: ").append(toIndentedString(optIn)).append("\n");
    sb.append("    optInByUser: ").append(toIndentedString(optInByUser)).append("\n");
    sb.append("    optInDate: ").append(toIndentedString(optInDate)).append("\n");
    sb.append("    sqlBudget: ").append(toIndentedString(sqlBudget)).append("\n");
    sb.append("    sqlUsage: ").append(toIndentedString(sqlUsage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

