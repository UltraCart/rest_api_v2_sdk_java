/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * ConversationParticipant
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-07-28T14:28:45.064-04:00[America/Indianapolis]")
public class ConversationParticipant {
  public static final String SERIALIZED_NAME_CONVERSATION_PARTICIPANT_ARN = "conversation_participant_arn";
  @SerializedName(SERIALIZED_NAME_CONVERSATION_PARTICIPANT_ARN)
  private String conversationParticipantArn;

  public static final String SERIALIZED_NAME_CONVERSATION_PARTICIPANT_NAME = "conversation_participant_name";
  @SerializedName(SERIALIZED_NAME_CONVERSATION_PARTICIPANT_NAME)
  private String conversationParticipantName;

  public static final String SERIALIZED_NAME_CONVERSATION_PARTICIPANT_UUID = "conversation_participant_uuid";
  @SerializedName(SERIALIZED_NAME_CONVERSATION_PARTICIPANT_UUID)
  private String conversationParticipantUuid;

  public static final String SERIALIZED_NAME_JOINED_DTS = "joined_dts";
  @SerializedName(SERIALIZED_NAME_JOINED_DTS)
  private String joinedDts;

  public static final String SERIALIZED_NAME_LAST_MESSAGE_DTS = "last_message_dts";
  @SerializedName(SERIALIZED_NAME_LAST_MESSAGE_DTS)
  private String lastMessageDts;

  public static final String SERIALIZED_NAME_LEFT_DTS = "left_dts";
  @SerializedName(SERIALIZED_NAME_LEFT_DTS)
  private String leftDts;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public ConversationParticipant() { 
  }

  public ConversationParticipant conversationParticipantArn(String conversationParticipantArn) {
    
    this.conversationParticipantArn = conversationParticipantArn;
    return this;
  }

   /**
   * Get conversationParticipantArn
   * @return conversationParticipantArn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getConversationParticipantArn() {
    return conversationParticipantArn;
  }


  public void setConversationParticipantArn(String conversationParticipantArn) {
    this.conversationParticipantArn = conversationParticipantArn;
  }


  public ConversationParticipant conversationParticipantName(String conversationParticipantName) {
    
    this.conversationParticipantName = conversationParticipantName;
    return this;
  }

   /**
   * Get conversationParticipantName
   * @return conversationParticipantName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getConversationParticipantName() {
    return conversationParticipantName;
  }


  public void setConversationParticipantName(String conversationParticipantName) {
    this.conversationParticipantName = conversationParticipantName;
  }


  public ConversationParticipant conversationParticipantUuid(String conversationParticipantUuid) {
    
    this.conversationParticipantUuid = conversationParticipantUuid;
    return this;
  }

   /**
   * Get conversationParticipantUuid
   * @return conversationParticipantUuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getConversationParticipantUuid() {
    return conversationParticipantUuid;
  }


  public void setConversationParticipantUuid(String conversationParticipantUuid) {
    this.conversationParticipantUuid = conversationParticipantUuid;
  }


  public ConversationParticipant joinedDts(String joinedDts) {
    
    this.joinedDts = joinedDts;
    return this;
  }

   /**
   * Joined conversation date/time
   * @return joinedDts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Joined conversation date/time")

  public String getJoinedDts() {
    return joinedDts;
  }


  public void setJoinedDts(String joinedDts) {
    this.joinedDts = joinedDts;
  }


  public ConversationParticipant lastMessageDts(String lastMessageDts) {
    
    this.lastMessageDts = lastMessageDts;
    return this;
  }

   /**
   * Last message date/time
   * @return lastMessageDts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Last message date/time")

  public String getLastMessageDts() {
    return lastMessageDts;
  }


  public void setLastMessageDts(String lastMessageDts) {
    this.lastMessageDts = lastMessageDts;
  }


  public ConversationParticipant leftDts(String leftDts) {
    
    this.leftDts = leftDts;
    return this;
  }

   /**
   * Left conversation date/time
   * @return leftDts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Left conversation date/time")

  public String getLeftDts() {
    return leftDts;
  }


  public void setLeftDts(String leftDts) {
    this.leftDts = leftDts;
  }


  public ConversationParticipant status(String status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    this.status = status;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConversationParticipant conversationParticipant = (ConversationParticipant) o;
    return Objects.equals(this.conversationParticipantArn, conversationParticipant.conversationParticipantArn) &&
        Objects.equals(this.conversationParticipantName, conversationParticipant.conversationParticipantName) &&
        Objects.equals(this.conversationParticipantUuid, conversationParticipant.conversationParticipantUuid) &&
        Objects.equals(this.joinedDts, conversationParticipant.joinedDts) &&
        Objects.equals(this.lastMessageDts, conversationParticipant.lastMessageDts) &&
        Objects.equals(this.leftDts, conversationParticipant.leftDts) &&
        Objects.equals(this.status, conversationParticipant.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(conversationParticipantArn, conversationParticipantName, conversationParticipantUuid, joinedDts, lastMessageDts, leftDts, status);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConversationParticipant {\n");
    sb.append("    conversationParticipantArn: ").append(toIndentedString(conversationParticipantArn)).append("\n");
    sb.append("    conversationParticipantName: ").append(toIndentedString(conversationParticipantName)).append("\n");
    sb.append("    conversationParticipantUuid: ").append(toIndentedString(conversationParticipantUuid)).append("\n");
    sb.append("    joinedDts: ").append(toIndentedString(joinedDts)).append("\n");
    sb.append("    lastMessageDts: ").append(toIndentedString(lastMessageDts)).append("\n");
    sb.append("    leftDts: ").append(toIndentedString(leftDts)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("conversation_participant_arn");
    openapiFields.add("conversation_participant_name");
    openapiFields.add("conversation_participant_uuid");
    openapiFields.add("joined_dts");
    openapiFields.add("last_message_dts");
    openapiFields.add("left_dts");
    openapiFields.add("status");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ConversationParticipant
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (ConversationParticipant.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in ConversationParticipant is not found in the empty JSON string", ConversationParticipant.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!ConversationParticipant.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ConversationParticipant` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("conversation_participant_arn") != null && !jsonObj.get("conversation_participant_arn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `conversation_participant_arn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("conversation_participant_arn").toString()));
      }
      if (jsonObj.get("conversation_participant_name") != null && !jsonObj.get("conversation_participant_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `conversation_participant_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("conversation_participant_name").toString()));
      }
      if (jsonObj.get("conversation_participant_uuid") != null && !jsonObj.get("conversation_participant_uuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `conversation_participant_uuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("conversation_participant_uuid").toString()));
      }
      if (jsonObj.get("joined_dts") != null && !jsonObj.get("joined_dts").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `joined_dts` to be a primitive type in the JSON string but got `%s`", jsonObj.get("joined_dts").toString()));
      }
      if (jsonObj.get("last_message_dts") != null && !jsonObj.get("last_message_dts").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_message_dts` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_message_dts").toString()));
      }
      if (jsonObj.get("left_dts") != null && !jsonObj.get("left_dts").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `left_dts` to be a primitive type in the JSON string but got `%s`", jsonObj.get("left_dts").toString()));
      }
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ConversationParticipant.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ConversationParticipant' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ConversationParticipant> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ConversationParticipant.class));

       return (TypeAdapter<T>) new TypeAdapter<ConversationParticipant>() {
           @Override
           public void write(JsonWriter out, ConversationParticipant value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ConversationParticipant read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ConversationParticipant given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ConversationParticipant
  * @throws IOException if the JSON string is invalid with respect to ConversationParticipant
  */
  public static ConversationParticipant fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ConversationParticipant.class);
  }

 /**
  * Convert an instance of ConversationParticipant to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

