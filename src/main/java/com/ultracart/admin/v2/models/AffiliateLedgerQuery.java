/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * AffiliateLedgerQuery
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-05-12T08:35:54.795-04:00")



public class AffiliateLedgerQuery {
  @SerializedName("affiliate_oid")
  private Integer affiliateOid = null;

  @SerializedName("item_id")
  private String itemId = null;

  @SerializedName("order_id")
  private String orderId = null;

  @SerializedName("sub_id")
  private String subId = null;

  @SerializedName("transaction_dts_begin")
  private String transactionDtsBegin = null;

  @SerializedName("transaction_dts_end")
  private String transactionDtsEnd = null;

  public AffiliateLedgerQuery affiliateOid(Integer affiliateOid) {
    this.affiliateOid = affiliateOid;
    return this;
  }

   /**
   * Affiliate ID associated with the ledger
   * @return affiliateOid
  **/
  @ApiModelProperty(value = "Affiliate ID associated with the ledger")
  public Integer getAffiliateOid() {
    return affiliateOid;
  }

  public void setAffiliateOid(Integer affiliateOid) {
    this.affiliateOid = affiliateOid;
  }

  public AffiliateLedgerQuery itemId(String itemId) {
    this.itemId = itemId;
    return this;
  }

   /**
   * Item id associated with the ledger entry
   * @return itemId
  **/
  @ApiModelProperty(value = "Item id associated with the ledger entry")
  public String getItemId() {
    return itemId;
  }

  public void setItemId(String itemId) {
    this.itemId = itemId;
  }

  public AffiliateLedgerQuery orderId(String orderId) {
    this.orderId = orderId;
    return this;
  }

   /**
   * Order ID associated with the ledger entries
   * @return orderId
  **/
  @ApiModelProperty(value = "Order ID associated with the ledger entries")
  public String getOrderId() {
    return orderId;
  }

  public void setOrderId(String orderId) {
    this.orderId = orderId;
  }

  public AffiliateLedgerQuery subId(String subId) {
    this.subId = subId;
    return this;
  }

   /**
   * Sub ID value passed on the click that generated the ledger
   * @return subId
  **/
  @ApiModelProperty(value = "Sub ID value passed on the click that generated the ledger")
  public String getSubId() {
    return subId;
  }

  public void setSubId(String subId) {
    this.subId = subId;
  }

  public AffiliateLedgerQuery transactionDtsBegin(String transactionDtsBegin) {
    this.transactionDtsBegin = transactionDtsBegin;
    return this;
  }

   /**
   * Minimum transaction date/time to return
   * @return transactionDtsBegin
  **/
  @ApiModelProperty(value = "Minimum transaction date/time to return")
  public String getTransactionDtsBegin() {
    return transactionDtsBegin;
  }

  public void setTransactionDtsBegin(String transactionDtsBegin) {
    this.transactionDtsBegin = transactionDtsBegin;
  }

  public AffiliateLedgerQuery transactionDtsEnd(String transactionDtsEnd) {
    this.transactionDtsEnd = transactionDtsEnd;
    return this;
  }

   /**
   * Maximum transaction date/time to return
   * @return transactionDtsEnd
  **/
  @ApiModelProperty(value = "Maximum transaction date/time to return")
  public String getTransactionDtsEnd() {
    return transactionDtsEnd;
  }

  public void setTransactionDtsEnd(String transactionDtsEnd) {
    this.transactionDtsEnd = transactionDtsEnd;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AffiliateLedgerQuery affiliateLedgerQuery = (AffiliateLedgerQuery) o;
    return Objects.equals(this.affiliateOid, affiliateLedgerQuery.affiliateOid) &&
        Objects.equals(this.itemId, affiliateLedgerQuery.itemId) &&
        Objects.equals(this.orderId, affiliateLedgerQuery.orderId) &&
        Objects.equals(this.subId, affiliateLedgerQuery.subId) &&
        Objects.equals(this.transactionDtsBegin, affiliateLedgerQuery.transactionDtsBegin) &&
        Objects.equals(this.transactionDtsEnd, affiliateLedgerQuery.transactionDtsEnd);
  }

  @Override
  public int hashCode() {
    return Objects.hash(affiliateOid, itemId, orderId, subId, transactionDtsBegin, transactionDtsEnd);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AffiliateLedgerQuery {\n");
    
    sb.append("    affiliateOid: ").append(toIndentedString(affiliateOid)).append("\n");
    sb.append("    itemId: ").append(toIndentedString(itemId)).append("\n");
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    subId: ").append(toIndentedString(subId)).append("\n");
    sb.append("    transactionDtsBegin: ").append(toIndentedString(transactionDtsBegin)).append("\n");
    sb.append("    transactionDtsEnd: ").append(toIndentedString(transactionDtsEnd)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

