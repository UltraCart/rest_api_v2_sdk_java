/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * AccountsReceivableRetryDayActivity
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-01-13T14:58:56.471-05:00[America/Indianapolis]")
public class AccountsReceivableRetryDayActivity {
  public static final String SERIALIZED_NAME_CHARGE = "charge";
  @SerializedName(SERIALIZED_NAME_CHARGE)
  private Boolean charge;

  public static final String SERIALIZED_NAME_COUPON_CODE = "coupon_code";
  @SerializedName(SERIALIZED_NAME_COUPON_CODE)
  private String couponCode;

  public static final String SERIALIZED_NAME_DAY = "day";
  @SerializedName(SERIALIZED_NAME_DAY)
  private Integer day;

  public AccountsReceivableRetryDayActivity() { 
  }

  public AccountsReceivableRetryDayActivity charge(Boolean charge) {
    
    this.charge = charge;
    return this;
  }

   /**
   * True if a charge attempt should be made on this day.  False means the order should be rejected on this day.
   * @return charge
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if a charge attempt should be made on this day.  False means the order should be rejected on this day.")

  public Boolean getCharge() {
    return charge;
  }


  public void setCharge(Boolean charge) {
    this.charge = charge;
  }


  public AccountsReceivableRetryDayActivity couponCode(String couponCode) {
    
    this.couponCode = couponCode;
    return this;
  }

   /**
   * The coupon code that should be applied to this order.
   * @return couponCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The coupon code that should be applied to this order.")

  public String getCouponCode() {
    return couponCode;
  }


  public void setCouponCode(String couponCode) {
    this.couponCode = couponCode;
  }


  public AccountsReceivableRetryDayActivity day(Integer day) {
    
    this.day = day;
    return this;
  }

   /**
   * The number of days since the order placed in Accounts Receivable
   * @return day
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of days since the order placed in Accounts Receivable")

  public Integer getDay() {
    return day;
  }


  public void setDay(Integer day) {
    this.day = day;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountsReceivableRetryDayActivity accountsReceivableRetryDayActivity = (AccountsReceivableRetryDayActivity) o;
    return Objects.equals(this.charge, accountsReceivableRetryDayActivity.charge) &&
        Objects.equals(this.couponCode, accountsReceivableRetryDayActivity.couponCode) &&
        Objects.equals(this.day, accountsReceivableRetryDayActivity.day);
  }

  @Override
  public int hashCode() {
    return Objects.hash(charge, couponCode, day);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountsReceivableRetryDayActivity {\n");
    sb.append("    charge: ").append(toIndentedString(charge)).append("\n");
    sb.append("    couponCode: ").append(toIndentedString(couponCode)).append("\n");
    sb.append("    day: ").append(toIndentedString(day)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("charge");
    openapiFields.add("coupon_code");
    openapiFields.add("day");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to AccountsReceivableRetryDayActivity
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (AccountsReceivableRetryDayActivity.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in AccountsReceivableRetryDayActivity is not found in the empty JSON string", AccountsReceivableRetryDayActivity.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!AccountsReceivableRetryDayActivity.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AccountsReceivableRetryDayActivity` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("coupon_code") != null && !jsonObj.get("coupon_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `coupon_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("coupon_code").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AccountsReceivableRetryDayActivity.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AccountsReceivableRetryDayActivity' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AccountsReceivableRetryDayActivity> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AccountsReceivableRetryDayActivity.class));

       return (TypeAdapter<T>) new TypeAdapter<AccountsReceivableRetryDayActivity>() {
           @Override
           public void write(JsonWriter out, AccountsReceivableRetryDayActivity value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AccountsReceivableRetryDayActivity read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AccountsReceivableRetryDayActivity given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AccountsReceivableRetryDayActivity
  * @throws IOException if the JSON string is invalid with respect to AccountsReceivableRetryDayActivity
  */
  public static AccountsReceivableRetryDayActivity fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AccountsReceivableRetryDayActivity.class);
  }

 /**
  * Convert an instance of AccountsReceivableRetryDayActivity to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

