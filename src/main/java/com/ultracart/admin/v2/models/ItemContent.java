/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.ItemContentAssignment;
import com.ultracart.admin.v2.models.ItemContentAttribute;
import com.ultracart.admin.v2.models.ItemContentMultimedia;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * ItemContent
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-01-25T15:35:19.757-05:00[America/Indianapolis]")
public class ItemContent {
  public static final String SERIALIZED_NAME_ASSIGNMENTS = "assignments";
  @SerializedName(SERIALIZED_NAME_ASSIGNMENTS)
  private List<ItemContentAssignment> assignments = null;

  public static final String SERIALIZED_NAME_ATTRIBUTES = "attributes";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTES)
  private List<ItemContentAttribute> attributes = null;

  public static final String SERIALIZED_NAME_CUSTOM_THANK_YOU_URL = "custom_thank_you_url";
  @SerializedName(SERIALIZED_NAME_CUSTOM_THANK_YOU_URL)
  private String customThankYouUrl;

  public static final String SERIALIZED_NAME_EXCLUDE_FROM_SEARCH = "exclude_from_search";
  @SerializedName(SERIALIZED_NAME_EXCLUDE_FROM_SEARCH)
  private Boolean excludeFromSearch;

  public static final String SERIALIZED_NAME_EXCLUDE_FROM_SITEMAP = "exclude_from_sitemap";
  @SerializedName(SERIALIZED_NAME_EXCLUDE_FROM_SITEMAP)
  private Boolean excludeFromSitemap;

  public static final String SERIALIZED_NAME_EXCLUDE_FROM_TOP_SELLERS = "exclude_from_top_sellers";
  @SerializedName(SERIALIZED_NAME_EXCLUDE_FROM_TOP_SELLERS)
  private Boolean excludeFromTopSellers;

  public static final String SERIALIZED_NAME_EXTENDED_DESCRIPTION = "extended_description";
  @SerializedName(SERIALIZED_NAME_EXTENDED_DESCRIPTION)
  private String extendedDescription;

  public static final String SERIALIZED_NAME_EXTENDED_DESCRIPTION_TRANSLATED_TEXT_INSTANCE_OID = "extended_description_translated_text_instance_oid";
  @SerializedName(SERIALIZED_NAME_EXTENDED_DESCRIPTION_TRANSLATED_TEXT_INSTANCE_OID)
  private Integer extendedDescriptionTranslatedTextInstanceOid;

  public static final String SERIALIZED_NAME_MULTIMEDIA = "multimedia";
  @SerializedName(SERIALIZED_NAME_MULTIMEDIA)
  private List<ItemContentMultimedia> multimedia = null;

  public static final String SERIALIZED_NAME_NEW_ITEM = "new_item";
  @SerializedName(SERIALIZED_NAME_NEW_ITEM)
  private Boolean newItem;

  public static final String SERIALIZED_NAME_NEW_ITEM_END = "new_item_end";
  @SerializedName(SERIALIZED_NAME_NEW_ITEM_END)
  private String newItemEnd;

  public static final String SERIALIZED_NAME_NEW_ITEM_START = "new_item_start";
  @SerializedName(SERIALIZED_NAME_NEW_ITEM_START)
  private String newItemStart;

  public static final String SERIALIZED_NAME_VIEW_URL = "view_url";
  @SerializedName(SERIALIZED_NAME_VIEW_URL)
  private String viewUrl;

  public ItemContent() { 
  }

  public ItemContent assignments(List<ItemContentAssignment> assignments) {
    
    this.assignments = assignments;
    return this;
  }

  public ItemContent addAssignmentsItem(ItemContentAssignment assignmentsItem) {
    if (this.assignments == null) {
      this.assignments = new ArrayList<>();
    }
    this.assignments.add(assignmentsItem);
    return this;
  }

   /**
   * StoreFront assignments
   * @return assignments
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "StoreFront assignments")

  public List<ItemContentAssignment> getAssignments() {
    return assignments;
  }


  public void setAssignments(List<ItemContentAssignment> assignments) {
    this.assignments = assignments;
  }


  public ItemContent attributes(List<ItemContentAttribute> attributes) {
    
    this.attributes = attributes;
    return this;
  }

  public ItemContent addAttributesItem(ItemContentAttribute attributesItem) {
    if (this.attributes == null) {
      this.attributes = new ArrayList<>();
    }
    this.attributes.add(attributesItem);
    return this;
  }

   /**
   * StoreFront attributes
   * @return attributes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "StoreFront attributes")

  public List<ItemContentAttribute> getAttributes() {
    return attributes;
  }


  public void setAttributes(List<ItemContentAttribute> attributes) {
    this.attributes = attributes;
  }


  public ItemContent customThankYouUrl(String customThankYouUrl) {
    
    this.customThankYouUrl = customThankYouUrl;
    return this;
  }

   /**
   * Custom Thank You URL
   * @return customThankYouUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Custom Thank You URL")

  public String getCustomThankYouUrl() {
    return customThankYouUrl;
  }


  public void setCustomThankYouUrl(String customThankYouUrl) {
    this.customThankYouUrl = customThankYouUrl;
  }


  public ItemContent excludeFromSearch(Boolean excludeFromSearch) {
    
    this.excludeFromSearch = excludeFromSearch;
    return this;
  }

   /**
   * Exclude from search
   * @return excludeFromSearch
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Exclude from search")

  public Boolean getExcludeFromSearch() {
    return excludeFromSearch;
  }


  public void setExcludeFromSearch(Boolean excludeFromSearch) {
    this.excludeFromSearch = excludeFromSearch;
  }


  public ItemContent excludeFromSitemap(Boolean excludeFromSitemap) {
    
    this.excludeFromSitemap = excludeFromSitemap;
    return this;
  }

   /**
   * Exclude from the sitemap for the StoreFront
   * @return excludeFromSitemap
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Exclude from the sitemap for the StoreFront")

  public Boolean getExcludeFromSitemap() {
    return excludeFromSitemap;
  }


  public void setExcludeFromSitemap(Boolean excludeFromSitemap) {
    this.excludeFromSitemap = excludeFromSitemap;
  }


  public ItemContent excludeFromTopSellers(Boolean excludeFromTopSellers) {
    
    this.excludeFromTopSellers = excludeFromTopSellers;
    return this;
  }

   /**
   * Exclude from the top sellers list in the StoreFront
   * @return excludeFromTopSellers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Exclude from the top sellers list in the StoreFront")

  public Boolean getExcludeFromTopSellers() {
    return excludeFromTopSellers;
  }


  public void setExcludeFromTopSellers(Boolean excludeFromTopSellers) {
    this.excludeFromTopSellers = excludeFromTopSellers;
  }


  public ItemContent extendedDescription(String extendedDescription) {
    
    this.extendedDescription = extendedDescription;
    return this;
  }

   /**
   * Extended description (max 10000 characters)
   * @return extendedDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Extended description (max 10000 characters)")

  public String getExtendedDescription() {
    return extendedDescription;
  }


  public void setExtendedDescription(String extendedDescription) {
    this.extendedDescription = extendedDescription;
  }


  public ItemContent extendedDescriptionTranslatedTextInstanceOid(Integer extendedDescriptionTranslatedTextInstanceOid) {
    
    this.extendedDescriptionTranslatedTextInstanceOid = extendedDescriptionTranslatedTextInstanceOid;
    return this;
  }

   /**
   * Extneded description text translation instance identifier
   * @return extendedDescriptionTranslatedTextInstanceOid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Extneded description text translation instance identifier")

  public Integer getExtendedDescriptionTranslatedTextInstanceOid() {
    return extendedDescriptionTranslatedTextInstanceOid;
  }


  public void setExtendedDescriptionTranslatedTextInstanceOid(Integer extendedDescriptionTranslatedTextInstanceOid) {
    this.extendedDescriptionTranslatedTextInstanceOid = extendedDescriptionTranslatedTextInstanceOid;
  }


  public ItemContent multimedia(List<ItemContentMultimedia> multimedia) {
    
    this.multimedia = multimedia;
    return this;
  }

  public ItemContent addMultimediaItem(ItemContentMultimedia multimediaItem) {
    if (this.multimedia == null) {
      this.multimedia = new ArrayList<>();
    }
    this.multimedia.add(multimediaItem);
    return this;
  }

   /**
   * Multimedia
   * @return multimedia
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Multimedia")

  public List<ItemContentMultimedia> getMultimedia() {
    return multimedia;
  }


  public void setMultimedia(List<ItemContentMultimedia> multimedia) {
    this.multimedia = multimedia;
  }


  public ItemContent newItem(Boolean newItem) {
    
    this.newItem = newItem;
    return this;
  }

   /**
   * True if the item is new
   * @return newItem
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if the item is new")

  public Boolean getNewItem() {
    return newItem;
  }


  public void setNewItem(Boolean newItem) {
    this.newItem = newItem;
  }


  public ItemContent newItemEnd(String newItemEnd) {
    
    this.newItemEnd = newItemEnd;
    return this;
  }

   /**
   * The date the item should no longer be considered new
   * @return newItemEnd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date the item should no longer be considered new")

  public String getNewItemEnd() {
    return newItemEnd;
  }


  public void setNewItemEnd(String newItemEnd) {
    this.newItemEnd = newItemEnd;
  }


  public ItemContent newItemStart(String newItemStart) {
    
    this.newItemStart = newItemStart;
    return this;
  }

   /**
   * The date the item should start being considered new
   * @return newItemStart
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date the item should start being considered new")

  public String getNewItemStart() {
    return newItemStart;
  }


  public void setNewItemStart(String newItemStart) {
    this.newItemStart = newItemStart;
  }


  public ItemContent viewUrl(String viewUrl) {
    
    this.viewUrl = viewUrl;
    return this;
  }

   /**
   * Legacy view URL (not used by StoreFronts)
   * @return viewUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Legacy view URL (not used by StoreFronts)")

  public String getViewUrl() {
    return viewUrl;
  }


  public void setViewUrl(String viewUrl) {
    this.viewUrl = viewUrl;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ItemContent itemContent = (ItemContent) o;
    return Objects.equals(this.assignments, itemContent.assignments) &&
        Objects.equals(this.attributes, itemContent.attributes) &&
        Objects.equals(this.customThankYouUrl, itemContent.customThankYouUrl) &&
        Objects.equals(this.excludeFromSearch, itemContent.excludeFromSearch) &&
        Objects.equals(this.excludeFromSitemap, itemContent.excludeFromSitemap) &&
        Objects.equals(this.excludeFromTopSellers, itemContent.excludeFromTopSellers) &&
        Objects.equals(this.extendedDescription, itemContent.extendedDescription) &&
        Objects.equals(this.extendedDescriptionTranslatedTextInstanceOid, itemContent.extendedDescriptionTranslatedTextInstanceOid) &&
        Objects.equals(this.multimedia, itemContent.multimedia) &&
        Objects.equals(this.newItem, itemContent.newItem) &&
        Objects.equals(this.newItemEnd, itemContent.newItemEnd) &&
        Objects.equals(this.newItemStart, itemContent.newItemStart) &&
        Objects.equals(this.viewUrl, itemContent.viewUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(assignments, attributes, customThankYouUrl, excludeFromSearch, excludeFromSitemap, excludeFromTopSellers, extendedDescription, extendedDescriptionTranslatedTextInstanceOid, multimedia, newItem, newItemEnd, newItemStart, viewUrl);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ItemContent {\n");
    sb.append("    assignments: ").append(toIndentedString(assignments)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    customThankYouUrl: ").append(toIndentedString(customThankYouUrl)).append("\n");
    sb.append("    excludeFromSearch: ").append(toIndentedString(excludeFromSearch)).append("\n");
    sb.append("    excludeFromSitemap: ").append(toIndentedString(excludeFromSitemap)).append("\n");
    sb.append("    excludeFromTopSellers: ").append(toIndentedString(excludeFromTopSellers)).append("\n");
    sb.append("    extendedDescription: ").append(toIndentedString(extendedDescription)).append("\n");
    sb.append("    extendedDescriptionTranslatedTextInstanceOid: ").append(toIndentedString(extendedDescriptionTranslatedTextInstanceOid)).append("\n");
    sb.append("    multimedia: ").append(toIndentedString(multimedia)).append("\n");
    sb.append("    newItem: ").append(toIndentedString(newItem)).append("\n");
    sb.append("    newItemEnd: ").append(toIndentedString(newItemEnd)).append("\n");
    sb.append("    newItemStart: ").append(toIndentedString(newItemStart)).append("\n");
    sb.append("    viewUrl: ").append(toIndentedString(viewUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("assignments");
    openapiFields.add("attributes");
    openapiFields.add("custom_thank_you_url");
    openapiFields.add("exclude_from_search");
    openapiFields.add("exclude_from_sitemap");
    openapiFields.add("exclude_from_top_sellers");
    openapiFields.add("extended_description");
    openapiFields.add("extended_description_translated_text_instance_oid");
    openapiFields.add("multimedia");
    openapiFields.add("new_item");
    openapiFields.add("new_item_end");
    openapiFields.add("new_item_start");
    openapiFields.add("view_url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ItemContent
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (ItemContent.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in ItemContent is not found in the empty JSON string", ItemContent.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!ItemContent.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ItemContent` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      JsonArray jsonArrayassignments = jsonObj.getAsJsonArray("assignments");
      if (jsonArrayassignments != null) {
        // ensure the json data is an array
        if (!jsonObj.get("assignments").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `assignments` to be an array in the JSON string but got `%s`", jsonObj.get("assignments").toString()));
        }

        // validate the optional field `assignments` (array)
        for (int i = 0; i < jsonArrayassignments.size(); i++) {
          ItemContentAssignment.validateJsonObject(jsonArrayassignments.get(i).getAsJsonObject());
        };
      }
      JsonArray jsonArrayattributes = jsonObj.getAsJsonArray("attributes");
      if (jsonArrayattributes != null) {
        // ensure the json data is an array
        if (!jsonObj.get("attributes").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `attributes` to be an array in the JSON string but got `%s`", jsonObj.get("attributes").toString()));
        }

        // validate the optional field `attributes` (array)
        for (int i = 0; i < jsonArrayattributes.size(); i++) {
          ItemContentAttribute.validateJsonObject(jsonArrayattributes.get(i).getAsJsonObject());
        };
      }
      if (jsonObj.get("custom_thank_you_url") != null && !jsonObj.get("custom_thank_you_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `custom_thank_you_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("custom_thank_you_url").toString()));
      }
      if (jsonObj.get("extended_description") != null && !jsonObj.get("extended_description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `extended_description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("extended_description").toString()));
      }
      JsonArray jsonArraymultimedia = jsonObj.getAsJsonArray("multimedia");
      if (jsonArraymultimedia != null) {
        // ensure the json data is an array
        if (!jsonObj.get("multimedia").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `multimedia` to be an array in the JSON string but got `%s`", jsonObj.get("multimedia").toString()));
        }

        // validate the optional field `multimedia` (array)
        for (int i = 0; i < jsonArraymultimedia.size(); i++) {
          ItemContentMultimedia.validateJsonObject(jsonArraymultimedia.get(i).getAsJsonObject());
        };
      }
      if (jsonObj.get("new_item_end") != null && !jsonObj.get("new_item_end").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `new_item_end` to be a primitive type in the JSON string but got `%s`", jsonObj.get("new_item_end").toString()));
      }
      if (jsonObj.get("new_item_start") != null && !jsonObj.get("new_item_start").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `new_item_start` to be a primitive type in the JSON string but got `%s`", jsonObj.get("new_item_start").toString()));
      }
      if (jsonObj.get("view_url") != null && !jsonObj.get("view_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `view_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("view_url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ItemContent.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ItemContent' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ItemContent> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ItemContent.class));

       return (TypeAdapter<T>) new TypeAdapter<ItemContent>() {
           @Override
           public void write(JsonWriter out, ItemContent value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ItemContent read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ItemContent given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ItemContent
  * @throws IOException if the JSON string is invalid with respect to ItemContent
  */
  public static ItemContent fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ItemContent.class);
  }

 /**
  * Convert an instance of ItemContent to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

