/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.CustomerLoyaltyLedger;
import com.ultracart.admin.v2.models.CustomerLoyaltyRedemption;
import com.ultracart.admin.v2.models.GiftCertificate;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * CustomerLoyalty
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-20T07:35:27.732-05:00[America/Indianapolis]")
public class CustomerLoyalty {
  public static final String SERIALIZED_NAME_CURRENT_POINTS = "current_points";
  @SerializedName(SERIALIZED_NAME_CURRENT_POINTS)
  private Integer currentPoints;

  public static final String SERIALIZED_NAME_INTERNAL_GIFT_CERTIFICATE = "internal_gift_certificate";
  @SerializedName(SERIALIZED_NAME_INTERNAL_GIFT_CERTIFICATE)
  private GiftCertificate internalGiftCertificate;

  public static final String SERIALIZED_NAME_INTERNAL_GIFT_CERTIFICATE_BALANCE = "internal_gift_certificate_balance";
  @SerializedName(SERIALIZED_NAME_INTERNAL_GIFT_CERTIFICATE_BALANCE)
  private String internalGiftCertificateBalance;

  public static final String SERIALIZED_NAME_INTERNAL_GIFT_CERTIFICATE_OID = "internal_gift_certificate_oid";
  @SerializedName(SERIALIZED_NAME_INTERNAL_GIFT_CERTIFICATE_OID)
  private Integer internalGiftCertificateOid;

  public static final String SERIALIZED_NAME_LEDGER_ENTRIES = "ledger_entries";
  @SerializedName(SERIALIZED_NAME_LEDGER_ENTRIES)
  private List<CustomerLoyaltyLedger> ledgerEntries = null;

  public static final String SERIALIZED_NAME_PENDING_POINTS = "pending_points";
  @SerializedName(SERIALIZED_NAME_PENDING_POINTS)
  private Integer pendingPoints;

  public static final String SERIALIZED_NAME_REDEMPTIONS = "redemptions";
  @SerializedName(SERIALIZED_NAME_REDEMPTIONS)
  private List<CustomerLoyaltyRedemption> redemptions = null;

  public CustomerLoyalty() { 
  }

  public CustomerLoyalty currentPoints(Integer currentPoints) {
    
    this.currentPoints = currentPoints;
    return this;
  }

   /**
   * Current points
   * @return currentPoints
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Current points")

  public Integer getCurrentPoints() {
    return currentPoints;
  }


  public void setCurrentPoints(Integer currentPoints) {
    this.currentPoints = currentPoints;
  }


  public CustomerLoyalty internalGiftCertificate(GiftCertificate internalGiftCertificate) {
    
    this.internalGiftCertificate = internalGiftCertificate;
    return this;
  }

   /**
   * Get internalGiftCertificate
   * @return internalGiftCertificate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public GiftCertificate getInternalGiftCertificate() {
    return internalGiftCertificate;
  }


  public void setInternalGiftCertificate(GiftCertificate internalGiftCertificate) {
    this.internalGiftCertificate = internalGiftCertificate;
  }


  public CustomerLoyalty internalGiftCertificateBalance(String internalGiftCertificateBalance) {
    
    this.internalGiftCertificateBalance = internalGiftCertificateBalance;
    return this;
  }

   /**
   * Loyalty Cashback / Store credit balance (internal gift certificate balance)
   * @return internalGiftCertificateBalance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Loyalty Cashback / Store credit balance (internal gift certificate balance)")

  public String getInternalGiftCertificateBalance() {
    return internalGiftCertificateBalance;
  }


  public void setInternalGiftCertificateBalance(String internalGiftCertificateBalance) {
    this.internalGiftCertificateBalance = internalGiftCertificateBalance;
  }


  public CustomerLoyalty internalGiftCertificateOid(Integer internalGiftCertificateOid) {
    
    this.internalGiftCertificateOid = internalGiftCertificateOid;
    return this;
  }

   /**
   * Internal gift certificate oid used to tracking loyalty cashback / store credit.
   * @return internalGiftCertificateOid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Internal gift certificate oid used to tracking loyalty cashback / store credit.")

  public Integer getInternalGiftCertificateOid() {
    return internalGiftCertificateOid;
  }


  public void setInternalGiftCertificateOid(Integer internalGiftCertificateOid) {
    this.internalGiftCertificateOid = internalGiftCertificateOid;
  }


  public CustomerLoyalty ledgerEntries(List<CustomerLoyaltyLedger> ledgerEntries) {
    
    this.ledgerEntries = ledgerEntries;
    return this;
  }

  public CustomerLoyalty addLedgerEntriesItem(CustomerLoyaltyLedger ledgerEntriesItem) {
    if (this.ledgerEntries == null) {
      this.ledgerEntries = new ArrayList<>();
    }
    this.ledgerEntries.add(ledgerEntriesItem);
    return this;
  }

   /**
   * Ledger entries
   * @return ledgerEntries
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Ledger entries")

  public List<CustomerLoyaltyLedger> getLedgerEntries() {
    return ledgerEntries;
  }


  public void setLedgerEntries(List<CustomerLoyaltyLedger> ledgerEntries) {
    this.ledgerEntries = ledgerEntries;
  }


  public CustomerLoyalty pendingPoints(Integer pendingPoints) {
    
    this.pendingPoints = pendingPoints;
    return this;
  }

   /**
   * Pending Points
   * @return pendingPoints
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Pending Points")

  public Integer getPendingPoints() {
    return pendingPoints;
  }


  public void setPendingPoints(Integer pendingPoints) {
    this.pendingPoints = pendingPoints;
  }


  public CustomerLoyalty redemptions(List<CustomerLoyaltyRedemption> redemptions) {
    
    this.redemptions = redemptions;
    return this;
  }

  public CustomerLoyalty addRedemptionsItem(CustomerLoyaltyRedemption redemptionsItem) {
    if (this.redemptions == null) {
      this.redemptions = new ArrayList<>();
    }
    this.redemptions.add(redemptionsItem);
    return this;
  }

   /**
   * Redemptions
   * @return redemptions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Redemptions")

  public List<CustomerLoyaltyRedemption> getRedemptions() {
    return redemptions;
  }


  public void setRedemptions(List<CustomerLoyaltyRedemption> redemptions) {
    this.redemptions = redemptions;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomerLoyalty customerLoyalty = (CustomerLoyalty) o;
    return Objects.equals(this.currentPoints, customerLoyalty.currentPoints) &&
        Objects.equals(this.internalGiftCertificate, customerLoyalty.internalGiftCertificate) &&
        Objects.equals(this.internalGiftCertificateBalance, customerLoyalty.internalGiftCertificateBalance) &&
        Objects.equals(this.internalGiftCertificateOid, customerLoyalty.internalGiftCertificateOid) &&
        Objects.equals(this.ledgerEntries, customerLoyalty.ledgerEntries) &&
        Objects.equals(this.pendingPoints, customerLoyalty.pendingPoints) &&
        Objects.equals(this.redemptions, customerLoyalty.redemptions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currentPoints, internalGiftCertificate, internalGiftCertificateBalance, internalGiftCertificateOid, ledgerEntries, pendingPoints, redemptions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomerLoyalty {\n");
    sb.append("    currentPoints: ").append(toIndentedString(currentPoints)).append("\n");
    sb.append("    internalGiftCertificate: ").append(toIndentedString(internalGiftCertificate)).append("\n");
    sb.append("    internalGiftCertificateBalance: ").append(toIndentedString(internalGiftCertificateBalance)).append("\n");
    sb.append("    internalGiftCertificateOid: ").append(toIndentedString(internalGiftCertificateOid)).append("\n");
    sb.append("    ledgerEntries: ").append(toIndentedString(ledgerEntries)).append("\n");
    sb.append("    pendingPoints: ").append(toIndentedString(pendingPoints)).append("\n");
    sb.append("    redemptions: ").append(toIndentedString(redemptions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("current_points");
    openapiFields.add("internal_gift_certificate");
    openapiFields.add("internal_gift_certificate_balance");
    openapiFields.add("internal_gift_certificate_oid");
    openapiFields.add("ledger_entries");
    openapiFields.add("pending_points");
    openapiFields.add("redemptions");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CustomerLoyalty
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (CustomerLoyalty.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in CustomerLoyalty is not found in the empty JSON string", CustomerLoyalty.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!CustomerLoyalty.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CustomerLoyalty` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      // validate the optional field `internal_gift_certificate`
      if (jsonObj.getAsJsonObject("internal_gift_certificate") != null) {
        GiftCertificate.validateJsonObject(jsonObj.getAsJsonObject("internal_gift_certificate"));
      }
      if (jsonObj.get("internal_gift_certificate_balance") != null && !jsonObj.get("internal_gift_certificate_balance").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `internal_gift_certificate_balance` to be a primitive type in the JSON string but got `%s`", jsonObj.get("internal_gift_certificate_balance").toString()));
      }
      JsonArray jsonArrayledgerEntries = jsonObj.getAsJsonArray("ledger_entries");
      if (jsonArrayledgerEntries != null) {
        // ensure the json data is an array
        if (!jsonObj.get("ledger_entries").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `ledger_entries` to be an array in the JSON string but got `%s`", jsonObj.get("ledger_entries").toString()));
        }

        // validate the optional field `ledger_entries` (array)
        for (int i = 0; i < jsonArrayledgerEntries.size(); i++) {
          CustomerLoyaltyLedger.validateJsonObject(jsonArrayledgerEntries.get(i).getAsJsonObject());
        };
      }
      JsonArray jsonArrayredemptions = jsonObj.getAsJsonArray("redemptions");
      if (jsonArrayredemptions != null) {
        // ensure the json data is an array
        if (!jsonObj.get("redemptions").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `redemptions` to be an array in the JSON string but got `%s`", jsonObj.get("redemptions").toString()));
        }

        // validate the optional field `redemptions` (array)
        for (int i = 0; i < jsonArrayredemptions.size(); i++) {
          CustomerLoyaltyRedemption.validateJsonObject(jsonArrayredemptions.get(i).getAsJsonObject());
        };
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CustomerLoyalty.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CustomerLoyalty' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CustomerLoyalty> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CustomerLoyalty.class));

       return (TypeAdapter<T>) new TypeAdapter<CustomerLoyalty>() {
           @Override
           public void write(JsonWriter out, CustomerLoyalty value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CustomerLoyalty read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CustomerLoyalty given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CustomerLoyalty
  * @throws IOException if the JSON string is invalid with respect to CustomerLoyalty
  */
  public static CustomerLoyalty fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CustomerLoyalty.class);
  }

 /**
  * Convert an instance of CustomerLoyalty to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

