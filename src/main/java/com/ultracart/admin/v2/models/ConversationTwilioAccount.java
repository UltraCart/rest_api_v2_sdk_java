/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * ConversationTwilioAccount
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-09-19T12:15:47.119-04:00[America/Indianapolis]")
public class ConversationTwilioAccount {
  public static final String SERIALIZED_NAME_MERCHANT_ID = "merchant_id";
  @SerializedName(SERIALIZED_NAME_MERCHANT_ID)
  private String merchantId;

  public static final String SERIALIZED_NAME_TWILIO_PHONE_NUMBERS = "twilio_phone_numbers";
  @SerializedName(SERIALIZED_NAME_TWILIO_PHONE_NUMBERS)
  private List<String> twilioPhoneNumbers = null;

  public ConversationTwilioAccount() { 
  }

  public ConversationTwilioAccount merchantId(String merchantId) {
    
    this.merchantId = merchantId;
    return this;
  }

   /**
   * Get merchantId
   * @return merchantId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMerchantId() {
    return merchantId;
  }


  public void setMerchantId(String merchantId) {
    this.merchantId = merchantId;
  }


  public ConversationTwilioAccount twilioPhoneNumbers(List<String> twilioPhoneNumbers) {
    
    this.twilioPhoneNumbers = twilioPhoneNumbers;
    return this;
  }

  public ConversationTwilioAccount addTwilioPhoneNumbersItem(String twilioPhoneNumbersItem) {
    if (this.twilioPhoneNumbers == null) {
      this.twilioPhoneNumbers = new ArrayList<>();
    }
    this.twilioPhoneNumbers.add(twilioPhoneNumbersItem);
    return this;
  }

   /**
   * Get twilioPhoneNumbers
   * @return twilioPhoneNumbers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getTwilioPhoneNumbers() {
    return twilioPhoneNumbers;
  }


  public void setTwilioPhoneNumbers(List<String> twilioPhoneNumbers) {
    this.twilioPhoneNumbers = twilioPhoneNumbers;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConversationTwilioAccount conversationTwilioAccount = (ConversationTwilioAccount) o;
    return Objects.equals(this.merchantId, conversationTwilioAccount.merchantId) &&
        Objects.equals(this.twilioPhoneNumbers, conversationTwilioAccount.twilioPhoneNumbers);
  }

  @Override
  public int hashCode() {
    return Objects.hash(merchantId, twilioPhoneNumbers);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConversationTwilioAccount {\n");
    sb.append("    merchantId: ").append(toIndentedString(merchantId)).append("\n");
    sb.append("    twilioPhoneNumbers: ").append(toIndentedString(twilioPhoneNumbers)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("merchant_id");
    openapiFields.add("twilio_phone_numbers");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ConversationTwilioAccount
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (ConversationTwilioAccount.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in ConversationTwilioAccount is not found in the empty JSON string", ConversationTwilioAccount.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!ConversationTwilioAccount.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ConversationTwilioAccount` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("merchant_id") != null && !jsonObj.get("merchant_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `merchant_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("merchant_id").toString()));
      }
      // ensure the json data is an array
      if (jsonObj.get("twilio_phone_numbers") != null && !jsonObj.get("twilio_phone_numbers").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `twilio_phone_numbers` to be an array in the JSON string but got `%s`", jsonObj.get("twilio_phone_numbers").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ConversationTwilioAccount.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ConversationTwilioAccount' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ConversationTwilioAccount> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ConversationTwilioAccount.class));

       return (TypeAdapter<T>) new TypeAdapter<ConversationTwilioAccount>() {
           @Override
           public void write(JsonWriter out, ConversationTwilioAccount value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ConversationTwilioAccount read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ConversationTwilioAccount given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ConversationTwilioAccount
  * @throws IOException if the JSON string is invalid with respect to ConversationTwilioAccount
  */
  public static ConversationTwilioAccount fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ConversationTwilioAccount.class);
  }

 /**
  * Convert an instance of ConversationTwilioAccount to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

