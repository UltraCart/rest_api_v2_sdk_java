/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.Browser;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * OrderCheckout
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-16T15:08:13.597-04:00[America/Indianapolis]")
public class OrderCheckout {
  public static final String SERIALIZED_NAME_BROWSER = "browser";
  @SerializedName(SERIALIZED_NAME_BROWSER)
  private Browser browser;

  public static final String SERIALIZED_NAME_COMMENTS = "comments";
  @SerializedName(SERIALIZED_NAME_COMMENTS)
  private String comments;

  public static final String SERIALIZED_NAME_CUSTOM_FIELD1 = "custom_field1";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELD1)
  private String customField1;

  public static final String SERIALIZED_NAME_CUSTOM_FIELD10 = "custom_field10";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELD10)
  private String customField10;

  public static final String SERIALIZED_NAME_CUSTOM_FIELD2 = "custom_field2";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELD2)
  private String customField2;

  public static final String SERIALIZED_NAME_CUSTOM_FIELD3 = "custom_field3";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELD3)
  private String customField3;

  public static final String SERIALIZED_NAME_CUSTOM_FIELD4 = "custom_field4";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELD4)
  private String customField4;

  public static final String SERIALIZED_NAME_CUSTOM_FIELD5 = "custom_field5";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELD5)
  private String customField5;

  public static final String SERIALIZED_NAME_CUSTOM_FIELD6 = "custom_field6";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELD6)
  private String customField6;

  public static final String SERIALIZED_NAME_CUSTOM_FIELD7 = "custom_field7";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELD7)
  private String customField7;

  public static final String SERIALIZED_NAME_CUSTOM_FIELD8 = "custom_field8";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELD8)
  private String customField8;

  public static final String SERIALIZED_NAME_CUSTOM_FIELD9 = "custom_field9";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELD9)
  private String customField9;

  public static final String SERIALIZED_NAME_CUSTOMER_IP_ADDRESS = "customer_ip_address";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_IP_ADDRESS)
  private String customerIpAddress;

  public static final String SERIALIZED_NAME_SCREEN_BRANDING_THEME_CODE = "screen_branding_theme_code";
  @SerializedName(SERIALIZED_NAME_SCREEN_BRANDING_THEME_CODE)
  private String screenBrandingThemeCode;

  public static final String SERIALIZED_NAME_SCREEN_SIZE = "screen_size";
  @SerializedName(SERIALIZED_NAME_SCREEN_SIZE)
  private String screenSize;

  public static final String SERIALIZED_NAME_STOREFRONT_HOST_NAME = "storefront_host_name";
  @SerializedName(SERIALIZED_NAME_STOREFRONT_HOST_NAME)
  private String storefrontHostName;

  public static final String SERIALIZED_NAME_UPSELL_PATH_CODE = "upsell_path_code";
  @SerializedName(SERIALIZED_NAME_UPSELL_PATH_CODE)
  private String upsellPathCode;

  public OrderCheckout() { 
  }

  public OrderCheckout browser(Browser browser) {
    
    this.browser = browser;
    return this;
  }

   /**
   * Get browser
   * @return browser
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Browser getBrowser() {
    return browser;
  }


  public void setBrowser(Browser browser) {
    this.browser = browser;
  }


  public OrderCheckout comments(String comments) {
    
    this.comments = comments;
    return this;
  }

   /**
   * Comments from the customer.  Rarely used on the single page checkout.
   * @return comments
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Comments from the customer.  Rarely used on the single page checkout.")

  public String getComments() {
    return comments;
  }


  public void setComments(String comments) {
    this.comments = comments;
  }


  public OrderCheckout customField1(String customField1) {
    
    this.customField1 = customField1;
    return this;
  }

   /**
   * Custom field 1
   * @return customField1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Custom field 1")

  public String getCustomField1() {
    return customField1;
  }


  public void setCustomField1(String customField1) {
    this.customField1 = customField1;
  }


  public OrderCheckout customField10(String customField10) {
    
    this.customField10 = customField10;
    return this;
  }

   /**
   * Custom field 10
   * @return customField10
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Custom field 10")

  public String getCustomField10() {
    return customField10;
  }


  public void setCustomField10(String customField10) {
    this.customField10 = customField10;
  }


  public OrderCheckout customField2(String customField2) {
    
    this.customField2 = customField2;
    return this;
  }

   /**
   * Custom field 2
   * @return customField2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Custom field 2")

  public String getCustomField2() {
    return customField2;
  }


  public void setCustomField2(String customField2) {
    this.customField2 = customField2;
  }


  public OrderCheckout customField3(String customField3) {
    
    this.customField3 = customField3;
    return this;
  }

   /**
   * Custom field 3
   * @return customField3
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Custom field 3")

  public String getCustomField3() {
    return customField3;
  }


  public void setCustomField3(String customField3) {
    this.customField3 = customField3;
  }


  public OrderCheckout customField4(String customField4) {
    
    this.customField4 = customField4;
    return this;
  }

   /**
   * Custom field 4
   * @return customField4
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Custom field 4")

  public String getCustomField4() {
    return customField4;
  }


  public void setCustomField4(String customField4) {
    this.customField4 = customField4;
  }


  public OrderCheckout customField5(String customField5) {
    
    this.customField5 = customField5;
    return this;
  }

   /**
   * Custom field 5
   * @return customField5
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Custom field 5")

  public String getCustomField5() {
    return customField5;
  }


  public void setCustomField5(String customField5) {
    this.customField5 = customField5;
  }


  public OrderCheckout customField6(String customField6) {
    
    this.customField6 = customField6;
    return this;
  }

   /**
   * Custom field 6
   * @return customField6
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Custom field 6")

  public String getCustomField6() {
    return customField6;
  }


  public void setCustomField6(String customField6) {
    this.customField6 = customField6;
  }


  public OrderCheckout customField7(String customField7) {
    
    this.customField7 = customField7;
    return this;
  }

   /**
   * Custom field 7
   * @return customField7
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Custom field 7")

  public String getCustomField7() {
    return customField7;
  }


  public void setCustomField7(String customField7) {
    this.customField7 = customField7;
  }


  public OrderCheckout customField8(String customField8) {
    
    this.customField8 = customField8;
    return this;
  }

   /**
   * Custom field 8
   * @return customField8
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Custom field 8")

  public String getCustomField8() {
    return customField8;
  }


  public void setCustomField8(String customField8) {
    this.customField8 = customField8;
  }


  public OrderCheckout customField9(String customField9) {
    
    this.customField9 = customField9;
    return this;
  }

   /**
   * Custom field 9
   * @return customField9
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Custom field 9")

  public String getCustomField9() {
    return customField9;
  }


  public void setCustomField9(String customField9) {
    this.customField9 = customField9;
  }


  public OrderCheckout customerIpAddress(String customerIpAddress) {
    
    this.customerIpAddress = customerIpAddress;
    return this;
  }

   /**
   * IP address of the customer when placing the order
   * @return customerIpAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "IP address of the customer when placing the order")

  public String getCustomerIpAddress() {
    return customerIpAddress;
  }


  public void setCustomerIpAddress(String customerIpAddress) {
    this.customerIpAddress = customerIpAddress;
  }


  public OrderCheckout screenBrandingThemeCode(String screenBrandingThemeCode) {
    
    this.screenBrandingThemeCode = screenBrandingThemeCode;
    return this;
  }

   /**
   * Screen branding theme code associated with the order (legacy checkout)
   * @return screenBrandingThemeCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Screen branding theme code associated with the order (legacy checkout)")

  public String getScreenBrandingThemeCode() {
    return screenBrandingThemeCode;
  }


  public void setScreenBrandingThemeCode(String screenBrandingThemeCode) {
    this.screenBrandingThemeCode = screenBrandingThemeCode;
  }


  public OrderCheckout screenSize(String screenSize) {
    
    this.screenSize = screenSize;
    return this;
  }

   /**
   * Screen size small, medium or large
   * @return screenSize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Screen size small, medium or large")

  public String getScreenSize() {
    return screenSize;
  }


  public void setScreenSize(String screenSize) {
    this.screenSize = screenSize;
  }


  public OrderCheckout storefrontHostName(String storefrontHostName) {
    
    this.storefrontHostName = storefrontHostName;
    return this;
  }

   /**
   * StoreFront host name associated with the order
   * @return storefrontHostName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "StoreFront host name associated with the order")

  public String getStorefrontHostName() {
    return storefrontHostName;
  }


  public void setStorefrontHostName(String storefrontHostName) {
    this.storefrontHostName = storefrontHostName;
  }


  public OrderCheckout upsellPathCode(String upsellPathCode) {
    
    this.upsellPathCode = upsellPathCode;
    return this;
  }

   /**
   * Upsell path code assigned during the checkout that the customer went through
   * @return upsellPathCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Upsell path code assigned during the checkout that the customer went through")

  public String getUpsellPathCode() {
    return upsellPathCode;
  }


  public void setUpsellPathCode(String upsellPathCode) {
    this.upsellPathCode = upsellPathCode;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderCheckout orderCheckout = (OrderCheckout) o;
    return Objects.equals(this.browser, orderCheckout.browser) &&
        Objects.equals(this.comments, orderCheckout.comments) &&
        Objects.equals(this.customField1, orderCheckout.customField1) &&
        Objects.equals(this.customField10, orderCheckout.customField10) &&
        Objects.equals(this.customField2, orderCheckout.customField2) &&
        Objects.equals(this.customField3, orderCheckout.customField3) &&
        Objects.equals(this.customField4, orderCheckout.customField4) &&
        Objects.equals(this.customField5, orderCheckout.customField5) &&
        Objects.equals(this.customField6, orderCheckout.customField6) &&
        Objects.equals(this.customField7, orderCheckout.customField7) &&
        Objects.equals(this.customField8, orderCheckout.customField8) &&
        Objects.equals(this.customField9, orderCheckout.customField9) &&
        Objects.equals(this.customerIpAddress, orderCheckout.customerIpAddress) &&
        Objects.equals(this.screenBrandingThemeCode, orderCheckout.screenBrandingThemeCode) &&
        Objects.equals(this.screenSize, orderCheckout.screenSize) &&
        Objects.equals(this.storefrontHostName, orderCheckout.storefrontHostName) &&
        Objects.equals(this.upsellPathCode, orderCheckout.upsellPathCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(browser, comments, customField1, customField10, customField2, customField3, customField4, customField5, customField6, customField7, customField8, customField9, customerIpAddress, screenBrandingThemeCode, screenSize, storefrontHostName, upsellPathCode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderCheckout {\n");
    sb.append("    browser: ").append(toIndentedString(browser)).append("\n");
    sb.append("    comments: ").append(toIndentedString(comments)).append("\n");
    sb.append("    customField1: ").append(toIndentedString(customField1)).append("\n");
    sb.append("    customField10: ").append(toIndentedString(customField10)).append("\n");
    sb.append("    customField2: ").append(toIndentedString(customField2)).append("\n");
    sb.append("    customField3: ").append(toIndentedString(customField3)).append("\n");
    sb.append("    customField4: ").append(toIndentedString(customField4)).append("\n");
    sb.append("    customField5: ").append(toIndentedString(customField5)).append("\n");
    sb.append("    customField6: ").append(toIndentedString(customField6)).append("\n");
    sb.append("    customField7: ").append(toIndentedString(customField7)).append("\n");
    sb.append("    customField8: ").append(toIndentedString(customField8)).append("\n");
    sb.append("    customField9: ").append(toIndentedString(customField9)).append("\n");
    sb.append("    customerIpAddress: ").append(toIndentedString(customerIpAddress)).append("\n");
    sb.append("    screenBrandingThemeCode: ").append(toIndentedString(screenBrandingThemeCode)).append("\n");
    sb.append("    screenSize: ").append(toIndentedString(screenSize)).append("\n");
    sb.append("    storefrontHostName: ").append(toIndentedString(storefrontHostName)).append("\n");
    sb.append("    upsellPathCode: ").append(toIndentedString(upsellPathCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("browser");
    openapiFields.add("comments");
    openapiFields.add("custom_field1");
    openapiFields.add("custom_field10");
    openapiFields.add("custom_field2");
    openapiFields.add("custom_field3");
    openapiFields.add("custom_field4");
    openapiFields.add("custom_field5");
    openapiFields.add("custom_field6");
    openapiFields.add("custom_field7");
    openapiFields.add("custom_field8");
    openapiFields.add("custom_field9");
    openapiFields.add("customer_ip_address");
    openapiFields.add("screen_branding_theme_code");
    openapiFields.add("screen_size");
    openapiFields.add("storefront_host_name");
    openapiFields.add("upsell_path_code");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to OrderCheckout
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (OrderCheckout.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in OrderCheckout is not found in the empty JSON string", OrderCheckout.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!OrderCheckout.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OrderCheckout` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      // validate the optional field `browser`
      if (jsonObj.getAsJsonObject("browser") != null) {
        Browser.validateJsonObject(jsonObj.getAsJsonObject("browser"));
      }
      if (jsonObj.get("comments") != null && !jsonObj.get("comments").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `comments` to be a primitive type in the JSON string but got `%s`", jsonObj.get("comments").toString()));
      }
      if (jsonObj.get("custom_field1") != null && !jsonObj.get("custom_field1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `custom_field1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("custom_field1").toString()));
      }
      if (jsonObj.get("custom_field10") != null && !jsonObj.get("custom_field10").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `custom_field10` to be a primitive type in the JSON string but got `%s`", jsonObj.get("custom_field10").toString()));
      }
      if (jsonObj.get("custom_field2") != null && !jsonObj.get("custom_field2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `custom_field2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("custom_field2").toString()));
      }
      if (jsonObj.get("custom_field3") != null && !jsonObj.get("custom_field3").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `custom_field3` to be a primitive type in the JSON string but got `%s`", jsonObj.get("custom_field3").toString()));
      }
      if (jsonObj.get("custom_field4") != null && !jsonObj.get("custom_field4").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `custom_field4` to be a primitive type in the JSON string but got `%s`", jsonObj.get("custom_field4").toString()));
      }
      if (jsonObj.get("custom_field5") != null && !jsonObj.get("custom_field5").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `custom_field5` to be a primitive type in the JSON string but got `%s`", jsonObj.get("custom_field5").toString()));
      }
      if (jsonObj.get("custom_field6") != null && !jsonObj.get("custom_field6").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `custom_field6` to be a primitive type in the JSON string but got `%s`", jsonObj.get("custom_field6").toString()));
      }
      if (jsonObj.get("custom_field7") != null && !jsonObj.get("custom_field7").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `custom_field7` to be a primitive type in the JSON string but got `%s`", jsonObj.get("custom_field7").toString()));
      }
      if (jsonObj.get("custom_field8") != null && !jsonObj.get("custom_field8").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `custom_field8` to be a primitive type in the JSON string but got `%s`", jsonObj.get("custom_field8").toString()));
      }
      if (jsonObj.get("custom_field9") != null && !jsonObj.get("custom_field9").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `custom_field9` to be a primitive type in the JSON string but got `%s`", jsonObj.get("custom_field9").toString()));
      }
      if (jsonObj.get("customer_ip_address") != null && !jsonObj.get("customer_ip_address").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customer_ip_address` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customer_ip_address").toString()));
      }
      if (jsonObj.get("screen_branding_theme_code") != null && !jsonObj.get("screen_branding_theme_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `screen_branding_theme_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("screen_branding_theme_code").toString()));
      }
      if (jsonObj.get("screen_size") != null && !jsonObj.get("screen_size").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `screen_size` to be a primitive type in the JSON string but got `%s`", jsonObj.get("screen_size").toString()));
      }
      if (jsonObj.get("storefront_host_name") != null && !jsonObj.get("storefront_host_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `storefront_host_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("storefront_host_name").toString()));
      }
      if (jsonObj.get("upsell_path_code") != null && !jsonObj.get("upsell_path_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `upsell_path_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("upsell_path_code").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OrderCheckout.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OrderCheckout' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OrderCheckout> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OrderCheckout.class));

       return (TypeAdapter<T>) new TypeAdapter<OrderCheckout>() {
           @Override
           public void write(JsonWriter out, OrderCheckout value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OrderCheckout read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of OrderCheckout given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of OrderCheckout
  * @throws IOException if the JSON string is invalid with respect to OrderCheckout
  */
  public static OrderCheckout fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OrderCheckout.class);
  }

 /**
  * Convert an instance of OrderCheckout to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

