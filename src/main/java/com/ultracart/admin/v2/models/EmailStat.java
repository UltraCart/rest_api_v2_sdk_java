/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * EmailStat
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-12-02T10:19:41.023-05:00")
public class EmailStat {
  @SerializedName("click_count")
  private Integer clickCount = null;

  @SerializedName("click_count_formatted")
  private String clickCountFormatted = null;

  @SerializedName("delivered_count")
  private Integer deliveredCount = null;

  @SerializedName("delivered_count_formatted")
  private String deliveredCountFormatted = null;

  @SerializedName("kickbox_count")
  private Integer kickboxCount = null;

  @SerializedName("kickbox_count_formatted")
  private String kickboxCountFormatted = null;

  @SerializedName("merchant_id")
  private String merchantId = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("open_count")
  private Integer openCount = null;

  @SerializedName("open_count_formatted")
  private String openCountFormatted = null;

  @SerializedName("permanent_bounce_count")
  private Integer permanentBounceCount = null;

  @SerializedName("permanent_bounce_count_formatted")
  private String permanentBounceCountFormatted = null;

  @SerializedName("profit")
  private BigDecimal profit = null;

  @SerializedName("profit_formatted")
  private String profitFormatted = null;

  @SerializedName("revenue")
  private BigDecimal revenue = null;

  @SerializedName("revenue_formatted")
  private String revenueFormatted = null;

  @SerializedName("send_count")
  private Integer sendCount = null;

  @SerializedName("send_count_formatted")
  private String sendCountFormatted = null;

  @SerializedName("skipped_count")
  private Integer skippedCount = null;

  @SerializedName("skipped_count_formatted")
  private String skippedCountFormatted = null;

  @SerializedName("spam_count")
  private Integer spamCount = null;

  @SerializedName("spam_count_formatted")
  private String spamCountFormatted = null;

  @SerializedName("stat_type")
  private String statType = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("status_dts")
  private String statusDts = null;

  @SerializedName("storefront_oid")
  private Integer storefrontOid = null;

  @SerializedName("uuid")
  private String uuid = null;

  @SerializedName("view_count")
  private Integer viewCount = null;

  @SerializedName("view_count_formatted")
  private String viewCountFormatted = null;

  public EmailStat clickCount(Integer clickCount) {
    this.clickCount = clickCount;
    return this;
  }

   /**
   * Count of clicked emails
   * @return clickCount
  **/
  @ApiModelProperty(value = "Count of clicked emails")
  public Integer getClickCount() {
    return clickCount;
  }

  public void setClickCount(Integer clickCount) {
    this.clickCount = clickCount;
  }

  public EmailStat clickCountFormatted(String clickCountFormatted) {
    this.clickCountFormatted = clickCountFormatted;
    return this;
  }

   /**
   * Count of clicked emails, formatted
   * @return clickCountFormatted
  **/
  @ApiModelProperty(value = "Count of clicked emails, formatted")
  public String getClickCountFormatted() {
    return clickCountFormatted;
  }

  public void setClickCountFormatted(String clickCountFormatted) {
    this.clickCountFormatted = clickCountFormatted;
  }

  public EmailStat deliveredCount(Integer deliveredCount) {
    this.deliveredCount = deliveredCount;
    return this;
  }

   /**
   * Count of delivered emails
   * @return deliveredCount
  **/
  @ApiModelProperty(value = "Count of delivered emails")
  public Integer getDeliveredCount() {
    return deliveredCount;
  }

  public void setDeliveredCount(Integer deliveredCount) {
    this.deliveredCount = deliveredCount;
  }

  public EmailStat deliveredCountFormatted(String deliveredCountFormatted) {
    this.deliveredCountFormatted = deliveredCountFormatted;
    return this;
  }

   /**
   * Count of delivered emails, formatted
   * @return deliveredCountFormatted
  **/
  @ApiModelProperty(value = "Count of delivered emails, formatted")
  public String getDeliveredCountFormatted() {
    return deliveredCountFormatted;
  }

  public void setDeliveredCountFormatted(String deliveredCountFormatted) {
    this.deliveredCountFormatted = deliveredCountFormatted;
  }

  public EmailStat kickboxCount(Integer kickboxCount) {
    this.kickboxCount = kickboxCount;
    return this;
  }

   /**
   * Count of emails kicked
   * @return kickboxCount
  **/
  @ApiModelProperty(value = "Count of emails kicked")
  public Integer getKickboxCount() {
    return kickboxCount;
  }

  public void setKickboxCount(Integer kickboxCount) {
    this.kickboxCount = kickboxCount;
  }

  public EmailStat kickboxCountFormatted(String kickboxCountFormatted) {
    this.kickboxCountFormatted = kickboxCountFormatted;
    return this;
  }

   /**
   * Count of emails kicked, formatted
   * @return kickboxCountFormatted
  **/
  @ApiModelProperty(value = "Count of emails kicked, formatted")
  public String getKickboxCountFormatted() {
    return kickboxCountFormatted;
  }

  public void setKickboxCountFormatted(String kickboxCountFormatted) {
    this.kickboxCountFormatted = kickboxCountFormatted;
  }

  public EmailStat merchantId(String merchantId) {
    this.merchantId = merchantId;
    return this;
  }

   /**
   * Merchant ID
   * @return merchantId
  **/
  @ApiModelProperty(value = "Merchant ID")
  public String getMerchantId() {
    return merchantId;
  }

  public void setMerchantId(String merchantId) {
    this.merchantId = merchantId;
  }

  public EmailStat name(String name) {
    this.name = name;
    return this;
  }

   /**
   * List or segment name
   * @return name
  **/
  @ApiModelProperty(value = "List or segment name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public EmailStat openCount(Integer openCount) {
    this.openCount = openCount;
    return this;
  }

   /**
   * Count of opened emails
   * @return openCount
  **/
  @ApiModelProperty(value = "Count of opened emails")
  public Integer getOpenCount() {
    return openCount;
  }

  public void setOpenCount(Integer openCount) {
    this.openCount = openCount;
  }

  public EmailStat openCountFormatted(String openCountFormatted) {
    this.openCountFormatted = openCountFormatted;
    return this;
  }

   /**
   * Count of opened emails, formatted
   * @return openCountFormatted
  **/
  @ApiModelProperty(value = "Count of opened emails, formatted")
  public String getOpenCountFormatted() {
    return openCountFormatted;
  }

  public void setOpenCountFormatted(String openCountFormatted) {
    this.openCountFormatted = openCountFormatted;
  }

  public EmailStat permanentBounceCount(Integer permanentBounceCount) {
    this.permanentBounceCount = permanentBounceCount;
    return this;
  }

   /**
   * Count of emails permanently bounced
   * @return permanentBounceCount
  **/
  @ApiModelProperty(value = "Count of emails permanently bounced")
  public Integer getPermanentBounceCount() {
    return permanentBounceCount;
  }

  public void setPermanentBounceCount(Integer permanentBounceCount) {
    this.permanentBounceCount = permanentBounceCount;
  }

  public EmailStat permanentBounceCountFormatted(String permanentBounceCountFormatted) {
    this.permanentBounceCountFormatted = permanentBounceCountFormatted;
    return this;
  }

   /**
   * Count of emails permanently bounced, formatted
   * @return permanentBounceCountFormatted
  **/
  @ApiModelProperty(value = "Count of emails permanently bounced, formatted")
  public String getPermanentBounceCountFormatted() {
    return permanentBounceCountFormatted;
  }

  public void setPermanentBounceCountFormatted(String permanentBounceCountFormatted) {
    this.permanentBounceCountFormatted = permanentBounceCountFormatted;
  }

  public EmailStat profit(BigDecimal profit) {
    this.profit = profit;
    return this;
  }

   /**
   * Profit
   * @return profit
  **/
  @ApiModelProperty(value = "Profit")
  public BigDecimal getProfit() {
    return profit;
  }

  public void setProfit(BigDecimal profit) {
    this.profit = profit;
  }

  public EmailStat profitFormatted(String profitFormatted) {
    this.profitFormatted = profitFormatted;
    return this;
  }

   /**
   * Profit, formatted
   * @return profitFormatted
  **/
  @ApiModelProperty(value = "Profit, formatted")
  public String getProfitFormatted() {
    return profitFormatted;
  }

  public void setProfitFormatted(String profitFormatted) {
    this.profitFormatted = profitFormatted;
  }

  public EmailStat revenue(BigDecimal revenue) {
    this.revenue = revenue;
    return this;
  }

   /**
   * Revenue
   * @return revenue
  **/
  @ApiModelProperty(value = "Revenue")
  public BigDecimal getRevenue() {
    return revenue;
  }

  public void setRevenue(BigDecimal revenue) {
    this.revenue = revenue;
  }

  public EmailStat revenueFormatted(String revenueFormatted) {
    this.revenueFormatted = revenueFormatted;
    return this;
  }

   /**
   * Revenue, formatted
   * @return revenueFormatted
  **/
  @ApiModelProperty(value = "Revenue, formatted")
  public String getRevenueFormatted() {
    return revenueFormatted;
  }

  public void setRevenueFormatted(String revenueFormatted) {
    this.revenueFormatted = revenueFormatted;
  }

  public EmailStat sendCount(Integer sendCount) {
    this.sendCount = sendCount;
    return this;
  }

   /**
   * Count of emails sent
   * @return sendCount
  **/
  @ApiModelProperty(value = "Count of emails sent")
  public Integer getSendCount() {
    return sendCount;
  }

  public void setSendCount(Integer sendCount) {
    this.sendCount = sendCount;
  }

  public EmailStat sendCountFormatted(String sendCountFormatted) {
    this.sendCountFormatted = sendCountFormatted;
    return this;
  }

   /**
   * Count of emails sent, formatted
   * @return sendCountFormatted
  **/
  @ApiModelProperty(value = "Count of emails sent, formatted")
  public String getSendCountFormatted() {
    return sendCountFormatted;
  }

  public void setSendCountFormatted(String sendCountFormatted) {
    this.sendCountFormatted = sendCountFormatted;
  }

  public EmailStat skippedCount(Integer skippedCount) {
    this.skippedCount = skippedCount;
    return this;
  }

   /**
   * Count of skipped emails
   * @return skippedCount
  **/
  @ApiModelProperty(value = "Count of skipped emails")
  public Integer getSkippedCount() {
    return skippedCount;
  }

  public void setSkippedCount(Integer skippedCount) {
    this.skippedCount = skippedCount;
  }

  public EmailStat skippedCountFormatted(String skippedCountFormatted) {
    this.skippedCountFormatted = skippedCountFormatted;
    return this;
  }

   /**
   * Count of skipped emails, formatted
   * @return skippedCountFormatted
  **/
  @ApiModelProperty(value = "Count of skipped emails, formatted")
  public String getSkippedCountFormatted() {
    return skippedCountFormatted;
  }

  public void setSkippedCountFormatted(String skippedCountFormatted) {
    this.skippedCountFormatted = skippedCountFormatted;
  }

  public EmailStat spamCount(Integer spamCount) {
    this.spamCount = spamCount;
    return this;
  }

   /**
   * Count of emails classified as spam
   * @return spamCount
  **/
  @ApiModelProperty(value = "Count of emails classified as spam")
  public Integer getSpamCount() {
    return spamCount;
  }

  public void setSpamCount(Integer spamCount) {
    this.spamCount = spamCount;
  }

  public EmailStat spamCountFormatted(String spamCountFormatted) {
    this.spamCountFormatted = spamCountFormatted;
    return this;
  }

   /**
   * Count of emails classified as spam, formatted
   * @return spamCountFormatted
  **/
  @ApiModelProperty(value = "Count of emails classified as spam, formatted")
  public String getSpamCountFormatted() {
    return spamCountFormatted;
  }

  public void setSpamCountFormatted(String spamCountFormatted) {
    this.spamCountFormatted = spamCountFormatted;
  }

  public EmailStat statType(String statType) {
    this.statType = statType;
    return this;
  }

   /**
   * Campaign, Flow or None (for anything else)
   * @return statType
  **/
  @ApiModelProperty(value = "Campaign, Flow or None (for anything else)")
  public String getStatType() {
    return statType;
  }

  public void setStatType(String statType) {
    this.statType = statType;
  }

  public EmailStat status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Status of campaign or flow
   * @return status
  **/
  @ApiModelProperty(value = "Status of campaign or flow")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public EmailStat statusDts(String statusDts) {
    this.statusDts = statusDts;
    return this;
  }

   /**
   * Status dts of campaign or flow
   * @return statusDts
  **/
  @ApiModelProperty(value = "Status dts of campaign or flow")
  public String getStatusDts() {
    return statusDts;
  }

  public void setStatusDts(String statusDts) {
    this.statusDts = statusDts;
  }

  public EmailStat storefrontOid(Integer storefrontOid) {
    this.storefrontOid = storefrontOid;
    return this;
  }

   /**
   * Storefront oid
   * @return storefrontOid
  **/
  @ApiModelProperty(value = "Storefront oid")
  public Integer getStorefrontOid() {
    return storefrontOid;
  }

  public void setStorefrontOid(Integer storefrontOid) {
    this.storefrontOid = storefrontOid;
  }

  public EmailStat uuid(String uuid) {
    this.uuid = uuid;
    return this;
  }

   /**
   * List or segment uuid
   * @return uuid
  **/
  @ApiModelProperty(value = "List or segment uuid")
  public String getUuid() {
    return uuid;
  }

  public void setUuid(String uuid) {
    this.uuid = uuid;
  }

  public EmailStat viewCount(Integer viewCount) {
    this.viewCount = viewCount;
    return this;
  }

   /**
   * Count of views
   * @return viewCount
  **/
  @ApiModelProperty(value = "Count of views")
  public Integer getViewCount() {
    return viewCount;
  }

  public void setViewCount(Integer viewCount) {
    this.viewCount = viewCount;
  }

  public EmailStat viewCountFormatted(String viewCountFormatted) {
    this.viewCountFormatted = viewCountFormatted;
    return this;
  }

   /**
   * Count of views, formatted
   * @return viewCountFormatted
  **/
  @ApiModelProperty(value = "Count of views, formatted")
  public String getViewCountFormatted() {
    return viewCountFormatted;
  }

  public void setViewCountFormatted(String viewCountFormatted) {
    this.viewCountFormatted = viewCountFormatted;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmailStat emailStat = (EmailStat) o;
    return Objects.equals(this.clickCount, emailStat.clickCount) &&
        Objects.equals(this.clickCountFormatted, emailStat.clickCountFormatted) &&
        Objects.equals(this.deliveredCount, emailStat.deliveredCount) &&
        Objects.equals(this.deliveredCountFormatted, emailStat.deliveredCountFormatted) &&
        Objects.equals(this.kickboxCount, emailStat.kickboxCount) &&
        Objects.equals(this.kickboxCountFormatted, emailStat.kickboxCountFormatted) &&
        Objects.equals(this.merchantId, emailStat.merchantId) &&
        Objects.equals(this.name, emailStat.name) &&
        Objects.equals(this.openCount, emailStat.openCount) &&
        Objects.equals(this.openCountFormatted, emailStat.openCountFormatted) &&
        Objects.equals(this.permanentBounceCount, emailStat.permanentBounceCount) &&
        Objects.equals(this.permanentBounceCountFormatted, emailStat.permanentBounceCountFormatted) &&
        Objects.equals(this.profit, emailStat.profit) &&
        Objects.equals(this.profitFormatted, emailStat.profitFormatted) &&
        Objects.equals(this.revenue, emailStat.revenue) &&
        Objects.equals(this.revenueFormatted, emailStat.revenueFormatted) &&
        Objects.equals(this.sendCount, emailStat.sendCount) &&
        Objects.equals(this.sendCountFormatted, emailStat.sendCountFormatted) &&
        Objects.equals(this.skippedCount, emailStat.skippedCount) &&
        Objects.equals(this.skippedCountFormatted, emailStat.skippedCountFormatted) &&
        Objects.equals(this.spamCount, emailStat.spamCount) &&
        Objects.equals(this.spamCountFormatted, emailStat.spamCountFormatted) &&
        Objects.equals(this.statType, emailStat.statType) &&
        Objects.equals(this.status, emailStat.status) &&
        Objects.equals(this.statusDts, emailStat.statusDts) &&
        Objects.equals(this.storefrontOid, emailStat.storefrontOid) &&
        Objects.equals(this.uuid, emailStat.uuid) &&
        Objects.equals(this.viewCount, emailStat.viewCount) &&
        Objects.equals(this.viewCountFormatted, emailStat.viewCountFormatted);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clickCount, clickCountFormatted, deliveredCount, deliveredCountFormatted, kickboxCount, kickboxCountFormatted, merchantId, name, openCount, openCountFormatted, permanentBounceCount, permanentBounceCountFormatted, profit, profitFormatted, revenue, revenueFormatted, sendCount, sendCountFormatted, skippedCount, skippedCountFormatted, spamCount, spamCountFormatted, statType, status, statusDts, storefrontOid, uuid, viewCount, viewCountFormatted);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmailStat {\n");
    
    sb.append("    clickCount: ").append(toIndentedString(clickCount)).append("\n");
    sb.append("    clickCountFormatted: ").append(toIndentedString(clickCountFormatted)).append("\n");
    sb.append("    deliveredCount: ").append(toIndentedString(deliveredCount)).append("\n");
    sb.append("    deliveredCountFormatted: ").append(toIndentedString(deliveredCountFormatted)).append("\n");
    sb.append("    kickboxCount: ").append(toIndentedString(kickboxCount)).append("\n");
    sb.append("    kickboxCountFormatted: ").append(toIndentedString(kickboxCountFormatted)).append("\n");
    sb.append("    merchantId: ").append(toIndentedString(merchantId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    openCount: ").append(toIndentedString(openCount)).append("\n");
    sb.append("    openCountFormatted: ").append(toIndentedString(openCountFormatted)).append("\n");
    sb.append("    permanentBounceCount: ").append(toIndentedString(permanentBounceCount)).append("\n");
    sb.append("    permanentBounceCountFormatted: ").append(toIndentedString(permanentBounceCountFormatted)).append("\n");
    sb.append("    profit: ").append(toIndentedString(profit)).append("\n");
    sb.append("    profitFormatted: ").append(toIndentedString(profitFormatted)).append("\n");
    sb.append("    revenue: ").append(toIndentedString(revenue)).append("\n");
    sb.append("    revenueFormatted: ").append(toIndentedString(revenueFormatted)).append("\n");
    sb.append("    sendCount: ").append(toIndentedString(sendCount)).append("\n");
    sb.append("    sendCountFormatted: ").append(toIndentedString(sendCountFormatted)).append("\n");
    sb.append("    skippedCount: ").append(toIndentedString(skippedCount)).append("\n");
    sb.append("    skippedCountFormatted: ").append(toIndentedString(skippedCountFormatted)).append("\n");
    sb.append("    spamCount: ").append(toIndentedString(spamCount)).append("\n");
    sb.append("    spamCountFormatted: ").append(toIndentedString(spamCountFormatted)).append("\n");
    sb.append("    statType: ").append(toIndentedString(statType)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusDts: ").append(toIndentedString(statusDts)).append("\n");
    sb.append("    storefrontOid: ").append(toIndentedString(storefrontOid)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    viewCount: ").append(toIndentedString(viewCount)).append("\n");
    sb.append("    viewCountFormatted: ").append(toIndentedString(viewCountFormatted)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

