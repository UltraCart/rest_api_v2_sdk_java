/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * CouponQuery
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-28T13:13:08.776-04:00[America/Indianapolis]")
public class CouponQuery {
  public static final String SERIALIZED_NAME_AFFILIATE_OID = "affiliate_oid";
  @SerializedName(SERIALIZED_NAME_AFFILIATE_OID)
  private Integer affiliateOid;

  public static final String SERIALIZED_NAME_COUPON_TYPE = "coupon_type";
  @SerializedName(SERIALIZED_NAME_COUPON_TYPE)
  private String couponType;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_EXCLUDE_EXPIRED = "exclude_expired";
  @SerializedName(SERIALIZED_NAME_EXCLUDE_EXPIRED)
  private Boolean excludeExpired;

  public static final String SERIALIZED_NAME_EXPIRATION_DTS_BEGIN = "expiration_dts_begin";
  @SerializedName(SERIALIZED_NAME_EXPIRATION_DTS_BEGIN)
  private String expirationDtsBegin;

  public static final String SERIALIZED_NAME_EXPIRATION_DTS_END = "expiration_dts_end";
  @SerializedName(SERIALIZED_NAME_EXPIRATION_DTS_END)
  private String expirationDtsEnd;

  public static final String SERIALIZED_NAME_MERCHANT_CODE = "merchant_code";
  @SerializedName(SERIALIZED_NAME_MERCHANT_CODE)
  private String merchantCode;

  public static final String SERIALIZED_NAME_MERCHANT_CODE_OR_DESCRIPTION = "merchant_code_or_description";
  @SerializedName(SERIALIZED_NAME_MERCHANT_CODE_OR_DESCRIPTION)
  private String merchantCodeOrDescription;

  public static final String SERIALIZED_NAME_START_DTS_BEGIN = "start_dts_begin";
  @SerializedName(SERIALIZED_NAME_START_DTS_BEGIN)
  private String startDtsBegin;

  public static final String SERIALIZED_NAME_START_DTS_END = "start_dts_end";
  @SerializedName(SERIALIZED_NAME_START_DTS_END)
  private String startDtsEnd;

  public CouponQuery() { 
  }

  public CouponQuery affiliateOid(Integer affiliateOid) {
    
    this.affiliateOid = affiliateOid;
    return this;
  }

   /**
   * Affiliate oid
   * @return affiliateOid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Affiliate oid")

  public Integer getAffiliateOid() {
    return affiliateOid;
  }


  public void setAffiliateOid(Integer affiliateOid) {
    this.affiliateOid = affiliateOid;
  }


  public CouponQuery couponType(String couponType) {
    
    this.couponType = couponType;
    return this;
  }

   /**
   * The type of coupon.
   * @return couponType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The type of coupon.")

  public String getCouponType() {
    return couponType;
  }


  public void setCouponType(String couponType) {
    this.couponType = couponType;
  }


  public CouponQuery description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Description of this coupon
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Description of this coupon")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public CouponQuery excludeExpired(Boolean excludeExpired) {
    
    this.excludeExpired = excludeExpired;
    return this;
  }

   /**
   * Exclude expired coupons if true
   * @return excludeExpired
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Exclude expired coupons if true")

  public Boolean getExcludeExpired() {
    return excludeExpired;
  }


  public void setExcludeExpired(Boolean excludeExpired) {
    this.excludeExpired = excludeExpired;
  }


  public CouponQuery expirationDtsBegin(String expirationDtsBegin) {
    
    this.expirationDtsBegin = expirationDtsBegin;
    return this;
  }

   /**
   * Expiration date begin
   * @return expirationDtsBegin
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Expiration date begin")

  public String getExpirationDtsBegin() {
    return expirationDtsBegin;
  }


  public void setExpirationDtsBegin(String expirationDtsBegin) {
    this.expirationDtsBegin = expirationDtsBegin;
  }


  public CouponQuery expirationDtsEnd(String expirationDtsEnd) {
    
    this.expirationDtsEnd = expirationDtsEnd;
    return this;
  }

   /**
   * Expiration date begin
   * @return expirationDtsEnd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Expiration date begin")

  public String getExpirationDtsEnd() {
    return expirationDtsEnd;
  }


  public void setExpirationDtsEnd(String expirationDtsEnd) {
    this.expirationDtsEnd = expirationDtsEnd;
  }


  public CouponQuery merchantCode(String merchantCode) {
    
    this.merchantCode = merchantCode;
    return this;
  }

   /**
   * Merchant code is a unique character string for this coupon.
   * @return merchantCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Merchant code is a unique character string for this coupon.")

  public String getMerchantCode() {
    return merchantCode;
  }


  public void setMerchantCode(String merchantCode) {
    this.merchantCode = merchantCode;
  }


  public CouponQuery merchantCodeOrDescription(String merchantCodeOrDescription) {
    
    this.merchantCodeOrDescription = merchantCodeOrDescription;
    return this;
  }

   /**
   * Merchant code description used for searching
   * @return merchantCodeOrDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Merchant code description used for searching")

  public String getMerchantCodeOrDescription() {
    return merchantCodeOrDescription;
  }


  public void setMerchantCodeOrDescription(String merchantCodeOrDescription) {
    this.merchantCodeOrDescription = merchantCodeOrDescription;
  }


  public CouponQuery startDtsBegin(String startDtsBegin) {
    
    this.startDtsBegin = startDtsBegin;
    return this;
  }

   /**
   * Start date begin
   * @return startDtsBegin
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Start date begin")

  public String getStartDtsBegin() {
    return startDtsBegin;
  }


  public void setStartDtsBegin(String startDtsBegin) {
    this.startDtsBegin = startDtsBegin;
  }


  public CouponQuery startDtsEnd(String startDtsEnd) {
    
    this.startDtsEnd = startDtsEnd;
    return this;
  }

   /**
   * Start date end
   * @return startDtsEnd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Start date end")

  public String getStartDtsEnd() {
    return startDtsEnd;
  }


  public void setStartDtsEnd(String startDtsEnd) {
    this.startDtsEnd = startDtsEnd;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CouponQuery couponQuery = (CouponQuery) o;
    return Objects.equals(this.affiliateOid, couponQuery.affiliateOid) &&
        Objects.equals(this.couponType, couponQuery.couponType) &&
        Objects.equals(this.description, couponQuery.description) &&
        Objects.equals(this.excludeExpired, couponQuery.excludeExpired) &&
        Objects.equals(this.expirationDtsBegin, couponQuery.expirationDtsBegin) &&
        Objects.equals(this.expirationDtsEnd, couponQuery.expirationDtsEnd) &&
        Objects.equals(this.merchantCode, couponQuery.merchantCode) &&
        Objects.equals(this.merchantCodeOrDescription, couponQuery.merchantCodeOrDescription) &&
        Objects.equals(this.startDtsBegin, couponQuery.startDtsBegin) &&
        Objects.equals(this.startDtsEnd, couponQuery.startDtsEnd);
  }

  @Override
  public int hashCode() {
    return Objects.hash(affiliateOid, couponType, description, excludeExpired, expirationDtsBegin, expirationDtsEnd, merchantCode, merchantCodeOrDescription, startDtsBegin, startDtsEnd);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CouponQuery {\n");
    sb.append("    affiliateOid: ").append(toIndentedString(affiliateOid)).append("\n");
    sb.append("    couponType: ").append(toIndentedString(couponType)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    excludeExpired: ").append(toIndentedString(excludeExpired)).append("\n");
    sb.append("    expirationDtsBegin: ").append(toIndentedString(expirationDtsBegin)).append("\n");
    sb.append("    expirationDtsEnd: ").append(toIndentedString(expirationDtsEnd)).append("\n");
    sb.append("    merchantCode: ").append(toIndentedString(merchantCode)).append("\n");
    sb.append("    merchantCodeOrDescription: ").append(toIndentedString(merchantCodeOrDescription)).append("\n");
    sb.append("    startDtsBegin: ").append(toIndentedString(startDtsBegin)).append("\n");
    sb.append("    startDtsEnd: ").append(toIndentedString(startDtsEnd)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("affiliate_oid");
    openapiFields.add("coupon_type");
    openapiFields.add("description");
    openapiFields.add("exclude_expired");
    openapiFields.add("expiration_dts_begin");
    openapiFields.add("expiration_dts_end");
    openapiFields.add("merchant_code");
    openapiFields.add("merchant_code_or_description");
    openapiFields.add("start_dts_begin");
    openapiFields.add("start_dts_end");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CouponQuery
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (CouponQuery.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in CouponQuery is not found in the empty JSON string", CouponQuery.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!CouponQuery.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CouponQuery` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("coupon_type") != null && !jsonObj.get("coupon_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `coupon_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("coupon_type").toString()));
      }
      if (jsonObj.get("description") != null && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if (jsonObj.get("expiration_dts_begin") != null && !jsonObj.get("expiration_dts_begin").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `expiration_dts_begin` to be a primitive type in the JSON string but got `%s`", jsonObj.get("expiration_dts_begin").toString()));
      }
      if (jsonObj.get("expiration_dts_end") != null && !jsonObj.get("expiration_dts_end").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `expiration_dts_end` to be a primitive type in the JSON string but got `%s`", jsonObj.get("expiration_dts_end").toString()));
      }
      if (jsonObj.get("merchant_code") != null && !jsonObj.get("merchant_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `merchant_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("merchant_code").toString()));
      }
      if (jsonObj.get("merchant_code_or_description") != null && !jsonObj.get("merchant_code_or_description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `merchant_code_or_description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("merchant_code_or_description").toString()));
      }
      if (jsonObj.get("start_dts_begin") != null && !jsonObj.get("start_dts_begin").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `start_dts_begin` to be a primitive type in the JSON string but got `%s`", jsonObj.get("start_dts_begin").toString()));
      }
      if (jsonObj.get("start_dts_end") != null && !jsonObj.get("start_dts_end").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `start_dts_end` to be a primitive type in the JSON string but got `%s`", jsonObj.get("start_dts_end").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CouponQuery.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CouponQuery' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CouponQuery> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CouponQuery.class));

       return (TypeAdapter<T>) new TypeAdapter<CouponQuery>() {
           @Override
           public void write(JsonWriter out, CouponQuery value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CouponQuery read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CouponQuery given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CouponQuery
  * @throws IOException if the JSON string is invalid with respect to CouponQuery
  */
  public static CouponQuery fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CouponQuery.class);
  }

 /**
  * Convert an instance of CouponQuery to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

