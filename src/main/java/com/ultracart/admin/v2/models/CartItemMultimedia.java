/**
 * UltraCart Rest API V2
 * This is the next generation UltraCart REST API...
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import com.ultracart.admin.v2.models.CartItemMultimediaThumbnail;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;


/**
 * CartItemMultimedia
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-08-17T18:12:05.064-04:00")
public class CartItemMultimedia   {
  @SerializedName("code")
  private String code = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("exclude_from_gallery")
  private Boolean excludeFromGallery = null;

  @SerializedName("image_height")
  private Integer imageHeight = null;

  @SerializedName("image_width")
  private Integer imageWidth = null;

  @SerializedName("is_default")
  private Boolean isDefault = null;

  @SerializedName("thumbnails")
  private List<CartItemMultimediaThumbnail> thumbnails = new ArrayList<CartItemMultimediaThumbnail>();

  /**
   * Type of multimedia
   */
  public enum TypeEnum {
    @SerializedName("Image")
    IMAGE("Image"),
    
    @SerializedName("PDF")
    PDF("PDF"),
    
    @SerializedName("Text")
    TEXT("Text"),
    
    @SerializedName("Unknown")
    UNKNOWN("Unknown"),
    
    @SerializedName("Video")
    VIDEO("Video");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("type")
  private TypeEnum type = null;

  @SerializedName("url")
  private String url = null;

  public CartItemMultimedia code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Code assigned to the multimedia
   * @return code
  **/
  @ApiModelProperty(example = "null", value = "Code assigned to the multimedia")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public CartItemMultimedia description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Description
   * @return description
  **/
  @ApiModelProperty(example = "null", value = "Description")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public CartItemMultimedia excludeFromGallery(Boolean excludeFromGallery) {
    this.excludeFromGallery = excludeFromGallery;
    return this;
  }

   /**
   * True if the image should be excluded from galleries
   * @return excludeFromGallery
  **/
  @ApiModelProperty(example = "null", value = "True if the image should be excluded from galleries")
  public Boolean getExcludeFromGallery() {
    return excludeFromGallery;
  }

  public void setExcludeFromGallery(Boolean excludeFromGallery) {
    this.excludeFromGallery = excludeFromGallery;
  }

  public CartItemMultimedia imageHeight(Integer imageHeight) {
    this.imageHeight = imageHeight;
    return this;
  }

   /**
   * Image height
   * @return imageHeight
  **/
  @ApiModelProperty(example = "null", value = "Image height")
  public Integer getImageHeight() {
    return imageHeight;
  }

  public void setImageHeight(Integer imageHeight) {
    this.imageHeight = imageHeight;
  }

  public CartItemMultimedia imageWidth(Integer imageWidth) {
    this.imageWidth = imageWidth;
    return this;
  }

   /**
   * Image width
   * @return imageWidth
  **/
  @ApiModelProperty(example = "null", value = "Image width")
  public Integer getImageWidth() {
    return imageWidth;
  }

  public void setImageWidth(Integer imageWidth) {
    this.imageWidth = imageWidth;
  }

  public CartItemMultimedia isDefault(Boolean isDefault) {
    this.isDefault = isDefault;
    return this;
  }

   /**
   * True if the multimedia is the default for this type
   * @return isDefault
  **/
  @ApiModelProperty(example = "null", value = "True if the multimedia is the default for this type")
  public Boolean getIsDefault() {
    return isDefault;
  }

  public void setIsDefault(Boolean isDefault) {
    this.isDefault = isDefault;
  }

  public CartItemMultimedia thumbnails(List<CartItemMultimediaThumbnail> thumbnails) {
    this.thumbnails = thumbnails;
    return this;
  }

  public CartItemMultimedia addThumbnailsItem(CartItemMultimediaThumbnail thumbnailsItem) {
    this.thumbnails.add(thumbnailsItem);
    return this;
  }

   /**
   * Thumbnails of the images
   * @return thumbnails
  **/
  @ApiModelProperty(example = "null", value = "Thumbnails of the images")
  public List<CartItemMultimediaThumbnail> getThumbnails() {
    return thumbnails;
  }

  public void setThumbnails(List<CartItemMultimediaThumbnail> thumbnails) {
    this.thumbnails = thumbnails;
  }

  public CartItemMultimedia type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Type of multimedia
   * @return type
  **/
  @ApiModelProperty(example = "null", value = "Type of multimedia")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public CartItemMultimedia url(String url) {
    this.url = url;
    return this;
  }

   /**
   * URL to view multimedia at
   * @return url
  **/
  @ApiModelProperty(example = "null", value = "URL to view multimedia at")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CartItemMultimedia cartItemMultimedia = (CartItemMultimedia) o;
    return Objects.equals(this.code, cartItemMultimedia.code) &&
        Objects.equals(this.description, cartItemMultimedia.description) &&
        Objects.equals(this.excludeFromGallery, cartItemMultimedia.excludeFromGallery) &&
        Objects.equals(this.imageHeight, cartItemMultimedia.imageHeight) &&
        Objects.equals(this.imageWidth, cartItemMultimedia.imageWidth) &&
        Objects.equals(this.isDefault, cartItemMultimedia.isDefault) &&
        Objects.equals(this.thumbnails, cartItemMultimedia.thumbnails) &&
        Objects.equals(this.type, cartItemMultimedia.type) &&
        Objects.equals(this.url, cartItemMultimedia.url);
  }

  @Override
  public int hashCode() {
    return Objects.hash(code, description, excludeFromGallery, imageHeight, imageWidth, isDefault, thumbnails, type, url);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CartItemMultimedia {\n");
    
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    excludeFromGallery: ").append(toIndentedString(excludeFromGallery)).append("\n");
    sb.append("    imageHeight: ").append(toIndentedString(imageHeight)).append("\n");
    sb.append("    imageWidth: ").append(toIndentedString(imageWidth)).append("\n");
    sb.append("    isDefault: ").append(toIndentedString(isDefault)).append("\n");
    sb.append("    thumbnails: ").append(toIndentedString(thumbnails)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

