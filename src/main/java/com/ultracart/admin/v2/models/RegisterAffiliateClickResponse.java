/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * RegisterAffiliateClickResponse
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-02-24T10:04:38.452-05:00")



public class RegisterAffiliateClickResponse {
  @SerializedName("cookie_max_age")
  private Integer cookieMaxAge = null;

  @SerializedName("cookie_names")
  private List<String> cookieNames = null;

  @SerializedName("cookie_values")
  private List<String> cookieValues = null;

  @SerializedName("registered")
  private Boolean registered = null;

  public RegisterAffiliateClickResponse cookieMaxAge(Integer cookieMaxAge) {
    this.cookieMaxAge = cookieMaxAge;
    return this;
  }

   /**
   * The cookie max age to use
   * @return cookieMaxAge
  **/
  @ApiModelProperty(value = "The cookie max age to use")
  public Integer getCookieMaxAge() {
    return cookieMaxAge;
  }

  public void setCookieMaxAge(Integer cookieMaxAge) {
    this.cookieMaxAge = cookieMaxAge;
  }

  public RegisterAffiliateClickResponse cookieNames(List<String> cookieNames) {
    this.cookieNames = cookieNames;
    return this;
  }

  public RegisterAffiliateClickResponse addCookieNamesItem(String cookieNamesItem) {
    if (this.cookieNames == null) {
      this.cookieNames = new ArrayList<String>();
    }
    this.cookieNames.add(cookieNamesItem);
    return this;
  }

   /**
   * The names of all the cookies to set on the browser
   * @return cookieNames
  **/
  @ApiModelProperty(value = "The names of all the cookies to set on the browser")
  public List<String> getCookieNames() {
    return cookieNames;
  }

  public void setCookieNames(List<String> cookieNames) {
    this.cookieNames = cookieNames;
  }

  public RegisterAffiliateClickResponse cookieValues(List<String> cookieValues) {
    this.cookieValues = cookieValues;
    return this;
  }

  public RegisterAffiliateClickResponse addCookieValuesItem(String cookieValuesItem) {
    if (this.cookieValues == null) {
      this.cookieValues = new ArrayList<String>();
    }
    this.cookieValues.add(cookieValuesItem);
    return this;
  }

   /**
   * The values of all the cookies to set on the browser
   * @return cookieValues
  **/
  @ApiModelProperty(value = "The values of all the cookies to set on the browser")
  public List<String> getCookieValues() {
    return cookieValues;
  }

  public void setCookieValues(List<String> cookieValues) {
    this.cookieValues = cookieValues;
  }

  public RegisterAffiliateClickResponse registered(Boolean registered) {
    this.registered = registered;
    return this;
  }

   /**
   * True if a click was registered
   * @return registered
  **/
  @ApiModelProperty(value = "True if a click was registered")
  public Boolean isRegistered() {
    return registered;
  }

  public void setRegistered(Boolean registered) {
    this.registered = registered;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RegisterAffiliateClickResponse registerAffiliateClickResponse = (RegisterAffiliateClickResponse) o;
    return Objects.equals(this.cookieMaxAge, registerAffiliateClickResponse.cookieMaxAge) &&
        Objects.equals(this.cookieNames, registerAffiliateClickResponse.cookieNames) &&
        Objects.equals(this.cookieValues, registerAffiliateClickResponse.cookieValues) &&
        Objects.equals(this.registered, registerAffiliateClickResponse.registered);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cookieMaxAge, cookieNames, cookieValues, registered);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RegisterAffiliateClickResponse {\n");
    
    sb.append("    cookieMaxAge: ").append(toIndentedString(cookieMaxAge)).append("\n");
    sb.append("    cookieNames: ").append(toIndentedString(cookieNames)).append("\n");
    sb.append("    cookieValues: ").append(toIndentedString(cookieValues)).append("\n");
    sb.append("    registered: ").append(toIndentedString(registered)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

