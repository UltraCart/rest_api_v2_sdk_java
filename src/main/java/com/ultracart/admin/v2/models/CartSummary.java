/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.Currency;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * CartSummary
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-10-26T09:34:51.532-04:00")



public class CartSummary {
  @SerializedName("arbitrary_shipping_handling_total")
  private Currency arbitraryShippingHandlingTotal = null;

  @SerializedName("arbitrary_tax")
  private Currency arbitraryTax = null;

  @SerializedName("arbitrary_tax_rate")
  private Currency arbitraryTaxRate = null;

  @SerializedName("arbitrary_taxable_subtotal")
  private Currency arbitraryTaxableSubtotal = null;

  @SerializedName("shipping_handling")
  private Currency shippingHandling = null;

  @SerializedName("shipping_handling_discount")
  private Currency shippingHandlingDiscount = null;

  @SerializedName("shipping_handling_with_discount")
  private Currency shippingHandlingWithDiscount = null;

  @SerializedName("subtotal")
  private Currency subtotal = null;

  @SerializedName("subtotal_discount")
  private Currency subtotalDiscount = null;

  @SerializedName("subtotal_with_discount")
  private Currency subtotalWithDiscount = null;

  @SerializedName("surcharge")
  private Currency surcharge = null;

  @SerializedName("tax")
  private Currency tax = null;

  @SerializedName("taxable_subtotal")
  private Currency taxableSubtotal = null;

  @SerializedName("taxable_subtotal_discount")
  private Currency taxableSubtotalDiscount = null;

  @SerializedName("taxable_subtotal_with_discount")
  private Currency taxableSubtotalWithDiscount = null;

  @SerializedName("total")
  private Currency total = null;

  public CartSummary arbitraryShippingHandlingTotal(Currency arbitraryShippingHandlingTotal) {
    this.arbitraryShippingHandlingTotal = arbitraryShippingHandlingTotal;
    return this;
  }

   /**
   * Get arbitraryShippingHandlingTotal
   * @return arbitraryShippingHandlingTotal
  **/
  @ApiModelProperty(value = "")
  public Currency getArbitraryShippingHandlingTotal() {
    return arbitraryShippingHandlingTotal;
  }

  public void setArbitraryShippingHandlingTotal(Currency arbitraryShippingHandlingTotal) {
    this.arbitraryShippingHandlingTotal = arbitraryShippingHandlingTotal;
  }

  public CartSummary arbitraryTax(Currency arbitraryTax) {
    this.arbitraryTax = arbitraryTax;
    return this;
  }

   /**
   * Get arbitraryTax
   * @return arbitraryTax
  **/
  @ApiModelProperty(value = "")
  public Currency getArbitraryTax() {
    return arbitraryTax;
  }

  public void setArbitraryTax(Currency arbitraryTax) {
    this.arbitraryTax = arbitraryTax;
  }

  public CartSummary arbitraryTaxRate(Currency arbitraryTaxRate) {
    this.arbitraryTaxRate = arbitraryTaxRate;
    return this;
  }

   /**
   * Get arbitraryTaxRate
   * @return arbitraryTaxRate
  **/
  @ApiModelProperty(value = "")
  public Currency getArbitraryTaxRate() {
    return arbitraryTaxRate;
  }

  public void setArbitraryTaxRate(Currency arbitraryTaxRate) {
    this.arbitraryTaxRate = arbitraryTaxRate;
  }

  public CartSummary arbitraryTaxableSubtotal(Currency arbitraryTaxableSubtotal) {
    this.arbitraryTaxableSubtotal = arbitraryTaxableSubtotal;
    return this;
  }

   /**
   * Get arbitraryTaxableSubtotal
   * @return arbitraryTaxableSubtotal
  **/
  @ApiModelProperty(value = "")
  public Currency getArbitraryTaxableSubtotal() {
    return arbitraryTaxableSubtotal;
  }

  public void setArbitraryTaxableSubtotal(Currency arbitraryTaxableSubtotal) {
    this.arbitraryTaxableSubtotal = arbitraryTaxableSubtotal;
  }

  public CartSummary shippingHandling(Currency shippingHandling) {
    this.shippingHandling = shippingHandling;
    return this;
  }

   /**
   * Get shippingHandling
   * @return shippingHandling
  **/
  @ApiModelProperty(value = "")
  public Currency getShippingHandling() {
    return shippingHandling;
  }

  public void setShippingHandling(Currency shippingHandling) {
    this.shippingHandling = shippingHandling;
  }

  public CartSummary shippingHandlingDiscount(Currency shippingHandlingDiscount) {
    this.shippingHandlingDiscount = shippingHandlingDiscount;
    return this;
  }

   /**
   * Get shippingHandlingDiscount
   * @return shippingHandlingDiscount
  **/
  @ApiModelProperty(value = "")
  public Currency getShippingHandlingDiscount() {
    return shippingHandlingDiscount;
  }

  public void setShippingHandlingDiscount(Currency shippingHandlingDiscount) {
    this.shippingHandlingDiscount = shippingHandlingDiscount;
  }

  public CartSummary shippingHandlingWithDiscount(Currency shippingHandlingWithDiscount) {
    this.shippingHandlingWithDiscount = shippingHandlingWithDiscount;
    return this;
  }

   /**
   * Get shippingHandlingWithDiscount
   * @return shippingHandlingWithDiscount
  **/
  @ApiModelProperty(value = "")
  public Currency getShippingHandlingWithDiscount() {
    return shippingHandlingWithDiscount;
  }

  public void setShippingHandlingWithDiscount(Currency shippingHandlingWithDiscount) {
    this.shippingHandlingWithDiscount = shippingHandlingWithDiscount;
  }

  public CartSummary subtotal(Currency subtotal) {
    this.subtotal = subtotal;
    return this;
  }

   /**
   * Get subtotal
   * @return subtotal
  **/
  @ApiModelProperty(value = "")
  public Currency getSubtotal() {
    return subtotal;
  }

  public void setSubtotal(Currency subtotal) {
    this.subtotal = subtotal;
  }

  public CartSummary subtotalDiscount(Currency subtotalDiscount) {
    this.subtotalDiscount = subtotalDiscount;
    return this;
  }

   /**
   * Get subtotalDiscount
   * @return subtotalDiscount
  **/
  @ApiModelProperty(value = "")
  public Currency getSubtotalDiscount() {
    return subtotalDiscount;
  }

  public void setSubtotalDiscount(Currency subtotalDiscount) {
    this.subtotalDiscount = subtotalDiscount;
  }

  public CartSummary subtotalWithDiscount(Currency subtotalWithDiscount) {
    this.subtotalWithDiscount = subtotalWithDiscount;
    return this;
  }

   /**
   * Get subtotalWithDiscount
   * @return subtotalWithDiscount
  **/
  @ApiModelProperty(value = "")
  public Currency getSubtotalWithDiscount() {
    return subtotalWithDiscount;
  }

  public void setSubtotalWithDiscount(Currency subtotalWithDiscount) {
    this.subtotalWithDiscount = subtotalWithDiscount;
  }

  public CartSummary surcharge(Currency surcharge) {
    this.surcharge = surcharge;
    return this;
  }

   /**
   * Get surcharge
   * @return surcharge
  **/
  @ApiModelProperty(value = "")
  public Currency getSurcharge() {
    return surcharge;
  }

  public void setSurcharge(Currency surcharge) {
    this.surcharge = surcharge;
  }

  public CartSummary tax(Currency tax) {
    this.tax = tax;
    return this;
  }

   /**
   * Get tax
   * @return tax
  **/
  @ApiModelProperty(value = "")
  public Currency getTax() {
    return tax;
  }

  public void setTax(Currency tax) {
    this.tax = tax;
  }

  public CartSummary taxableSubtotal(Currency taxableSubtotal) {
    this.taxableSubtotal = taxableSubtotal;
    return this;
  }

   /**
   * Get taxableSubtotal
   * @return taxableSubtotal
  **/
  @ApiModelProperty(value = "")
  public Currency getTaxableSubtotal() {
    return taxableSubtotal;
  }

  public void setTaxableSubtotal(Currency taxableSubtotal) {
    this.taxableSubtotal = taxableSubtotal;
  }

  public CartSummary taxableSubtotalDiscount(Currency taxableSubtotalDiscount) {
    this.taxableSubtotalDiscount = taxableSubtotalDiscount;
    return this;
  }

   /**
   * Get taxableSubtotalDiscount
   * @return taxableSubtotalDiscount
  **/
  @ApiModelProperty(value = "")
  public Currency getTaxableSubtotalDiscount() {
    return taxableSubtotalDiscount;
  }

  public void setTaxableSubtotalDiscount(Currency taxableSubtotalDiscount) {
    this.taxableSubtotalDiscount = taxableSubtotalDiscount;
  }

  public CartSummary taxableSubtotalWithDiscount(Currency taxableSubtotalWithDiscount) {
    this.taxableSubtotalWithDiscount = taxableSubtotalWithDiscount;
    return this;
  }

   /**
   * Get taxableSubtotalWithDiscount
   * @return taxableSubtotalWithDiscount
  **/
  @ApiModelProperty(value = "")
  public Currency getTaxableSubtotalWithDiscount() {
    return taxableSubtotalWithDiscount;
  }

  public void setTaxableSubtotalWithDiscount(Currency taxableSubtotalWithDiscount) {
    this.taxableSubtotalWithDiscount = taxableSubtotalWithDiscount;
  }

  public CartSummary total(Currency total) {
    this.total = total;
    return this;
  }

   /**
   * Get total
   * @return total
  **/
  @ApiModelProperty(value = "")
  public Currency getTotal() {
    return total;
  }

  public void setTotal(Currency total) {
    this.total = total;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CartSummary cartSummary = (CartSummary) o;
    return Objects.equals(this.arbitraryShippingHandlingTotal, cartSummary.arbitraryShippingHandlingTotal) &&
        Objects.equals(this.arbitraryTax, cartSummary.arbitraryTax) &&
        Objects.equals(this.arbitraryTaxRate, cartSummary.arbitraryTaxRate) &&
        Objects.equals(this.arbitraryTaxableSubtotal, cartSummary.arbitraryTaxableSubtotal) &&
        Objects.equals(this.shippingHandling, cartSummary.shippingHandling) &&
        Objects.equals(this.shippingHandlingDiscount, cartSummary.shippingHandlingDiscount) &&
        Objects.equals(this.shippingHandlingWithDiscount, cartSummary.shippingHandlingWithDiscount) &&
        Objects.equals(this.subtotal, cartSummary.subtotal) &&
        Objects.equals(this.subtotalDiscount, cartSummary.subtotalDiscount) &&
        Objects.equals(this.subtotalWithDiscount, cartSummary.subtotalWithDiscount) &&
        Objects.equals(this.surcharge, cartSummary.surcharge) &&
        Objects.equals(this.tax, cartSummary.tax) &&
        Objects.equals(this.taxableSubtotal, cartSummary.taxableSubtotal) &&
        Objects.equals(this.taxableSubtotalDiscount, cartSummary.taxableSubtotalDiscount) &&
        Objects.equals(this.taxableSubtotalWithDiscount, cartSummary.taxableSubtotalWithDiscount) &&
        Objects.equals(this.total, cartSummary.total);
  }

  @Override
  public int hashCode() {
    return Objects.hash(arbitraryShippingHandlingTotal, arbitraryTax, arbitraryTaxRate, arbitraryTaxableSubtotal, shippingHandling, shippingHandlingDiscount, shippingHandlingWithDiscount, subtotal, subtotalDiscount, subtotalWithDiscount, surcharge, tax, taxableSubtotal, taxableSubtotalDiscount, taxableSubtotalWithDiscount, total);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CartSummary {\n");
    
    sb.append("    arbitraryShippingHandlingTotal: ").append(toIndentedString(arbitraryShippingHandlingTotal)).append("\n");
    sb.append("    arbitraryTax: ").append(toIndentedString(arbitraryTax)).append("\n");
    sb.append("    arbitraryTaxRate: ").append(toIndentedString(arbitraryTaxRate)).append("\n");
    sb.append("    arbitraryTaxableSubtotal: ").append(toIndentedString(arbitraryTaxableSubtotal)).append("\n");
    sb.append("    shippingHandling: ").append(toIndentedString(shippingHandling)).append("\n");
    sb.append("    shippingHandlingDiscount: ").append(toIndentedString(shippingHandlingDiscount)).append("\n");
    sb.append("    shippingHandlingWithDiscount: ").append(toIndentedString(shippingHandlingWithDiscount)).append("\n");
    sb.append("    subtotal: ").append(toIndentedString(subtotal)).append("\n");
    sb.append("    subtotalDiscount: ").append(toIndentedString(subtotalDiscount)).append("\n");
    sb.append("    subtotalWithDiscount: ").append(toIndentedString(subtotalWithDiscount)).append("\n");
    sb.append("    surcharge: ").append(toIndentedString(surcharge)).append("\n");
    sb.append("    tax: ").append(toIndentedString(tax)).append("\n");
    sb.append("    taxableSubtotal: ").append(toIndentedString(taxableSubtotal)).append("\n");
    sb.append("    taxableSubtotalDiscount: ").append(toIndentedString(taxableSubtotalDiscount)).append("\n");
    sb.append("    taxableSubtotalWithDiscount: ").append(toIndentedString(taxableSubtotalWithDiscount)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

