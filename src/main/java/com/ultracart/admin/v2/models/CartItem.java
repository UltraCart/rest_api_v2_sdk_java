/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.CartItemAttribute;
import com.ultracart.admin.v2.models.CartItemMultimedia;
import com.ultracart.admin.v2.models.CartItemOption;
import com.ultracart.admin.v2.models.CartItemPhysical;
import com.ultracart.admin.v2.models.CartItemVariationSelection;
import com.ultracart.admin.v2.models.CartKitComponentOption;
import com.ultracart.admin.v2.models.Currency;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

/**
 * CartItem
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-10-26T09:34:51.532-04:00")



public class CartItem {
  @SerializedName("arbitrary_unit_cost")
  private Currency arbitraryUnitCost = null;

  @SerializedName("attributes")
  private List<CartItemAttribute> attributes = null;

  @SerializedName("auto_order_schedule")
  private String autoOrderSchedule = null;

  @SerializedName("default_image_url")
  private String defaultImageUrl = null;

  @SerializedName("default_thumbnail_url")
  private String defaultThumbnailUrl = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("discount")
  private Currency discount = null;

  @SerializedName("extended_description")
  private String extendedDescription = null;

  @SerializedName("item_id")
  private String itemId = null;

  @SerializedName("item_oid")
  private Integer itemOid = null;

  @SerializedName("kit")
  private Boolean kit = null;

  @SerializedName("kit_component_options")
  private List<CartKitComponentOption> kitComponentOptions = null;

  @SerializedName("manufacturer_suggested_retail_price")
  private Currency manufacturerSuggestedRetailPrice = null;

  @SerializedName("maximum_quantity")
  private BigDecimal maximumQuantity = null;

  @SerializedName("minimum_quantity")
  private BigDecimal minimumQuantity = null;

  @SerializedName("multimedia")
  private List<CartItemMultimedia> multimedia = null;

  @SerializedName("options")
  private List<CartItemOption> options = null;

  @SerializedName("phsyical")
  private CartItemPhysical phsyical = null;

  @SerializedName("position")
  private Integer position = null;

  @SerializedName("preorder")
  private Boolean preorder = null;

  @SerializedName("quantity")
  private BigDecimal quantity = null;

  @SerializedName("schedules")
  private List<String> schedules = null;

  @SerializedName("total_cost")
  private Currency totalCost = null;

  @SerializedName("total_cost_with_discount")
  private Currency totalCostWithDiscount = null;

  @SerializedName("unit_cost")
  private Currency unitCost = null;

  @SerializedName("unit_cost_with_discount")
  private Currency unitCostWithDiscount = null;

  @SerializedName("upsell")
  private Boolean upsell = null;

  @SerializedName("variations")
  private List<CartItemVariationSelection> variations = null;

  @SerializedName("view_url")
  private String viewUrl = null;

  public CartItem arbitraryUnitCost(Currency arbitraryUnitCost) {
    this.arbitraryUnitCost = arbitraryUnitCost;
    return this;
  }

   /**
   * Get arbitraryUnitCost
   * @return arbitraryUnitCost
  **/
  @ApiModelProperty(value = "")
  public Currency getArbitraryUnitCost() {
    return arbitraryUnitCost;
  }

  public void setArbitraryUnitCost(Currency arbitraryUnitCost) {
    this.arbitraryUnitCost = arbitraryUnitCost;
  }

  public CartItem attributes(List<CartItemAttribute> attributes) {
    this.attributes = attributes;
    return this;
  }

  public CartItem addAttributesItem(CartItemAttribute attributesItem) {
    if (this.attributes == null) {
      this.attributes = new ArrayList<CartItemAttribute>();
    }
    this.attributes.add(attributesItem);
    return this;
  }

   /**
   * Attributes
   * @return attributes
  **/
  @ApiModelProperty(value = "Attributes")
  public List<CartItemAttribute> getAttributes() {
    return attributes;
  }

  public void setAttributes(List<CartItemAttribute> attributes) {
    this.attributes = attributes;
  }

  public CartItem autoOrderSchedule(String autoOrderSchedule) {
    this.autoOrderSchedule = autoOrderSchedule;
    return this;
  }

   /**
   * Auto order schedule the customer selected
   * @return autoOrderSchedule
  **/
  @ApiModelProperty(value = "Auto order schedule the customer selected")
  public String getAutoOrderSchedule() {
    return autoOrderSchedule;
  }

  public void setAutoOrderSchedule(String autoOrderSchedule) {
    this.autoOrderSchedule = autoOrderSchedule;
  }

  public CartItem defaultImageUrl(String defaultImageUrl) {
    this.defaultImageUrl = defaultImageUrl;
    return this;
  }

   /**
   * URL to the default multimedia image
   * @return defaultImageUrl
  **/
  @ApiModelProperty(value = "URL to the default multimedia image")
  public String getDefaultImageUrl() {
    return defaultImageUrl;
  }

  public void setDefaultImageUrl(String defaultImageUrl) {
    this.defaultImageUrl = defaultImageUrl;
  }

  public CartItem defaultThumbnailUrl(String defaultThumbnailUrl) {
    this.defaultThumbnailUrl = defaultThumbnailUrl;
    return this;
  }

   /**
   * URL to the default multimedia thumbnail
   * @return defaultThumbnailUrl
  **/
  @ApiModelProperty(value = "URL to the default multimedia thumbnail")
  public String getDefaultThumbnailUrl() {
    return defaultThumbnailUrl;
  }

  public void setDefaultThumbnailUrl(String defaultThumbnailUrl) {
    this.defaultThumbnailUrl = defaultThumbnailUrl;
  }

  public CartItem description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Description of the item
   * @return description
  **/
  @ApiModelProperty(value = "Description of the item")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public CartItem discount(Currency discount) {
    this.discount = discount;
    return this;
  }

   /**
   * Get discount
   * @return discount
  **/
  @ApiModelProperty(value = "")
  public Currency getDiscount() {
    return discount;
  }

  public void setDiscount(Currency discount) {
    this.discount = discount;
  }

  public CartItem extendedDescription(String extendedDescription) {
    this.extendedDescription = extendedDescription;
    return this;
  }

   /**
   * Extended description of the item
   * @return extendedDescription
  **/
  @ApiModelProperty(value = "Extended description of the item")
  public String getExtendedDescription() {
    return extendedDescription;
  }

  public void setExtendedDescription(String extendedDescription) {
    this.extendedDescription = extendedDescription;
  }

  public CartItem itemId(String itemId) {
    this.itemId = itemId;
    return this;
  }

   /**
   * Item ID
   * @return itemId
  **/
  @ApiModelProperty(value = "Item ID")
  public String getItemId() {
    return itemId;
  }

  public void setItemId(String itemId) {
    this.itemId = itemId;
  }

  public CartItem itemOid(Integer itemOid) {
    this.itemOid = itemOid;
    return this;
  }

   /**
   * Item object identifier
   * @return itemOid
  **/
  @ApiModelProperty(value = "Item object identifier")
  public Integer getItemOid() {
    return itemOid;
  }

  public void setItemOid(Integer itemOid) {
    this.itemOid = itemOid;
  }

  public CartItem kit(Boolean kit) {
    this.kit = kit;
    return this;
  }

   /**
   * True if this item is a kit
   * @return kit
  **/
  @ApiModelProperty(value = "True if this item is a kit")
  public Boolean isKit() {
    return kit;
  }

  public void setKit(Boolean kit) {
    this.kit = kit;
  }

  public CartItem kitComponentOptions(List<CartKitComponentOption> kitComponentOptions) {
    this.kitComponentOptions = kitComponentOptions;
    return this;
  }

  public CartItem addKitComponentOptionsItem(CartKitComponentOption kitComponentOptionsItem) {
    if (this.kitComponentOptions == null) {
      this.kitComponentOptions = new ArrayList<CartKitComponentOption>();
    }
    this.kitComponentOptions.add(kitComponentOptionsItem);
    return this;
  }

   /**
   * Options associated with the kit components
   * @return kitComponentOptions
  **/
  @ApiModelProperty(value = "Options associated with the kit components")
  public List<CartKitComponentOption> getKitComponentOptions() {
    return kitComponentOptions;
  }

  public void setKitComponentOptions(List<CartKitComponentOption> kitComponentOptions) {
    this.kitComponentOptions = kitComponentOptions;
  }

  public CartItem manufacturerSuggestedRetailPrice(Currency manufacturerSuggestedRetailPrice) {
    this.manufacturerSuggestedRetailPrice = manufacturerSuggestedRetailPrice;
    return this;
  }

   /**
   * Get manufacturerSuggestedRetailPrice
   * @return manufacturerSuggestedRetailPrice
  **/
  @ApiModelProperty(value = "")
  public Currency getManufacturerSuggestedRetailPrice() {
    return manufacturerSuggestedRetailPrice;
  }

  public void setManufacturerSuggestedRetailPrice(Currency manufacturerSuggestedRetailPrice) {
    this.manufacturerSuggestedRetailPrice = manufacturerSuggestedRetailPrice;
  }

  public CartItem maximumQuantity(BigDecimal maximumQuantity) {
    this.maximumQuantity = maximumQuantity;
    return this;
  }

   /**
   * Maximum quantity the customer can purchase
   * @return maximumQuantity
  **/
  @ApiModelProperty(value = "Maximum quantity the customer can purchase")
  public BigDecimal getMaximumQuantity() {
    return maximumQuantity;
  }

  public void setMaximumQuantity(BigDecimal maximumQuantity) {
    this.maximumQuantity = maximumQuantity;
  }

  public CartItem minimumQuantity(BigDecimal minimumQuantity) {
    this.minimumQuantity = minimumQuantity;
    return this;
  }

   /**
   * Minimum quantity the customer can purchase
   * @return minimumQuantity
  **/
  @ApiModelProperty(value = "Minimum quantity the customer can purchase")
  public BigDecimal getMinimumQuantity() {
    return minimumQuantity;
  }

  public void setMinimumQuantity(BigDecimal minimumQuantity) {
    this.minimumQuantity = minimumQuantity;
  }

  public CartItem multimedia(List<CartItemMultimedia> multimedia) {
    this.multimedia = multimedia;
    return this;
  }

  public CartItem addMultimediaItem(CartItemMultimedia multimediaItem) {
    if (this.multimedia == null) {
      this.multimedia = new ArrayList<CartItemMultimedia>();
    }
    this.multimedia.add(multimediaItem);
    return this;
  }

   /**
   * Multimedia
   * @return multimedia
  **/
  @ApiModelProperty(value = "Multimedia")
  public List<CartItemMultimedia> getMultimedia() {
    return multimedia;
  }

  public void setMultimedia(List<CartItemMultimedia> multimedia) {
    this.multimedia = multimedia;
  }

  public CartItem options(List<CartItemOption> options) {
    this.options = options;
    return this;
  }

  public CartItem addOptionsItem(CartItemOption optionsItem) {
    if (this.options == null) {
      this.options = new ArrayList<CartItemOption>();
    }
    this.options.add(optionsItem);
    return this;
  }

   /**
   * Options
   * @return options
  **/
  @ApiModelProperty(value = "Options")
  public List<CartItemOption> getOptions() {
    return options;
  }

  public void setOptions(List<CartItemOption> options) {
    this.options = options;
  }

  public CartItem phsyical(CartItemPhysical phsyical) {
    this.phsyical = phsyical;
    return this;
  }

   /**
   * Get phsyical
   * @return phsyical
  **/
  @ApiModelProperty(value = "")
  public CartItemPhysical getPhsyical() {
    return phsyical;
  }

  public void setPhsyical(CartItemPhysical phsyical) {
    this.phsyical = phsyical;
  }

  public CartItem position(Integer position) {
    this.position = position;
    return this;
  }

   /**
   * Position of the item in the cart
   * @return position
  **/
  @ApiModelProperty(value = "Position of the item in the cart")
  public Integer getPosition() {
    return position;
  }

  public void setPosition(Integer position) {
    this.position = position;
  }

  public CartItem preorder(Boolean preorder) {
    this.preorder = preorder;
    return this;
  }

   /**
   * True if this item is on pre-order
   * @return preorder
  **/
  @ApiModelProperty(value = "True if this item is on pre-order")
  public Boolean isPreorder() {
    return preorder;
  }

  public void setPreorder(Boolean preorder) {
    this.preorder = preorder;
  }

  public CartItem quantity(BigDecimal quantity) {
    this.quantity = quantity;
    return this;
  }

   /**
   * quantity
   * @return quantity
  **/
  @ApiModelProperty(value = "quantity")
  public BigDecimal getQuantity() {
    return quantity;
  }

  public void setQuantity(BigDecimal quantity) {
    this.quantity = quantity;
  }

  public CartItem schedules(List<String> schedules) {
    this.schedules = schedules;
    return this;
  }

  public CartItem addSchedulesItem(String schedulesItem) {
    if (this.schedules == null) {
      this.schedules = new ArrayList<String>();
    }
    this.schedules.add(schedulesItem);
    return this;
  }

   /**
   * Customer selectable auto order schedules
   * @return schedules
  **/
  @ApiModelProperty(value = "Customer selectable auto order schedules")
  public List<String> getSchedules() {
    return schedules;
  }

  public void setSchedules(List<String> schedules) {
    this.schedules = schedules;
  }

  public CartItem totalCost(Currency totalCost) {
    this.totalCost = totalCost;
    return this;
  }

   /**
   * Get totalCost
   * @return totalCost
  **/
  @ApiModelProperty(value = "")
  public Currency getTotalCost() {
    return totalCost;
  }

  public void setTotalCost(Currency totalCost) {
    this.totalCost = totalCost;
  }

  public CartItem totalCostWithDiscount(Currency totalCostWithDiscount) {
    this.totalCostWithDiscount = totalCostWithDiscount;
    return this;
  }

   /**
   * Get totalCostWithDiscount
   * @return totalCostWithDiscount
  **/
  @ApiModelProperty(value = "")
  public Currency getTotalCostWithDiscount() {
    return totalCostWithDiscount;
  }

  public void setTotalCostWithDiscount(Currency totalCostWithDiscount) {
    this.totalCostWithDiscount = totalCostWithDiscount;
  }

  public CartItem unitCost(Currency unitCost) {
    this.unitCost = unitCost;
    return this;
  }

   /**
   * Get unitCost
   * @return unitCost
  **/
  @ApiModelProperty(value = "")
  public Currency getUnitCost() {
    return unitCost;
  }

  public void setUnitCost(Currency unitCost) {
    this.unitCost = unitCost;
  }

  public CartItem unitCostWithDiscount(Currency unitCostWithDiscount) {
    this.unitCostWithDiscount = unitCostWithDiscount;
    return this;
  }

   /**
   * Get unitCostWithDiscount
   * @return unitCostWithDiscount
  **/
  @ApiModelProperty(value = "")
  public Currency getUnitCostWithDiscount() {
    return unitCostWithDiscount;
  }

  public void setUnitCostWithDiscount(Currency unitCostWithDiscount) {
    this.unitCostWithDiscount = unitCostWithDiscount;
  }

  public CartItem upsell(Boolean upsell) {
    this.upsell = upsell;
    return this;
  }

   /**
   * True if this item was added to the cart as part of an upsell
   * @return upsell
  **/
  @ApiModelProperty(value = "True if this item was added to the cart as part of an upsell")
  public Boolean isUpsell() {
    return upsell;
  }

  public void setUpsell(Boolean upsell) {
    this.upsell = upsell;
  }

  public CartItem variations(List<CartItemVariationSelection> variations) {
    this.variations = variations;
    return this;
  }

  public CartItem addVariationsItem(CartItemVariationSelection variationsItem) {
    if (this.variations == null) {
      this.variations = new ArrayList<CartItemVariationSelection>();
    }
    this.variations.add(variationsItem);
    return this;
  }

   /**
   * Variations
   * @return variations
  **/
  @ApiModelProperty(value = "Variations")
  public List<CartItemVariationSelection> getVariations() {
    return variations;
  }

  public void setVariations(List<CartItemVariationSelection> variations) {
    this.variations = variations;
  }

  public CartItem viewUrl(String viewUrl) {
    this.viewUrl = viewUrl;
    return this;
  }

   /**
   * URL to view the product on the site
   * @return viewUrl
  **/
  @ApiModelProperty(value = "URL to view the product on the site")
  public String getViewUrl() {
    return viewUrl;
  }

  public void setViewUrl(String viewUrl) {
    this.viewUrl = viewUrl;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CartItem cartItem = (CartItem) o;
    return Objects.equals(this.arbitraryUnitCost, cartItem.arbitraryUnitCost) &&
        Objects.equals(this.attributes, cartItem.attributes) &&
        Objects.equals(this.autoOrderSchedule, cartItem.autoOrderSchedule) &&
        Objects.equals(this.defaultImageUrl, cartItem.defaultImageUrl) &&
        Objects.equals(this.defaultThumbnailUrl, cartItem.defaultThumbnailUrl) &&
        Objects.equals(this.description, cartItem.description) &&
        Objects.equals(this.discount, cartItem.discount) &&
        Objects.equals(this.extendedDescription, cartItem.extendedDescription) &&
        Objects.equals(this.itemId, cartItem.itemId) &&
        Objects.equals(this.itemOid, cartItem.itemOid) &&
        Objects.equals(this.kit, cartItem.kit) &&
        Objects.equals(this.kitComponentOptions, cartItem.kitComponentOptions) &&
        Objects.equals(this.manufacturerSuggestedRetailPrice, cartItem.manufacturerSuggestedRetailPrice) &&
        Objects.equals(this.maximumQuantity, cartItem.maximumQuantity) &&
        Objects.equals(this.minimumQuantity, cartItem.minimumQuantity) &&
        Objects.equals(this.multimedia, cartItem.multimedia) &&
        Objects.equals(this.options, cartItem.options) &&
        Objects.equals(this.phsyical, cartItem.phsyical) &&
        Objects.equals(this.position, cartItem.position) &&
        Objects.equals(this.preorder, cartItem.preorder) &&
        Objects.equals(this.quantity, cartItem.quantity) &&
        Objects.equals(this.schedules, cartItem.schedules) &&
        Objects.equals(this.totalCost, cartItem.totalCost) &&
        Objects.equals(this.totalCostWithDiscount, cartItem.totalCostWithDiscount) &&
        Objects.equals(this.unitCost, cartItem.unitCost) &&
        Objects.equals(this.unitCostWithDiscount, cartItem.unitCostWithDiscount) &&
        Objects.equals(this.upsell, cartItem.upsell) &&
        Objects.equals(this.variations, cartItem.variations) &&
        Objects.equals(this.viewUrl, cartItem.viewUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(arbitraryUnitCost, attributes, autoOrderSchedule, defaultImageUrl, defaultThumbnailUrl, description, discount, extendedDescription, itemId, itemOid, kit, kitComponentOptions, manufacturerSuggestedRetailPrice, maximumQuantity, minimumQuantity, multimedia, options, phsyical, position, preorder, quantity, schedules, totalCost, totalCostWithDiscount, unitCost, unitCostWithDiscount, upsell, variations, viewUrl);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CartItem {\n");
    
    sb.append("    arbitraryUnitCost: ").append(toIndentedString(arbitraryUnitCost)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    autoOrderSchedule: ").append(toIndentedString(autoOrderSchedule)).append("\n");
    sb.append("    defaultImageUrl: ").append(toIndentedString(defaultImageUrl)).append("\n");
    sb.append("    defaultThumbnailUrl: ").append(toIndentedString(defaultThumbnailUrl)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    discount: ").append(toIndentedString(discount)).append("\n");
    sb.append("    extendedDescription: ").append(toIndentedString(extendedDescription)).append("\n");
    sb.append("    itemId: ").append(toIndentedString(itemId)).append("\n");
    sb.append("    itemOid: ").append(toIndentedString(itemOid)).append("\n");
    sb.append("    kit: ").append(toIndentedString(kit)).append("\n");
    sb.append("    kitComponentOptions: ").append(toIndentedString(kitComponentOptions)).append("\n");
    sb.append("    manufacturerSuggestedRetailPrice: ").append(toIndentedString(manufacturerSuggestedRetailPrice)).append("\n");
    sb.append("    maximumQuantity: ").append(toIndentedString(maximumQuantity)).append("\n");
    sb.append("    minimumQuantity: ").append(toIndentedString(minimumQuantity)).append("\n");
    sb.append("    multimedia: ").append(toIndentedString(multimedia)).append("\n");
    sb.append("    options: ").append(toIndentedString(options)).append("\n");
    sb.append("    phsyical: ").append(toIndentedString(phsyical)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    preorder: ").append(toIndentedString(preorder)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    schedules: ").append(toIndentedString(schedules)).append("\n");
    sb.append("    totalCost: ").append(toIndentedString(totalCost)).append("\n");
    sb.append("    totalCostWithDiscount: ").append(toIndentedString(totalCostWithDiscount)).append("\n");
    sb.append("    unitCost: ").append(toIndentedString(unitCost)).append("\n");
    sb.append("    unitCostWithDiscount: ").append(toIndentedString(unitCostWithDiscount)).append("\n");
    sb.append("    upsell: ").append(toIndentedString(upsell)).append("\n");
    sb.append("    variations: ").append(toIndentedString(variations)).append("\n");
    sb.append("    viewUrl: ").append(toIndentedString(viewUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

