/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * ItemRestrictionItem
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-09-07T11:22:29.322-04:00")



public class ItemRestrictionItem {
  @SerializedName("restrict_merchant_item_id")
  private String restrictMerchantItemId = null;

  @SerializedName("restrict_merchant_item_oid")
  private Integer restrictMerchantItemOid = null;

  /**
   * Restriction type
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    CAN_NOT_BE_PURCHASED_WITH("can not be purchased with"),
    
    CAN_ONLY_BE_PURCHASED_WITH("can only be purchased with"),
    
    MUST_BE_PURCHASED_WITH("must be purchased with");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("type")
  private TypeEnum type = null;

  public ItemRestrictionItem restrictMerchantItemId(String restrictMerchantItemId) {
    this.restrictMerchantItemId = restrictMerchantItemId;
    return this;
  }

   /**
   * Restrict item id
   * @return restrictMerchantItemId
  **/
  @ApiModelProperty(value = "Restrict item id")
  public String getRestrictMerchantItemId() {
    return restrictMerchantItemId;
  }

  public void setRestrictMerchantItemId(String restrictMerchantItemId) {
    this.restrictMerchantItemId = restrictMerchantItemId;
  }

  public ItemRestrictionItem restrictMerchantItemOid(Integer restrictMerchantItemOid) {
    this.restrictMerchantItemOid = restrictMerchantItemOid;
    return this;
  }

   /**
   * Restrict item object identifier
   * @return restrictMerchantItemOid
  **/
  @ApiModelProperty(value = "Restrict item object identifier")
  public Integer getRestrictMerchantItemOid() {
    return restrictMerchantItemOid;
  }

  public void setRestrictMerchantItemOid(Integer restrictMerchantItemOid) {
    this.restrictMerchantItemOid = restrictMerchantItemOid;
  }

  public ItemRestrictionItem type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Restriction type
   * @return type
  **/
  @ApiModelProperty(value = "Restriction type")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ItemRestrictionItem itemRestrictionItem = (ItemRestrictionItem) o;
    return Objects.equals(this.restrictMerchantItemId, itemRestrictionItem.restrictMerchantItemId) &&
        Objects.equals(this.restrictMerchantItemOid, itemRestrictionItem.restrictMerchantItemOid) &&
        Objects.equals(this.type, itemRestrictionItem.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(restrictMerchantItemId, restrictMerchantItemOid, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ItemRestrictionItem {\n");
    
    sb.append("    restrictMerchantItemId: ").append(toIndentedString(restrictMerchantItemId)).append("\n");
    sb.append("    restrictMerchantItemOid: ").append(toIndentedString(restrictMerchantItemOid)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

