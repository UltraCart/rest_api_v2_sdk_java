/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.PaymentsConfigurationRestrictions;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * PaymentsConfigurationAmazon
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-08-11T09:39:58.817-04:00")



public class PaymentsConfigurationAmazon {
  @SerializedName("accept_amazon")
  private Boolean acceptAmazon = null;

  @SerializedName("access_key_id")
  private String accessKeyId = null;

  @SerializedName("accounting_code")
  private String accountingCode = null;

  @SerializedName("amazon_merchant_id")
  private String amazonMerchantId = null;

  @SerializedName("deposit_to_account")
  private String depositToAccount = null;

  @SerializedName("restrictions")
  private PaymentsConfigurationRestrictions restrictions = null;

  @SerializedName("sandbox")
  private Boolean sandbox = null;

  @SerializedName("secret_access_key")
  private String secretAccessKey = null;

  public PaymentsConfigurationAmazon acceptAmazon(Boolean acceptAmazon) {
    this.acceptAmazon = acceptAmazon;
    return this;
  }

   /**
   * Master flag to determine if this merchant accepts Pay by Amazon
   * @return acceptAmazon
  **/
  @ApiModelProperty(value = "Master flag to determine if this merchant accepts Pay by Amazon")
  public Boolean isAcceptAmazon() {
    return acceptAmazon;
  }

  public void setAcceptAmazon(Boolean acceptAmazon) {
    this.acceptAmazon = acceptAmazon;
  }

  public PaymentsConfigurationAmazon accessKeyId(String accessKeyId) {
    this.accessKeyId = accessKeyId;
    return this;
  }

   /**
   * Amazon access key ID
   * @return accessKeyId
  **/
  @ApiModelProperty(value = "Amazon access key ID")
  public String getAccessKeyId() {
    return accessKeyId;
  }

  public void setAccessKeyId(String accessKeyId) {
    this.accessKeyId = accessKeyId;
  }

  public PaymentsConfigurationAmazon accountingCode(String accountingCode) {
    this.accountingCode = accountingCode;
    return this;
  }

   /**
   * Optional accounting code for use with Quickbooks integrations
   * @return accountingCode
  **/
  @ApiModelProperty(value = "Optional accounting code for use with Quickbooks integrations")
  public String getAccountingCode() {
    return accountingCode;
  }

  public void setAccountingCode(String accountingCode) {
    this.accountingCode = accountingCode;
  }

  public PaymentsConfigurationAmazon amazonMerchantId(String amazonMerchantId) {
    this.amazonMerchantId = amazonMerchantId;
    return this;
  }

   /**
   * Amazon merchant ID
   * @return amazonMerchantId
  **/
  @ApiModelProperty(value = "Amazon merchant ID")
  public String getAmazonMerchantId() {
    return amazonMerchantId;
  }

  public void setAmazonMerchantId(String amazonMerchantId) {
    this.amazonMerchantId = amazonMerchantId;
  }

  public PaymentsConfigurationAmazon depositToAccount(String depositToAccount) {
    this.depositToAccount = depositToAccount;
    return this;
  }

   /**
   * Optional deposit to account field for use with Quickbooks integrations
   * @return depositToAccount
  **/
  @ApiModelProperty(value = "Optional deposit to account field for use with Quickbooks integrations")
  public String getDepositToAccount() {
    return depositToAccount;
  }

  public void setDepositToAccount(String depositToAccount) {
    this.depositToAccount = depositToAccount;
  }

  public PaymentsConfigurationAmazon restrictions(PaymentsConfigurationRestrictions restrictions) {
    this.restrictions = restrictions;
    return this;
  }

   /**
   * Get restrictions
   * @return restrictions
  **/
  @ApiModelProperty(value = "")
  public PaymentsConfigurationRestrictions getRestrictions() {
    return restrictions;
  }

  public void setRestrictions(PaymentsConfigurationRestrictions restrictions) {
    this.restrictions = restrictions;
  }

  public PaymentsConfigurationAmazon sandbox(Boolean sandbox) {
    this.sandbox = sandbox;
    return this;
  }

   /**
   * True if transactions should run against the Amazon sandbox.  Useful for testing not configurations
   * @return sandbox
  **/
  @ApiModelProperty(value = "True if transactions should run against the Amazon sandbox.  Useful for testing not configurations")
  public Boolean isSandbox() {
    return sandbox;
  }

  public void setSandbox(Boolean sandbox) {
    this.sandbox = sandbox;
  }

  public PaymentsConfigurationAmazon secretAccessKey(String secretAccessKey) {
    this.secretAccessKey = secretAccessKey;
    return this;
  }

   /**
   * Amazon secret access key
   * @return secretAccessKey
  **/
  @ApiModelProperty(value = "Amazon secret access key")
  public String getSecretAccessKey() {
    return secretAccessKey;
  }

  public void setSecretAccessKey(String secretAccessKey) {
    this.secretAccessKey = secretAccessKey;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentsConfigurationAmazon paymentsConfigurationAmazon = (PaymentsConfigurationAmazon) o;
    return Objects.equals(this.acceptAmazon, paymentsConfigurationAmazon.acceptAmazon) &&
        Objects.equals(this.accessKeyId, paymentsConfigurationAmazon.accessKeyId) &&
        Objects.equals(this.accountingCode, paymentsConfigurationAmazon.accountingCode) &&
        Objects.equals(this.amazonMerchantId, paymentsConfigurationAmazon.amazonMerchantId) &&
        Objects.equals(this.depositToAccount, paymentsConfigurationAmazon.depositToAccount) &&
        Objects.equals(this.restrictions, paymentsConfigurationAmazon.restrictions) &&
        Objects.equals(this.sandbox, paymentsConfigurationAmazon.sandbox) &&
        Objects.equals(this.secretAccessKey, paymentsConfigurationAmazon.secretAccessKey);
  }

  @Override
  public int hashCode() {
    return Objects.hash(acceptAmazon, accessKeyId, accountingCode, amazonMerchantId, depositToAccount, restrictions, sandbox, secretAccessKey);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentsConfigurationAmazon {\n");
    
    sb.append("    acceptAmazon: ").append(toIndentedString(acceptAmazon)).append("\n");
    sb.append("    accessKeyId: ").append(toIndentedString(accessKeyId)).append("\n");
    sb.append("    accountingCode: ").append(toIndentedString(accountingCode)).append("\n");
    sb.append("    amazonMerchantId: ").append(toIndentedString(amazonMerchantId)).append("\n");
    sb.append("    depositToAccount: ").append(toIndentedString(depositToAccount)).append("\n");
    sb.append("    restrictions: ").append(toIndentedString(restrictions)).append("\n");
    sb.append("    sandbox: ").append(toIndentedString(sandbox)).append("\n");
    sb.append("    secretAccessKey: ").append(toIndentedString(secretAccessKey)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

