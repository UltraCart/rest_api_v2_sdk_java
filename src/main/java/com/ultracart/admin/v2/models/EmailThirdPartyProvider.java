/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.EmailThirdPartyList;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * EmailThirdPartyProvider
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-07-12T11:40:20.137-04:00")



public class EmailThirdPartyProvider {
  @SerializedName("connect_url")
  private String connectUrl = null;

  @SerializedName("list_count")
  private Integer listCount = null;

  @SerializedName("lists")
  private List<EmailThirdPartyList> lists = null;

  @SerializedName("logo_url")
  private String logoUrl = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("supports_add_tags")
  private Boolean supportsAddTags = null;

  @SerializedName("supports_list_subscribe")
  private Boolean supportsListSubscribe = null;

  @SerializedName("supports_list_unsubscribe")
  private Boolean supportsListUnsubscribe = null;

  @SerializedName("supports_remove_tags")
  private Boolean supportsRemoveTags = null;

  public EmailThirdPartyProvider connectUrl(String connectUrl) {
    this.connectUrl = connectUrl;
    return this;
  }

   /**
   * URL to the settings screen to connect.  Null if the provider is already connected.
   * @return connectUrl
  **/
  @ApiModelProperty(value = "URL to the settings screen to connect.  Null if the provider is already connected.")
  public String getConnectUrl() {
    return connectUrl;
  }

  public void setConnectUrl(String connectUrl) {
    this.connectUrl = connectUrl;
  }

  public EmailThirdPartyProvider listCount(Integer listCount) {
    this.listCount = listCount;
    return this;
  }

   /**
   * list_count
   * @return listCount
  **/
  @ApiModelProperty(value = "list_count")
  public Integer getListCount() {
    return listCount;
  }

  public void setListCount(Integer listCount) {
    this.listCount = listCount;
  }

  public EmailThirdPartyProvider lists(List<EmailThirdPartyList> lists) {
    this.lists = lists;
    return this;
  }

  public EmailThirdPartyProvider addListsItem(EmailThirdPartyList listsItem) {
    if (this.lists == null) {
      this.lists = new ArrayList<EmailThirdPartyList>();
    }
    this.lists.add(listsItem);
    return this;
  }

   /**
   * lists
   * @return lists
  **/
  @ApiModelProperty(value = "lists")
  public List<EmailThirdPartyList> getLists() {
    return lists;
  }

  public void setLists(List<EmailThirdPartyList> lists) {
    this.lists = lists;
  }

  public EmailThirdPartyProvider logoUrl(String logoUrl) {
    this.logoUrl = logoUrl;
    return this;
  }

   /**
   * logo_url
   * @return logoUrl
  **/
  @ApiModelProperty(value = "logo_url")
  public String getLogoUrl() {
    return logoUrl;
  }

  public void setLogoUrl(String logoUrl) {
    this.logoUrl = logoUrl;
  }

  public EmailThirdPartyProvider name(String name) {
    this.name = name;
    return this;
  }

   /**
   * name
   * @return name
  **/
  @ApiModelProperty(value = "name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public EmailThirdPartyProvider supportsAddTags(Boolean supportsAddTags) {
    this.supportsAddTags = supportsAddTags;
    return this;
  }

   /**
   * True if this provider can support adding tags
   * @return supportsAddTags
  **/
  @ApiModelProperty(value = "True if this provider can support adding tags")
  public Boolean isSupportsAddTags() {
    return supportsAddTags;
  }

  public void setSupportsAddTags(Boolean supportsAddTags) {
    this.supportsAddTags = supportsAddTags;
  }

  public EmailThirdPartyProvider supportsListSubscribe(Boolean supportsListSubscribe) {
    this.supportsListSubscribe = supportsListSubscribe;
    return this;
  }

   /**
   * True if this provider can support list subscribe
   * @return supportsListSubscribe
  **/
  @ApiModelProperty(value = "True if this provider can support list subscribe")
  public Boolean isSupportsListSubscribe() {
    return supportsListSubscribe;
  }

  public void setSupportsListSubscribe(Boolean supportsListSubscribe) {
    this.supportsListSubscribe = supportsListSubscribe;
  }

  public EmailThirdPartyProvider supportsListUnsubscribe(Boolean supportsListUnsubscribe) {
    this.supportsListUnsubscribe = supportsListUnsubscribe;
    return this;
  }

   /**
   * True if this provider can support list unsubscribe
   * @return supportsListUnsubscribe
  **/
  @ApiModelProperty(value = "True if this provider can support list unsubscribe")
  public Boolean isSupportsListUnsubscribe() {
    return supportsListUnsubscribe;
  }

  public void setSupportsListUnsubscribe(Boolean supportsListUnsubscribe) {
    this.supportsListUnsubscribe = supportsListUnsubscribe;
  }

  public EmailThirdPartyProvider supportsRemoveTags(Boolean supportsRemoveTags) {
    this.supportsRemoveTags = supportsRemoveTags;
    return this;
  }

   /**
   * True if this provider can support remove tags
   * @return supportsRemoveTags
  **/
  @ApiModelProperty(value = "True if this provider can support remove tags")
  public Boolean isSupportsRemoveTags() {
    return supportsRemoveTags;
  }

  public void setSupportsRemoveTags(Boolean supportsRemoveTags) {
    this.supportsRemoveTags = supportsRemoveTags;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmailThirdPartyProvider emailThirdPartyProvider = (EmailThirdPartyProvider) o;
    return Objects.equals(this.connectUrl, emailThirdPartyProvider.connectUrl) &&
        Objects.equals(this.listCount, emailThirdPartyProvider.listCount) &&
        Objects.equals(this.lists, emailThirdPartyProvider.lists) &&
        Objects.equals(this.logoUrl, emailThirdPartyProvider.logoUrl) &&
        Objects.equals(this.name, emailThirdPartyProvider.name) &&
        Objects.equals(this.supportsAddTags, emailThirdPartyProvider.supportsAddTags) &&
        Objects.equals(this.supportsListSubscribe, emailThirdPartyProvider.supportsListSubscribe) &&
        Objects.equals(this.supportsListUnsubscribe, emailThirdPartyProvider.supportsListUnsubscribe) &&
        Objects.equals(this.supportsRemoveTags, emailThirdPartyProvider.supportsRemoveTags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(connectUrl, listCount, lists, logoUrl, name, supportsAddTags, supportsListSubscribe, supportsListUnsubscribe, supportsRemoveTags);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmailThirdPartyProvider {\n");
    
    sb.append("    connectUrl: ").append(toIndentedString(connectUrl)).append("\n");
    sb.append("    listCount: ").append(toIndentedString(listCount)).append("\n");
    sb.append("    lists: ").append(toIndentedString(lists)).append("\n");
    sb.append("    logoUrl: ").append(toIndentedString(logoUrl)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    supportsAddTags: ").append(toIndentedString(supportsAddTags)).append("\n");
    sb.append("    supportsListSubscribe: ").append(toIndentedString(supportsListSubscribe)).append("\n");
    sb.append("    supportsListUnsubscribe: ").append(toIndentedString(supportsListUnsubscribe)).append("\n");
    sb.append("    supportsRemoveTags: ").append(toIndentedString(supportsRemoveTags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

