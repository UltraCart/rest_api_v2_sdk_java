/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.EmailThirdPartyList;
import com.ultracart.admin.v2.models.EmailThirdPartyTag;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * EmailThirdPartyProvider
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-07-14T10:02:18.793-04:00[America/Indianapolis]")
public class EmailThirdPartyProvider {
  public static final String SERIALIZED_NAME_CONNECT_URL = "connect_url";
  @SerializedName(SERIALIZED_NAME_CONNECT_URL)
  private String connectUrl;

  public static final String SERIALIZED_NAME_LIST_COUNT = "list_count";
  @SerializedName(SERIALIZED_NAME_LIST_COUNT)
  private Integer listCount;

  public static final String SERIALIZED_NAME_LISTS = "lists";
  @SerializedName(SERIALIZED_NAME_LISTS)
  private List<EmailThirdPartyList> lists = null;

  public static final String SERIALIZED_NAME_LOGO_URL = "logo_url";
  @SerializedName(SERIALIZED_NAME_LOGO_URL)
  private String logoUrl;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_SUPPORTS_ADD_TAGS = "supports_add_tags";
  @SerializedName(SERIALIZED_NAME_SUPPORTS_ADD_TAGS)
  private Boolean supportsAddTags;

  public static final String SERIALIZED_NAME_SUPPORTS_LIST_SUBSCRIBE = "supports_list_subscribe";
  @SerializedName(SERIALIZED_NAME_SUPPORTS_LIST_SUBSCRIBE)
  private Boolean supportsListSubscribe;

  public static final String SERIALIZED_NAME_SUPPORTS_LIST_UNSUBSCRIBE = "supports_list_unsubscribe";
  @SerializedName(SERIALIZED_NAME_SUPPORTS_LIST_UNSUBSCRIBE)
  private Boolean supportsListUnsubscribe;

  public static final String SERIALIZED_NAME_SUPPORTS_REMOVE_TAGS = "supports_remove_tags";
  @SerializedName(SERIALIZED_NAME_SUPPORTS_REMOVE_TAGS)
  private Boolean supportsRemoveTags;

  public static final String SERIALIZED_NAME_TAG_COUNT = "tag_count";
  @SerializedName(SERIALIZED_NAME_TAG_COUNT)
  private Integer tagCount;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<EmailThirdPartyTag> tags = null;

  public EmailThirdPartyProvider() { 
  }

  public EmailThirdPartyProvider connectUrl(String connectUrl) {
    
    this.connectUrl = connectUrl;
    return this;
  }

   /**
   * URL to the settings screen to connect.  Null if the provider is already connected.
   * @return connectUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "URL to the settings screen to connect.  Null if the provider is already connected.")

  public String getConnectUrl() {
    return connectUrl;
  }


  public void setConnectUrl(String connectUrl) {
    this.connectUrl = connectUrl;
  }


  public EmailThirdPartyProvider listCount(Integer listCount) {
    
    this.listCount = listCount;
    return this;
  }

   /**
   * list_count
   * @return listCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "list_count")

  public Integer getListCount() {
    return listCount;
  }


  public void setListCount(Integer listCount) {
    this.listCount = listCount;
  }


  public EmailThirdPartyProvider lists(List<EmailThirdPartyList> lists) {
    
    this.lists = lists;
    return this;
  }

  public EmailThirdPartyProvider addListsItem(EmailThirdPartyList listsItem) {
    if (this.lists == null) {
      this.lists = new ArrayList<>();
    }
    this.lists.add(listsItem);
    return this;
  }

   /**
   * lists
   * @return lists
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "lists")

  public List<EmailThirdPartyList> getLists() {
    return lists;
  }


  public void setLists(List<EmailThirdPartyList> lists) {
    this.lists = lists;
  }


  public EmailThirdPartyProvider logoUrl(String logoUrl) {
    
    this.logoUrl = logoUrl;
    return this;
  }

   /**
   * logo_url
   * @return logoUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "logo_url")

  public String getLogoUrl() {
    return logoUrl;
  }


  public void setLogoUrl(String logoUrl) {
    this.logoUrl = logoUrl;
  }


  public EmailThirdPartyProvider name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "name")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public EmailThirdPartyProvider supportsAddTags(Boolean supportsAddTags) {
    
    this.supportsAddTags = supportsAddTags;
    return this;
  }

   /**
   * True if this provider can support adding tags
   * @return supportsAddTags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if this provider can support adding tags")

  public Boolean getSupportsAddTags() {
    return supportsAddTags;
  }


  public void setSupportsAddTags(Boolean supportsAddTags) {
    this.supportsAddTags = supportsAddTags;
  }


  public EmailThirdPartyProvider supportsListSubscribe(Boolean supportsListSubscribe) {
    
    this.supportsListSubscribe = supportsListSubscribe;
    return this;
  }

   /**
   * True if this provider can support list subscribe
   * @return supportsListSubscribe
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if this provider can support list subscribe")

  public Boolean getSupportsListSubscribe() {
    return supportsListSubscribe;
  }


  public void setSupportsListSubscribe(Boolean supportsListSubscribe) {
    this.supportsListSubscribe = supportsListSubscribe;
  }


  public EmailThirdPartyProvider supportsListUnsubscribe(Boolean supportsListUnsubscribe) {
    
    this.supportsListUnsubscribe = supportsListUnsubscribe;
    return this;
  }

   /**
   * True if this provider can support list unsubscribe
   * @return supportsListUnsubscribe
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if this provider can support list unsubscribe")

  public Boolean getSupportsListUnsubscribe() {
    return supportsListUnsubscribe;
  }


  public void setSupportsListUnsubscribe(Boolean supportsListUnsubscribe) {
    this.supportsListUnsubscribe = supportsListUnsubscribe;
  }


  public EmailThirdPartyProvider supportsRemoveTags(Boolean supportsRemoveTags) {
    
    this.supportsRemoveTags = supportsRemoveTags;
    return this;
  }

   /**
   * True if this provider can support remove tags
   * @return supportsRemoveTags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if this provider can support remove tags")

  public Boolean getSupportsRemoveTags() {
    return supportsRemoveTags;
  }


  public void setSupportsRemoveTags(Boolean supportsRemoveTags) {
    this.supportsRemoveTags = supportsRemoveTags;
  }


  public EmailThirdPartyProvider tagCount(Integer tagCount) {
    
    this.tagCount = tagCount;
    return this;
  }

   /**
   * tag_count
   * @return tagCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "tag_count")

  public Integer getTagCount() {
    return tagCount;
  }


  public void setTagCount(Integer tagCount) {
    this.tagCount = tagCount;
  }


  public EmailThirdPartyProvider tags(List<EmailThirdPartyTag> tags) {
    
    this.tags = tags;
    return this;
  }

  public EmailThirdPartyProvider addTagsItem(EmailThirdPartyTag tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * tags
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "tags")

  public List<EmailThirdPartyTag> getTags() {
    return tags;
  }


  public void setTags(List<EmailThirdPartyTag> tags) {
    this.tags = tags;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmailThirdPartyProvider emailThirdPartyProvider = (EmailThirdPartyProvider) o;
    return Objects.equals(this.connectUrl, emailThirdPartyProvider.connectUrl) &&
        Objects.equals(this.listCount, emailThirdPartyProvider.listCount) &&
        Objects.equals(this.lists, emailThirdPartyProvider.lists) &&
        Objects.equals(this.logoUrl, emailThirdPartyProvider.logoUrl) &&
        Objects.equals(this.name, emailThirdPartyProvider.name) &&
        Objects.equals(this.supportsAddTags, emailThirdPartyProvider.supportsAddTags) &&
        Objects.equals(this.supportsListSubscribe, emailThirdPartyProvider.supportsListSubscribe) &&
        Objects.equals(this.supportsListUnsubscribe, emailThirdPartyProvider.supportsListUnsubscribe) &&
        Objects.equals(this.supportsRemoveTags, emailThirdPartyProvider.supportsRemoveTags) &&
        Objects.equals(this.tagCount, emailThirdPartyProvider.tagCount) &&
        Objects.equals(this.tags, emailThirdPartyProvider.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(connectUrl, listCount, lists, logoUrl, name, supportsAddTags, supportsListSubscribe, supportsListUnsubscribe, supportsRemoveTags, tagCount, tags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmailThirdPartyProvider {\n");
    sb.append("    connectUrl: ").append(toIndentedString(connectUrl)).append("\n");
    sb.append("    listCount: ").append(toIndentedString(listCount)).append("\n");
    sb.append("    lists: ").append(toIndentedString(lists)).append("\n");
    sb.append("    logoUrl: ").append(toIndentedString(logoUrl)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    supportsAddTags: ").append(toIndentedString(supportsAddTags)).append("\n");
    sb.append("    supportsListSubscribe: ").append(toIndentedString(supportsListSubscribe)).append("\n");
    sb.append("    supportsListUnsubscribe: ").append(toIndentedString(supportsListUnsubscribe)).append("\n");
    sb.append("    supportsRemoveTags: ").append(toIndentedString(supportsRemoveTags)).append("\n");
    sb.append("    tagCount: ").append(toIndentedString(tagCount)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("connect_url");
    openapiFields.add("list_count");
    openapiFields.add("lists");
    openapiFields.add("logo_url");
    openapiFields.add("name");
    openapiFields.add("supports_add_tags");
    openapiFields.add("supports_list_subscribe");
    openapiFields.add("supports_list_unsubscribe");
    openapiFields.add("supports_remove_tags");
    openapiFields.add("tag_count");
    openapiFields.add("tags");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to EmailThirdPartyProvider
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (EmailThirdPartyProvider.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in EmailThirdPartyProvider is not found in the empty JSON string", EmailThirdPartyProvider.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!EmailThirdPartyProvider.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EmailThirdPartyProvider` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("connect_url") != null && !jsonObj.get("connect_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `connect_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("connect_url").toString()));
      }
      JsonArray jsonArraylists = jsonObj.getAsJsonArray("lists");
      if (jsonArraylists != null) {
        // ensure the json data is an array
        if (!jsonObj.get("lists").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `lists` to be an array in the JSON string but got `%s`", jsonObj.get("lists").toString()));
        }

        // validate the optional field `lists` (array)
        for (int i = 0; i < jsonArraylists.size(); i++) {
          EmailThirdPartyList.validateJsonObject(jsonArraylists.get(i).getAsJsonObject());
        };
      }
      if (jsonObj.get("logo_url") != null && !jsonObj.get("logo_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logo_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logo_url").toString()));
      }
      if (jsonObj.get("name") != null && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      JsonArray jsonArraytags = jsonObj.getAsJsonArray("tags");
      if (jsonArraytags != null) {
        // ensure the json data is an array
        if (!jsonObj.get("tags").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `tags` to be an array in the JSON string but got `%s`", jsonObj.get("tags").toString()));
        }

        // validate the optional field `tags` (array)
        for (int i = 0; i < jsonArraytags.size(); i++) {
          EmailThirdPartyTag.validateJsonObject(jsonArraytags.get(i).getAsJsonObject());
        };
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EmailThirdPartyProvider.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EmailThirdPartyProvider' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EmailThirdPartyProvider> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EmailThirdPartyProvider.class));

       return (TypeAdapter<T>) new TypeAdapter<EmailThirdPartyProvider>() {
           @Override
           public void write(JsonWriter out, EmailThirdPartyProvider value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EmailThirdPartyProvider read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of EmailThirdPartyProvider given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of EmailThirdPartyProvider
  * @throws IOException if the JSON string is invalid with respect to EmailThirdPartyProvider
  */
  public static EmailThirdPartyProvider fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EmailThirdPartyProvider.class);
  }

 /**
  * Convert an instance of EmailThirdPartyProvider to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

