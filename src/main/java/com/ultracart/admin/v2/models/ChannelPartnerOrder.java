/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.ChannelPartnerOrderItem;
import com.ultracart.admin.v2.models.ChannelPartnerOrderTransaction;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * ChannelPartnerOrder
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-05-20T12:50:59.354-04:00[America/Indianapolis]")
public class ChannelPartnerOrder {
  public static final String SERIALIZED_NAME_ADVERTISING_SOURCE = "advertisingSource";
  @SerializedName(SERIALIZED_NAME_ADVERTISING_SOURCE)
  private String advertisingSource;

  public static final String SERIALIZED_NAME_AFFILIATE_ID = "affiliate_id";
  @SerializedName(SERIALIZED_NAME_AFFILIATE_ID)
  private String affiliateId;

  public static final String SERIALIZED_NAME_AFFILIATE_SUB_ID = "affiliate_sub_id";
  @SerializedName(SERIALIZED_NAME_AFFILIATE_SUB_ID)
  private String affiliateSubId;

  public static final String SERIALIZED_NAME_ARBITRARY_SHIPPING_HANDLING_TOTAL = "arbitrary_shipping_handling_total";
  @SerializedName(SERIALIZED_NAME_ARBITRARY_SHIPPING_HANDLING_TOTAL)
  private BigDecimal arbitraryShippingHandlingTotal;

  public static final String SERIALIZED_NAME_ARBITRARY_TAX = "arbitrary_tax";
  @SerializedName(SERIALIZED_NAME_ARBITRARY_TAX)
  private BigDecimal arbitraryTax;

  public static final String SERIALIZED_NAME_ARBITRARY_TAX_RATE = "arbitrary_tax_rate";
  @SerializedName(SERIALIZED_NAME_ARBITRARY_TAX_RATE)
  private BigDecimal arbitraryTaxRate;

  public static final String SERIALIZED_NAME_ARBITRARY_TAXABLE_SUBTOTAL = "arbitrary_taxable_subtotal";
  @SerializedName(SERIALIZED_NAME_ARBITRARY_TAXABLE_SUBTOTAL)
  private BigDecimal arbitraryTaxableSubtotal;

  public static final String SERIALIZED_NAME_ASSOCIATE_WITH_CUSTOMER_PROFILE_IF_PRESENT = "associate_with_customer_profile_if_present";
  @SerializedName(SERIALIZED_NAME_ASSOCIATE_WITH_CUSTOMER_PROFILE_IF_PRESENT)
  private Boolean associateWithCustomerProfileIfPresent;

  public static final String SERIALIZED_NAME_AUTO_APPROVE_PURCHASE_ORDER = "auto_approve_purchase_order";
  @SerializedName(SERIALIZED_NAME_AUTO_APPROVE_PURCHASE_ORDER)
  private Boolean autoApprovePurchaseOrder;

  public static final String SERIALIZED_NAME_BILLTO_ADDRESS1 = "billto_address1";
  @SerializedName(SERIALIZED_NAME_BILLTO_ADDRESS1)
  private String billtoAddress1;

  public static final String SERIALIZED_NAME_BILLTO_ADDRESS2 = "billto_address2";
  @SerializedName(SERIALIZED_NAME_BILLTO_ADDRESS2)
  private String billtoAddress2;

  public static final String SERIALIZED_NAME_BILLTO_CITY = "billto_city";
  @SerializedName(SERIALIZED_NAME_BILLTO_CITY)
  private String billtoCity;

  public static final String SERIALIZED_NAME_BILLTO_COMPANY = "billto_company";
  @SerializedName(SERIALIZED_NAME_BILLTO_COMPANY)
  private String billtoCompany;

  public static final String SERIALIZED_NAME_BILLTO_COUNTRY_CODE = "billto_country_code";
  @SerializedName(SERIALIZED_NAME_BILLTO_COUNTRY_CODE)
  private String billtoCountryCode;

  public static final String SERIALIZED_NAME_BILLTO_DAY_PHONE = "billto_day_phone";
  @SerializedName(SERIALIZED_NAME_BILLTO_DAY_PHONE)
  private String billtoDayPhone;

  public static final String SERIALIZED_NAME_BILLTO_EVENING_PHONE = "billto_evening_phone";
  @SerializedName(SERIALIZED_NAME_BILLTO_EVENING_PHONE)
  private String billtoEveningPhone;

  public static final String SERIALIZED_NAME_BILLTO_FIRST_NAME = "billto_first_name";
  @SerializedName(SERIALIZED_NAME_BILLTO_FIRST_NAME)
  private String billtoFirstName;

  public static final String SERIALIZED_NAME_BILLTO_LAST_NAME = "billto_last_name";
  @SerializedName(SERIALIZED_NAME_BILLTO_LAST_NAME)
  private String billtoLastName;

  public static final String SERIALIZED_NAME_BILLTO_POSTAL_CODE = "billto_postal_code";
  @SerializedName(SERIALIZED_NAME_BILLTO_POSTAL_CODE)
  private String billtoPostalCode;

  public static final String SERIALIZED_NAME_BILLTO_STATE_REGION = "billto_state_region";
  @SerializedName(SERIALIZED_NAME_BILLTO_STATE_REGION)
  private String billtoStateRegion;

  public static final String SERIALIZED_NAME_BILLTO_TITLE = "billto_title";
  @SerializedName(SERIALIZED_NAME_BILLTO_TITLE)
  private String billtoTitle;

  public static final String SERIALIZED_NAME_CC_EMAIL = "cc_email";
  @SerializedName(SERIALIZED_NAME_CC_EMAIL)
  private String ccEmail;

  public static final String SERIALIZED_NAME_CHANNEL_PARTNER_ORDER_ID = "channel_partner_order_id";
  @SerializedName(SERIALIZED_NAME_CHANNEL_PARTNER_ORDER_ID)
  private String channelPartnerOrderId;

  public static final String SERIALIZED_NAME_CONSIDER_RECURRING = "consider_recurring";
  @SerializedName(SERIALIZED_NAME_CONSIDER_RECURRING)
  private Boolean considerRecurring;

  public static final String SERIALIZED_NAME_COUPONS = "coupons";
  @SerializedName(SERIALIZED_NAME_COUPONS)
  private List<String> coupons = null;

  public static final String SERIALIZED_NAME_CREDIT_CARD_AUTHORIZATION_AMOUNT = "credit_card_authorization_amount";
  @SerializedName(SERIALIZED_NAME_CREDIT_CARD_AUTHORIZATION_AMOUNT)
  private BigDecimal creditCardAuthorizationAmount;

  public static final String SERIALIZED_NAME_CREDIT_CARD_AUTHORIZATION_DTS = "credit_card_authorization_dts";
  @SerializedName(SERIALIZED_NAME_CREDIT_CARD_AUTHORIZATION_DTS)
  private String creditCardAuthorizationDts;

  public static final String SERIALIZED_NAME_CREDIT_CARD_AUTHORIZATION_NUMBER = "credit_card_authorization_number";
  @SerializedName(SERIALIZED_NAME_CREDIT_CARD_AUTHORIZATION_NUMBER)
  private String creditCardAuthorizationNumber;

  public static final String SERIALIZED_NAME_CREDIT_CARD_EXPIRATION_MONTH = "credit_card_expiration_month";
  @SerializedName(SERIALIZED_NAME_CREDIT_CARD_EXPIRATION_MONTH)
  private Integer creditCardExpirationMonth;

  public static final String SERIALIZED_NAME_CREDIT_CARD_EXPIRATION_YEAR = "credit_card_expiration_year";
  @SerializedName(SERIALIZED_NAME_CREDIT_CARD_EXPIRATION_YEAR)
  private Integer creditCardExpirationYear;

  public static final String SERIALIZED_NAME_CREDIT_CARD_TYPE = "credit_card_type";
  @SerializedName(SERIALIZED_NAME_CREDIT_CARD_TYPE)
  private String creditCardType;

  public static final String SERIALIZED_NAME_CUSTOM_FIELD1 = "custom_field1";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELD1)
  private String customField1;

  public static final String SERIALIZED_NAME_CUSTOM_FIELD2 = "custom_field2";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELD2)
  private String customField2;

  public static final String SERIALIZED_NAME_CUSTOM_FIELD3 = "custom_field3";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELD3)
  private String customField3;

  public static final String SERIALIZED_NAME_CUSTOM_FIELD4 = "custom_field4";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELD4)
  private String customField4;

  public static final String SERIALIZED_NAME_CUSTOM_FIELD5 = "custom_field5";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELD5)
  private String customField5;

  public static final String SERIALIZED_NAME_CUSTOM_FIELD6 = "custom_field6";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELD6)
  private String customField6;

  public static final String SERIALIZED_NAME_CUSTOM_FIELD7 = "custom_field7";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELD7)
  private String customField7;

  public static final String SERIALIZED_NAME_DELIVERY_DATE = "delivery_date";
  @SerializedName(SERIALIZED_NAME_DELIVERY_DATE)
  private String deliveryDate;

  public static final String SERIALIZED_NAME_ECHECK_BANK_ABA_CODE = "echeck_bank_aba_code";
  @SerializedName(SERIALIZED_NAME_ECHECK_BANK_ABA_CODE)
  private String echeckBankAbaCode;

  public static final String SERIALIZED_NAME_ECHECK_BANK_ACCOUNT_NAME = "echeck_bank_account_name";
  @SerializedName(SERIALIZED_NAME_ECHECK_BANK_ACCOUNT_NAME)
  private String echeckBankAccountName;

  public static final String SERIALIZED_NAME_ECHECK_BANK_ACCOUNT_NUMBER = "echeck_bank_account_number";
  @SerializedName(SERIALIZED_NAME_ECHECK_BANK_ACCOUNT_NUMBER)
  private String echeckBankAccountNumber;

  /**
   * eCheck bank account type
   */
  @JsonAdapter(EcheckBankAccountTypeEnum.Adapter.class)
  public enum EcheckBankAccountTypeEnum {
    CHECKING("Checking"),
    
    SAVINGS("Savings");

    private String value;

    EcheckBankAccountTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static EcheckBankAccountTypeEnum fromValue(String value) {
      for (EcheckBankAccountTypeEnum b : EcheckBankAccountTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<EcheckBankAccountTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final EcheckBankAccountTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public EcheckBankAccountTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return EcheckBankAccountTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_ECHECK_BANK_ACCOUNT_TYPE = "echeck_bank_account_type";
  @SerializedName(SERIALIZED_NAME_ECHECK_BANK_ACCOUNT_TYPE)
  private EcheckBankAccountTypeEnum echeckBankAccountType;

  public static final String SERIALIZED_NAME_ECHECK_BANK_NAME = "echeck_bank_name";
  @SerializedName(SERIALIZED_NAME_ECHECK_BANK_NAME)
  private String echeckBankName;

  /**
   * eCheck bank owner type
   */
  @JsonAdapter(EcheckBankOwnerTypeEnum.Adapter.class)
  public enum EcheckBankOwnerTypeEnum {
    BUSINESS("Business"),
    
    PERSONAL("Personal");

    private String value;

    EcheckBankOwnerTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static EcheckBankOwnerTypeEnum fromValue(String value) {
      for (EcheckBankOwnerTypeEnum b : EcheckBankOwnerTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<EcheckBankOwnerTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final EcheckBankOwnerTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public EcheckBankOwnerTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return EcheckBankOwnerTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_ECHECK_BANK_OWNER_TYPE = "echeck_bank_owner_type";
  @SerializedName(SERIALIZED_NAME_ECHECK_BANK_OWNER_TYPE)
  private EcheckBankOwnerTypeEnum echeckBankOwnerType;

  public static final String SERIALIZED_NAME_ECHECK_CUSTOMER_TAX_ID = "echeck_customer_tax_id";
  @SerializedName(SERIALIZED_NAME_ECHECK_CUSTOMER_TAX_ID)
  private String echeckCustomerTaxId;

  public static final String SERIALIZED_NAME_ECHECK_DRIVERS_LICENSE_DOB = "echeck_drivers_license_dob";
  @SerializedName(SERIALIZED_NAME_ECHECK_DRIVERS_LICENSE_DOB)
  private String echeckDriversLicenseDob;

  public static final String SERIALIZED_NAME_ECHECK_DRIVERS_LICENSE_NUMBER = "echeck_drivers_license_number";
  @SerializedName(SERIALIZED_NAME_ECHECK_DRIVERS_LICENSE_NUMBER)
  private String echeckDriversLicenseNumber;

  public static final String SERIALIZED_NAME_ECHECK_DRIVERS_LICENSE_STATE = "echeck_drivers_license_state";
  @SerializedName(SERIALIZED_NAME_ECHECK_DRIVERS_LICENSE_STATE)
  private String echeckDriversLicenseState;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_GIFT = "gift";
  @SerializedName(SERIALIZED_NAME_GIFT)
  private Boolean gift;

  public static final String SERIALIZED_NAME_GIFT_EMAIL = "gift_email";
  @SerializedName(SERIALIZED_NAME_GIFT_EMAIL)
  private String giftEmail;

  public static final String SERIALIZED_NAME_GIFT_MESSAGE = "gift_message";
  @SerializedName(SERIALIZED_NAME_GIFT_MESSAGE)
  private String giftMessage;

  public static final String SERIALIZED_NAME_HOSTED_FIELDS_CARD_TOKEN = "hosted_fields_card_token";
  @SerializedName(SERIALIZED_NAME_HOSTED_FIELDS_CARD_TOKEN)
  private String hostedFieldsCardToken;

  public static final String SERIALIZED_NAME_HOSTED_FIELDS_CVV_TOKEN = "hosted_fields_cvv_token";
  @SerializedName(SERIALIZED_NAME_HOSTED_FIELDS_CVV_TOKEN)
  private String hostedFieldsCvvToken;

  public static final String SERIALIZED_NAME_INSURANCE_APPLICATION_ID = "insurance_application_id";
  @SerializedName(SERIALIZED_NAME_INSURANCE_APPLICATION_ID)
  private String insuranceApplicationId;

  public static final String SERIALIZED_NAME_INSURANCE_CLAIM_ID = "insurance_claim_id";
  @SerializedName(SERIALIZED_NAME_INSURANCE_CLAIM_ID)
  private String insuranceClaimId;

  public static final String SERIALIZED_NAME_IP_ADDRESS = "ip_address";
  @SerializedName(SERIALIZED_NAME_IP_ADDRESS)
  private String ipAddress;

  public static final String SERIALIZED_NAME_ITEMS = "items";
  @SerializedName(SERIALIZED_NAME_ITEMS)
  private List<ChannelPartnerOrderItem> items = null;

  public static final String SERIALIZED_NAME_LEAST_COST_ROUTE = "least_cost_route";
  @SerializedName(SERIALIZED_NAME_LEAST_COST_ROUTE)
  private Boolean leastCostRoute;

  public static final String SERIALIZED_NAME_LEAST_COST_ROUTE_SHIPPING_METHODS = "least_cost_route_shipping_methods";
  @SerializedName(SERIALIZED_NAME_LEAST_COST_ROUTE_SHIPPING_METHODS)
  private List<String> leastCostRouteShippingMethods = null;

  public static final String SERIALIZED_NAME_MAILING_LIST_OPT_IN = "mailing_list_opt_in";
  @SerializedName(SERIALIZED_NAME_MAILING_LIST_OPT_IN)
  private Boolean mailingListOptIn;

  public static final String SERIALIZED_NAME_NO_REALTIME_PAYMENT_PROCESSING = "no_realtime_payment_processing";
  @SerializedName(SERIALIZED_NAME_NO_REALTIME_PAYMENT_PROCESSING)
  private Boolean noRealtimePaymentProcessing;

  /**
   * Payment method
   */
  @JsonAdapter(PaymentMethodEnum.Adapter.class)
  public enum PaymentMethodEnum {
    AFFIRM("Affirm"),
    
    AMAZON("Amazon"),
    
    CHECK("Check"),
    
    COD("COD"),
    
    CREDIT_CARD("Credit Card"),
    
    ECHECK("eCheck"),
    
    LOANHERO("LoanHero"),
    
    MONEY_ORDER("Money Order"),
    
    PAYPAL("PayPal"),
    
    PURCHASE_ORDER("Purchase Order"),
    
    QUOTE_REQUEST("Quote Request"),
    
    WIRE_TRANSFER("Wire Transfer"),
    
    PAYPAL_FASTLANE("PayPal Fastlane");

    private String value;

    PaymentMethodEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PaymentMethodEnum fromValue(String value) {
      for (PaymentMethodEnum b : PaymentMethodEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<PaymentMethodEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PaymentMethodEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PaymentMethodEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return PaymentMethodEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_PAYMENT_METHOD = "payment_method";
  @SerializedName(SERIALIZED_NAME_PAYMENT_METHOD)
  private PaymentMethodEnum paymentMethod;

  public static final String SERIALIZED_NAME_PURCHASE_ORDER_NUMBER = "purchase_order_number";
  @SerializedName(SERIALIZED_NAME_PURCHASE_ORDER_NUMBER)
  private String purchaseOrderNumber;

  public static final String SERIALIZED_NAME_ROTATING_TRANSACTION_GATEWAY_CODE = "rotating_transaction_gateway_code";
  @SerializedName(SERIALIZED_NAME_ROTATING_TRANSACTION_GATEWAY_CODE)
  private String rotatingTransactionGatewayCode;

  public static final String SERIALIZED_NAME_SALES_REP_CODE = "sales_rep_code";
  @SerializedName(SERIALIZED_NAME_SALES_REP_CODE)
  private String salesRepCode;

  public static final String SERIALIZED_NAME_SCREEN_BRANDING_THEME_CODE = "screen_branding_theme_code";
  @SerializedName(SERIALIZED_NAME_SCREEN_BRANDING_THEME_CODE)
  private String screenBrandingThemeCode;

  public static final String SERIALIZED_NAME_SHIP_ON_DATE = "ship_on_date";
  @SerializedName(SERIALIZED_NAME_SHIP_ON_DATE)
  private String shipOnDate;

  public static final String SERIALIZED_NAME_SHIP_TO_RESIDENTIAL = "ship_to_residential";
  @SerializedName(SERIALIZED_NAME_SHIP_TO_RESIDENTIAL)
  private Boolean shipToResidential;

  public static final String SERIALIZED_NAME_SHIPPING_METHOD = "shipping_method";
  @SerializedName(SERIALIZED_NAME_SHIPPING_METHOD)
  private String shippingMethod;

  public static final String SERIALIZED_NAME_SHIPTO_ADDRESS1 = "shipto_address1";
  @SerializedName(SERIALIZED_NAME_SHIPTO_ADDRESS1)
  private String shiptoAddress1;

  public static final String SERIALIZED_NAME_SHIPTO_ADDRESS2 = "shipto_address2";
  @SerializedName(SERIALIZED_NAME_SHIPTO_ADDRESS2)
  private String shiptoAddress2;

  public static final String SERIALIZED_NAME_SHIPTO_CITY = "shipto_city";
  @SerializedName(SERIALIZED_NAME_SHIPTO_CITY)
  private String shiptoCity;

  public static final String SERIALIZED_NAME_SHIPTO_COMPANY = "shipto_company";
  @SerializedName(SERIALIZED_NAME_SHIPTO_COMPANY)
  private String shiptoCompany;

  public static final String SERIALIZED_NAME_SHIPTO_COUNTRY_CODE = "shipto_country_code";
  @SerializedName(SERIALIZED_NAME_SHIPTO_COUNTRY_CODE)
  private String shiptoCountryCode;

  public static final String SERIALIZED_NAME_SHIPTO_DAY_PHONE = "shipto_day_phone";
  @SerializedName(SERIALIZED_NAME_SHIPTO_DAY_PHONE)
  private String shiptoDayPhone;

  public static final String SERIALIZED_NAME_SHIPTO_EVENING_PHONE = "shipto_evening_phone";
  @SerializedName(SERIALIZED_NAME_SHIPTO_EVENING_PHONE)
  private String shiptoEveningPhone;

  public static final String SERIALIZED_NAME_SHIPTO_FIRST_NAME = "shipto_first_name";
  @SerializedName(SERIALIZED_NAME_SHIPTO_FIRST_NAME)
  private String shiptoFirstName;

  public static final String SERIALIZED_NAME_SHIPTO_LAST_NAME = "shipto_last_name";
  @SerializedName(SERIALIZED_NAME_SHIPTO_LAST_NAME)
  private String shiptoLastName;

  public static final String SERIALIZED_NAME_SHIPTO_POSTAL_CODE = "shipto_postal_code";
  @SerializedName(SERIALIZED_NAME_SHIPTO_POSTAL_CODE)
  private String shiptoPostalCode;

  public static final String SERIALIZED_NAME_SHIPTO_STATE_REGION = "shipto_state_region";
  @SerializedName(SERIALIZED_NAME_SHIPTO_STATE_REGION)
  private String shiptoStateRegion;

  public static final String SERIALIZED_NAME_SHIPTO_TITLE = "shipto_title";
  @SerializedName(SERIALIZED_NAME_SHIPTO_TITLE)
  private String shiptoTitle;

  public static final String SERIALIZED_NAME_SKIP_PAYMENT_PROCESSING = "skip_payment_processing";
  @SerializedName(SERIALIZED_NAME_SKIP_PAYMENT_PROCESSING)
  private Boolean skipPaymentProcessing;

  public static final String SERIALIZED_NAME_SPECIAL_INSTRUCTIONS = "special_instructions";
  @SerializedName(SERIALIZED_NAME_SPECIAL_INSTRUCTIONS)
  private String specialInstructions;

  public static final String SERIALIZED_NAME_STORE_COMPLETED = "store_completed";
  @SerializedName(SERIALIZED_NAME_STORE_COMPLETED)
  private Boolean storeCompleted;

  public static final String SERIALIZED_NAME_STORE_IF_PAYMENT_DECLINES = "store_if_payment_declines";
  @SerializedName(SERIALIZED_NAME_STORE_IF_PAYMENT_DECLINES)
  private Boolean storeIfPaymentDeclines;

  public static final String SERIALIZED_NAME_STOREFRONT_HOST_NAME = "storefront_host_name";
  @SerializedName(SERIALIZED_NAME_STOREFRONT_HOST_NAME)
  private String storefrontHostName;

  public static final String SERIALIZED_NAME_TAX_COUNTY = "tax_county";
  @SerializedName(SERIALIZED_NAME_TAX_COUNTY)
  private String taxCounty;

  public static final String SERIALIZED_NAME_TAX_EXEMPT = "tax_exempt";
  @SerializedName(SERIALIZED_NAME_TAX_EXEMPT)
  private Boolean taxExempt;

  public static final String SERIALIZED_NAME_TRANSACTION = "transaction";
  @SerializedName(SERIALIZED_NAME_TRANSACTION)
  private ChannelPartnerOrderTransaction transaction;

  public static final String SERIALIZED_NAME_TREAT_WARNINGS_AS_ERRORS = "treat_warnings_as_errors";
  @SerializedName(SERIALIZED_NAME_TREAT_WARNINGS_AS_ERRORS)
  private Boolean treatWarningsAsErrors;

  public static final String SERIALIZED_NAME_USE_PRIOR_PAYMENT_INFORMATION_FROM_ORDER_ID = "use_prior_payment_information_from_order_id";
  @SerializedName(SERIALIZED_NAME_USE_PRIOR_PAYMENT_INFORMATION_FROM_ORDER_ID)
  private String usePriorPaymentInformationFromOrderId;

  public ChannelPartnerOrder() { 
  }

  public ChannelPartnerOrder advertisingSource(String advertisingSource) {
    
    this.advertisingSource = advertisingSource;
    return this;
  }

   /**
   * advertising_source
   * @return advertisingSource
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "advertising_source")

  public String getAdvertisingSource() {
    return advertisingSource;
  }


  public void setAdvertisingSource(String advertisingSource) {
    this.advertisingSource = advertisingSource;
  }


  public ChannelPartnerOrder affiliateId(String affiliateId) {
    
    this.affiliateId = affiliateId;
    return this;
  }

   /**
   * Affiliate Id
   * @return affiliateId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Affiliate Id")

  public String getAffiliateId() {
    return affiliateId;
  }


  public void setAffiliateId(String affiliateId) {
    this.affiliateId = affiliateId;
  }


  public ChannelPartnerOrder affiliateSubId(String affiliateSubId) {
    
    this.affiliateSubId = affiliateSubId;
    return this;
  }

   /**
   * Affiliate Sub Id
   * @return affiliateSubId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Affiliate Sub Id")

  public String getAffiliateSubId() {
    return affiliateSubId;
  }


  public void setAffiliateSubId(String affiliateSubId) {
    this.affiliateSubId = affiliateSubId;
  }


  public ChannelPartnerOrder arbitraryShippingHandlingTotal(BigDecimal arbitraryShippingHandlingTotal) {
    
    this.arbitraryShippingHandlingTotal = arbitraryShippingHandlingTotal;
    return this;
  }

   /**
   * Arbitrary shipping handling total
   * @return arbitraryShippingHandlingTotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Arbitrary shipping handling total")

  public BigDecimal getArbitraryShippingHandlingTotal() {
    return arbitraryShippingHandlingTotal;
  }


  public void setArbitraryShippingHandlingTotal(BigDecimal arbitraryShippingHandlingTotal) {
    this.arbitraryShippingHandlingTotal = arbitraryShippingHandlingTotal;
  }


  public ChannelPartnerOrder arbitraryTax(BigDecimal arbitraryTax) {
    
    this.arbitraryTax = arbitraryTax;
    return this;
  }

   /**
   * Arbitrary tax for overriding calculated taxes
   * @return arbitraryTax
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Arbitrary tax for overriding calculated taxes")

  public BigDecimal getArbitraryTax() {
    return arbitraryTax;
  }


  public void setArbitraryTax(BigDecimal arbitraryTax) {
    this.arbitraryTax = arbitraryTax;
  }


  public ChannelPartnerOrder arbitraryTaxRate(BigDecimal arbitraryTaxRate) {
    
    this.arbitraryTaxRate = arbitraryTaxRate;
    return this;
  }

   /**
   * Arbitrary tax rate
   * @return arbitraryTaxRate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Arbitrary tax rate")

  public BigDecimal getArbitraryTaxRate() {
    return arbitraryTaxRate;
  }


  public void setArbitraryTaxRate(BigDecimal arbitraryTaxRate) {
    this.arbitraryTaxRate = arbitraryTaxRate;
  }


  public ChannelPartnerOrder arbitraryTaxableSubtotal(BigDecimal arbitraryTaxableSubtotal) {
    
    this.arbitraryTaxableSubtotal = arbitraryTaxableSubtotal;
    return this;
  }

   /**
   * Arbitrary taxable subtotal
   * @return arbitraryTaxableSubtotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Arbitrary taxable subtotal")

  public BigDecimal getArbitraryTaxableSubtotal() {
    return arbitraryTaxableSubtotal;
  }


  public void setArbitraryTaxableSubtotal(BigDecimal arbitraryTaxableSubtotal) {
    this.arbitraryTaxableSubtotal = arbitraryTaxableSubtotal;
  }


  public ChannelPartnerOrder associateWithCustomerProfileIfPresent(Boolean associateWithCustomerProfileIfPresent) {
    
    this.associateWithCustomerProfileIfPresent = associateWithCustomerProfileIfPresent;
    return this;
  }

   /**
   * If true any matching customer profile based on email is associated with this order
   * @return associateWithCustomerProfileIfPresent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If true any matching customer profile based on email is associated with this order")

  public Boolean getAssociateWithCustomerProfileIfPresent() {
    return associateWithCustomerProfileIfPresent;
  }


  public void setAssociateWithCustomerProfileIfPresent(Boolean associateWithCustomerProfileIfPresent) {
    this.associateWithCustomerProfileIfPresent = associateWithCustomerProfileIfPresent;
  }


  public ChannelPartnerOrder autoApprovePurchaseOrder(Boolean autoApprovePurchaseOrder) {
    
    this.autoApprovePurchaseOrder = autoApprovePurchaseOrder;
    return this;
  }

   /**
   * If true any purchase orders are automatically approved
   * @return autoApprovePurchaseOrder
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If true any purchase orders are automatically approved")

  public Boolean getAutoApprovePurchaseOrder() {
    return autoApprovePurchaseOrder;
  }


  public void setAutoApprovePurchaseOrder(Boolean autoApprovePurchaseOrder) {
    this.autoApprovePurchaseOrder = autoApprovePurchaseOrder;
  }


  public ChannelPartnerOrder billtoAddress1(String billtoAddress1) {
    
    this.billtoAddress1 = billtoAddress1;
    return this;
  }

   /**
   * Billing Address line 1
   * @return billtoAddress1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Billing Address line 1")

  public String getBilltoAddress1() {
    return billtoAddress1;
  }


  public void setBilltoAddress1(String billtoAddress1) {
    this.billtoAddress1 = billtoAddress1;
  }


  public ChannelPartnerOrder billtoAddress2(String billtoAddress2) {
    
    this.billtoAddress2 = billtoAddress2;
    return this;
  }

   /**
   * Billing Address line 2
   * @return billtoAddress2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Billing Address line 2")

  public String getBilltoAddress2() {
    return billtoAddress2;
  }


  public void setBilltoAddress2(String billtoAddress2) {
    this.billtoAddress2 = billtoAddress2;
  }


  public ChannelPartnerOrder billtoCity(String billtoCity) {
    
    this.billtoCity = billtoCity;
    return this;
  }

   /**
   * Billing City
   * @return billtoCity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Billing City")

  public String getBilltoCity() {
    return billtoCity;
  }


  public void setBilltoCity(String billtoCity) {
    this.billtoCity = billtoCity;
  }


  public ChannelPartnerOrder billtoCompany(String billtoCompany) {
    
    this.billtoCompany = billtoCompany;
    return this;
  }

   /**
   * Billing Company
   * @return billtoCompany
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Billing Company")

  public String getBilltoCompany() {
    return billtoCompany;
  }


  public void setBilltoCompany(String billtoCompany) {
    this.billtoCompany = billtoCompany;
  }


  public ChannelPartnerOrder billtoCountryCode(String billtoCountryCode) {
    
    this.billtoCountryCode = billtoCountryCode;
    return this;
  }

   /**
   * Billing ISO-3166 two letter country code
   * @return billtoCountryCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Billing ISO-3166 two letter country code")

  public String getBilltoCountryCode() {
    return billtoCountryCode;
  }


  public void setBilltoCountryCode(String billtoCountryCode) {
    this.billtoCountryCode = billtoCountryCode;
  }


  public ChannelPartnerOrder billtoDayPhone(String billtoDayPhone) {
    
    this.billtoDayPhone = billtoDayPhone;
    return this;
  }

   /**
   * Billing Day phone
   * @return billtoDayPhone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Billing Day phone")

  public String getBilltoDayPhone() {
    return billtoDayPhone;
  }


  public void setBilltoDayPhone(String billtoDayPhone) {
    this.billtoDayPhone = billtoDayPhone;
  }


  public ChannelPartnerOrder billtoEveningPhone(String billtoEveningPhone) {
    
    this.billtoEveningPhone = billtoEveningPhone;
    return this;
  }

   /**
   * Billing Evening phone
   * @return billtoEveningPhone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Billing Evening phone")

  public String getBilltoEveningPhone() {
    return billtoEveningPhone;
  }


  public void setBilltoEveningPhone(String billtoEveningPhone) {
    this.billtoEveningPhone = billtoEveningPhone;
  }


  public ChannelPartnerOrder billtoFirstName(String billtoFirstName) {
    
    this.billtoFirstName = billtoFirstName;
    return this;
  }

   /**
   * Billing First name
   * @return billtoFirstName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Billing First name")

  public String getBilltoFirstName() {
    return billtoFirstName;
  }


  public void setBilltoFirstName(String billtoFirstName) {
    this.billtoFirstName = billtoFirstName;
  }


  public ChannelPartnerOrder billtoLastName(String billtoLastName) {
    
    this.billtoLastName = billtoLastName;
    return this;
  }

   /**
   * Billing Last name
   * @return billtoLastName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Billing Last name")

  public String getBilltoLastName() {
    return billtoLastName;
  }


  public void setBilltoLastName(String billtoLastName) {
    this.billtoLastName = billtoLastName;
  }


  public ChannelPartnerOrder billtoPostalCode(String billtoPostalCode) {
    
    this.billtoPostalCode = billtoPostalCode;
    return this;
  }

   /**
   * Billing Postal code
   * @return billtoPostalCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Billing Postal code")

  public String getBilltoPostalCode() {
    return billtoPostalCode;
  }


  public void setBilltoPostalCode(String billtoPostalCode) {
    this.billtoPostalCode = billtoPostalCode;
  }


  public ChannelPartnerOrder billtoStateRegion(String billtoStateRegion) {
    
    this.billtoStateRegion = billtoStateRegion;
    return this;
  }

   /**
   * Billing State for United States otherwise region or province for other countries
   * @return billtoStateRegion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Billing State for United States otherwise region or province for other countries")

  public String getBilltoStateRegion() {
    return billtoStateRegion;
  }


  public void setBilltoStateRegion(String billtoStateRegion) {
    this.billtoStateRegion = billtoStateRegion;
  }


  public ChannelPartnerOrder billtoTitle(String billtoTitle) {
    
    this.billtoTitle = billtoTitle;
    return this;
  }

   /**
   * Billing Title
   * @return billtoTitle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Billing Title")

  public String getBilltoTitle() {
    return billtoTitle;
  }


  public void setBilltoTitle(String billtoTitle) {
    this.billtoTitle = billtoTitle;
  }


  public ChannelPartnerOrder ccEmail(String ccEmail) {
    
    this.ccEmail = ccEmail;
    return this;
  }

   /**
   * CC email.
   * @return ccEmail
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "CC email.")

  public String getCcEmail() {
    return ccEmail;
  }


  public void setCcEmail(String ccEmail) {
    this.ccEmail = ccEmail;
  }


  public ChannelPartnerOrder channelPartnerOrderId(String channelPartnerOrderId) {
    
    this.channelPartnerOrderId = channelPartnerOrderId;
    return this;
  }

   /**
   * The id for this order within the channel partner system.
   * @return channelPartnerOrderId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The id for this order within the channel partner system.")

  public String getChannelPartnerOrderId() {
    return channelPartnerOrderId;
  }


  public void setChannelPartnerOrderId(String channelPartnerOrderId) {
    this.channelPartnerOrderId = channelPartnerOrderId;
  }


  public ChannelPartnerOrder considerRecurring(Boolean considerRecurring) {
    
    this.considerRecurring = considerRecurring;
    return this;
  }

   /**
   * If true this order is marked as an auto order (recurring)
   * @return considerRecurring
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If true this order is marked as an auto order (recurring)")

  public Boolean getConsiderRecurring() {
    return considerRecurring;
  }


  public void setConsiderRecurring(Boolean considerRecurring) {
    this.considerRecurring = considerRecurring;
  }


  public ChannelPartnerOrder coupons(List<String> coupons) {
    
    this.coupons = coupons;
    return this;
  }

  public ChannelPartnerOrder addCouponsItem(String couponsItem) {
    if (this.coupons == null) {
      this.coupons = new ArrayList<>();
    }
    this.coupons.add(couponsItem);
    return this;
  }

   /**
   * Array of coupon codes
   * @return coupons
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Array of coupon codes")

  public List<String> getCoupons() {
    return coupons;
  }


  public void setCoupons(List<String> coupons) {
    this.coupons = coupons;
  }


  public ChannelPartnerOrder creditCardAuthorizationAmount(BigDecimal creditCardAuthorizationAmount) {
    
    this.creditCardAuthorizationAmount = creditCardAuthorizationAmount;
    return this;
  }

   /**
   * The amount authorized externally
   * @return creditCardAuthorizationAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The amount authorized externally")

  public BigDecimal getCreditCardAuthorizationAmount() {
    return creditCardAuthorizationAmount;
  }


  public void setCreditCardAuthorizationAmount(BigDecimal creditCardAuthorizationAmount) {
    this.creditCardAuthorizationAmount = creditCardAuthorizationAmount;
  }


  public ChannelPartnerOrder creditCardAuthorizationDts(String creditCardAuthorizationDts) {
    
    this.creditCardAuthorizationDts = creditCardAuthorizationDts;
    return this;
  }

   /**
   * Date/Time of credit card authorization in ISO8601 format
   * @return creditCardAuthorizationDts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Date/Time of credit card authorization in ISO8601 format")

  public String getCreditCardAuthorizationDts() {
    return creditCardAuthorizationDts;
  }


  public void setCreditCardAuthorizationDts(String creditCardAuthorizationDts) {
    this.creditCardAuthorizationDts = creditCardAuthorizationDts;
  }


  public ChannelPartnerOrder creditCardAuthorizationNumber(String creditCardAuthorizationNumber) {
    
    this.creditCardAuthorizationNumber = creditCardAuthorizationNumber;
    return this;
  }

   /**
   * The reference number provided by an externally processed transaction
   * @return creditCardAuthorizationNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The reference number provided by an externally processed transaction")

  public String getCreditCardAuthorizationNumber() {
    return creditCardAuthorizationNumber;
  }


  public void setCreditCardAuthorizationNumber(String creditCardAuthorizationNumber) {
    this.creditCardAuthorizationNumber = creditCardAuthorizationNumber;
  }


  public ChannelPartnerOrder creditCardExpirationMonth(Integer creditCardExpirationMonth) {
    
    this.creditCardExpirationMonth = creditCardExpirationMonth;
    return this;
  }

   /**
   * Credit card expiration month
   * @return creditCardExpirationMonth
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Credit card expiration month")

  public Integer getCreditCardExpirationMonth() {
    return creditCardExpirationMonth;
  }


  public void setCreditCardExpirationMonth(Integer creditCardExpirationMonth) {
    this.creditCardExpirationMonth = creditCardExpirationMonth;
  }


  public ChannelPartnerOrder creditCardExpirationYear(Integer creditCardExpirationYear) {
    
    this.creditCardExpirationYear = creditCardExpirationYear;
    return this;
  }

   /**
   * Credit card expiration year
   * @return creditCardExpirationYear
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Credit card expiration year")

  public Integer getCreditCardExpirationYear() {
    return creditCardExpirationYear;
  }


  public void setCreditCardExpirationYear(Integer creditCardExpirationYear) {
    this.creditCardExpirationYear = creditCardExpirationYear;
  }


  public ChannelPartnerOrder creditCardType(String creditCardType) {
    
    this.creditCardType = creditCardType;
    return this;
  }

   /**
   * Credit card type
   * @return creditCardType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Credit card type")

  public String getCreditCardType() {
    return creditCardType;
  }


  public void setCreditCardType(String creditCardType) {
    this.creditCardType = creditCardType;
  }


  public ChannelPartnerOrder customField1(String customField1) {
    
    this.customField1 = customField1;
    return this;
  }

   /**
   * Custom field 1
   * @return customField1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Custom field 1")

  public String getCustomField1() {
    return customField1;
  }


  public void setCustomField1(String customField1) {
    this.customField1 = customField1;
  }


  public ChannelPartnerOrder customField2(String customField2) {
    
    this.customField2 = customField2;
    return this;
  }

   /**
   * Custom field 2
   * @return customField2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Custom field 2")

  public String getCustomField2() {
    return customField2;
  }


  public void setCustomField2(String customField2) {
    this.customField2 = customField2;
  }


  public ChannelPartnerOrder customField3(String customField3) {
    
    this.customField3 = customField3;
    return this;
  }

   /**
   * Custom field 3
   * @return customField3
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Custom field 3")

  public String getCustomField3() {
    return customField3;
  }


  public void setCustomField3(String customField3) {
    this.customField3 = customField3;
  }


  public ChannelPartnerOrder customField4(String customField4) {
    
    this.customField4 = customField4;
    return this;
  }

   /**
   * Custom field 4
   * @return customField4
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Custom field 4")

  public String getCustomField4() {
    return customField4;
  }


  public void setCustomField4(String customField4) {
    this.customField4 = customField4;
  }


  public ChannelPartnerOrder customField5(String customField5) {
    
    this.customField5 = customField5;
    return this;
  }

   /**
   * Custom field 5
   * @return customField5
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Custom field 5")

  public String getCustomField5() {
    return customField5;
  }


  public void setCustomField5(String customField5) {
    this.customField5 = customField5;
  }


  public ChannelPartnerOrder customField6(String customField6) {
    
    this.customField6 = customField6;
    return this;
  }

   /**
   * Custom field 6
   * @return customField6
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Custom field 6")

  public String getCustomField6() {
    return customField6;
  }


  public void setCustomField6(String customField6) {
    this.customField6 = customField6;
  }


  public ChannelPartnerOrder customField7(String customField7) {
    
    this.customField7 = customField7;
    return this;
  }

   /**
   * Custom field 7
   * @return customField7
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Custom field 7")

  public String getCustomField7() {
    return customField7;
  }


  public void setCustomField7(String customField7) {
    this.customField7 = customField7;
  }


  public ChannelPartnerOrder deliveryDate(String deliveryDate) {
    
    this.deliveryDate = deliveryDate;
    return this;
  }

   /**
   * Date the customer is requesting delivery on. Typically used for perishable product delivery.
   * @return deliveryDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Date the customer is requesting delivery on. Typically used for perishable product delivery.")

  public String getDeliveryDate() {
    return deliveryDate;
  }


  public void setDeliveryDate(String deliveryDate) {
    this.deliveryDate = deliveryDate;
  }


  public ChannelPartnerOrder echeckBankAbaCode(String echeckBankAbaCode) {
    
    this.echeckBankAbaCode = echeckBankAbaCode;
    return this;
  }

   /**
   * eCheck bank ABA code
   * @return echeckBankAbaCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "eCheck bank ABA code")

  public String getEcheckBankAbaCode() {
    return echeckBankAbaCode;
  }


  public void setEcheckBankAbaCode(String echeckBankAbaCode) {
    this.echeckBankAbaCode = echeckBankAbaCode;
  }


  public ChannelPartnerOrder echeckBankAccountName(String echeckBankAccountName) {
    
    this.echeckBankAccountName = echeckBankAccountName;
    return this;
  }

   /**
   * eCheck bank account name
   * @return echeckBankAccountName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "eCheck bank account name")

  public String getEcheckBankAccountName() {
    return echeckBankAccountName;
  }


  public void setEcheckBankAccountName(String echeckBankAccountName) {
    this.echeckBankAccountName = echeckBankAccountName;
  }


  public ChannelPartnerOrder echeckBankAccountNumber(String echeckBankAccountNumber) {
    
    this.echeckBankAccountNumber = echeckBankAccountNumber;
    return this;
  }

   /**
   * eCheck bank account number
   * @return echeckBankAccountNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "eCheck bank account number")

  public String getEcheckBankAccountNumber() {
    return echeckBankAccountNumber;
  }


  public void setEcheckBankAccountNumber(String echeckBankAccountNumber) {
    this.echeckBankAccountNumber = echeckBankAccountNumber;
  }


  public ChannelPartnerOrder echeckBankAccountType(EcheckBankAccountTypeEnum echeckBankAccountType) {
    
    this.echeckBankAccountType = echeckBankAccountType;
    return this;
  }

   /**
   * eCheck bank account type
   * @return echeckBankAccountType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "eCheck bank account type")

  public EcheckBankAccountTypeEnum getEcheckBankAccountType() {
    return echeckBankAccountType;
  }


  public void setEcheckBankAccountType(EcheckBankAccountTypeEnum echeckBankAccountType) {
    this.echeckBankAccountType = echeckBankAccountType;
  }


  public ChannelPartnerOrder echeckBankName(String echeckBankName) {
    
    this.echeckBankName = echeckBankName;
    return this;
  }

   /**
   * eCheck bank name
   * @return echeckBankName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "eCheck bank name")

  public String getEcheckBankName() {
    return echeckBankName;
  }


  public void setEcheckBankName(String echeckBankName) {
    this.echeckBankName = echeckBankName;
  }


  public ChannelPartnerOrder echeckBankOwnerType(EcheckBankOwnerTypeEnum echeckBankOwnerType) {
    
    this.echeckBankOwnerType = echeckBankOwnerType;
    return this;
  }

   /**
   * eCheck bank owner type
   * @return echeckBankOwnerType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "eCheck bank owner type")

  public EcheckBankOwnerTypeEnum getEcheckBankOwnerType() {
    return echeckBankOwnerType;
  }


  public void setEcheckBankOwnerType(EcheckBankOwnerTypeEnum echeckBankOwnerType) {
    this.echeckBankOwnerType = echeckBankOwnerType;
  }


  public ChannelPartnerOrder echeckCustomerTaxId(String echeckCustomerTaxId) {
    
    this.echeckCustomerTaxId = echeckCustomerTaxId;
    return this;
  }

   /**
   * eCheck customer tax id
   * @return echeckCustomerTaxId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "eCheck customer tax id")

  public String getEcheckCustomerTaxId() {
    return echeckCustomerTaxId;
  }


  public void setEcheckCustomerTaxId(String echeckCustomerTaxId) {
    this.echeckCustomerTaxId = echeckCustomerTaxId;
  }


  public ChannelPartnerOrder echeckDriversLicenseDob(String echeckDriversLicenseDob) {
    
    this.echeckDriversLicenseDob = echeckDriversLicenseDob;
    return this;
  }

   /**
   * eCheck drivers license dob
   * @return echeckDriversLicenseDob
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "eCheck drivers license dob")

  public String getEcheckDriversLicenseDob() {
    return echeckDriversLicenseDob;
  }


  public void setEcheckDriversLicenseDob(String echeckDriversLicenseDob) {
    this.echeckDriversLicenseDob = echeckDriversLicenseDob;
  }


  public ChannelPartnerOrder echeckDriversLicenseNumber(String echeckDriversLicenseNumber) {
    
    this.echeckDriversLicenseNumber = echeckDriversLicenseNumber;
    return this;
  }

   /**
   * eCheck drivers license number
   * @return echeckDriversLicenseNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "eCheck drivers license number")

  public String getEcheckDriversLicenseNumber() {
    return echeckDriversLicenseNumber;
  }


  public void setEcheckDriversLicenseNumber(String echeckDriversLicenseNumber) {
    this.echeckDriversLicenseNumber = echeckDriversLicenseNumber;
  }


  public ChannelPartnerOrder echeckDriversLicenseState(String echeckDriversLicenseState) {
    
    this.echeckDriversLicenseState = echeckDriversLicenseState;
    return this;
  }

   /**
   * eCheck drivers license state
   * @return echeckDriversLicenseState
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "eCheck drivers license state")

  public String getEcheckDriversLicenseState() {
    return echeckDriversLicenseState;
  }


  public void setEcheckDriversLicenseState(String echeckDriversLicenseState) {
    this.echeckDriversLicenseState = echeckDriversLicenseState;
  }


  public ChannelPartnerOrder email(String email) {
    
    this.email = email;
    return this;
  }

   /**
   * Email
   * @return email
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Email")

  public String getEmail() {
    return email;
  }


  public void setEmail(String email) {
    this.email = email;
  }


  public ChannelPartnerOrder gift(Boolean gift) {
    
    this.gift = gift;
    return this;
  }

   /**
   * True if this order is a gift
   * @return gift
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if this order is a gift")

  public Boolean getGift() {
    return gift;
  }


  public void setGift(Boolean gift) {
    this.gift = gift;
  }


  public ChannelPartnerOrder giftEmail(String giftEmail) {
    
    this.giftEmail = giftEmail;
    return this;
  }

   /**
   * Email address of the gift recipient
   * @return giftEmail
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Email address of the gift recipient")

  public String getGiftEmail() {
    return giftEmail;
  }


  public void setGiftEmail(String giftEmail) {
    this.giftEmail = giftEmail;
  }


  public ChannelPartnerOrder giftMessage(String giftMessage) {
    
    this.giftMessage = giftMessage;
    return this;
  }

   /**
   * Message to the gift recipient
   * @return giftMessage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Message to the gift recipient")

  public String getGiftMessage() {
    return giftMessage;
  }


  public void setGiftMessage(String giftMessage) {
    this.giftMessage = giftMessage;
  }


  public ChannelPartnerOrder hostedFieldsCardToken(String hostedFieldsCardToken) {
    
    this.hostedFieldsCardToken = hostedFieldsCardToken;
    return this;
  }

   /**
   * The token provided by UltraCart hosted fields when a credit card number is uploaded into the system.  This is the only way to provide a credit card number.
   * @return hostedFieldsCardToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The token provided by UltraCart hosted fields when a credit card number is uploaded into the system.  This is the only way to provide a credit card number.")

  public String getHostedFieldsCardToken() {
    return hostedFieldsCardToken;
  }


  public void setHostedFieldsCardToken(String hostedFieldsCardToken) {
    this.hostedFieldsCardToken = hostedFieldsCardToken;
  }


  public ChannelPartnerOrder hostedFieldsCvvToken(String hostedFieldsCvvToken) {
    
    this.hostedFieldsCvvToken = hostedFieldsCvvToken;
    return this;
  }

   /**
   * The token provided by UltraCart hosted fields when a credit card cvv is uploaded into the system.  This is the only way to provide a cvv number.
   * @return hostedFieldsCvvToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The token provided by UltraCart hosted fields when a credit card cvv is uploaded into the system.  This is the only way to provide a cvv number.")

  public String getHostedFieldsCvvToken() {
    return hostedFieldsCvvToken;
  }


  public void setHostedFieldsCvvToken(String hostedFieldsCvvToken) {
    this.hostedFieldsCvvToken = hostedFieldsCvvToken;
  }


  public ChannelPartnerOrder insuranceApplicationId(String insuranceApplicationId) {
    
    this.insuranceApplicationId = insuranceApplicationId;
    return this;
  }

   /**
   * Insurance application id
   * @return insuranceApplicationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Insurance application id")

  public String getInsuranceApplicationId() {
    return insuranceApplicationId;
  }


  public void setInsuranceApplicationId(String insuranceApplicationId) {
    this.insuranceApplicationId = insuranceApplicationId;
  }


  public ChannelPartnerOrder insuranceClaimId(String insuranceClaimId) {
    
    this.insuranceClaimId = insuranceClaimId;
    return this;
  }

   /**
   * Insurance claim id
   * @return insuranceClaimId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Insurance claim id")

  public String getInsuranceClaimId() {
    return insuranceClaimId;
  }


  public void setInsuranceClaimId(String insuranceClaimId) {
    this.insuranceClaimId = insuranceClaimId;
  }


  public ChannelPartnerOrder ipAddress(String ipAddress) {
    
    this.ipAddress = ipAddress;
    return this;
  }

   /**
   * IP Address of the customer
   * @return ipAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "IP Address of the customer")

  public String getIpAddress() {
    return ipAddress;
  }


  public void setIpAddress(String ipAddress) {
    this.ipAddress = ipAddress;
  }


  public ChannelPartnerOrder items(List<ChannelPartnerOrderItem> items) {
    
    this.items = items;
    return this;
  }

  public ChannelPartnerOrder addItemsItem(ChannelPartnerOrderItem itemsItem) {
    if (this.items == null) {
      this.items = new ArrayList<>();
    }
    this.items.add(itemsItem);
    return this;
  }

   /**
   * Items
   * @return items
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Items")

  public List<ChannelPartnerOrderItem> getItems() {
    return items;
  }


  public void setItems(List<ChannelPartnerOrderItem> items) {
    this.items = items;
  }


  public ChannelPartnerOrder leastCostRoute(Boolean leastCostRoute) {
    
    this.leastCostRoute = leastCostRoute;
    return this;
  }

   /**
   * If true the least expensive shipping method is automatically chosen during the order import
   * @return leastCostRoute
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If true the least expensive shipping method is automatically chosen during the order import")

  public Boolean getLeastCostRoute() {
    return leastCostRoute;
  }


  public void setLeastCostRoute(Boolean leastCostRoute) {
    this.leastCostRoute = leastCostRoute;
  }


  public ChannelPartnerOrder leastCostRouteShippingMethods(List<String> leastCostRouteShippingMethods) {
    
    this.leastCostRouteShippingMethods = leastCostRouteShippingMethods;
    return this;
  }

  public ChannelPartnerOrder addLeastCostRouteShippingMethodsItem(String leastCostRouteShippingMethodsItem) {
    if (this.leastCostRouteShippingMethods == null) {
      this.leastCostRouteShippingMethods = new ArrayList<>();
    }
    this.leastCostRouteShippingMethods.add(leastCostRouteShippingMethodsItem);
    return this;
  }

   /**
   * An optional array of shipping methods to restict choices if least_cost_route is true
   * @return leastCostRouteShippingMethods
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An optional array of shipping methods to restict choices if least_cost_route is true")

  public List<String> getLeastCostRouteShippingMethods() {
    return leastCostRouteShippingMethods;
  }


  public void setLeastCostRouteShippingMethods(List<String> leastCostRouteShippingMethods) {
    this.leastCostRouteShippingMethods = leastCostRouteShippingMethods;
  }


  public ChannelPartnerOrder mailingListOptIn(Boolean mailingListOptIn) {
    
    this.mailingListOptIn = mailingListOptIn;
    return this;
  }

   /**
   * If true the customer is subscribed to any configured mailing lists
   * @return mailingListOptIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If true the customer is subscribed to any configured mailing lists")

  public Boolean getMailingListOptIn() {
    return mailingListOptIn;
  }


  public void setMailingListOptIn(Boolean mailingListOptIn) {
    this.mailingListOptIn = mailingListOptIn;
  }


  public ChannelPartnerOrder noRealtimePaymentProcessing(Boolean noRealtimePaymentProcessing) {
    
    this.noRealtimePaymentProcessing = noRealtimePaymentProcessing;
    return this;
  }

   /**
   * If true no payment processing is done and the order is placed into Accounts Receivable
   * @return noRealtimePaymentProcessing
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If true no payment processing is done and the order is placed into Accounts Receivable")

  public Boolean getNoRealtimePaymentProcessing() {
    return noRealtimePaymentProcessing;
  }


  public void setNoRealtimePaymentProcessing(Boolean noRealtimePaymentProcessing) {
    this.noRealtimePaymentProcessing = noRealtimePaymentProcessing;
  }


  public ChannelPartnerOrder paymentMethod(PaymentMethodEnum paymentMethod) {
    
    this.paymentMethod = paymentMethod;
    return this;
  }

   /**
   * Payment method
   * @return paymentMethod
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Payment method")

  public PaymentMethodEnum getPaymentMethod() {
    return paymentMethod;
  }


  public void setPaymentMethod(PaymentMethodEnum paymentMethod) {
    this.paymentMethod = paymentMethod;
  }


  public ChannelPartnerOrder purchaseOrderNumber(String purchaseOrderNumber) {
    
    this.purchaseOrderNumber = purchaseOrderNumber;
    return this;
  }

   /**
   * Purchase order number
   * @return purchaseOrderNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Purchase order number")

  public String getPurchaseOrderNumber() {
    return purchaseOrderNumber;
  }


  public void setPurchaseOrderNumber(String purchaseOrderNumber) {
    this.purchaseOrderNumber = purchaseOrderNumber;
  }


  public ChannelPartnerOrder rotatingTransactionGatewayCode(String rotatingTransactionGatewayCode) {
    
    this.rotatingTransactionGatewayCode = rotatingTransactionGatewayCode;
    return this;
  }

   /**
   * The rotating transaction gateway code for the gateway used to charge this order
   * @return rotatingTransactionGatewayCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The rotating transaction gateway code for the gateway used to charge this order")

  public String getRotatingTransactionGatewayCode() {
    return rotatingTransactionGatewayCode;
  }


  public void setRotatingTransactionGatewayCode(String rotatingTransactionGatewayCode) {
    this.rotatingTransactionGatewayCode = rotatingTransactionGatewayCode;
  }


  public ChannelPartnerOrder salesRepCode(String salesRepCode) {
    
    this.salesRepCode = salesRepCode;
    return this;
  }

   /**
   * Sales rep code
   * @return salesRepCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Sales rep code")

  public String getSalesRepCode() {
    return salesRepCode;
  }


  public void setSalesRepCode(String salesRepCode) {
    this.salesRepCode = salesRepCode;
  }


  public ChannelPartnerOrder screenBrandingThemeCode(String screenBrandingThemeCode) {
    
    this.screenBrandingThemeCode = screenBrandingThemeCode;
    return this;
  }

   /**
   * Screen branding theme code
   * @return screenBrandingThemeCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Screen branding theme code")

  public String getScreenBrandingThemeCode() {
    return screenBrandingThemeCode;
  }


  public void setScreenBrandingThemeCode(String screenBrandingThemeCode) {
    this.screenBrandingThemeCode = screenBrandingThemeCode;
  }


  public ChannelPartnerOrder shipOnDate(String shipOnDate) {
    
    this.shipOnDate = shipOnDate;
    return this;
  }

   /**
   * Date the customer is requesting that the order ship on.  Typically used for perishable product delivery.
   * @return shipOnDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Date the customer is requesting that the order ship on.  Typically used for perishable product delivery.")

  public String getShipOnDate() {
    return shipOnDate;
  }


  public void setShipOnDate(String shipOnDate) {
    this.shipOnDate = shipOnDate;
  }


  public ChannelPartnerOrder shipToResidential(Boolean shipToResidential) {
    
    this.shipToResidential = shipToResidential;
    return this;
  }

   /**
   * True if the shipping adress is residential.  Effects the methods that are available to the customer as well as the price of the shipping method.
   * @return shipToResidential
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if the shipping adress is residential.  Effects the methods that are available to the customer as well as the price of the shipping method.")

  public Boolean getShipToResidential() {
    return shipToResidential;
  }


  public void setShipToResidential(Boolean shipToResidential) {
    this.shipToResidential = shipToResidential;
  }


  public ChannelPartnerOrder shippingMethod(String shippingMethod) {
    
    this.shippingMethod = shippingMethod;
    return this;
  }

   /**
   * Shipping method
   * @return shippingMethod
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Shipping method")

  public String getShippingMethod() {
    return shippingMethod;
  }


  public void setShippingMethod(String shippingMethod) {
    this.shippingMethod = shippingMethod;
  }


  public ChannelPartnerOrder shiptoAddress1(String shiptoAddress1) {
    
    this.shiptoAddress1 = shiptoAddress1;
    return this;
  }

   /**
   * Shipping Address line 1
   * @return shiptoAddress1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Shipping Address line 1")

  public String getShiptoAddress1() {
    return shiptoAddress1;
  }


  public void setShiptoAddress1(String shiptoAddress1) {
    this.shiptoAddress1 = shiptoAddress1;
  }


  public ChannelPartnerOrder shiptoAddress2(String shiptoAddress2) {
    
    this.shiptoAddress2 = shiptoAddress2;
    return this;
  }

   /**
   * Shipping Address line 2
   * @return shiptoAddress2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Shipping Address line 2")

  public String getShiptoAddress2() {
    return shiptoAddress2;
  }


  public void setShiptoAddress2(String shiptoAddress2) {
    this.shiptoAddress2 = shiptoAddress2;
  }


  public ChannelPartnerOrder shiptoCity(String shiptoCity) {
    
    this.shiptoCity = shiptoCity;
    return this;
  }

   /**
   * Shipping City
   * @return shiptoCity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Shipping City")

  public String getShiptoCity() {
    return shiptoCity;
  }


  public void setShiptoCity(String shiptoCity) {
    this.shiptoCity = shiptoCity;
  }


  public ChannelPartnerOrder shiptoCompany(String shiptoCompany) {
    
    this.shiptoCompany = shiptoCompany;
    return this;
  }

   /**
   * Shipping Company
   * @return shiptoCompany
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Shipping Company")

  public String getShiptoCompany() {
    return shiptoCompany;
  }


  public void setShiptoCompany(String shiptoCompany) {
    this.shiptoCompany = shiptoCompany;
  }


  public ChannelPartnerOrder shiptoCountryCode(String shiptoCountryCode) {
    
    this.shiptoCountryCode = shiptoCountryCode;
    return this;
  }

   /**
   * Shipping ISO-3166 two letter country code
   * @return shiptoCountryCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Shipping ISO-3166 two letter country code")

  public String getShiptoCountryCode() {
    return shiptoCountryCode;
  }


  public void setShiptoCountryCode(String shiptoCountryCode) {
    this.shiptoCountryCode = shiptoCountryCode;
  }


  public ChannelPartnerOrder shiptoDayPhone(String shiptoDayPhone) {
    
    this.shiptoDayPhone = shiptoDayPhone;
    return this;
  }

   /**
   * Shipping Day phone
   * @return shiptoDayPhone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Shipping Day phone")

  public String getShiptoDayPhone() {
    return shiptoDayPhone;
  }


  public void setShiptoDayPhone(String shiptoDayPhone) {
    this.shiptoDayPhone = shiptoDayPhone;
  }


  public ChannelPartnerOrder shiptoEveningPhone(String shiptoEveningPhone) {
    
    this.shiptoEveningPhone = shiptoEveningPhone;
    return this;
  }

   /**
   * Shipping Evening phone
   * @return shiptoEveningPhone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Shipping Evening phone")

  public String getShiptoEveningPhone() {
    return shiptoEveningPhone;
  }


  public void setShiptoEveningPhone(String shiptoEveningPhone) {
    this.shiptoEveningPhone = shiptoEveningPhone;
  }


  public ChannelPartnerOrder shiptoFirstName(String shiptoFirstName) {
    
    this.shiptoFirstName = shiptoFirstName;
    return this;
  }

   /**
   * Shipping First name
   * @return shiptoFirstName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Shipping First name")

  public String getShiptoFirstName() {
    return shiptoFirstName;
  }


  public void setShiptoFirstName(String shiptoFirstName) {
    this.shiptoFirstName = shiptoFirstName;
  }


  public ChannelPartnerOrder shiptoLastName(String shiptoLastName) {
    
    this.shiptoLastName = shiptoLastName;
    return this;
  }

   /**
   * Shipping Last name
   * @return shiptoLastName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Shipping Last name")

  public String getShiptoLastName() {
    return shiptoLastName;
  }


  public void setShiptoLastName(String shiptoLastName) {
    this.shiptoLastName = shiptoLastName;
  }


  public ChannelPartnerOrder shiptoPostalCode(String shiptoPostalCode) {
    
    this.shiptoPostalCode = shiptoPostalCode;
    return this;
  }

   /**
   * Shipping Postal code
   * @return shiptoPostalCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Shipping Postal code")

  public String getShiptoPostalCode() {
    return shiptoPostalCode;
  }


  public void setShiptoPostalCode(String shiptoPostalCode) {
    this.shiptoPostalCode = shiptoPostalCode;
  }


  public ChannelPartnerOrder shiptoStateRegion(String shiptoStateRegion) {
    
    this.shiptoStateRegion = shiptoStateRegion;
    return this;
  }

   /**
   * Shipping State for United States otherwise region or province for other countries
   * @return shiptoStateRegion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Shipping State for United States otherwise region or province for other countries")

  public String getShiptoStateRegion() {
    return shiptoStateRegion;
  }


  public void setShiptoStateRegion(String shiptoStateRegion) {
    this.shiptoStateRegion = shiptoStateRegion;
  }


  public ChannelPartnerOrder shiptoTitle(String shiptoTitle) {
    
    this.shiptoTitle = shiptoTitle;
    return this;
  }

   /**
   * Shipping Title
   * @return shiptoTitle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Shipping Title")

  public String getShiptoTitle() {
    return shiptoTitle;
  }


  public void setShiptoTitle(String shiptoTitle) {
    this.shiptoTitle = shiptoTitle;
  }


  public ChannelPartnerOrder skipPaymentProcessing(Boolean skipPaymentProcessing) {
    
    this.skipPaymentProcessing = skipPaymentProcessing;
    return this;
  }

   /**
   * If true the order is placed directly into the shipping department
   * @return skipPaymentProcessing
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If true the order is placed directly into the shipping department")

  public Boolean getSkipPaymentProcessing() {
    return skipPaymentProcessing;
  }


  public void setSkipPaymentProcessing(Boolean skipPaymentProcessing) {
    this.skipPaymentProcessing = skipPaymentProcessing;
  }


  public ChannelPartnerOrder specialInstructions(String specialInstructions) {
    
    this.specialInstructions = specialInstructions;
    return this;
  }

   /**
   * Special instructions from the customer regarding shipping
   * @return specialInstructions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Special instructions from the customer regarding shipping")

  public String getSpecialInstructions() {
    return specialInstructions;
  }


  public void setSpecialInstructions(String specialInstructions) {
    this.specialInstructions = specialInstructions;
  }


  public ChannelPartnerOrder storeCompleted(Boolean storeCompleted) {
    
    this.storeCompleted = storeCompleted;
    return this;
  }

   /**
   * If true the order bypasses shipping and is marked completed
   * @return storeCompleted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If true the order bypasses shipping and is marked completed")

  public Boolean getStoreCompleted() {
    return storeCompleted;
  }


  public void setStoreCompleted(Boolean storeCompleted) {
    this.storeCompleted = storeCompleted;
  }


  public ChannelPartnerOrder storeIfPaymentDeclines(Boolean storeIfPaymentDeclines) {
    
    this.storeIfPaymentDeclines = storeIfPaymentDeclines;
    return this;
  }

   /**
   * If true any failed payments are placed into Accounts Receivable.  If false any failed payments result in a rejected order resulting in errors thrown during the insert routine
   * @return storeIfPaymentDeclines
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If true any failed payments are placed into Accounts Receivable.  If false any failed payments result in a rejected order resulting in errors thrown during the insert routine")

  public Boolean getStoreIfPaymentDeclines() {
    return storeIfPaymentDeclines;
  }


  public void setStoreIfPaymentDeclines(Boolean storeIfPaymentDeclines) {
    this.storeIfPaymentDeclines = storeIfPaymentDeclines;
  }


  public ChannelPartnerOrder storefrontHostName(String storefrontHostName) {
    
    this.storefrontHostName = storefrontHostName;
    return this;
  }

   /**
   * StoreFront host name associated with the order
   * @return storefrontHostName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "StoreFront host name associated with the order")

  public String getStorefrontHostName() {
    return storefrontHostName;
  }


  public void setStorefrontHostName(String storefrontHostName) {
    this.storefrontHostName = storefrontHostName;
  }


  public ChannelPartnerOrder taxCounty(String taxCounty) {
    
    this.taxCounty = taxCounty;
    return this;
  }

   /**
   * The optional shipping county used to determine exact taxes
   * @return taxCounty
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The optional shipping county used to determine exact taxes")

  public String getTaxCounty() {
    return taxCounty;
  }


  public void setTaxCounty(String taxCounty) {
    this.taxCounty = taxCounty;
  }


  public ChannelPartnerOrder taxExempt(Boolean taxExempt) {
    
    this.taxExempt = taxExempt;
    return this;
  }

   /**
   * If true this order is marked as being tax exempt
   * @return taxExempt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If true this order is marked as being tax exempt")

  public Boolean getTaxExempt() {
    return taxExempt;
  }


  public void setTaxExempt(Boolean taxExempt) {
    this.taxExempt = taxExempt;
  }


  public ChannelPartnerOrder transaction(ChannelPartnerOrderTransaction transaction) {
    
    this.transaction = transaction;
    return this;
  }

   /**
   * Get transaction
   * @return transaction
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ChannelPartnerOrderTransaction getTransaction() {
    return transaction;
  }


  public void setTransaction(ChannelPartnerOrderTransaction transaction) {
    this.transaction = transaction;
  }


  public ChannelPartnerOrder treatWarningsAsErrors(Boolean treatWarningsAsErrors) {
    
    this.treatWarningsAsErrors = treatWarningsAsErrors;
    return this;
  }

   /**
   * If true all warnings are considered errors, this is true by default
   * @return treatWarningsAsErrors
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If true all warnings are considered errors, this is true by default")

  public Boolean getTreatWarningsAsErrors() {
    return treatWarningsAsErrors;
  }


  public void setTreatWarningsAsErrors(Boolean treatWarningsAsErrors) {
    this.treatWarningsAsErrors = treatWarningsAsErrors;
  }


  public ChannelPartnerOrder usePriorPaymentInformationFromOrderId(String usePriorPaymentInformationFromOrderId) {
    
    this.usePriorPaymentInformationFromOrderId = usePriorPaymentInformationFromOrderId;
    return this;
  }

   /**
   * An Order Id from a prior purchase of this customer which is used to retrieve vaulted payment information in order to pay for this current order.
   * @return usePriorPaymentInformationFromOrderId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An Order Id from a prior purchase of this customer which is used to retrieve vaulted payment information in order to pay for this current order.")

  public String getUsePriorPaymentInformationFromOrderId() {
    return usePriorPaymentInformationFromOrderId;
  }


  public void setUsePriorPaymentInformationFromOrderId(String usePriorPaymentInformationFromOrderId) {
    this.usePriorPaymentInformationFromOrderId = usePriorPaymentInformationFromOrderId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChannelPartnerOrder channelPartnerOrder = (ChannelPartnerOrder) o;
    return Objects.equals(this.advertisingSource, channelPartnerOrder.advertisingSource) &&
        Objects.equals(this.affiliateId, channelPartnerOrder.affiliateId) &&
        Objects.equals(this.affiliateSubId, channelPartnerOrder.affiliateSubId) &&
        Objects.equals(this.arbitraryShippingHandlingTotal, channelPartnerOrder.arbitraryShippingHandlingTotal) &&
        Objects.equals(this.arbitraryTax, channelPartnerOrder.arbitraryTax) &&
        Objects.equals(this.arbitraryTaxRate, channelPartnerOrder.arbitraryTaxRate) &&
        Objects.equals(this.arbitraryTaxableSubtotal, channelPartnerOrder.arbitraryTaxableSubtotal) &&
        Objects.equals(this.associateWithCustomerProfileIfPresent, channelPartnerOrder.associateWithCustomerProfileIfPresent) &&
        Objects.equals(this.autoApprovePurchaseOrder, channelPartnerOrder.autoApprovePurchaseOrder) &&
        Objects.equals(this.billtoAddress1, channelPartnerOrder.billtoAddress1) &&
        Objects.equals(this.billtoAddress2, channelPartnerOrder.billtoAddress2) &&
        Objects.equals(this.billtoCity, channelPartnerOrder.billtoCity) &&
        Objects.equals(this.billtoCompany, channelPartnerOrder.billtoCompany) &&
        Objects.equals(this.billtoCountryCode, channelPartnerOrder.billtoCountryCode) &&
        Objects.equals(this.billtoDayPhone, channelPartnerOrder.billtoDayPhone) &&
        Objects.equals(this.billtoEveningPhone, channelPartnerOrder.billtoEveningPhone) &&
        Objects.equals(this.billtoFirstName, channelPartnerOrder.billtoFirstName) &&
        Objects.equals(this.billtoLastName, channelPartnerOrder.billtoLastName) &&
        Objects.equals(this.billtoPostalCode, channelPartnerOrder.billtoPostalCode) &&
        Objects.equals(this.billtoStateRegion, channelPartnerOrder.billtoStateRegion) &&
        Objects.equals(this.billtoTitle, channelPartnerOrder.billtoTitle) &&
        Objects.equals(this.ccEmail, channelPartnerOrder.ccEmail) &&
        Objects.equals(this.channelPartnerOrderId, channelPartnerOrder.channelPartnerOrderId) &&
        Objects.equals(this.considerRecurring, channelPartnerOrder.considerRecurring) &&
        Objects.equals(this.coupons, channelPartnerOrder.coupons) &&
        Objects.equals(this.creditCardAuthorizationAmount, channelPartnerOrder.creditCardAuthorizationAmount) &&
        Objects.equals(this.creditCardAuthorizationDts, channelPartnerOrder.creditCardAuthorizationDts) &&
        Objects.equals(this.creditCardAuthorizationNumber, channelPartnerOrder.creditCardAuthorizationNumber) &&
        Objects.equals(this.creditCardExpirationMonth, channelPartnerOrder.creditCardExpirationMonth) &&
        Objects.equals(this.creditCardExpirationYear, channelPartnerOrder.creditCardExpirationYear) &&
        Objects.equals(this.creditCardType, channelPartnerOrder.creditCardType) &&
        Objects.equals(this.customField1, channelPartnerOrder.customField1) &&
        Objects.equals(this.customField2, channelPartnerOrder.customField2) &&
        Objects.equals(this.customField3, channelPartnerOrder.customField3) &&
        Objects.equals(this.customField4, channelPartnerOrder.customField4) &&
        Objects.equals(this.customField5, channelPartnerOrder.customField5) &&
        Objects.equals(this.customField6, channelPartnerOrder.customField6) &&
        Objects.equals(this.customField7, channelPartnerOrder.customField7) &&
        Objects.equals(this.deliveryDate, channelPartnerOrder.deliveryDate) &&
        Objects.equals(this.echeckBankAbaCode, channelPartnerOrder.echeckBankAbaCode) &&
        Objects.equals(this.echeckBankAccountName, channelPartnerOrder.echeckBankAccountName) &&
        Objects.equals(this.echeckBankAccountNumber, channelPartnerOrder.echeckBankAccountNumber) &&
        Objects.equals(this.echeckBankAccountType, channelPartnerOrder.echeckBankAccountType) &&
        Objects.equals(this.echeckBankName, channelPartnerOrder.echeckBankName) &&
        Objects.equals(this.echeckBankOwnerType, channelPartnerOrder.echeckBankOwnerType) &&
        Objects.equals(this.echeckCustomerTaxId, channelPartnerOrder.echeckCustomerTaxId) &&
        Objects.equals(this.echeckDriversLicenseDob, channelPartnerOrder.echeckDriversLicenseDob) &&
        Objects.equals(this.echeckDriversLicenseNumber, channelPartnerOrder.echeckDriversLicenseNumber) &&
        Objects.equals(this.echeckDriversLicenseState, channelPartnerOrder.echeckDriversLicenseState) &&
        Objects.equals(this.email, channelPartnerOrder.email) &&
        Objects.equals(this.gift, channelPartnerOrder.gift) &&
        Objects.equals(this.giftEmail, channelPartnerOrder.giftEmail) &&
        Objects.equals(this.giftMessage, channelPartnerOrder.giftMessage) &&
        Objects.equals(this.hostedFieldsCardToken, channelPartnerOrder.hostedFieldsCardToken) &&
        Objects.equals(this.hostedFieldsCvvToken, channelPartnerOrder.hostedFieldsCvvToken) &&
        Objects.equals(this.insuranceApplicationId, channelPartnerOrder.insuranceApplicationId) &&
        Objects.equals(this.insuranceClaimId, channelPartnerOrder.insuranceClaimId) &&
        Objects.equals(this.ipAddress, channelPartnerOrder.ipAddress) &&
        Objects.equals(this.items, channelPartnerOrder.items) &&
        Objects.equals(this.leastCostRoute, channelPartnerOrder.leastCostRoute) &&
        Objects.equals(this.leastCostRouteShippingMethods, channelPartnerOrder.leastCostRouteShippingMethods) &&
        Objects.equals(this.mailingListOptIn, channelPartnerOrder.mailingListOptIn) &&
        Objects.equals(this.noRealtimePaymentProcessing, channelPartnerOrder.noRealtimePaymentProcessing) &&
        Objects.equals(this.paymentMethod, channelPartnerOrder.paymentMethod) &&
        Objects.equals(this.purchaseOrderNumber, channelPartnerOrder.purchaseOrderNumber) &&
        Objects.equals(this.rotatingTransactionGatewayCode, channelPartnerOrder.rotatingTransactionGatewayCode) &&
        Objects.equals(this.salesRepCode, channelPartnerOrder.salesRepCode) &&
        Objects.equals(this.screenBrandingThemeCode, channelPartnerOrder.screenBrandingThemeCode) &&
        Objects.equals(this.shipOnDate, channelPartnerOrder.shipOnDate) &&
        Objects.equals(this.shipToResidential, channelPartnerOrder.shipToResidential) &&
        Objects.equals(this.shippingMethod, channelPartnerOrder.shippingMethod) &&
        Objects.equals(this.shiptoAddress1, channelPartnerOrder.shiptoAddress1) &&
        Objects.equals(this.shiptoAddress2, channelPartnerOrder.shiptoAddress2) &&
        Objects.equals(this.shiptoCity, channelPartnerOrder.shiptoCity) &&
        Objects.equals(this.shiptoCompany, channelPartnerOrder.shiptoCompany) &&
        Objects.equals(this.shiptoCountryCode, channelPartnerOrder.shiptoCountryCode) &&
        Objects.equals(this.shiptoDayPhone, channelPartnerOrder.shiptoDayPhone) &&
        Objects.equals(this.shiptoEveningPhone, channelPartnerOrder.shiptoEveningPhone) &&
        Objects.equals(this.shiptoFirstName, channelPartnerOrder.shiptoFirstName) &&
        Objects.equals(this.shiptoLastName, channelPartnerOrder.shiptoLastName) &&
        Objects.equals(this.shiptoPostalCode, channelPartnerOrder.shiptoPostalCode) &&
        Objects.equals(this.shiptoStateRegion, channelPartnerOrder.shiptoStateRegion) &&
        Objects.equals(this.shiptoTitle, channelPartnerOrder.shiptoTitle) &&
        Objects.equals(this.skipPaymentProcessing, channelPartnerOrder.skipPaymentProcessing) &&
        Objects.equals(this.specialInstructions, channelPartnerOrder.specialInstructions) &&
        Objects.equals(this.storeCompleted, channelPartnerOrder.storeCompleted) &&
        Objects.equals(this.storeIfPaymentDeclines, channelPartnerOrder.storeIfPaymentDeclines) &&
        Objects.equals(this.storefrontHostName, channelPartnerOrder.storefrontHostName) &&
        Objects.equals(this.taxCounty, channelPartnerOrder.taxCounty) &&
        Objects.equals(this.taxExempt, channelPartnerOrder.taxExempt) &&
        Objects.equals(this.transaction, channelPartnerOrder.transaction) &&
        Objects.equals(this.treatWarningsAsErrors, channelPartnerOrder.treatWarningsAsErrors) &&
        Objects.equals(this.usePriorPaymentInformationFromOrderId, channelPartnerOrder.usePriorPaymentInformationFromOrderId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(advertisingSource, affiliateId, affiliateSubId, arbitraryShippingHandlingTotal, arbitraryTax, arbitraryTaxRate, arbitraryTaxableSubtotal, associateWithCustomerProfileIfPresent, autoApprovePurchaseOrder, billtoAddress1, billtoAddress2, billtoCity, billtoCompany, billtoCountryCode, billtoDayPhone, billtoEveningPhone, billtoFirstName, billtoLastName, billtoPostalCode, billtoStateRegion, billtoTitle, ccEmail, channelPartnerOrderId, considerRecurring, coupons, creditCardAuthorizationAmount, creditCardAuthorizationDts, creditCardAuthorizationNumber, creditCardExpirationMonth, creditCardExpirationYear, creditCardType, customField1, customField2, customField3, customField4, customField5, customField6, customField7, deliveryDate, echeckBankAbaCode, echeckBankAccountName, echeckBankAccountNumber, echeckBankAccountType, echeckBankName, echeckBankOwnerType, echeckCustomerTaxId, echeckDriversLicenseDob, echeckDriversLicenseNumber, echeckDriversLicenseState, email, gift, giftEmail, giftMessage, hostedFieldsCardToken, hostedFieldsCvvToken, insuranceApplicationId, insuranceClaimId, ipAddress, items, leastCostRoute, leastCostRouteShippingMethods, mailingListOptIn, noRealtimePaymentProcessing, paymentMethod, purchaseOrderNumber, rotatingTransactionGatewayCode, salesRepCode, screenBrandingThemeCode, shipOnDate, shipToResidential, shippingMethod, shiptoAddress1, shiptoAddress2, shiptoCity, shiptoCompany, shiptoCountryCode, shiptoDayPhone, shiptoEveningPhone, shiptoFirstName, shiptoLastName, shiptoPostalCode, shiptoStateRegion, shiptoTitle, skipPaymentProcessing, specialInstructions, storeCompleted, storeIfPaymentDeclines, storefrontHostName, taxCounty, taxExempt, transaction, treatWarningsAsErrors, usePriorPaymentInformationFromOrderId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChannelPartnerOrder {\n");
    sb.append("    advertisingSource: ").append(toIndentedString(advertisingSource)).append("\n");
    sb.append("    affiliateId: ").append(toIndentedString(affiliateId)).append("\n");
    sb.append("    affiliateSubId: ").append(toIndentedString(affiliateSubId)).append("\n");
    sb.append("    arbitraryShippingHandlingTotal: ").append(toIndentedString(arbitraryShippingHandlingTotal)).append("\n");
    sb.append("    arbitraryTax: ").append(toIndentedString(arbitraryTax)).append("\n");
    sb.append("    arbitraryTaxRate: ").append(toIndentedString(arbitraryTaxRate)).append("\n");
    sb.append("    arbitraryTaxableSubtotal: ").append(toIndentedString(arbitraryTaxableSubtotal)).append("\n");
    sb.append("    associateWithCustomerProfileIfPresent: ").append(toIndentedString(associateWithCustomerProfileIfPresent)).append("\n");
    sb.append("    autoApprovePurchaseOrder: ").append(toIndentedString(autoApprovePurchaseOrder)).append("\n");
    sb.append("    billtoAddress1: ").append(toIndentedString(billtoAddress1)).append("\n");
    sb.append("    billtoAddress2: ").append(toIndentedString(billtoAddress2)).append("\n");
    sb.append("    billtoCity: ").append(toIndentedString(billtoCity)).append("\n");
    sb.append("    billtoCompany: ").append(toIndentedString(billtoCompany)).append("\n");
    sb.append("    billtoCountryCode: ").append(toIndentedString(billtoCountryCode)).append("\n");
    sb.append("    billtoDayPhone: ").append(toIndentedString(billtoDayPhone)).append("\n");
    sb.append("    billtoEveningPhone: ").append(toIndentedString(billtoEveningPhone)).append("\n");
    sb.append("    billtoFirstName: ").append(toIndentedString(billtoFirstName)).append("\n");
    sb.append("    billtoLastName: ").append(toIndentedString(billtoLastName)).append("\n");
    sb.append("    billtoPostalCode: ").append(toIndentedString(billtoPostalCode)).append("\n");
    sb.append("    billtoStateRegion: ").append(toIndentedString(billtoStateRegion)).append("\n");
    sb.append("    billtoTitle: ").append(toIndentedString(billtoTitle)).append("\n");
    sb.append("    ccEmail: ").append(toIndentedString(ccEmail)).append("\n");
    sb.append("    channelPartnerOrderId: ").append(toIndentedString(channelPartnerOrderId)).append("\n");
    sb.append("    considerRecurring: ").append(toIndentedString(considerRecurring)).append("\n");
    sb.append("    coupons: ").append(toIndentedString(coupons)).append("\n");
    sb.append("    creditCardAuthorizationAmount: ").append(toIndentedString(creditCardAuthorizationAmount)).append("\n");
    sb.append("    creditCardAuthorizationDts: ").append(toIndentedString(creditCardAuthorizationDts)).append("\n");
    sb.append("    creditCardAuthorizationNumber: ").append(toIndentedString(creditCardAuthorizationNumber)).append("\n");
    sb.append("    creditCardExpirationMonth: ").append(toIndentedString(creditCardExpirationMonth)).append("\n");
    sb.append("    creditCardExpirationYear: ").append(toIndentedString(creditCardExpirationYear)).append("\n");
    sb.append("    creditCardType: ").append(toIndentedString(creditCardType)).append("\n");
    sb.append("    customField1: ").append(toIndentedString(customField1)).append("\n");
    sb.append("    customField2: ").append(toIndentedString(customField2)).append("\n");
    sb.append("    customField3: ").append(toIndentedString(customField3)).append("\n");
    sb.append("    customField4: ").append(toIndentedString(customField4)).append("\n");
    sb.append("    customField5: ").append(toIndentedString(customField5)).append("\n");
    sb.append("    customField6: ").append(toIndentedString(customField6)).append("\n");
    sb.append("    customField7: ").append(toIndentedString(customField7)).append("\n");
    sb.append("    deliveryDate: ").append(toIndentedString(deliveryDate)).append("\n");
    sb.append("    echeckBankAbaCode: ").append(toIndentedString(echeckBankAbaCode)).append("\n");
    sb.append("    echeckBankAccountName: ").append(toIndentedString(echeckBankAccountName)).append("\n");
    sb.append("    echeckBankAccountNumber: ").append(toIndentedString(echeckBankAccountNumber)).append("\n");
    sb.append("    echeckBankAccountType: ").append(toIndentedString(echeckBankAccountType)).append("\n");
    sb.append("    echeckBankName: ").append(toIndentedString(echeckBankName)).append("\n");
    sb.append("    echeckBankOwnerType: ").append(toIndentedString(echeckBankOwnerType)).append("\n");
    sb.append("    echeckCustomerTaxId: ").append(toIndentedString(echeckCustomerTaxId)).append("\n");
    sb.append("    echeckDriversLicenseDob: ").append(toIndentedString(echeckDriversLicenseDob)).append("\n");
    sb.append("    echeckDriversLicenseNumber: ").append(toIndentedString(echeckDriversLicenseNumber)).append("\n");
    sb.append("    echeckDriversLicenseState: ").append(toIndentedString(echeckDriversLicenseState)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    gift: ").append(toIndentedString(gift)).append("\n");
    sb.append("    giftEmail: ").append(toIndentedString(giftEmail)).append("\n");
    sb.append("    giftMessage: ").append(toIndentedString(giftMessage)).append("\n");
    sb.append("    hostedFieldsCardToken: ").append(toIndentedString(hostedFieldsCardToken)).append("\n");
    sb.append("    hostedFieldsCvvToken: ").append(toIndentedString(hostedFieldsCvvToken)).append("\n");
    sb.append("    insuranceApplicationId: ").append(toIndentedString(insuranceApplicationId)).append("\n");
    sb.append("    insuranceClaimId: ").append(toIndentedString(insuranceClaimId)).append("\n");
    sb.append("    ipAddress: ").append(toIndentedString(ipAddress)).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("    leastCostRoute: ").append(toIndentedString(leastCostRoute)).append("\n");
    sb.append("    leastCostRouteShippingMethods: ").append(toIndentedString(leastCostRouteShippingMethods)).append("\n");
    sb.append("    mailingListOptIn: ").append(toIndentedString(mailingListOptIn)).append("\n");
    sb.append("    noRealtimePaymentProcessing: ").append(toIndentedString(noRealtimePaymentProcessing)).append("\n");
    sb.append("    paymentMethod: ").append(toIndentedString(paymentMethod)).append("\n");
    sb.append("    purchaseOrderNumber: ").append(toIndentedString(purchaseOrderNumber)).append("\n");
    sb.append("    rotatingTransactionGatewayCode: ").append(toIndentedString(rotatingTransactionGatewayCode)).append("\n");
    sb.append("    salesRepCode: ").append(toIndentedString(salesRepCode)).append("\n");
    sb.append("    screenBrandingThemeCode: ").append(toIndentedString(screenBrandingThemeCode)).append("\n");
    sb.append("    shipOnDate: ").append(toIndentedString(shipOnDate)).append("\n");
    sb.append("    shipToResidential: ").append(toIndentedString(shipToResidential)).append("\n");
    sb.append("    shippingMethod: ").append(toIndentedString(shippingMethod)).append("\n");
    sb.append("    shiptoAddress1: ").append(toIndentedString(shiptoAddress1)).append("\n");
    sb.append("    shiptoAddress2: ").append(toIndentedString(shiptoAddress2)).append("\n");
    sb.append("    shiptoCity: ").append(toIndentedString(shiptoCity)).append("\n");
    sb.append("    shiptoCompany: ").append(toIndentedString(shiptoCompany)).append("\n");
    sb.append("    shiptoCountryCode: ").append(toIndentedString(shiptoCountryCode)).append("\n");
    sb.append("    shiptoDayPhone: ").append(toIndentedString(shiptoDayPhone)).append("\n");
    sb.append("    shiptoEveningPhone: ").append(toIndentedString(shiptoEveningPhone)).append("\n");
    sb.append("    shiptoFirstName: ").append(toIndentedString(shiptoFirstName)).append("\n");
    sb.append("    shiptoLastName: ").append(toIndentedString(shiptoLastName)).append("\n");
    sb.append("    shiptoPostalCode: ").append(toIndentedString(shiptoPostalCode)).append("\n");
    sb.append("    shiptoStateRegion: ").append(toIndentedString(shiptoStateRegion)).append("\n");
    sb.append("    shiptoTitle: ").append(toIndentedString(shiptoTitle)).append("\n");
    sb.append("    skipPaymentProcessing: ").append(toIndentedString(skipPaymentProcessing)).append("\n");
    sb.append("    specialInstructions: ").append(toIndentedString(specialInstructions)).append("\n");
    sb.append("    storeCompleted: ").append(toIndentedString(storeCompleted)).append("\n");
    sb.append("    storeIfPaymentDeclines: ").append(toIndentedString(storeIfPaymentDeclines)).append("\n");
    sb.append("    storefrontHostName: ").append(toIndentedString(storefrontHostName)).append("\n");
    sb.append("    taxCounty: ").append(toIndentedString(taxCounty)).append("\n");
    sb.append("    taxExempt: ").append(toIndentedString(taxExempt)).append("\n");
    sb.append("    transaction: ").append(toIndentedString(transaction)).append("\n");
    sb.append("    treatWarningsAsErrors: ").append(toIndentedString(treatWarningsAsErrors)).append("\n");
    sb.append("    usePriorPaymentInformationFromOrderId: ").append(toIndentedString(usePriorPaymentInformationFromOrderId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("advertisingSource");
    openapiFields.add("affiliate_id");
    openapiFields.add("affiliate_sub_id");
    openapiFields.add("arbitrary_shipping_handling_total");
    openapiFields.add("arbitrary_tax");
    openapiFields.add("arbitrary_tax_rate");
    openapiFields.add("arbitrary_taxable_subtotal");
    openapiFields.add("associate_with_customer_profile_if_present");
    openapiFields.add("auto_approve_purchase_order");
    openapiFields.add("billto_address1");
    openapiFields.add("billto_address2");
    openapiFields.add("billto_city");
    openapiFields.add("billto_company");
    openapiFields.add("billto_country_code");
    openapiFields.add("billto_day_phone");
    openapiFields.add("billto_evening_phone");
    openapiFields.add("billto_first_name");
    openapiFields.add("billto_last_name");
    openapiFields.add("billto_postal_code");
    openapiFields.add("billto_state_region");
    openapiFields.add("billto_title");
    openapiFields.add("cc_email");
    openapiFields.add("channel_partner_order_id");
    openapiFields.add("consider_recurring");
    openapiFields.add("coupons");
    openapiFields.add("credit_card_authorization_amount");
    openapiFields.add("credit_card_authorization_dts");
    openapiFields.add("credit_card_authorization_number");
    openapiFields.add("credit_card_expiration_month");
    openapiFields.add("credit_card_expiration_year");
    openapiFields.add("credit_card_type");
    openapiFields.add("custom_field1");
    openapiFields.add("custom_field2");
    openapiFields.add("custom_field3");
    openapiFields.add("custom_field4");
    openapiFields.add("custom_field5");
    openapiFields.add("custom_field6");
    openapiFields.add("custom_field7");
    openapiFields.add("delivery_date");
    openapiFields.add("echeck_bank_aba_code");
    openapiFields.add("echeck_bank_account_name");
    openapiFields.add("echeck_bank_account_number");
    openapiFields.add("echeck_bank_account_type");
    openapiFields.add("echeck_bank_name");
    openapiFields.add("echeck_bank_owner_type");
    openapiFields.add("echeck_customer_tax_id");
    openapiFields.add("echeck_drivers_license_dob");
    openapiFields.add("echeck_drivers_license_number");
    openapiFields.add("echeck_drivers_license_state");
    openapiFields.add("email");
    openapiFields.add("gift");
    openapiFields.add("gift_email");
    openapiFields.add("gift_message");
    openapiFields.add("hosted_fields_card_token");
    openapiFields.add("hosted_fields_cvv_token");
    openapiFields.add("insurance_application_id");
    openapiFields.add("insurance_claim_id");
    openapiFields.add("ip_address");
    openapiFields.add("items");
    openapiFields.add("least_cost_route");
    openapiFields.add("least_cost_route_shipping_methods");
    openapiFields.add("mailing_list_opt_in");
    openapiFields.add("no_realtime_payment_processing");
    openapiFields.add("payment_method");
    openapiFields.add("purchase_order_number");
    openapiFields.add("rotating_transaction_gateway_code");
    openapiFields.add("sales_rep_code");
    openapiFields.add("screen_branding_theme_code");
    openapiFields.add("ship_on_date");
    openapiFields.add("ship_to_residential");
    openapiFields.add("shipping_method");
    openapiFields.add("shipto_address1");
    openapiFields.add("shipto_address2");
    openapiFields.add("shipto_city");
    openapiFields.add("shipto_company");
    openapiFields.add("shipto_country_code");
    openapiFields.add("shipto_day_phone");
    openapiFields.add("shipto_evening_phone");
    openapiFields.add("shipto_first_name");
    openapiFields.add("shipto_last_name");
    openapiFields.add("shipto_postal_code");
    openapiFields.add("shipto_state_region");
    openapiFields.add("shipto_title");
    openapiFields.add("skip_payment_processing");
    openapiFields.add("special_instructions");
    openapiFields.add("store_completed");
    openapiFields.add("store_if_payment_declines");
    openapiFields.add("storefront_host_name");
    openapiFields.add("tax_county");
    openapiFields.add("tax_exempt");
    openapiFields.add("transaction");
    openapiFields.add("treat_warnings_as_errors");
    openapiFields.add("use_prior_payment_information_from_order_id");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ChannelPartnerOrder
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (ChannelPartnerOrder.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in ChannelPartnerOrder is not found in the empty JSON string", ChannelPartnerOrder.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!ChannelPartnerOrder.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ChannelPartnerOrder` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("advertisingSource") != null && !jsonObj.get("advertisingSource").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `advertisingSource` to be a primitive type in the JSON string but got `%s`", jsonObj.get("advertisingSource").toString()));
      }
      if (jsonObj.get("affiliate_id") != null && !jsonObj.get("affiliate_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `affiliate_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("affiliate_id").toString()));
      }
      if (jsonObj.get("affiliate_sub_id") != null && !jsonObj.get("affiliate_sub_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `affiliate_sub_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("affiliate_sub_id").toString()));
      }
      if (jsonObj.get("billto_address1") != null && !jsonObj.get("billto_address1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `billto_address1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("billto_address1").toString()));
      }
      if (jsonObj.get("billto_address2") != null && !jsonObj.get("billto_address2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `billto_address2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("billto_address2").toString()));
      }
      if (jsonObj.get("billto_city") != null && !jsonObj.get("billto_city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `billto_city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("billto_city").toString()));
      }
      if (jsonObj.get("billto_company") != null && !jsonObj.get("billto_company").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `billto_company` to be a primitive type in the JSON string but got `%s`", jsonObj.get("billto_company").toString()));
      }
      if (jsonObj.get("billto_country_code") != null && !jsonObj.get("billto_country_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `billto_country_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("billto_country_code").toString()));
      }
      if (jsonObj.get("billto_day_phone") != null && !jsonObj.get("billto_day_phone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `billto_day_phone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("billto_day_phone").toString()));
      }
      if (jsonObj.get("billto_evening_phone") != null && !jsonObj.get("billto_evening_phone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `billto_evening_phone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("billto_evening_phone").toString()));
      }
      if (jsonObj.get("billto_first_name") != null && !jsonObj.get("billto_first_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `billto_first_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("billto_first_name").toString()));
      }
      if (jsonObj.get("billto_last_name") != null && !jsonObj.get("billto_last_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `billto_last_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("billto_last_name").toString()));
      }
      if (jsonObj.get("billto_postal_code") != null && !jsonObj.get("billto_postal_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `billto_postal_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("billto_postal_code").toString()));
      }
      if (jsonObj.get("billto_state_region") != null && !jsonObj.get("billto_state_region").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `billto_state_region` to be a primitive type in the JSON string but got `%s`", jsonObj.get("billto_state_region").toString()));
      }
      if (jsonObj.get("billto_title") != null && !jsonObj.get("billto_title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `billto_title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("billto_title").toString()));
      }
      if (jsonObj.get("cc_email") != null && !jsonObj.get("cc_email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cc_email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cc_email").toString()));
      }
      if (jsonObj.get("channel_partner_order_id") != null && !jsonObj.get("channel_partner_order_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `channel_partner_order_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("channel_partner_order_id").toString()));
      }
      // ensure the json data is an array
      if (jsonObj.get("coupons") != null && !jsonObj.get("coupons").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `coupons` to be an array in the JSON string but got `%s`", jsonObj.get("coupons").toString()));
      }
      if (jsonObj.get("credit_card_authorization_dts") != null && !jsonObj.get("credit_card_authorization_dts").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `credit_card_authorization_dts` to be a primitive type in the JSON string but got `%s`", jsonObj.get("credit_card_authorization_dts").toString()));
      }
      if (jsonObj.get("credit_card_authorization_number") != null && !jsonObj.get("credit_card_authorization_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `credit_card_authorization_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("credit_card_authorization_number").toString()));
      }
      if (jsonObj.get("credit_card_type") != null && !jsonObj.get("credit_card_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `credit_card_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("credit_card_type").toString()));
      }
      if (jsonObj.get("custom_field1") != null && !jsonObj.get("custom_field1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `custom_field1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("custom_field1").toString()));
      }
      if (jsonObj.get("custom_field2") != null && !jsonObj.get("custom_field2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `custom_field2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("custom_field2").toString()));
      }
      if (jsonObj.get("custom_field3") != null && !jsonObj.get("custom_field3").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `custom_field3` to be a primitive type in the JSON string but got `%s`", jsonObj.get("custom_field3").toString()));
      }
      if (jsonObj.get("custom_field4") != null && !jsonObj.get("custom_field4").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `custom_field4` to be a primitive type in the JSON string but got `%s`", jsonObj.get("custom_field4").toString()));
      }
      if (jsonObj.get("custom_field5") != null && !jsonObj.get("custom_field5").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `custom_field5` to be a primitive type in the JSON string but got `%s`", jsonObj.get("custom_field5").toString()));
      }
      if (jsonObj.get("custom_field6") != null && !jsonObj.get("custom_field6").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `custom_field6` to be a primitive type in the JSON string but got `%s`", jsonObj.get("custom_field6").toString()));
      }
      if (jsonObj.get("custom_field7") != null && !jsonObj.get("custom_field7").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `custom_field7` to be a primitive type in the JSON string but got `%s`", jsonObj.get("custom_field7").toString()));
      }
      if (jsonObj.get("delivery_date") != null && !jsonObj.get("delivery_date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `delivery_date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("delivery_date").toString()));
      }
      if (jsonObj.get("echeck_bank_aba_code") != null && !jsonObj.get("echeck_bank_aba_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `echeck_bank_aba_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("echeck_bank_aba_code").toString()));
      }
      if (jsonObj.get("echeck_bank_account_name") != null && !jsonObj.get("echeck_bank_account_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `echeck_bank_account_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("echeck_bank_account_name").toString()));
      }
      if (jsonObj.get("echeck_bank_account_number") != null && !jsonObj.get("echeck_bank_account_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `echeck_bank_account_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("echeck_bank_account_number").toString()));
      }
      if (jsonObj.get("echeck_bank_account_type") != null && !jsonObj.get("echeck_bank_account_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `echeck_bank_account_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("echeck_bank_account_type").toString()));
      }
      if (jsonObj.get("echeck_bank_name") != null && !jsonObj.get("echeck_bank_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `echeck_bank_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("echeck_bank_name").toString()));
      }
      if (jsonObj.get("echeck_bank_owner_type") != null && !jsonObj.get("echeck_bank_owner_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `echeck_bank_owner_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("echeck_bank_owner_type").toString()));
      }
      if (jsonObj.get("echeck_customer_tax_id") != null && !jsonObj.get("echeck_customer_tax_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `echeck_customer_tax_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("echeck_customer_tax_id").toString()));
      }
      if (jsonObj.get("echeck_drivers_license_dob") != null && !jsonObj.get("echeck_drivers_license_dob").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `echeck_drivers_license_dob` to be a primitive type in the JSON string but got `%s`", jsonObj.get("echeck_drivers_license_dob").toString()));
      }
      if (jsonObj.get("echeck_drivers_license_number") != null && !jsonObj.get("echeck_drivers_license_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `echeck_drivers_license_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("echeck_drivers_license_number").toString()));
      }
      if (jsonObj.get("echeck_drivers_license_state") != null && !jsonObj.get("echeck_drivers_license_state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `echeck_drivers_license_state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("echeck_drivers_license_state").toString()));
      }
      if (jsonObj.get("email") != null && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if (jsonObj.get("gift_email") != null && !jsonObj.get("gift_email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gift_email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gift_email").toString()));
      }
      if (jsonObj.get("gift_message") != null && !jsonObj.get("gift_message").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gift_message` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gift_message").toString()));
      }
      if (jsonObj.get("hosted_fields_card_token") != null && !jsonObj.get("hosted_fields_card_token").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `hosted_fields_card_token` to be a primitive type in the JSON string but got `%s`", jsonObj.get("hosted_fields_card_token").toString()));
      }
      if (jsonObj.get("hosted_fields_cvv_token") != null && !jsonObj.get("hosted_fields_cvv_token").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `hosted_fields_cvv_token` to be a primitive type in the JSON string but got `%s`", jsonObj.get("hosted_fields_cvv_token").toString()));
      }
      if (jsonObj.get("insurance_application_id") != null && !jsonObj.get("insurance_application_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `insurance_application_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("insurance_application_id").toString()));
      }
      if (jsonObj.get("insurance_claim_id") != null && !jsonObj.get("insurance_claim_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `insurance_claim_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("insurance_claim_id").toString()));
      }
      if (jsonObj.get("ip_address") != null && !jsonObj.get("ip_address").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ip_address` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ip_address").toString()));
      }
      JsonArray jsonArrayitems = jsonObj.getAsJsonArray("items");
      if (jsonArrayitems != null) {
        // ensure the json data is an array
        if (!jsonObj.get("items").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `items` to be an array in the JSON string but got `%s`", jsonObj.get("items").toString()));
        }

        // validate the optional field `items` (array)
        for (int i = 0; i < jsonArrayitems.size(); i++) {
          ChannelPartnerOrderItem.validateJsonObject(jsonArrayitems.get(i).getAsJsonObject());
        };
      }
      // ensure the json data is an array
      if (jsonObj.get("least_cost_route_shipping_methods") != null && !jsonObj.get("least_cost_route_shipping_methods").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `least_cost_route_shipping_methods` to be an array in the JSON string but got `%s`", jsonObj.get("least_cost_route_shipping_methods").toString()));
      }
      if (jsonObj.get("payment_method") != null && !jsonObj.get("payment_method").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payment_method` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payment_method").toString()));
      }
      if (jsonObj.get("purchase_order_number") != null && !jsonObj.get("purchase_order_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `purchase_order_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("purchase_order_number").toString()));
      }
      if (jsonObj.get("rotating_transaction_gateway_code") != null && !jsonObj.get("rotating_transaction_gateway_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `rotating_transaction_gateway_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("rotating_transaction_gateway_code").toString()));
      }
      if (jsonObj.get("sales_rep_code") != null && !jsonObj.get("sales_rep_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sales_rep_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sales_rep_code").toString()));
      }
      if (jsonObj.get("screen_branding_theme_code") != null && !jsonObj.get("screen_branding_theme_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `screen_branding_theme_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("screen_branding_theme_code").toString()));
      }
      if (jsonObj.get("ship_on_date") != null && !jsonObj.get("ship_on_date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ship_on_date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ship_on_date").toString()));
      }
      if (jsonObj.get("shipping_method") != null && !jsonObj.get("shipping_method").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipping_method` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipping_method").toString()));
      }
      if (jsonObj.get("shipto_address1") != null && !jsonObj.get("shipto_address1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipto_address1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipto_address1").toString()));
      }
      if (jsonObj.get("shipto_address2") != null && !jsonObj.get("shipto_address2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipto_address2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipto_address2").toString()));
      }
      if (jsonObj.get("shipto_city") != null && !jsonObj.get("shipto_city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipto_city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipto_city").toString()));
      }
      if (jsonObj.get("shipto_company") != null && !jsonObj.get("shipto_company").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipto_company` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipto_company").toString()));
      }
      if (jsonObj.get("shipto_country_code") != null && !jsonObj.get("shipto_country_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipto_country_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipto_country_code").toString()));
      }
      if (jsonObj.get("shipto_day_phone") != null && !jsonObj.get("shipto_day_phone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipto_day_phone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipto_day_phone").toString()));
      }
      if (jsonObj.get("shipto_evening_phone") != null && !jsonObj.get("shipto_evening_phone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipto_evening_phone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipto_evening_phone").toString()));
      }
      if (jsonObj.get("shipto_first_name") != null && !jsonObj.get("shipto_first_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipto_first_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipto_first_name").toString()));
      }
      if (jsonObj.get("shipto_last_name") != null && !jsonObj.get("shipto_last_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipto_last_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipto_last_name").toString()));
      }
      if (jsonObj.get("shipto_postal_code") != null && !jsonObj.get("shipto_postal_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipto_postal_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipto_postal_code").toString()));
      }
      if (jsonObj.get("shipto_state_region") != null && !jsonObj.get("shipto_state_region").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipto_state_region` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipto_state_region").toString()));
      }
      if (jsonObj.get("shipto_title") != null && !jsonObj.get("shipto_title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipto_title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipto_title").toString()));
      }
      if (jsonObj.get("special_instructions") != null && !jsonObj.get("special_instructions").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `special_instructions` to be a primitive type in the JSON string but got `%s`", jsonObj.get("special_instructions").toString()));
      }
      if (jsonObj.get("storefront_host_name") != null && !jsonObj.get("storefront_host_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `storefront_host_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("storefront_host_name").toString()));
      }
      if (jsonObj.get("tax_county") != null && !jsonObj.get("tax_county").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tax_county` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tax_county").toString()));
      }
      // validate the optional field `transaction`
      if (jsonObj.getAsJsonObject("transaction") != null) {
        ChannelPartnerOrderTransaction.validateJsonObject(jsonObj.getAsJsonObject("transaction"));
      }
      if (jsonObj.get("use_prior_payment_information_from_order_id") != null && !jsonObj.get("use_prior_payment_information_from_order_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `use_prior_payment_information_from_order_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("use_prior_payment_information_from_order_id").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ChannelPartnerOrder.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ChannelPartnerOrder' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ChannelPartnerOrder> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ChannelPartnerOrder.class));

       return (TypeAdapter<T>) new TypeAdapter<ChannelPartnerOrder>() {
           @Override
           public void write(JsonWriter out, ChannelPartnerOrder value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ChannelPartnerOrder read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ChannelPartnerOrder given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ChannelPartnerOrder
  * @throws IOException if the JSON string is invalid with respect to ChannelPartnerOrder
  */
  public static ChannelPartnerOrder fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ChannelPartnerOrder.class);
  }

 /**
  * Convert an instance of ChannelPartnerOrder to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

