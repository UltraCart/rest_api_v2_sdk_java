/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * ItemIdentifiers
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-05-20T12:50:59.354-04:00[America/Indianapolis]")
public class ItemIdentifiers {
  public static final String SERIALIZED_NAME_BARCODE = "barcode";
  @SerializedName(SERIALIZED_NAME_BARCODE)
  private String barcode;

  public static final String SERIALIZED_NAME_BARCODE_GTIN12 = "barcode_gtin12";
  @SerializedName(SERIALIZED_NAME_BARCODE_GTIN12)
  private String barcodeGtin12;

  public static final String SERIALIZED_NAME_BARCODE_GTIN14 = "barcode_gtin14";
  @SerializedName(SERIALIZED_NAME_BARCODE_GTIN14)
  private String barcodeGtin14;

  public static final String SERIALIZED_NAME_BARCODE_UPC11 = "barcode_upc11";
  @SerializedName(SERIALIZED_NAME_BARCODE_UPC11)
  private String barcodeUpc11;

  public static final String SERIALIZED_NAME_BARCODE_UPC12 = "barcode_upc12";
  @SerializedName(SERIALIZED_NAME_BARCODE_UPC12)
  private String barcodeUpc12;

  public static final String SERIALIZED_NAME_MANUFACTURER_NAME = "manufacturer_name";
  @SerializedName(SERIALIZED_NAME_MANUFACTURER_NAME)
  private String manufacturerName;

  public static final String SERIALIZED_NAME_MANUFACTURER_SKU = "manufacturer_sku";
  @SerializedName(SERIALIZED_NAME_MANUFACTURER_SKU)
  private String manufacturerSku;

  public static final String SERIALIZED_NAME_UNSPSC = "unspsc";
  @SerializedName(SERIALIZED_NAME_UNSPSC)
  private String unspsc;

  public ItemIdentifiers() { 
  }

  public ItemIdentifiers barcode(String barcode) {
    
    this.barcode = barcode;
    return this;
  }

   /**
   * Barcode
   * @return barcode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Barcode")

  public String getBarcode() {
    return barcode;
  }


  public void setBarcode(String barcode) {
    this.barcode = barcode;
  }


  public ItemIdentifiers barcodeGtin12(String barcodeGtin12) {
    
    this.barcodeGtin12 = barcodeGtin12;
    return this;
  }

   /**
   * Barcode - GTIN 12
   * @return barcodeGtin12
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Barcode - GTIN 12")

  public String getBarcodeGtin12() {
    return barcodeGtin12;
  }


  public void setBarcodeGtin12(String barcodeGtin12) {
    this.barcodeGtin12 = barcodeGtin12;
  }


  public ItemIdentifiers barcodeGtin14(String barcodeGtin14) {
    
    this.barcodeGtin14 = barcodeGtin14;
    return this;
  }

   /**
   * Barcode - GTIN 14
   * @return barcodeGtin14
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Barcode - GTIN 14")

  public String getBarcodeGtin14() {
    return barcodeGtin14;
  }


  public void setBarcodeGtin14(String barcodeGtin14) {
    this.barcodeGtin14 = barcodeGtin14;
  }


  public ItemIdentifiers barcodeUpc11(String barcodeUpc11) {
    
    this.barcodeUpc11 = barcodeUpc11;
    return this;
  }

   /**
   * Barcode - UPC 11
   * @return barcodeUpc11
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Barcode - UPC 11")

  public String getBarcodeUpc11() {
    return barcodeUpc11;
  }


  public void setBarcodeUpc11(String barcodeUpc11) {
    this.barcodeUpc11 = barcodeUpc11;
  }


  public ItemIdentifiers barcodeUpc12(String barcodeUpc12) {
    
    this.barcodeUpc12 = barcodeUpc12;
    return this;
  }

   /**
   * Barcode - UPC 12
   * @return barcodeUpc12
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Barcode - UPC 12")

  public String getBarcodeUpc12() {
    return barcodeUpc12;
  }


  public void setBarcodeUpc12(String barcodeUpc12) {
    this.barcodeUpc12 = barcodeUpc12;
  }


  public ItemIdentifiers manufacturerName(String manufacturerName) {
    
    this.manufacturerName = manufacturerName;
    return this;
  }

   /**
   * Manufacturer Name
   * @return manufacturerName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Manufacturer Name")

  public String getManufacturerName() {
    return manufacturerName;
  }


  public void setManufacturerName(String manufacturerName) {
    this.manufacturerName = manufacturerName;
  }


  public ItemIdentifiers manufacturerSku(String manufacturerSku) {
    
    this.manufacturerSku = manufacturerSku;
    return this;
  }

   /**
   * Manufacturer SKU
   * @return manufacturerSku
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Manufacturer SKU")

  public String getManufacturerSku() {
    return manufacturerSku;
  }


  public void setManufacturerSku(String manufacturerSku) {
    this.manufacturerSku = manufacturerSku;
  }


  public ItemIdentifiers unspsc(String unspsc) {
    
    this.unspsc = unspsc;
    return this;
  }

   /**
   * UNSPSC
   * @return unspsc
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "UNSPSC")

  public String getUnspsc() {
    return unspsc;
  }


  public void setUnspsc(String unspsc) {
    this.unspsc = unspsc;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ItemIdentifiers itemIdentifiers = (ItemIdentifiers) o;
    return Objects.equals(this.barcode, itemIdentifiers.barcode) &&
        Objects.equals(this.barcodeGtin12, itemIdentifiers.barcodeGtin12) &&
        Objects.equals(this.barcodeGtin14, itemIdentifiers.barcodeGtin14) &&
        Objects.equals(this.barcodeUpc11, itemIdentifiers.barcodeUpc11) &&
        Objects.equals(this.barcodeUpc12, itemIdentifiers.barcodeUpc12) &&
        Objects.equals(this.manufacturerName, itemIdentifiers.manufacturerName) &&
        Objects.equals(this.manufacturerSku, itemIdentifiers.manufacturerSku) &&
        Objects.equals(this.unspsc, itemIdentifiers.unspsc);
  }

  @Override
  public int hashCode() {
    return Objects.hash(barcode, barcodeGtin12, barcodeGtin14, barcodeUpc11, barcodeUpc12, manufacturerName, manufacturerSku, unspsc);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ItemIdentifiers {\n");
    sb.append("    barcode: ").append(toIndentedString(barcode)).append("\n");
    sb.append("    barcodeGtin12: ").append(toIndentedString(barcodeGtin12)).append("\n");
    sb.append("    barcodeGtin14: ").append(toIndentedString(barcodeGtin14)).append("\n");
    sb.append("    barcodeUpc11: ").append(toIndentedString(barcodeUpc11)).append("\n");
    sb.append("    barcodeUpc12: ").append(toIndentedString(barcodeUpc12)).append("\n");
    sb.append("    manufacturerName: ").append(toIndentedString(manufacturerName)).append("\n");
    sb.append("    manufacturerSku: ").append(toIndentedString(manufacturerSku)).append("\n");
    sb.append("    unspsc: ").append(toIndentedString(unspsc)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("barcode");
    openapiFields.add("barcode_gtin12");
    openapiFields.add("barcode_gtin14");
    openapiFields.add("barcode_upc11");
    openapiFields.add("barcode_upc12");
    openapiFields.add("manufacturer_name");
    openapiFields.add("manufacturer_sku");
    openapiFields.add("unspsc");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ItemIdentifiers
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (ItemIdentifiers.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in ItemIdentifiers is not found in the empty JSON string", ItemIdentifiers.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!ItemIdentifiers.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ItemIdentifiers` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("barcode") != null && !jsonObj.get("barcode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `barcode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("barcode").toString()));
      }
      if (jsonObj.get("barcode_gtin12") != null && !jsonObj.get("barcode_gtin12").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `barcode_gtin12` to be a primitive type in the JSON string but got `%s`", jsonObj.get("barcode_gtin12").toString()));
      }
      if (jsonObj.get("barcode_gtin14") != null && !jsonObj.get("barcode_gtin14").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `barcode_gtin14` to be a primitive type in the JSON string but got `%s`", jsonObj.get("barcode_gtin14").toString()));
      }
      if (jsonObj.get("barcode_upc11") != null && !jsonObj.get("barcode_upc11").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `barcode_upc11` to be a primitive type in the JSON string but got `%s`", jsonObj.get("barcode_upc11").toString()));
      }
      if (jsonObj.get("barcode_upc12") != null && !jsonObj.get("barcode_upc12").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `barcode_upc12` to be a primitive type in the JSON string but got `%s`", jsonObj.get("barcode_upc12").toString()));
      }
      if (jsonObj.get("manufacturer_name") != null && !jsonObj.get("manufacturer_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `manufacturer_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("manufacturer_name").toString()));
      }
      if (jsonObj.get("manufacturer_sku") != null && !jsonObj.get("manufacturer_sku").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `manufacturer_sku` to be a primitive type in the JSON string but got `%s`", jsonObj.get("manufacturer_sku").toString()));
      }
      if (jsonObj.get("unspsc") != null && !jsonObj.get("unspsc").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `unspsc` to be a primitive type in the JSON string but got `%s`", jsonObj.get("unspsc").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ItemIdentifiers.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ItemIdentifiers' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ItemIdentifiers> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ItemIdentifiers.class));

       return (TypeAdapter<T>) new TypeAdapter<ItemIdentifiers>() {
           @Override
           public void write(JsonWriter out, ItemIdentifiers value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ItemIdentifiers read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ItemIdentifiers given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ItemIdentifiers
  * @throws IOException if the JSON string is invalid with respect to ItemIdentifiers
  */
  public static ItemIdentifiers fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ItemIdentifiers.class);
  }

 /**
  * Convert an instance of ItemIdentifiers to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

