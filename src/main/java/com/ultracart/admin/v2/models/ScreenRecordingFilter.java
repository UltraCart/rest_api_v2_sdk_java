/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.ScreenRecordingFilterGeoDistance;
import com.ultracart.admin.v2.models.ScreenRecordingFilterIpSearch;
import com.ultracart.admin.v2.models.ScreenRecordingFilterPageView;
import com.ultracart.admin.v2.models.ScreenRecordingFilterRangeDate;
import com.ultracart.admin.v2.models.ScreenRecordingFilterRangeInteger;
import com.ultracart.admin.v2.models.ScreenRecordingFilterStringSearch;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * ScreenRecordingFilter
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-02-24T10:27:35.609-05:00")



public class ScreenRecordingFilter {
  @SerializedName("email")
  private ScreenRecordingFilterStringSearch email = null;

  @SerializedName("email_identified")
  private Boolean emailIdentified = null;

  @SerializedName("end_timestamp")
  private ScreenRecordingFilterRangeDate endTimestamp = null;

  @SerializedName("esp_customer_uuid")
  private String espCustomerUuid = null;

  @SerializedName("favorite")
  private Boolean favorite = null;

  @SerializedName("geolocation")
  private ScreenRecordingFilterGeoDistance geolocation = null;

  @SerializedName("geolocation_country")
  private ScreenRecordingFilterStringSearch geolocationCountry = null;

  @SerializedName("geolocation_state")
  private ScreenRecordingFilterStringSearch geolocationState = null;

  @SerializedName("max_filter_values")
  private Integer maxFilterValues = null;

  @SerializedName("order_id")
  private ScreenRecordingFilterStringSearch orderId = null;

  @SerializedName("page_view_count")
  private ScreenRecordingFilterRangeInteger pageViewCount = null;

  @SerializedName("page_views")
  private List<ScreenRecordingFilterPageView> pageViews = null;

  @SerializedName("placed_order")
  private Boolean placedOrder = null;

  @SerializedName("screen_recording_uuids")
  private List<String> screenRecordingUuids = null;

  @SerializedName("screen_sizes")
  private List<String> screenSizes = null;

  @SerializedName("skip_filter_values")
  private Boolean skipFilterValues = null;

  @SerializedName("skip_hits")
  private Boolean skipHits = null;

  @SerializedName("start_timestamp")
  private ScreenRecordingFilterRangeDate startTimestamp = null;

  @SerializedName("tags")
  private List<String> tags = null;

  @SerializedName("time_on_site")
  private ScreenRecordingFilterRangeInteger timeOnSite = null;

  @SerializedName("user_agent_device_name")
  private String userAgentDeviceName = null;

  @SerializedName("user_agent_name")
  private String userAgentName = null;

  @SerializedName("user_agent_original")
  private ScreenRecordingFilterStringSearch userAgentOriginal = null;

  @SerializedName("user_agent_os_name")
  private String userAgentOsName = null;

  @SerializedName("user_agent_os_version")
  private String userAgentOsVersion = null;

  @SerializedName("user_ip")
  private ScreenRecordingFilterIpSearch userIp = null;

  @SerializedName("watched")
  private Boolean watched = null;

  public ScreenRecordingFilter email(ScreenRecordingFilterStringSearch email) {
    this.email = email;
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @ApiModelProperty(value = "")
  public ScreenRecordingFilterStringSearch getEmail() {
    return email;
  }

  public void setEmail(ScreenRecordingFilterStringSearch email) {
    this.email = email;
  }

  public ScreenRecordingFilter emailIdentified(Boolean emailIdentified) {
    this.emailIdentified = emailIdentified;
    return this;
  }

   /**
   * Get emailIdentified
   * @return emailIdentified
  **/
  @ApiModelProperty(value = "")
  public Boolean isEmailIdentified() {
    return emailIdentified;
  }

  public void setEmailIdentified(Boolean emailIdentified) {
    this.emailIdentified = emailIdentified;
  }

  public ScreenRecordingFilter endTimestamp(ScreenRecordingFilterRangeDate endTimestamp) {
    this.endTimestamp = endTimestamp;
    return this;
  }

   /**
   * Get endTimestamp
   * @return endTimestamp
  **/
  @ApiModelProperty(value = "")
  public ScreenRecordingFilterRangeDate getEndTimestamp() {
    return endTimestamp;
  }

  public void setEndTimestamp(ScreenRecordingFilterRangeDate endTimestamp) {
    this.endTimestamp = endTimestamp;
  }

  public ScreenRecordingFilter espCustomerUuid(String espCustomerUuid) {
    this.espCustomerUuid = espCustomerUuid;
    return this;
  }

   /**
   * Get espCustomerUuid
   * @return espCustomerUuid
  **/
  @ApiModelProperty(value = "")
  public String getEspCustomerUuid() {
    return espCustomerUuid;
  }

  public void setEspCustomerUuid(String espCustomerUuid) {
    this.espCustomerUuid = espCustomerUuid;
  }

  public ScreenRecordingFilter favorite(Boolean favorite) {
    this.favorite = favorite;
    return this;
  }

   /**
   * Get favorite
   * @return favorite
  **/
  @ApiModelProperty(value = "")
  public Boolean isFavorite() {
    return favorite;
  }

  public void setFavorite(Boolean favorite) {
    this.favorite = favorite;
  }

  public ScreenRecordingFilter geolocation(ScreenRecordingFilterGeoDistance geolocation) {
    this.geolocation = geolocation;
    return this;
  }

   /**
   * Get geolocation
   * @return geolocation
  **/
  @ApiModelProperty(value = "")
  public ScreenRecordingFilterGeoDistance getGeolocation() {
    return geolocation;
  }

  public void setGeolocation(ScreenRecordingFilterGeoDistance geolocation) {
    this.geolocation = geolocation;
  }

  public ScreenRecordingFilter geolocationCountry(ScreenRecordingFilterStringSearch geolocationCountry) {
    this.geolocationCountry = geolocationCountry;
    return this;
  }

   /**
   * Get geolocationCountry
   * @return geolocationCountry
  **/
  @ApiModelProperty(value = "")
  public ScreenRecordingFilterStringSearch getGeolocationCountry() {
    return geolocationCountry;
  }

  public void setGeolocationCountry(ScreenRecordingFilterStringSearch geolocationCountry) {
    this.geolocationCountry = geolocationCountry;
  }

  public ScreenRecordingFilter geolocationState(ScreenRecordingFilterStringSearch geolocationState) {
    this.geolocationState = geolocationState;
    return this;
  }

   /**
   * Get geolocationState
   * @return geolocationState
  **/
  @ApiModelProperty(value = "")
  public ScreenRecordingFilterStringSearch getGeolocationState() {
    return geolocationState;
  }

  public void setGeolocationState(ScreenRecordingFilterStringSearch geolocationState) {
    this.geolocationState = geolocationState;
  }

  public ScreenRecordingFilter maxFilterValues(Integer maxFilterValues) {
    this.maxFilterValues = maxFilterValues;
    return this;
  }

   /**
   * Get maxFilterValues
   * @return maxFilterValues
  **/
  @ApiModelProperty(value = "")
  public Integer getMaxFilterValues() {
    return maxFilterValues;
  }

  public void setMaxFilterValues(Integer maxFilterValues) {
    this.maxFilterValues = maxFilterValues;
  }

  public ScreenRecordingFilter orderId(ScreenRecordingFilterStringSearch orderId) {
    this.orderId = orderId;
    return this;
  }

   /**
   * Get orderId
   * @return orderId
  **/
  @ApiModelProperty(value = "")
  public ScreenRecordingFilterStringSearch getOrderId() {
    return orderId;
  }

  public void setOrderId(ScreenRecordingFilterStringSearch orderId) {
    this.orderId = orderId;
  }

  public ScreenRecordingFilter pageViewCount(ScreenRecordingFilterRangeInteger pageViewCount) {
    this.pageViewCount = pageViewCount;
    return this;
  }

   /**
   * Get pageViewCount
   * @return pageViewCount
  **/
  @ApiModelProperty(value = "")
  public ScreenRecordingFilterRangeInteger getPageViewCount() {
    return pageViewCount;
  }

  public void setPageViewCount(ScreenRecordingFilterRangeInteger pageViewCount) {
    this.pageViewCount = pageViewCount;
  }

  public ScreenRecordingFilter pageViews(List<ScreenRecordingFilterPageView> pageViews) {
    this.pageViews = pageViews;
    return this;
  }

  public ScreenRecordingFilter addPageViewsItem(ScreenRecordingFilterPageView pageViewsItem) {
    if (this.pageViews == null) {
      this.pageViews = new ArrayList<ScreenRecordingFilterPageView>();
    }
    this.pageViews.add(pageViewsItem);
    return this;
  }

   /**
   * Get pageViews
   * @return pageViews
  **/
  @ApiModelProperty(value = "")
  public List<ScreenRecordingFilterPageView> getPageViews() {
    return pageViews;
  }

  public void setPageViews(List<ScreenRecordingFilterPageView> pageViews) {
    this.pageViews = pageViews;
  }

  public ScreenRecordingFilter placedOrder(Boolean placedOrder) {
    this.placedOrder = placedOrder;
    return this;
  }

   /**
   * Get placedOrder
   * @return placedOrder
  **/
  @ApiModelProperty(value = "")
  public Boolean isPlacedOrder() {
    return placedOrder;
  }

  public void setPlacedOrder(Boolean placedOrder) {
    this.placedOrder = placedOrder;
  }

  public ScreenRecordingFilter screenRecordingUuids(List<String> screenRecordingUuids) {
    this.screenRecordingUuids = screenRecordingUuids;
    return this;
  }

  public ScreenRecordingFilter addScreenRecordingUuidsItem(String screenRecordingUuidsItem) {
    if (this.screenRecordingUuids == null) {
      this.screenRecordingUuids = new ArrayList<String>();
    }
    this.screenRecordingUuids.add(screenRecordingUuidsItem);
    return this;
  }

   /**
   * Get screenRecordingUuids
   * @return screenRecordingUuids
  **/
  @ApiModelProperty(value = "")
  public List<String> getScreenRecordingUuids() {
    return screenRecordingUuids;
  }

  public void setScreenRecordingUuids(List<String> screenRecordingUuids) {
    this.screenRecordingUuids = screenRecordingUuids;
  }

  public ScreenRecordingFilter screenSizes(List<String> screenSizes) {
    this.screenSizes = screenSizes;
    return this;
  }

  public ScreenRecordingFilter addScreenSizesItem(String screenSizesItem) {
    if (this.screenSizes == null) {
      this.screenSizes = new ArrayList<String>();
    }
    this.screenSizes.add(screenSizesItem);
    return this;
  }

   /**
   * Get screenSizes
   * @return screenSizes
  **/
  @ApiModelProperty(value = "")
  public List<String> getScreenSizes() {
    return screenSizes;
  }

  public void setScreenSizes(List<String> screenSizes) {
    this.screenSizes = screenSizes;
  }

  public ScreenRecordingFilter skipFilterValues(Boolean skipFilterValues) {
    this.skipFilterValues = skipFilterValues;
    return this;
  }

   /**
   * Get skipFilterValues
   * @return skipFilterValues
  **/
  @ApiModelProperty(value = "")
  public Boolean isSkipFilterValues() {
    return skipFilterValues;
  }

  public void setSkipFilterValues(Boolean skipFilterValues) {
    this.skipFilterValues = skipFilterValues;
  }

  public ScreenRecordingFilter skipHits(Boolean skipHits) {
    this.skipHits = skipHits;
    return this;
  }

   /**
   * Get skipHits
   * @return skipHits
  **/
  @ApiModelProperty(value = "")
  public Boolean isSkipHits() {
    return skipHits;
  }

  public void setSkipHits(Boolean skipHits) {
    this.skipHits = skipHits;
  }

  public ScreenRecordingFilter startTimestamp(ScreenRecordingFilterRangeDate startTimestamp) {
    this.startTimestamp = startTimestamp;
    return this;
  }

   /**
   * Get startTimestamp
   * @return startTimestamp
  **/
  @ApiModelProperty(value = "")
  public ScreenRecordingFilterRangeDate getStartTimestamp() {
    return startTimestamp;
  }

  public void setStartTimestamp(ScreenRecordingFilterRangeDate startTimestamp) {
    this.startTimestamp = startTimestamp;
  }

  public ScreenRecordingFilter tags(List<String> tags) {
    this.tags = tags;
    return this;
  }

  public ScreenRecordingFilter addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<String>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @ApiModelProperty(value = "")
  public List<String> getTags() {
    return tags;
  }

  public void setTags(List<String> tags) {
    this.tags = tags;
  }

  public ScreenRecordingFilter timeOnSite(ScreenRecordingFilterRangeInteger timeOnSite) {
    this.timeOnSite = timeOnSite;
    return this;
  }

   /**
   * Get timeOnSite
   * @return timeOnSite
  **/
  @ApiModelProperty(value = "")
  public ScreenRecordingFilterRangeInteger getTimeOnSite() {
    return timeOnSite;
  }

  public void setTimeOnSite(ScreenRecordingFilterRangeInteger timeOnSite) {
    this.timeOnSite = timeOnSite;
  }

  public ScreenRecordingFilter userAgentDeviceName(String userAgentDeviceName) {
    this.userAgentDeviceName = userAgentDeviceName;
    return this;
  }

   /**
   * Get userAgentDeviceName
   * @return userAgentDeviceName
  **/
  @ApiModelProperty(value = "")
  public String getUserAgentDeviceName() {
    return userAgentDeviceName;
  }

  public void setUserAgentDeviceName(String userAgentDeviceName) {
    this.userAgentDeviceName = userAgentDeviceName;
  }

  public ScreenRecordingFilter userAgentName(String userAgentName) {
    this.userAgentName = userAgentName;
    return this;
  }

   /**
   * Get userAgentName
   * @return userAgentName
  **/
  @ApiModelProperty(value = "")
  public String getUserAgentName() {
    return userAgentName;
  }

  public void setUserAgentName(String userAgentName) {
    this.userAgentName = userAgentName;
  }

  public ScreenRecordingFilter userAgentOriginal(ScreenRecordingFilterStringSearch userAgentOriginal) {
    this.userAgentOriginal = userAgentOriginal;
    return this;
  }

   /**
   * Get userAgentOriginal
   * @return userAgentOriginal
  **/
  @ApiModelProperty(value = "")
  public ScreenRecordingFilterStringSearch getUserAgentOriginal() {
    return userAgentOriginal;
  }

  public void setUserAgentOriginal(ScreenRecordingFilterStringSearch userAgentOriginal) {
    this.userAgentOriginal = userAgentOriginal;
  }

  public ScreenRecordingFilter userAgentOsName(String userAgentOsName) {
    this.userAgentOsName = userAgentOsName;
    return this;
  }

   /**
   * Get userAgentOsName
   * @return userAgentOsName
  **/
  @ApiModelProperty(value = "")
  public String getUserAgentOsName() {
    return userAgentOsName;
  }

  public void setUserAgentOsName(String userAgentOsName) {
    this.userAgentOsName = userAgentOsName;
  }

  public ScreenRecordingFilter userAgentOsVersion(String userAgentOsVersion) {
    this.userAgentOsVersion = userAgentOsVersion;
    return this;
  }

   /**
   * Get userAgentOsVersion
   * @return userAgentOsVersion
  **/
  @ApiModelProperty(value = "")
  public String getUserAgentOsVersion() {
    return userAgentOsVersion;
  }

  public void setUserAgentOsVersion(String userAgentOsVersion) {
    this.userAgentOsVersion = userAgentOsVersion;
  }

  public ScreenRecordingFilter userIp(ScreenRecordingFilterIpSearch userIp) {
    this.userIp = userIp;
    return this;
  }

   /**
   * Get userIp
   * @return userIp
  **/
  @ApiModelProperty(value = "")
  public ScreenRecordingFilterIpSearch getUserIp() {
    return userIp;
  }

  public void setUserIp(ScreenRecordingFilterIpSearch userIp) {
    this.userIp = userIp;
  }

  public ScreenRecordingFilter watched(Boolean watched) {
    this.watched = watched;
    return this;
  }

   /**
   * Get watched
   * @return watched
  **/
  @ApiModelProperty(value = "")
  public Boolean isWatched() {
    return watched;
  }

  public void setWatched(Boolean watched) {
    this.watched = watched;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ScreenRecordingFilter screenRecordingFilter = (ScreenRecordingFilter) o;
    return Objects.equals(this.email, screenRecordingFilter.email) &&
        Objects.equals(this.emailIdentified, screenRecordingFilter.emailIdentified) &&
        Objects.equals(this.endTimestamp, screenRecordingFilter.endTimestamp) &&
        Objects.equals(this.espCustomerUuid, screenRecordingFilter.espCustomerUuid) &&
        Objects.equals(this.favorite, screenRecordingFilter.favorite) &&
        Objects.equals(this.geolocation, screenRecordingFilter.geolocation) &&
        Objects.equals(this.geolocationCountry, screenRecordingFilter.geolocationCountry) &&
        Objects.equals(this.geolocationState, screenRecordingFilter.geolocationState) &&
        Objects.equals(this.maxFilterValues, screenRecordingFilter.maxFilterValues) &&
        Objects.equals(this.orderId, screenRecordingFilter.orderId) &&
        Objects.equals(this.pageViewCount, screenRecordingFilter.pageViewCount) &&
        Objects.equals(this.pageViews, screenRecordingFilter.pageViews) &&
        Objects.equals(this.placedOrder, screenRecordingFilter.placedOrder) &&
        Objects.equals(this.screenRecordingUuids, screenRecordingFilter.screenRecordingUuids) &&
        Objects.equals(this.screenSizes, screenRecordingFilter.screenSizes) &&
        Objects.equals(this.skipFilterValues, screenRecordingFilter.skipFilterValues) &&
        Objects.equals(this.skipHits, screenRecordingFilter.skipHits) &&
        Objects.equals(this.startTimestamp, screenRecordingFilter.startTimestamp) &&
        Objects.equals(this.tags, screenRecordingFilter.tags) &&
        Objects.equals(this.timeOnSite, screenRecordingFilter.timeOnSite) &&
        Objects.equals(this.userAgentDeviceName, screenRecordingFilter.userAgentDeviceName) &&
        Objects.equals(this.userAgentName, screenRecordingFilter.userAgentName) &&
        Objects.equals(this.userAgentOriginal, screenRecordingFilter.userAgentOriginal) &&
        Objects.equals(this.userAgentOsName, screenRecordingFilter.userAgentOsName) &&
        Objects.equals(this.userAgentOsVersion, screenRecordingFilter.userAgentOsVersion) &&
        Objects.equals(this.userIp, screenRecordingFilter.userIp) &&
        Objects.equals(this.watched, screenRecordingFilter.watched);
  }

  @Override
  public int hashCode() {
    return Objects.hash(email, emailIdentified, endTimestamp, espCustomerUuid, favorite, geolocation, geolocationCountry, geolocationState, maxFilterValues, orderId, pageViewCount, pageViews, placedOrder, screenRecordingUuids, screenSizes, skipFilterValues, skipHits, startTimestamp, tags, timeOnSite, userAgentDeviceName, userAgentName, userAgentOriginal, userAgentOsName, userAgentOsVersion, userIp, watched);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ScreenRecordingFilter {\n");
    
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    emailIdentified: ").append(toIndentedString(emailIdentified)).append("\n");
    sb.append("    endTimestamp: ").append(toIndentedString(endTimestamp)).append("\n");
    sb.append("    espCustomerUuid: ").append(toIndentedString(espCustomerUuid)).append("\n");
    sb.append("    favorite: ").append(toIndentedString(favorite)).append("\n");
    sb.append("    geolocation: ").append(toIndentedString(geolocation)).append("\n");
    sb.append("    geolocationCountry: ").append(toIndentedString(geolocationCountry)).append("\n");
    sb.append("    geolocationState: ").append(toIndentedString(geolocationState)).append("\n");
    sb.append("    maxFilterValues: ").append(toIndentedString(maxFilterValues)).append("\n");
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    pageViewCount: ").append(toIndentedString(pageViewCount)).append("\n");
    sb.append("    pageViews: ").append(toIndentedString(pageViews)).append("\n");
    sb.append("    placedOrder: ").append(toIndentedString(placedOrder)).append("\n");
    sb.append("    screenRecordingUuids: ").append(toIndentedString(screenRecordingUuids)).append("\n");
    sb.append("    screenSizes: ").append(toIndentedString(screenSizes)).append("\n");
    sb.append("    skipFilterValues: ").append(toIndentedString(skipFilterValues)).append("\n");
    sb.append("    skipHits: ").append(toIndentedString(skipHits)).append("\n");
    sb.append("    startTimestamp: ").append(toIndentedString(startTimestamp)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    timeOnSite: ").append(toIndentedString(timeOnSite)).append("\n");
    sb.append("    userAgentDeviceName: ").append(toIndentedString(userAgentDeviceName)).append("\n");
    sb.append("    userAgentName: ").append(toIndentedString(userAgentName)).append("\n");
    sb.append("    userAgentOriginal: ").append(toIndentedString(userAgentOriginal)).append("\n");
    sb.append("    userAgentOsName: ").append(toIndentedString(userAgentOsName)).append("\n");
    sb.append("    userAgentOsVersion: ").append(toIndentedString(userAgentOsVersion)).append("\n");
    sb.append("    userIp: ").append(toIndentedString(userIp)).append("\n");
    sb.append("    watched: ").append(toIndentedString(watched)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

