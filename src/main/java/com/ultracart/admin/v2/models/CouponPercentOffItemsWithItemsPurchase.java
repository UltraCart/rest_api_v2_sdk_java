/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

/**
 * CouponPercentOffItemsWithItemsPurchase
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-11-15T08:55:39.752-05:00")



public class CouponPercentOffItemsWithItemsPurchase {
  @SerializedName("discount_percent")
  private BigDecimal discountPercent = null;

  @SerializedName("items")
  private List<String> items = null;

  @SerializedName("limit")
  private Integer limit = null;

  @SerializedName("required_purchase_items")
  private List<String> requiredPurchaseItems = null;

  public CouponPercentOffItemsWithItemsPurchase discountPercent(BigDecimal discountPercent) {
    this.discountPercent = discountPercent;
    return this;
  }

   /**
   * The percentage of subtotal discount
   * @return discountPercent
  **/
  @ApiModelProperty(value = "The percentage of subtotal discount")
  public BigDecimal getDiscountPercent() {
    return discountPercent;
  }

  public void setDiscountPercent(BigDecimal discountPercent) {
    this.discountPercent = discountPercent;
  }

  public CouponPercentOffItemsWithItemsPurchase items(List<String> items) {
    this.items = items;
    return this;
  }

  public CouponPercentOffItemsWithItemsPurchase addItemsItem(String itemsItem) {
    if (this.items == null) {
      this.items = new ArrayList<String>();
    }
    this.items.add(itemsItem);
    return this;
  }

   /**
   * A list of items which will receive a discount if one of the required purchase items is purchased.
   * @return items
  **/
  @ApiModelProperty(value = "A list of items which will receive a discount if one of the required purchase items is purchased.")
  public List<String> getItems() {
    return items;
  }

  public void setItems(List<String> items) {
    this.items = items;
  }

  public CouponPercentOffItemsWithItemsPurchase limit(Integer limit) {
    this.limit = limit;
    return this;
  }

   /**
   * The (optional) maximum quantity of discounted items.
   * @return limit
  **/
  @ApiModelProperty(value = "The (optional) maximum quantity of discounted items.")
  public Integer getLimit() {
    return limit;
  }

  public void setLimit(Integer limit) {
    this.limit = limit;
  }

  public CouponPercentOffItemsWithItemsPurchase requiredPurchaseItems(List<String> requiredPurchaseItems) {
    this.requiredPurchaseItems = requiredPurchaseItems;
    return this;
  }

  public CouponPercentOffItemsWithItemsPurchase addRequiredPurchaseItemsItem(String requiredPurchaseItemsItem) {
    if (this.requiredPurchaseItems == null) {
      this.requiredPurchaseItems = new ArrayList<String>();
    }
    this.requiredPurchaseItems.add(requiredPurchaseItemsItem);
    return this;
  }

   /**
   * Required items (at least one from the list) that must be purchased for coupon to be valid
   * @return requiredPurchaseItems
  **/
  @ApiModelProperty(value = "Required items (at least one from the list) that must be purchased for coupon to be valid")
  public List<String> getRequiredPurchaseItems() {
    return requiredPurchaseItems;
  }

  public void setRequiredPurchaseItems(List<String> requiredPurchaseItems) {
    this.requiredPurchaseItems = requiredPurchaseItems;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CouponPercentOffItemsWithItemsPurchase couponPercentOffItemsWithItemsPurchase = (CouponPercentOffItemsWithItemsPurchase) o;
    return Objects.equals(this.discountPercent, couponPercentOffItemsWithItemsPurchase.discountPercent) &&
        Objects.equals(this.items, couponPercentOffItemsWithItemsPurchase.items) &&
        Objects.equals(this.limit, couponPercentOffItemsWithItemsPurchase.limit) &&
        Objects.equals(this.requiredPurchaseItems, couponPercentOffItemsWithItemsPurchase.requiredPurchaseItems);
  }

  @Override
  public int hashCode() {
    return Objects.hash(discountPercent, items, limit, requiredPurchaseItems);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CouponPercentOffItemsWithItemsPurchase {\n");
    
    sb.append("    discountPercent: ").append(toIndentedString(discountPercent)).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    requiredPurchaseItems: ").append(toIndentedString(requiredPurchaseItems)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

