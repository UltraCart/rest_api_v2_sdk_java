/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.PaymentsConfigurationRestrictions;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * PaymentsConfigurationQuoteRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-04-14T09:59:09.012-04:00")



public class PaymentsConfigurationQuoteRequest {
  @SerializedName("accept_quote_requests")
  private Boolean acceptQuoteRequests = null;

  @SerializedName("approved_customers_only")
  private Boolean approvedCustomersOnly = null;

  @SerializedName("restrictions")
  private PaymentsConfigurationRestrictions restrictions = null;

  public PaymentsConfigurationQuoteRequest acceptQuoteRequests(Boolean acceptQuoteRequests) {
    this.acceptQuoteRequests = acceptQuoteRequests;
    return this;
  }

   /**
   * Master flag indicating this merchant accepts quote requests
   * @return acceptQuoteRequests
  **/
  @ApiModelProperty(value = "Master flag indicating this merchant accepts quote requests")
  public Boolean isAcceptQuoteRequests() {
    return acceptQuoteRequests;
  }

  public void setAcceptQuoteRequests(Boolean acceptQuoteRequests) {
    this.acceptQuoteRequests = acceptQuoteRequests;
  }

  public PaymentsConfigurationQuoteRequest approvedCustomersOnly(Boolean approvedCustomersOnly) {
    this.approvedCustomersOnly = approvedCustomersOnly;
    return this;
  }

   /**
   * If true, only approved customers may use quote requests
   * @return approvedCustomersOnly
  **/
  @ApiModelProperty(value = "If true, only approved customers may use quote requests")
  public Boolean isApprovedCustomersOnly() {
    return approvedCustomersOnly;
  }

  public void setApprovedCustomersOnly(Boolean approvedCustomersOnly) {
    this.approvedCustomersOnly = approvedCustomersOnly;
  }

  public PaymentsConfigurationQuoteRequest restrictions(PaymentsConfigurationRestrictions restrictions) {
    this.restrictions = restrictions;
    return this;
  }

   /**
   * Get restrictions
   * @return restrictions
  **/
  @ApiModelProperty(value = "")
  public PaymentsConfigurationRestrictions getRestrictions() {
    return restrictions;
  }

  public void setRestrictions(PaymentsConfigurationRestrictions restrictions) {
    this.restrictions = restrictions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentsConfigurationQuoteRequest paymentsConfigurationQuoteRequest = (PaymentsConfigurationQuoteRequest) o;
    return Objects.equals(this.acceptQuoteRequests, paymentsConfigurationQuoteRequest.acceptQuoteRequests) &&
        Objects.equals(this.approvedCustomersOnly, paymentsConfigurationQuoteRequest.approvedCustomersOnly) &&
        Objects.equals(this.restrictions, paymentsConfigurationQuoteRequest.restrictions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(acceptQuoteRequests, approvedCustomersOnly, restrictions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentsConfigurationQuoteRequest {\n");
    
    sb.append("    acceptQuoteRequests: ").append(toIndentedString(acceptQuoteRequests)).append("\n");
    sb.append("    approvedCustomersOnly: ").append(toIndentedString(approvedCustomersOnly)).append("\n");
    sb.append("    restrictions: ").append(toIndentedString(restrictions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

