/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.ConversationPbxMenuMapping;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * ConversationPbxMenu
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-21T11:31:21.848-04:00[America/Indianapolis]")
public class ConversationPbxMenu {
  public static final String SERIALIZED_NAME_ALLOW_DIRECT_EXTENSIONS = "allow_direct_extensions";
  @SerializedName(SERIALIZED_NAME_ALLOW_DIRECT_EXTENSIONS)
  private Boolean allowDirectExtensions;

  public static final String SERIALIZED_NAME_CONVERSATION_PBX_MENU_UUID = "conversation_pbx_menu_uuid";
  @SerializedName(SERIALIZED_NAME_CONVERSATION_PBX_MENU_UUID)
  private String conversationPbxMenuUuid;

  public static final String SERIALIZED_NAME_DEFAULT_ACTION = "default_action";
  @SerializedName(SERIALIZED_NAME_DEFAULT_ACTION)
  private String defaultAction;

  public static final String SERIALIZED_NAME_DEFAULT_ACTION_TARGET = "default_action_target";
  @SerializedName(SERIALIZED_NAME_DEFAULT_ACTION_TARGET)
  private String defaultActionTarget;

  public static final String SERIALIZED_NAME_MAPPINGS = "mappings";
  @SerializedName(SERIALIZED_NAME_MAPPINGS)
  private List<ConversationPbxMenuMapping> mappings = null;

  public static final String SERIALIZED_NAME_MERCHANT_ID = "merchant_id";
  @SerializedName(SERIALIZED_NAME_MERCHANT_ID)
  private String merchantId;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PLAY_AUDIO_UUID = "play_audio_uuid";
  @SerializedName(SERIALIZED_NAME_PLAY_AUDIO_UUID)
  private String playAudioUuid;

  public static final String SERIALIZED_NAME_SAY = "say";
  @SerializedName(SERIALIZED_NAME_SAY)
  private String say;

  /**
   * say voice
   */
  @JsonAdapter(SayVoiceEnum.Adapter.class)
  public enum SayVoiceEnum {
    MAN("man"),
    
    WOMAN("woman");

    private String value;

    SayVoiceEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SayVoiceEnum fromValue(String value) {
      for (SayVoiceEnum b : SayVoiceEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<SayVoiceEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SayVoiceEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SayVoiceEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return SayVoiceEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_SAY_VOICE = "say_voice";
  @SerializedName(SERIALIZED_NAME_SAY_VOICE)
  private SayVoiceEnum sayVoice;

  public static final String SERIALIZED_NAME_TIMEOUT = "timeout";
  @SerializedName(SERIALIZED_NAME_TIMEOUT)
  private Integer timeout;

  public ConversationPbxMenu() { 
  }

  public ConversationPbxMenu allowDirectExtensions(Boolean allowDirectExtensions) {
    
    this.allowDirectExtensions = allowDirectExtensions;
    return this;
  }

   /**
   * If true, the customer is allowed to input direct extensions within this menu
   * @return allowDirectExtensions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If true, the customer is allowed to input direct extensions within this menu")

  public Boolean getAllowDirectExtensions() {
    return allowDirectExtensions;
  }


  public void setAllowDirectExtensions(Boolean allowDirectExtensions) {
    this.allowDirectExtensions = allowDirectExtensions;
  }


  public ConversationPbxMenu conversationPbxMenuUuid(String conversationPbxMenuUuid) {
    
    this.conversationPbxMenuUuid = conversationPbxMenuUuid;
    return this;
  }

   /**
   * Conversation Pbx Menu UUID
   * @return conversationPbxMenuUuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Conversation Pbx Menu UUID")

  public String getConversationPbxMenuUuid() {
    return conversationPbxMenuUuid;
  }


  public void setConversationPbxMenuUuid(String conversationPbxMenuUuid) {
    this.conversationPbxMenuUuid = conversationPbxMenuUuid;
  }


  public ConversationPbxMenu defaultAction(String defaultAction) {
    
    this.defaultAction = defaultAction;
    return this;
  }

   /**
   * The default action for this menu
   * @return defaultAction
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The default action for this menu")

  public String getDefaultAction() {
    return defaultAction;
  }


  public void setDefaultAction(String defaultAction) {
    this.defaultAction = defaultAction;
  }


  public ConversationPbxMenu defaultActionTarget(String defaultActionTarget) {
    
    this.defaultActionTarget = defaultActionTarget;
    return this;
  }

   /**
   * The default action target for this menu
   * @return defaultActionTarget
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The default action target for this menu")

  public String getDefaultActionTarget() {
    return defaultActionTarget;
  }


  public void setDefaultActionTarget(String defaultActionTarget) {
    this.defaultActionTarget = defaultActionTarget;
  }


  public ConversationPbxMenu mappings(List<ConversationPbxMenuMapping> mappings) {
    
    this.mappings = mappings;
    return this;
  }

  public ConversationPbxMenu addMappingsItem(ConversationPbxMenuMapping mappingsItem) {
    if (this.mappings == null) {
      this.mappings = new ArrayList<>();
    }
    this.mappings.add(mappingsItem);
    return this;
  }

   /**
   * Action mappings for this menu
   * @return mappings
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Action mappings for this menu")

  public List<ConversationPbxMenuMapping> getMappings() {
    return mappings;
  }


  public void setMappings(List<ConversationPbxMenuMapping> mappings) {
    this.mappings = mappings;
  }


  public ConversationPbxMenu merchantId(String merchantId) {
    
    this.merchantId = merchantId;
    return this;
  }

   /**
   * Merchant Id
   * @return merchantId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Merchant Id")

  public String getMerchantId() {
    return merchantId;
  }


  public void setMerchantId(String merchantId) {
    this.merchantId = merchantId;
  }


  public ConversationPbxMenu name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Menu name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Menu name")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public ConversationPbxMenu playAudioUuid(String playAudioUuid) {
    
    this.playAudioUuid = playAudioUuid;
    return this;
  }

   /**
   * An optional audio clip that plays when a customer enters this menu
   * @return playAudioUuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An optional audio clip that plays when a customer enters this menu")

  public String getPlayAudioUuid() {
    return playAudioUuid;
  }


  public void setPlayAudioUuid(String playAudioUuid) {
    this.playAudioUuid = playAudioUuid;
  }


  public ConversationPbxMenu say(String say) {
    
    this.say = say;
    return this;
  }

   /**
   * An optional saying that plays when a customer enters this menu
   * @return say
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An optional saying that plays when a customer enters this menu")

  public String getSay() {
    return say;
  }


  public void setSay(String say) {
    this.say = say;
  }


  public ConversationPbxMenu sayVoice(SayVoiceEnum sayVoice) {
    
    this.sayVoice = sayVoice;
    return this;
  }

   /**
   * say voice
   * @return sayVoice
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "say voice")

  public SayVoiceEnum getSayVoice() {
    return sayVoice;
  }


  public void setSayVoice(SayVoiceEnum sayVoice) {
    this.sayVoice = sayVoice;
  }


  public ConversationPbxMenu timeout(Integer timeout) {
    
    this.timeout = timeout;
    return this;
  }

   /**
   * The idle seconds before this menu times out
   * @return timeout
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The idle seconds before this menu times out")

  public Integer getTimeout() {
    return timeout;
  }


  public void setTimeout(Integer timeout) {
    this.timeout = timeout;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConversationPbxMenu conversationPbxMenu = (ConversationPbxMenu) o;
    return Objects.equals(this.allowDirectExtensions, conversationPbxMenu.allowDirectExtensions) &&
        Objects.equals(this.conversationPbxMenuUuid, conversationPbxMenu.conversationPbxMenuUuid) &&
        Objects.equals(this.defaultAction, conversationPbxMenu.defaultAction) &&
        Objects.equals(this.defaultActionTarget, conversationPbxMenu.defaultActionTarget) &&
        Objects.equals(this.mappings, conversationPbxMenu.mappings) &&
        Objects.equals(this.merchantId, conversationPbxMenu.merchantId) &&
        Objects.equals(this.name, conversationPbxMenu.name) &&
        Objects.equals(this.playAudioUuid, conversationPbxMenu.playAudioUuid) &&
        Objects.equals(this.say, conversationPbxMenu.say) &&
        Objects.equals(this.sayVoice, conversationPbxMenu.sayVoice) &&
        Objects.equals(this.timeout, conversationPbxMenu.timeout);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowDirectExtensions, conversationPbxMenuUuid, defaultAction, defaultActionTarget, mappings, merchantId, name, playAudioUuid, say, sayVoice, timeout);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConversationPbxMenu {\n");
    sb.append("    allowDirectExtensions: ").append(toIndentedString(allowDirectExtensions)).append("\n");
    sb.append("    conversationPbxMenuUuid: ").append(toIndentedString(conversationPbxMenuUuid)).append("\n");
    sb.append("    defaultAction: ").append(toIndentedString(defaultAction)).append("\n");
    sb.append("    defaultActionTarget: ").append(toIndentedString(defaultActionTarget)).append("\n");
    sb.append("    mappings: ").append(toIndentedString(mappings)).append("\n");
    sb.append("    merchantId: ").append(toIndentedString(merchantId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    playAudioUuid: ").append(toIndentedString(playAudioUuid)).append("\n");
    sb.append("    say: ").append(toIndentedString(say)).append("\n");
    sb.append("    sayVoice: ").append(toIndentedString(sayVoice)).append("\n");
    sb.append("    timeout: ").append(toIndentedString(timeout)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("allow_direct_extensions");
    openapiFields.add("conversation_pbx_menu_uuid");
    openapiFields.add("default_action");
    openapiFields.add("default_action_target");
    openapiFields.add("mappings");
    openapiFields.add("merchant_id");
    openapiFields.add("name");
    openapiFields.add("play_audio_uuid");
    openapiFields.add("say");
    openapiFields.add("say_voice");
    openapiFields.add("timeout");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ConversationPbxMenu
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (ConversationPbxMenu.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in ConversationPbxMenu is not found in the empty JSON string", ConversationPbxMenu.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!ConversationPbxMenu.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ConversationPbxMenu` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("conversation_pbx_menu_uuid") != null && !jsonObj.get("conversation_pbx_menu_uuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `conversation_pbx_menu_uuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("conversation_pbx_menu_uuid").toString()));
      }
      if (jsonObj.get("default_action") != null && !jsonObj.get("default_action").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `default_action` to be a primitive type in the JSON string but got `%s`", jsonObj.get("default_action").toString()));
      }
      if (jsonObj.get("default_action_target") != null && !jsonObj.get("default_action_target").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `default_action_target` to be a primitive type in the JSON string but got `%s`", jsonObj.get("default_action_target").toString()));
      }
      JsonArray jsonArraymappings = jsonObj.getAsJsonArray("mappings");
      if (jsonArraymappings != null) {
        // ensure the json data is an array
        if (!jsonObj.get("mappings").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `mappings` to be an array in the JSON string but got `%s`", jsonObj.get("mappings").toString()));
        }

        // validate the optional field `mappings` (array)
        for (int i = 0; i < jsonArraymappings.size(); i++) {
          ConversationPbxMenuMapping.validateJsonObject(jsonArraymappings.get(i).getAsJsonObject());
        };
      }
      if (jsonObj.get("merchant_id") != null && !jsonObj.get("merchant_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `merchant_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("merchant_id").toString()));
      }
      if (jsonObj.get("name") != null && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (jsonObj.get("play_audio_uuid") != null && !jsonObj.get("play_audio_uuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `play_audio_uuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("play_audio_uuid").toString()));
      }
      if (jsonObj.get("say") != null && !jsonObj.get("say").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `say` to be a primitive type in the JSON string but got `%s`", jsonObj.get("say").toString()));
      }
      if (jsonObj.get("say_voice") != null && !jsonObj.get("say_voice").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `say_voice` to be a primitive type in the JSON string but got `%s`", jsonObj.get("say_voice").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ConversationPbxMenu.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ConversationPbxMenu' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ConversationPbxMenu> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ConversationPbxMenu.class));

       return (TypeAdapter<T>) new TypeAdapter<ConversationPbxMenu>() {
           @Override
           public void write(JsonWriter out, ConversationPbxMenu value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ConversationPbxMenu read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ConversationPbxMenu given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ConversationPbxMenu
  * @throws IOException if the JSON string is invalid with respect to ConversationPbxMenu
  */
  public static ConversationPbxMenu fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ConversationPbxMenu.class);
  }

 /**
  * Convert an instance of ConversationPbxMenu to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

