/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * ExperimentVariationStat
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-05-19T13:26:00.852-04:00[America/Indianapolis]")
public class ExperimentVariationStat {
  public static final String SERIALIZED_NAME_ADD_TO_CART_COUNT = "add_to_cart_count";
  @SerializedName(SERIALIZED_NAME_ADD_TO_CART_COUNT)
  private Integer addToCartCount;

  public static final String SERIALIZED_NAME_BOUNCE_COUNT = "bounce_count";
  @SerializedName(SERIALIZED_NAME_BOUNCE_COUNT)
  private Integer bounceCount;

  public static final String SERIALIZED_NAME_DURATION_SECONDS_SUM = "duration_seconds_sum";
  @SerializedName(SERIALIZED_NAME_DURATION_SECONDS_SUM)
  private Long durationSecondsSum;

  public static final String SERIALIZED_NAME_EVENT_COUNT = "event_count";
  @SerializedName(SERIALIZED_NAME_EVENT_COUNT)
  private Integer eventCount;

  public static final String SERIALIZED_NAME_INITIATE_CHECKOUT_COUNT = "initiate_checkout_count";
  @SerializedName(SERIALIZED_NAME_INITIATE_CHECKOUT_COUNT)
  private Integer initiateCheckoutCount;

  public static final String SERIALIZED_NAME_ORDER_COUNT = "order_count";
  @SerializedName(SERIALIZED_NAME_ORDER_COUNT)
  private Integer orderCount;

  public static final String SERIALIZED_NAME_ORDER_IDS = "order_ids";
  @SerializedName(SERIALIZED_NAME_ORDER_IDS)
  private List<String> orderIds = null;

  public static final String SERIALIZED_NAME_ORDER_ITEM_COUNT = "order_item_count";
  @SerializedName(SERIALIZED_NAME_ORDER_ITEM_COUNT)
  private Integer orderItemCount;

  public static final String SERIALIZED_NAME_PAGE_VIEW_COUNT = "page_view_count";
  @SerializedName(SERIALIZED_NAME_PAGE_VIEW_COUNT)
  private Integer pageViewCount;

  public static final String SERIALIZED_NAME_REVENUE = "revenue";
  @SerializedName(SERIALIZED_NAME_REVENUE)
  private BigDecimal revenue;

  public static final String SERIALIZED_NAME_SESSION_COUNT = "session_count";
  @SerializedName(SERIALIZED_NAME_SESSION_COUNT)
  private Integer sessionCount;

  public static final String SERIALIZED_NAME_SMS_OPT_IN_COUNT = "sms_opt_in_count";
  @SerializedName(SERIALIZED_NAME_SMS_OPT_IN_COUNT)
  private Integer smsOptInCount;

  public static final String SERIALIZED_NAME_STAT_DTS = "stat_dts";
  @SerializedName(SERIALIZED_NAME_STAT_DTS)
  private String statDts;

  public ExperimentVariationStat() { 
  }

  public ExperimentVariationStat addToCartCount(Integer addToCartCount) {
    
    this.addToCartCount = addToCartCount;
    return this;
  }

   /**
   * Total add to cart count for this variation
   * @return addToCartCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Total add to cart count for this variation")

  public Integer getAddToCartCount() {
    return addToCartCount;
  }


  public void setAddToCartCount(Integer addToCartCount) {
    this.addToCartCount = addToCartCount;
  }


  public ExperimentVariationStat bounceCount(Integer bounceCount) {
    
    this.bounceCount = bounceCount;
    return this;
  }

   /**
   * Total bounce count for this variation
   * @return bounceCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Total bounce count for this variation")

  public Integer getBounceCount() {
    return bounceCount;
  }


  public void setBounceCount(Integer bounceCount) {
    this.bounceCount = bounceCount;
  }


  public ExperimentVariationStat durationSecondsSum(Long durationSecondsSum) {
    
    this.durationSecondsSum = durationSecondsSum;
    return this;
  }

   /**
   * Total number of seconds spent on the site for this variation
   * @return durationSecondsSum
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Total number of seconds spent on the site for this variation")

  public Long getDurationSecondsSum() {
    return durationSecondsSum;
  }


  public void setDurationSecondsSum(Long durationSecondsSum) {
    this.durationSecondsSum = durationSecondsSum;
  }


  public ExperimentVariationStat eventCount(Integer eventCount) {
    
    this.eventCount = eventCount;
    return this;
  }

   /**
   * Total event count for this variation
   * @return eventCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Total event count for this variation")

  public Integer getEventCount() {
    return eventCount;
  }


  public void setEventCount(Integer eventCount) {
    this.eventCount = eventCount;
  }


  public ExperimentVariationStat initiateCheckoutCount(Integer initiateCheckoutCount) {
    
    this.initiateCheckoutCount = initiateCheckoutCount;
    return this;
  }

   /**
   * Total initiate checkout count for this variation
   * @return initiateCheckoutCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Total initiate checkout count for this variation")

  public Integer getInitiateCheckoutCount() {
    return initiateCheckoutCount;
  }


  public void setInitiateCheckoutCount(Integer initiateCheckoutCount) {
    this.initiateCheckoutCount = initiateCheckoutCount;
  }


  public ExperimentVariationStat orderCount(Integer orderCount) {
    
    this.orderCount = orderCount;
    return this;
  }

   /**
   * Total order count for this variation
   * @return orderCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Total order count for this variation")

  public Integer getOrderCount() {
    return orderCount;
  }


  public void setOrderCount(Integer orderCount) {
    this.orderCount = orderCount;
  }


  public ExperimentVariationStat orderIds(List<String> orderIds) {
    
    this.orderIds = orderIds;
    return this;
  }

  public ExperimentVariationStat addOrderIdsItem(String orderIdsItem) {
    if (this.orderIds == null) {
      this.orderIds = new ArrayList<>();
    }
    this.orderIds.add(orderIdsItem);
    return this;
  }

   /**
   * Order ID thats converted on this variation
   * @return orderIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Order ID thats converted on this variation")

  public List<String> getOrderIds() {
    return orderIds;
  }


  public void setOrderIds(List<String> orderIds) {
    this.orderIds = orderIds;
  }


  public ExperimentVariationStat orderItemCount(Integer orderItemCount) {
    
    this.orderItemCount = orderItemCount;
    return this;
  }

   /**
   * Total order item count for this variation
   * @return orderItemCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Total order item count for this variation")

  public Integer getOrderItemCount() {
    return orderItemCount;
  }


  public void setOrderItemCount(Integer orderItemCount) {
    this.orderItemCount = orderItemCount;
  }


  public ExperimentVariationStat pageViewCount(Integer pageViewCount) {
    
    this.pageViewCount = pageViewCount;
    return this;
  }

   /**
   * Total page view count for this variation
   * @return pageViewCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Total page view count for this variation")

  public Integer getPageViewCount() {
    return pageViewCount;
  }


  public void setPageViewCount(Integer pageViewCount) {
    this.pageViewCount = pageViewCount;
  }


  public ExperimentVariationStat revenue(BigDecimal revenue) {
    
    this.revenue = revenue;
    return this;
  }

   /**
   * Total revenue for this variation
   * @return revenue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Total revenue for this variation")

  public BigDecimal getRevenue() {
    return revenue;
  }


  public void setRevenue(BigDecimal revenue) {
    this.revenue = revenue;
  }


  public ExperimentVariationStat sessionCount(Integer sessionCount) {
    
    this.sessionCount = sessionCount;
    return this;
  }

   /**
   * Total sessions for this variation
   * @return sessionCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Total sessions for this variation")

  public Integer getSessionCount() {
    return sessionCount;
  }


  public void setSessionCount(Integer sessionCount) {
    this.sessionCount = sessionCount;
  }


  public ExperimentVariationStat smsOptInCount(Integer smsOptInCount) {
    
    this.smsOptInCount = smsOptInCount;
    return this;
  }

   /**
   * Total SMS opt in count for this variation
   * @return smsOptInCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Total SMS opt in count for this variation")

  public Integer getSmsOptInCount() {
    return smsOptInCount;
  }


  public void setSmsOptInCount(Integer smsOptInCount) {
    this.smsOptInCount = smsOptInCount;
  }


  public ExperimentVariationStat statDts(String statDts) {
    
    this.statDts = statDts;
    return this;
  }

   /**
   * Date/time that the statistic was created
   * @return statDts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Date/time that the statistic was created")

  public String getStatDts() {
    return statDts;
  }


  public void setStatDts(String statDts) {
    this.statDts = statDts;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExperimentVariationStat experimentVariationStat = (ExperimentVariationStat) o;
    return Objects.equals(this.addToCartCount, experimentVariationStat.addToCartCount) &&
        Objects.equals(this.bounceCount, experimentVariationStat.bounceCount) &&
        Objects.equals(this.durationSecondsSum, experimentVariationStat.durationSecondsSum) &&
        Objects.equals(this.eventCount, experimentVariationStat.eventCount) &&
        Objects.equals(this.initiateCheckoutCount, experimentVariationStat.initiateCheckoutCount) &&
        Objects.equals(this.orderCount, experimentVariationStat.orderCount) &&
        Objects.equals(this.orderIds, experimentVariationStat.orderIds) &&
        Objects.equals(this.orderItemCount, experimentVariationStat.orderItemCount) &&
        Objects.equals(this.pageViewCount, experimentVariationStat.pageViewCount) &&
        Objects.equals(this.revenue, experimentVariationStat.revenue) &&
        Objects.equals(this.sessionCount, experimentVariationStat.sessionCount) &&
        Objects.equals(this.smsOptInCount, experimentVariationStat.smsOptInCount) &&
        Objects.equals(this.statDts, experimentVariationStat.statDts);
  }

  @Override
  public int hashCode() {
    return Objects.hash(addToCartCount, bounceCount, durationSecondsSum, eventCount, initiateCheckoutCount, orderCount, orderIds, orderItemCount, pageViewCount, revenue, sessionCount, smsOptInCount, statDts);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExperimentVariationStat {\n");
    sb.append("    addToCartCount: ").append(toIndentedString(addToCartCount)).append("\n");
    sb.append("    bounceCount: ").append(toIndentedString(bounceCount)).append("\n");
    sb.append("    durationSecondsSum: ").append(toIndentedString(durationSecondsSum)).append("\n");
    sb.append("    eventCount: ").append(toIndentedString(eventCount)).append("\n");
    sb.append("    initiateCheckoutCount: ").append(toIndentedString(initiateCheckoutCount)).append("\n");
    sb.append("    orderCount: ").append(toIndentedString(orderCount)).append("\n");
    sb.append("    orderIds: ").append(toIndentedString(orderIds)).append("\n");
    sb.append("    orderItemCount: ").append(toIndentedString(orderItemCount)).append("\n");
    sb.append("    pageViewCount: ").append(toIndentedString(pageViewCount)).append("\n");
    sb.append("    revenue: ").append(toIndentedString(revenue)).append("\n");
    sb.append("    sessionCount: ").append(toIndentedString(sessionCount)).append("\n");
    sb.append("    smsOptInCount: ").append(toIndentedString(smsOptInCount)).append("\n");
    sb.append("    statDts: ").append(toIndentedString(statDts)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("add_to_cart_count");
    openapiFields.add("bounce_count");
    openapiFields.add("duration_seconds_sum");
    openapiFields.add("event_count");
    openapiFields.add("initiate_checkout_count");
    openapiFields.add("order_count");
    openapiFields.add("order_ids");
    openapiFields.add("order_item_count");
    openapiFields.add("page_view_count");
    openapiFields.add("revenue");
    openapiFields.add("session_count");
    openapiFields.add("sms_opt_in_count");
    openapiFields.add("stat_dts");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ExperimentVariationStat
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (ExperimentVariationStat.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in ExperimentVariationStat is not found in the empty JSON string", ExperimentVariationStat.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!ExperimentVariationStat.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ExperimentVariationStat` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      // ensure the json data is an array
      if (jsonObj.get("order_ids") != null && !jsonObj.get("order_ids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `order_ids` to be an array in the JSON string but got `%s`", jsonObj.get("order_ids").toString()));
      }
      if (jsonObj.get("stat_dts") != null && !jsonObj.get("stat_dts").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stat_dts` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stat_dts").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ExperimentVariationStat.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ExperimentVariationStat' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ExperimentVariationStat> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ExperimentVariationStat.class));

       return (TypeAdapter<T>) new TypeAdapter<ExperimentVariationStat>() {
           @Override
           public void write(JsonWriter out, ExperimentVariationStat value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ExperimentVariationStat read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ExperimentVariationStat given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ExperimentVariationStat
  * @throws IOException if the JSON string is invalid with respect to ExperimentVariationStat
  */
  public static ExperimentVariationStat fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ExperimentVariationStat.class);
  }

 /**
  * Convert an instance of ExperimentVariationStat to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

