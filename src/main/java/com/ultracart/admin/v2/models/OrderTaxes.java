/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * OrderTaxes
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-06-16T15:52:34.213-04:00")



public class OrderTaxes {
  @SerializedName("arbitrary_tax")
  private BigDecimal arbitraryTax = null;

  @SerializedName("arbitrary_tax_rate")
  private BigDecimal arbitraryTaxRate = null;

  @SerializedName("arbitrary_taxable_subtotal")
  private BigDecimal arbitraryTaxableSubtotal = null;

  @SerializedName("tax_city_accounting_code")
  private String taxCityAccountingCode = null;

  @SerializedName("tax_country_accounting_code")
  private String taxCountryAccountingCode = null;

  @SerializedName("tax_county")
  private String taxCounty = null;

  @SerializedName("tax_county_accounting_code")
  private String taxCountyAccountingCode = null;

  @SerializedName("tax_gift_charge")
  private Boolean taxGiftCharge = null;

  @SerializedName("tax_postal_code_accounting_code")
  private String taxPostalCodeAccountingCode = null;

  @SerializedName("tax_rate")
  private BigDecimal taxRate = null;

  @SerializedName("tax_rate_city")
  private BigDecimal taxRateCity = null;

  @SerializedName("tax_rate_country")
  private BigDecimal taxRateCountry = null;

  @SerializedName("tax_rate_county")
  private BigDecimal taxRateCounty = null;

  @SerializedName("tax_rate_postal_code")
  private BigDecimal taxRatePostalCode = null;

  @SerializedName("tax_rate_state")
  private BigDecimal taxRateState = null;

  @SerializedName("tax_shipping")
  private Boolean taxShipping = null;

  @SerializedName("tax_state_accounting_code")
  private String taxStateAccountingCode = null;

  public OrderTaxes arbitraryTax(BigDecimal arbitraryTax) {
    this.arbitraryTax = arbitraryTax;
    return this;
  }

   /**
   * Arbitrary Tax, this is meaningless for updating an order.  For inserting a new order, this will override any internal tax calculations and should only be used for orders completed outside the system.
   * @return arbitraryTax
  **/
  @ApiModelProperty(value = "Arbitrary Tax, this is meaningless for updating an order.  For inserting a new order, this will override any internal tax calculations and should only be used for orders completed outside the system.")
  public BigDecimal getArbitraryTax() {
    return arbitraryTax;
  }

  public void setArbitraryTax(BigDecimal arbitraryTax) {
    this.arbitraryTax = arbitraryTax;
  }

  public OrderTaxes arbitraryTaxRate(BigDecimal arbitraryTaxRate) {
    this.arbitraryTaxRate = arbitraryTaxRate;
    return this;
  }

   /**
   * Arbitrary tax rate, this is meaningless for updating an order.  For inserting a new order, this will override any internal tax calculations and should only be used for orders completed outside the system.
   * @return arbitraryTaxRate
  **/
  @ApiModelProperty(value = "Arbitrary tax rate, this is meaningless for updating an order.  For inserting a new order, this will override any internal tax calculations and should only be used for orders completed outside the system.")
  public BigDecimal getArbitraryTaxRate() {
    return arbitraryTaxRate;
  }

  public void setArbitraryTaxRate(BigDecimal arbitraryTaxRate) {
    this.arbitraryTaxRate = arbitraryTaxRate;
  }

  public OrderTaxes arbitraryTaxableSubtotal(BigDecimal arbitraryTaxableSubtotal) {
    this.arbitraryTaxableSubtotal = arbitraryTaxableSubtotal;
    return this;
  }

   /**
   * Arbitrary taxable subtotal, this is meaningless for updating an order.  For inserting a new order, this will override any internal tax calculations and should only be used for orders completed outside the system.
   * @return arbitraryTaxableSubtotal
  **/
  @ApiModelProperty(value = "Arbitrary taxable subtotal, this is meaningless for updating an order.  For inserting a new order, this will override any internal tax calculations and should only be used for orders completed outside the system.")
  public BigDecimal getArbitraryTaxableSubtotal() {
    return arbitraryTaxableSubtotal;
  }

  public void setArbitraryTaxableSubtotal(BigDecimal arbitraryTaxableSubtotal) {
    this.arbitraryTaxableSubtotal = arbitraryTaxableSubtotal;
  }

  public OrderTaxes taxCityAccountingCode(String taxCityAccountingCode) {
    this.taxCityAccountingCode = taxCityAccountingCode;
    return this;
  }

   /**
   * QuickBooks tax city code
   * @return taxCityAccountingCode
  **/
  @ApiModelProperty(value = "QuickBooks tax city code")
  public String getTaxCityAccountingCode() {
    return taxCityAccountingCode;
  }

  public void setTaxCityAccountingCode(String taxCityAccountingCode) {
    this.taxCityAccountingCode = taxCityAccountingCode;
  }

  public OrderTaxes taxCountryAccountingCode(String taxCountryAccountingCode) {
    this.taxCountryAccountingCode = taxCountryAccountingCode;
    return this;
  }

   /**
   * QuickBooks tax country code
   * @return taxCountryAccountingCode
  **/
  @ApiModelProperty(value = "QuickBooks tax country code")
  public String getTaxCountryAccountingCode() {
    return taxCountryAccountingCode;
  }

  public void setTaxCountryAccountingCode(String taxCountryAccountingCode) {
    this.taxCountryAccountingCode = taxCountryAccountingCode;
  }

  public OrderTaxes taxCounty(String taxCounty) {
    this.taxCounty = taxCounty;
    return this;
  }

   /**
   * County used for tax calculation purposes (only in the United States)
   * @return taxCounty
  **/
  @ApiModelProperty(value = "County used for tax calculation purposes (only in the United States)")
  public String getTaxCounty() {
    return taxCounty;
  }

  public void setTaxCounty(String taxCounty) {
    this.taxCounty = taxCounty;
  }

  public OrderTaxes taxCountyAccountingCode(String taxCountyAccountingCode) {
    this.taxCountyAccountingCode = taxCountyAccountingCode;
    return this;
  }

   /**
   * QuickBooks tax county code
   * @return taxCountyAccountingCode
  **/
  @ApiModelProperty(value = "QuickBooks tax county code")
  public String getTaxCountyAccountingCode() {
    return taxCountyAccountingCode;
  }

  public void setTaxCountyAccountingCode(String taxCountyAccountingCode) {
    this.taxCountyAccountingCode = taxCountyAccountingCode;
  }

  public OrderTaxes taxGiftCharge(Boolean taxGiftCharge) {
    this.taxGiftCharge = taxGiftCharge;
    return this;
  }

   /**
   * True if gift charge is taxed
   * @return taxGiftCharge
  **/
  @ApiModelProperty(value = "True if gift charge is taxed")
  public Boolean isTaxGiftCharge() {
    return taxGiftCharge;
  }

  public void setTaxGiftCharge(Boolean taxGiftCharge) {
    this.taxGiftCharge = taxGiftCharge;
  }

  public OrderTaxes taxPostalCodeAccountingCode(String taxPostalCodeAccountingCode) {
    this.taxPostalCodeAccountingCode = taxPostalCodeAccountingCode;
    return this;
  }

   /**
   * QuickBooks tax postal code code
   * @return taxPostalCodeAccountingCode
  **/
  @ApiModelProperty(value = "QuickBooks tax postal code code")
  public String getTaxPostalCodeAccountingCode() {
    return taxPostalCodeAccountingCode;
  }

  public void setTaxPostalCodeAccountingCode(String taxPostalCodeAccountingCode) {
    this.taxPostalCodeAccountingCode = taxPostalCodeAccountingCode;
  }

  public OrderTaxes taxRate(BigDecimal taxRate) {
    this.taxRate = taxRate;
    return this;
  }

   /**
   * Tax rate, this is meaningless for updating an order.  For inserting a new order, if you need to override internal tax calculations, use the arbitrary fields.
   * @return taxRate
  **/
  @ApiModelProperty(value = "Tax rate, this is meaningless for updating an order.  For inserting a new order, if you need to override internal tax calculations, use the arbitrary fields.")
  public BigDecimal getTaxRate() {
    return taxRate;
  }

  public void setTaxRate(BigDecimal taxRate) {
    this.taxRate = taxRate;
  }

  public OrderTaxes taxRateCity(BigDecimal taxRateCity) {
    this.taxRateCity = taxRateCity;
    return this;
  }

   /**
   * Tax rate at the city level
   * @return taxRateCity
  **/
  @ApiModelProperty(value = "Tax rate at the city level")
  public BigDecimal getTaxRateCity() {
    return taxRateCity;
  }

  public void setTaxRateCity(BigDecimal taxRateCity) {
    this.taxRateCity = taxRateCity;
  }

  public OrderTaxes taxRateCountry(BigDecimal taxRateCountry) {
    this.taxRateCountry = taxRateCountry;
    return this;
  }

   /**
   * Tax rate at the country level
   * @return taxRateCountry
  **/
  @ApiModelProperty(value = "Tax rate at the country level")
  public BigDecimal getTaxRateCountry() {
    return taxRateCountry;
  }

  public void setTaxRateCountry(BigDecimal taxRateCountry) {
    this.taxRateCountry = taxRateCountry;
  }

  public OrderTaxes taxRateCounty(BigDecimal taxRateCounty) {
    this.taxRateCounty = taxRateCounty;
    return this;
  }

   /**
   * Tax rate at the county level
   * @return taxRateCounty
  **/
  @ApiModelProperty(value = "Tax rate at the county level")
  public BigDecimal getTaxRateCounty() {
    return taxRateCounty;
  }

  public void setTaxRateCounty(BigDecimal taxRateCounty) {
    this.taxRateCounty = taxRateCounty;
  }

  public OrderTaxes taxRatePostalCode(BigDecimal taxRatePostalCode) {
    this.taxRatePostalCode = taxRatePostalCode;
    return this;
  }

   /**
   * Tax rate at the postal code level
   * @return taxRatePostalCode
  **/
  @ApiModelProperty(value = "Tax rate at the postal code level")
  public BigDecimal getTaxRatePostalCode() {
    return taxRatePostalCode;
  }

  public void setTaxRatePostalCode(BigDecimal taxRatePostalCode) {
    this.taxRatePostalCode = taxRatePostalCode;
  }

  public OrderTaxes taxRateState(BigDecimal taxRateState) {
    this.taxRateState = taxRateState;
    return this;
  }

   /**
   * Tax rate at the state level
   * @return taxRateState
  **/
  @ApiModelProperty(value = "Tax rate at the state level")
  public BigDecimal getTaxRateState() {
    return taxRateState;
  }

  public void setTaxRateState(BigDecimal taxRateState) {
    this.taxRateState = taxRateState;
  }

  public OrderTaxes taxShipping(Boolean taxShipping) {
    this.taxShipping = taxShipping;
    return this;
  }

   /**
   * True if shipping is taxed
   * @return taxShipping
  **/
  @ApiModelProperty(value = "True if shipping is taxed")
  public Boolean isTaxShipping() {
    return taxShipping;
  }

  public void setTaxShipping(Boolean taxShipping) {
    this.taxShipping = taxShipping;
  }

  public OrderTaxes taxStateAccountingCode(String taxStateAccountingCode) {
    this.taxStateAccountingCode = taxStateAccountingCode;
    return this;
  }

   /**
   * QuickBooks tax state code
   * @return taxStateAccountingCode
  **/
  @ApiModelProperty(value = "QuickBooks tax state code")
  public String getTaxStateAccountingCode() {
    return taxStateAccountingCode;
  }

  public void setTaxStateAccountingCode(String taxStateAccountingCode) {
    this.taxStateAccountingCode = taxStateAccountingCode;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderTaxes orderTaxes = (OrderTaxes) o;
    return Objects.equals(this.arbitraryTax, orderTaxes.arbitraryTax) &&
        Objects.equals(this.arbitraryTaxRate, orderTaxes.arbitraryTaxRate) &&
        Objects.equals(this.arbitraryTaxableSubtotal, orderTaxes.arbitraryTaxableSubtotal) &&
        Objects.equals(this.taxCityAccountingCode, orderTaxes.taxCityAccountingCode) &&
        Objects.equals(this.taxCountryAccountingCode, orderTaxes.taxCountryAccountingCode) &&
        Objects.equals(this.taxCounty, orderTaxes.taxCounty) &&
        Objects.equals(this.taxCountyAccountingCode, orderTaxes.taxCountyAccountingCode) &&
        Objects.equals(this.taxGiftCharge, orderTaxes.taxGiftCharge) &&
        Objects.equals(this.taxPostalCodeAccountingCode, orderTaxes.taxPostalCodeAccountingCode) &&
        Objects.equals(this.taxRate, orderTaxes.taxRate) &&
        Objects.equals(this.taxRateCity, orderTaxes.taxRateCity) &&
        Objects.equals(this.taxRateCountry, orderTaxes.taxRateCountry) &&
        Objects.equals(this.taxRateCounty, orderTaxes.taxRateCounty) &&
        Objects.equals(this.taxRatePostalCode, orderTaxes.taxRatePostalCode) &&
        Objects.equals(this.taxRateState, orderTaxes.taxRateState) &&
        Objects.equals(this.taxShipping, orderTaxes.taxShipping) &&
        Objects.equals(this.taxStateAccountingCode, orderTaxes.taxStateAccountingCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(arbitraryTax, arbitraryTaxRate, arbitraryTaxableSubtotal, taxCityAccountingCode, taxCountryAccountingCode, taxCounty, taxCountyAccountingCode, taxGiftCharge, taxPostalCodeAccountingCode, taxRate, taxRateCity, taxRateCountry, taxRateCounty, taxRatePostalCode, taxRateState, taxShipping, taxStateAccountingCode);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderTaxes {\n");
    
    sb.append("    arbitraryTax: ").append(toIndentedString(arbitraryTax)).append("\n");
    sb.append("    arbitraryTaxRate: ").append(toIndentedString(arbitraryTaxRate)).append("\n");
    sb.append("    arbitraryTaxableSubtotal: ").append(toIndentedString(arbitraryTaxableSubtotal)).append("\n");
    sb.append("    taxCityAccountingCode: ").append(toIndentedString(taxCityAccountingCode)).append("\n");
    sb.append("    taxCountryAccountingCode: ").append(toIndentedString(taxCountryAccountingCode)).append("\n");
    sb.append("    taxCounty: ").append(toIndentedString(taxCounty)).append("\n");
    sb.append("    taxCountyAccountingCode: ").append(toIndentedString(taxCountyAccountingCode)).append("\n");
    sb.append("    taxGiftCharge: ").append(toIndentedString(taxGiftCharge)).append("\n");
    sb.append("    taxPostalCodeAccountingCode: ").append(toIndentedString(taxPostalCodeAccountingCode)).append("\n");
    sb.append("    taxRate: ").append(toIndentedString(taxRate)).append("\n");
    sb.append("    taxRateCity: ").append(toIndentedString(taxRateCity)).append("\n");
    sb.append("    taxRateCountry: ").append(toIndentedString(taxRateCountry)).append("\n");
    sb.append("    taxRateCounty: ").append(toIndentedString(taxRateCounty)).append("\n");
    sb.append("    taxRatePostalCode: ").append(toIndentedString(taxRatePostalCode)).append("\n");
    sb.append("    taxRateState: ").append(toIndentedString(taxRateState)).append("\n");
    sb.append("    taxShipping: ").append(toIndentedString(taxShipping)).append("\n");
    sb.append("    taxStateAccountingCode: ").append(toIndentedString(taxStateAccountingCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

