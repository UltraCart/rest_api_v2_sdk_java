/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * EmailFlow
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-12-02T10:19:41.023-05:00")
public class EmailFlow {
  @SerializedName("allow_multiple_concurrent_enrollments")
  private Boolean allowMultipleConcurrentEnrollments = null;

  @SerializedName("created_dts")
  private String createdDts = null;

  @SerializedName("deleted")
  private Boolean deleted = null;

  @SerializedName("email_communication_sequence_uuid")
  private String emailCommunicationSequenceUuid = null;

  @SerializedName("email_flow_uuid")
  private String emailFlowUuid = null;

  @SerializedName("filter_profile_equation_json")
  private String filterProfileEquationJson = null;

  @SerializedName("merchant_id")
  private String merchantId = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("status_dts")
  private String statusDts = null;

  @SerializedName("storefront_oid")
  private Integer storefrontOid = null;

  @SerializedName("trigger_parameter")
  private String triggerParameter = null;

  @SerializedName("trigger_parameter_name")
  private String triggerParameterName = null;

  @SerializedName("trigger_type")
  private String triggerType = null;

  public EmailFlow allowMultipleConcurrentEnrollments(Boolean allowMultipleConcurrentEnrollments) {
    this.allowMultipleConcurrentEnrollments = allowMultipleConcurrentEnrollments;
    return this;
  }

   /**
   * True if a customer may be enrolled in this flow multiple times
   * @return allowMultipleConcurrentEnrollments
  **/
  @ApiModelProperty(value = "True if a customer may be enrolled in this flow multiple times")
  public Boolean isAllowMultipleConcurrentEnrollments() {
    return allowMultipleConcurrentEnrollments;
  }

  public void setAllowMultipleConcurrentEnrollments(Boolean allowMultipleConcurrentEnrollments) {
    this.allowMultipleConcurrentEnrollments = allowMultipleConcurrentEnrollments;
  }

  public EmailFlow createdDts(String createdDts) {
    this.createdDts = createdDts;
    return this;
  }

   /**
   * Created date
   * @return createdDts
  **/
  @ApiModelProperty(value = "Created date")
  public String getCreatedDts() {
    return createdDts;
  }

  public void setCreatedDts(String createdDts) {
    this.createdDts = createdDts;
  }

  public EmailFlow deleted(Boolean deleted) {
    this.deleted = deleted;
    return this;
  }

   /**
   * True if this campaign was deleted
   * @return deleted
  **/
  @ApiModelProperty(value = "True if this campaign was deleted")
  public Boolean isDeleted() {
    return deleted;
  }

  public void setDeleted(Boolean deleted) {
    this.deleted = deleted;
  }

  public EmailFlow emailCommunicationSequenceUuid(String emailCommunicationSequenceUuid) {
    this.emailCommunicationSequenceUuid = emailCommunicationSequenceUuid;
    return this;
  }

   /**
   * Email communication sequence UUID
   * @return emailCommunicationSequenceUuid
  **/
  @ApiModelProperty(value = "Email communication sequence UUID")
  public String getEmailCommunicationSequenceUuid() {
    return emailCommunicationSequenceUuid;
  }

  public void setEmailCommunicationSequenceUuid(String emailCommunicationSequenceUuid) {
    this.emailCommunicationSequenceUuid = emailCommunicationSequenceUuid;
  }

  public EmailFlow emailFlowUuid(String emailFlowUuid) {
    this.emailFlowUuid = emailFlowUuid;
    return this;
  }

   /**
   * Email flow UUID
   * @return emailFlowUuid
  **/
  @ApiModelProperty(value = "Email flow UUID")
  public String getEmailFlowUuid() {
    return emailFlowUuid;
  }

  public void setEmailFlowUuid(String emailFlowUuid) {
    this.emailFlowUuid = emailFlowUuid;
  }

  public EmailFlow filterProfileEquationJson(String filterProfileEquationJson) {
    this.filterProfileEquationJson = filterProfileEquationJson;
    return this;
  }

   /**
   * File profile equation json
   * @return filterProfileEquationJson
  **/
  @ApiModelProperty(value = "File profile equation json")
  public String getFilterProfileEquationJson() {
    return filterProfileEquationJson;
  }

  public void setFilterProfileEquationJson(String filterProfileEquationJson) {
    this.filterProfileEquationJson = filterProfileEquationJson;
  }

  public EmailFlow merchantId(String merchantId) {
    this.merchantId = merchantId;
    return this;
  }

   /**
   * Merchant ID
   * @return merchantId
  **/
  @ApiModelProperty(value = "Merchant ID")
  public String getMerchantId() {
    return merchantId;
  }

  public void setMerchantId(String merchantId) {
    this.merchantId = merchantId;
  }

  public EmailFlow name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of email flow
   * @return name
  **/
  @ApiModelProperty(value = "Name of email flow")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public EmailFlow status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Status of the campaign of draft, archived, active, and inactive
   * @return status
  **/
  @ApiModelProperty(value = "Status of the campaign of draft, archived, active, and inactive")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public EmailFlow statusDts(String statusDts) {
    this.statusDts = statusDts;
    return this;
  }

   /**
   * Timestamp when the last status change happened
   * @return statusDts
  **/
  @ApiModelProperty(value = "Timestamp when the last status change happened")
  public String getStatusDts() {
    return statusDts;
  }

  public void setStatusDts(String statusDts) {
    this.statusDts = statusDts;
  }

  public EmailFlow storefrontOid(Integer storefrontOid) {
    this.storefrontOid = storefrontOid;
    return this;
  }

   /**
   * Storefront oid
   * @return storefrontOid
  **/
  @ApiModelProperty(value = "Storefront oid")
  public Integer getStorefrontOid() {
    return storefrontOid;
  }

  public void setStorefrontOid(Integer storefrontOid) {
    this.storefrontOid = storefrontOid;
  }

  public EmailFlow triggerParameter(String triggerParameter) {
    this.triggerParameter = triggerParameter;
    return this;
  }

   /**
   * Trigger parameter
   * @return triggerParameter
  **/
  @ApiModelProperty(value = "Trigger parameter")
  public String getTriggerParameter() {
    return triggerParameter;
  }

  public void setTriggerParameter(String triggerParameter) {
    this.triggerParameter = triggerParameter;
  }

  public EmailFlow triggerParameterName(String triggerParameterName) {
    this.triggerParameterName = triggerParameterName;
    return this;
  }

   /**
   * Trigger parameter name
   * @return triggerParameterName
  **/
  @ApiModelProperty(value = "Trigger parameter name")
  public String getTriggerParameterName() {
    return triggerParameterName;
  }

  public void setTriggerParameterName(String triggerParameterName) {
    this.triggerParameterName = triggerParameterName;
  }

  public EmailFlow triggerType(String triggerType) {
    this.triggerType = triggerType;
    return this;
  }

   /**
   * Trigger type
   * @return triggerType
  **/
  @ApiModelProperty(value = "Trigger type")
  public String getTriggerType() {
    return triggerType;
  }

  public void setTriggerType(String triggerType) {
    this.triggerType = triggerType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmailFlow emailFlow = (EmailFlow) o;
    return Objects.equals(this.allowMultipleConcurrentEnrollments, emailFlow.allowMultipleConcurrentEnrollments) &&
        Objects.equals(this.createdDts, emailFlow.createdDts) &&
        Objects.equals(this.deleted, emailFlow.deleted) &&
        Objects.equals(this.emailCommunicationSequenceUuid, emailFlow.emailCommunicationSequenceUuid) &&
        Objects.equals(this.emailFlowUuid, emailFlow.emailFlowUuid) &&
        Objects.equals(this.filterProfileEquationJson, emailFlow.filterProfileEquationJson) &&
        Objects.equals(this.merchantId, emailFlow.merchantId) &&
        Objects.equals(this.name, emailFlow.name) &&
        Objects.equals(this.status, emailFlow.status) &&
        Objects.equals(this.statusDts, emailFlow.statusDts) &&
        Objects.equals(this.storefrontOid, emailFlow.storefrontOid) &&
        Objects.equals(this.triggerParameter, emailFlow.triggerParameter) &&
        Objects.equals(this.triggerParameterName, emailFlow.triggerParameterName) &&
        Objects.equals(this.triggerType, emailFlow.triggerType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowMultipleConcurrentEnrollments, createdDts, deleted, emailCommunicationSequenceUuid, emailFlowUuid, filterProfileEquationJson, merchantId, name, status, statusDts, storefrontOid, triggerParameter, triggerParameterName, triggerType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmailFlow {\n");
    
    sb.append("    allowMultipleConcurrentEnrollments: ").append(toIndentedString(allowMultipleConcurrentEnrollments)).append("\n");
    sb.append("    createdDts: ").append(toIndentedString(createdDts)).append("\n");
    sb.append("    deleted: ").append(toIndentedString(deleted)).append("\n");
    sb.append("    emailCommunicationSequenceUuid: ").append(toIndentedString(emailCommunicationSequenceUuid)).append("\n");
    sb.append("    emailFlowUuid: ").append(toIndentedString(emailFlowUuid)).append("\n");
    sb.append("    filterProfileEquationJson: ").append(toIndentedString(filterProfileEquationJson)).append("\n");
    sb.append("    merchantId: ").append(toIndentedString(merchantId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusDts: ").append(toIndentedString(statusDts)).append("\n");
    sb.append("    storefrontOid: ").append(toIndentedString(storefrontOid)).append("\n");
    sb.append("    triggerParameter: ").append(toIndentedString(triggerParameter)).append("\n");
    sb.append("    triggerParameterName: ").append(toIndentedString(triggerParameterName)).append("\n");
    sb.append("    triggerType: ").append(toIndentedString(triggerType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

