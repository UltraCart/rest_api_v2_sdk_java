/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.Currency;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * CartSettingsShippingEstimate
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-10-04T16:26:06.805-04:00")
public class CartSettingsShippingEstimate {
  @SerializedName("allow_3rd_party_billing")
  private Boolean allow3rdPartyBilling = null;

  @SerializedName("comment")
  private String comment = null;

  @SerializedName("cost")
  private Currency cost = null;

  @SerializedName("cost_before_discount")
  private Currency costBeforeDiscount = null;

  @SerializedName("default_method")
  private Boolean defaultMethod = null;

  @SerializedName("discount")
  private Currency discount = null;

  @SerializedName("discounted")
  private Boolean discounted = null;

  @SerializedName("display_name")
  private String displayName = null;

  @SerializedName("estimated_delivery")
  private String estimatedDelivery = null;

  @SerializedName("lift_gate_option")
  private Boolean liftGateOption = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("tax")
  private Currency tax = null;

  @SerializedName("total_tax")
  private Currency totalTax = null;

  public CartSettingsShippingEstimate allow3rdPartyBilling(Boolean allow3rdPartyBilling) {
    this.allow3rdPartyBilling = allow3rdPartyBilling;
    return this;
  }

   /**
   * True if this method allows the customer to use their own shipper account number
   * @return allow3rdPartyBilling
  **/
  @ApiModelProperty(value = "True if this method allows the customer to use their own shipper account number")
  public Boolean isAllow3rdPartyBilling() {
    return allow3rdPartyBilling;
  }

  public void setAllow3rdPartyBilling(Boolean allow3rdPartyBilling) {
    this.allow3rdPartyBilling = allow3rdPartyBilling;
  }

  public CartSettingsShippingEstimate comment(String comment) {
    this.comment = comment;
    return this;
  }

   /**
   * Comment to display to the customer about this method
   * @return comment
  **/
  @ApiModelProperty(value = "Comment to display to the customer about this method")
  public String getComment() {
    return comment;
  }

  public void setComment(String comment) {
    this.comment = comment;
  }

  public CartSettingsShippingEstimate cost(Currency cost) {
    this.cost = cost;
    return this;
  }

   /**
   * Get cost
   * @return cost
  **/
  @ApiModelProperty(value = "")
  public Currency getCost() {
    return cost;
  }

  public void setCost(Currency cost) {
    this.cost = cost;
  }

  public CartSettingsShippingEstimate costBeforeDiscount(Currency costBeforeDiscount) {
    this.costBeforeDiscount = costBeforeDiscount;
    return this;
  }

   /**
   * Get costBeforeDiscount
   * @return costBeforeDiscount
  **/
  @ApiModelProperty(value = "")
  public Currency getCostBeforeDiscount() {
    return costBeforeDiscount;
  }

  public void setCostBeforeDiscount(Currency costBeforeDiscount) {
    this.costBeforeDiscount = costBeforeDiscount;
  }

  public CartSettingsShippingEstimate defaultMethod(Boolean defaultMethod) {
    this.defaultMethod = defaultMethod;
    return this;
  }

   /**
   * True if this is the default method
   * @return defaultMethod
  **/
  @ApiModelProperty(value = "True if this is the default method")
  public Boolean isDefaultMethod() {
    return defaultMethod;
  }

  public void setDefaultMethod(Boolean defaultMethod) {
    this.defaultMethod = defaultMethod;
  }

  public CartSettingsShippingEstimate discount(Currency discount) {
    this.discount = discount;
    return this;
  }

   /**
   * Get discount
   * @return discount
  **/
  @ApiModelProperty(value = "")
  public Currency getDiscount() {
    return discount;
  }

  public void setDiscount(Currency discount) {
    this.discount = discount;
  }

  public CartSettingsShippingEstimate discounted(Boolean discounted) {
    this.discounted = discounted;
    return this;
  }

   /**
   * True if this method is discounted because of a coupon
   * @return discounted
  **/
  @ApiModelProperty(value = "True if this method is discounted because of a coupon")
  public Boolean isDiscounted() {
    return discounted;
  }

  public void setDiscounted(Boolean discounted) {
    this.discounted = discounted;
  }

  public CartSettingsShippingEstimate displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

   /**
   * The name to display to the customer
   * @return displayName
  **/
  @ApiModelProperty(value = "The name to display to the customer")
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }

  public CartSettingsShippingEstimate estimatedDelivery(String estimatedDelivery) {
    this.estimatedDelivery = estimatedDelivery;
    return this;
  }

   /**
   * Date of the estimated delivery (or range)
   * @return estimatedDelivery
  **/
  @ApiModelProperty(value = "Date of the estimated delivery (or range)")
  public String getEstimatedDelivery() {
    return estimatedDelivery;
  }

  public void setEstimatedDelivery(String estimatedDelivery) {
    this.estimatedDelivery = estimatedDelivery;
  }

  public CartSettingsShippingEstimate liftGateOption(Boolean liftGateOption) {
    this.liftGateOption = liftGateOption;
    return this;
  }

   /**
   * True if a lift gate option for this method should be offered to the customer
   * @return liftGateOption
  **/
  @ApiModelProperty(value = "True if a lift gate option for this method should be offered to the customer")
  public Boolean isLiftGateOption() {
    return liftGateOption;
  }

  public void setLiftGateOption(Boolean liftGateOption) {
    this.liftGateOption = liftGateOption;
  }

  public CartSettingsShippingEstimate name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Shipping method name
   * @return name
  **/
  @ApiModelProperty(value = "Shipping method name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CartSettingsShippingEstimate tax(Currency tax) {
    this.tax = tax;
    return this;
  }

   /**
   * Get tax
   * @return tax
  **/
  @ApiModelProperty(value = "")
  public Currency getTax() {
    return tax;
  }

  public void setTax(Currency tax) {
    this.tax = tax;
  }

  public CartSettingsShippingEstimate totalTax(Currency totalTax) {
    this.totalTax = totalTax;
    return this;
  }

   /**
   * Get totalTax
   * @return totalTax
  **/
  @ApiModelProperty(value = "")
  public Currency getTotalTax() {
    return totalTax;
  }

  public void setTotalTax(Currency totalTax) {
    this.totalTax = totalTax;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CartSettingsShippingEstimate cartSettingsShippingEstimate = (CartSettingsShippingEstimate) o;
    return Objects.equals(this.allow3rdPartyBilling, cartSettingsShippingEstimate.allow3rdPartyBilling) &&
        Objects.equals(this.comment, cartSettingsShippingEstimate.comment) &&
        Objects.equals(this.cost, cartSettingsShippingEstimate.cost) &&
        Objects.equals(this.costBeforeDiscount, cartSettingsShippingEstimate.costBeforeDiscount) &&
        Objects.equals(this.defaultMethod, cartSettingsShippingEstimate.defaultMethod) &&
        Objects.equals(this.discount, cartSettingsShippingEstimate.discount) &&
        Objects.equals(this.discounted, cartSettingsShippingEstimate.discounted) &&
        Objects.equals(this.displayName, cartSettingsShippingEstimate.displayName) &&
        Objects.equals(this.estimatedDelivery, cartSettingsShippingEstimate.estimatedDelivery) &&
        Objects.equals(this.liftGateOption, cartSettingsShippingEstimate.liftGateOption) &&
        Objects.equals(this.name, cartSettingsShippingEstimate.name) &&
        Objects.equals(this.tax, cartSettingsShippingEstimate.tax) &&
        Objects.equals(this.totalTax, cartSettingsShippingEstimate.totalTax);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allow3rdPartyBilling, comment, cost, costBeforeDiscount, defaultMethod, discount, discounted, displayName, estimatedDelivery, liftGateOption, name, tax, totalTax);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CartSettingsShippingEstimate {\n");
    
    sb.append("    allow3rdPartyBilling: ").append(toIndentedString(allow3rdPartyBilling)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    cost: ").append(toIndentedString(cost)).append("\n");
    sb.append("    costBeforeDiscount: ").append(toIndentedString(costBeforeDiscount)).append("\n");
    sb.append("    defaultMethod: ").append(toIndentedString(defaultMethod)).append("\n");
    sb.append("    discount: ").append(toIndentedString(discount)).append("\n");
    sb.append("    discounted: ").append(toIndentedString(discounted)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    estimatedDelivery: ").append(toIndentedString(estimatedDelivery)).append("\n");
    sb.append("    liftGateOption: ").append(toIndentedString(liftGateOption)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    tax: ").append(toIndentedString(tax)).append("\n");
    sb.append("    totalTax: ").append(toIndentedString(totalTax)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

