/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * EmailPerformanceDaily
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-12-02T15:02:29.645-05:00[America/Indianapolis]")
public class EmailPerformanceDaily {
  public static final String SERIALIZED_NAME_BOUNCE_COUNT = "bounce_count";
  @SerializedName(SERIALIZED_NAME_BOUNCE_COUNT)
  private Integer bounceCount;

  public static final String SERIALIZED_NAME_DELIVERED_COUNT = "delivered_count";
  @SerializedName(SERIALIZED_NAME_DELIVERED_COUNT)
  private Integer deliveredCount;

  public static final String SERIALIZED_NAME_REVENUE = "revenue";
  @SerializedName(SERIALIZED_NAME_REVENUE)
  private BigDecimal revenue;

  public static final String SERIALIZED_NAME_SEQUENCE_SEND_COUNT = "sequence_send_count";
  @SerializedName(SERIALIZED_NAME_SEQUENCE_SEND_COUNT)
  private Integer sequenceSendCount;

  public static final String SERIALIZED_NAME_SPAM_COUNT = "spam_count";
  @SerializedName(SERIALIZED_NAME_SPAM_COUNT)
  private Integer spamCount;

  public static final String SERIALIZED_NAME_STAT_DTS = "stat_dts";
  @SerializedName(SERIALIZED_NAME_STAT_DTS)
  private String statDts;

  public static final String SERIALIZED_NAME_TRANSACTIONAL_SEND_COUNT = "transactional_send_count";
  @SerializedName(SERIALIZED_NAME_TRANSACTIONAL_SEND_COUNT)
  private Integer transactionalSendCount;

  public EmailPerformanceDaily() { 
  }

  public EmailPerformanceDaily bounceCount(Integer bounceCount) {
    
    this.bounceCount = bounceCount;
    return this;
  }

   /**
   * Bounce count
   * @return bounceCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Bounce count")

  public Integer getBounceCount() {
    return bounceCount;
  }


  public void setBounceCount(Integer bounceCount) {
    this.bounceCount = bounceCount;
  }


  public EmailPerformanceDaily deliveredCount(Integer deliveredCount) {
    
    this.deliveredCount = deliveredCount;
    return this;
  }

   /**
   * Delivered count
   * @return deliveredCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Delivered count")

  public Integer getDeliveredCount() {
    return deliveredCount;
  }


  public void setDeliveredCount(Integer deliveredCount) {
    this.deliveredCount = deliveredCount;
  }


  public EmailPerformanceDaily revenue(BigDecimal revenue) {
    
    this.revenue = revenue;
    return this;
  }

   /**
   * Revenue
   * @return revenue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Revenue")

  public BigDecimal getRevenue() {
    return revenue;
  }


  public void setRevenue(BigDecimal revenue) {
    this.revenue = revenue;
  }


  public EmailPerformanceDaily sequenceSendCount(Integer sequenceSendCount) {
    
    this.sequenceSendCount = sequenceSendCount;
    return this;
  }

   /**
   * Total sequence (campaign/flow) emails sent
   * @return sequenceSendCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Total sequence (campaign/flow) emails sent")

  public Integer getSequenceSendCount() {
    return sequenceSendCount;
  }


  public void setSequenceSendCount(Integer sequenceSendCount) {
    this.sequenceSendCount = sequenceSendCount;
  }


  public EmailPerformanceDaily spamCount(Integer spamCount) {
    
    this.spamCount = spamCount;
    return this;
  }

   /**
   * Spam complaints
   * @return spamCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Spam complaints")

  public Integer getSpamCount() {
    return spamCount;
  }


  public void setSpamCount(Integer spamCount) {
    this.spamCount = spamCount;
  }


  public EmailPerformanceDaily statDts(String statDts) {
    
    this.statDts = statDts;
    return this;
  }

   /**
   * The date that these statistcs are for
   * @return statDts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date that these statistcs are for")

  public String getStatDts() {
    return statDts;
  }


  public void setStatDts(String statDts) {
    this.statDts = statDts;
  }


  public EmailPerformanceDaily transactionalSendCount(Integer transactionalSendCount) {
    
    this.transactionalSendCount = transactionalSendCount;
    return this;
  }

   /**
   * Total transactions emails sent
   * @return transactionalSendCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Total transactions emails sent")

  public Integer getTransactionalSendCount() {
    return transactionalSendCount;
  }


  public void setTransactionalSendCount(Integer transactionalSendCount) {
    this.transactionalSendCount = transactionalSendCount;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmailPerformanceDaily emailPerformanceDaily = (EmailPerformanceDaily) o;
    return Objects.equals(this.bounceCount, emailPerformanceDaily.bounceCount) &&
        Objects.equals(this.deliveredCount, emailPerformanceDaily.deliveredCount) &&
        Objects.equals(this.revenue, emailPerformanceDaily.revenue) &&
        Objects.equals(this.sequenceSendCount, emailPerformanceDaily.sequenceSendCount) &&
        Objects.equals(this.spamCount, emailPerformanceDaily.spamCount) &&
        Objects.equals(this.statDts, emailPerformanceDaily.statDts) &&
        Objects.equals(this.transactionalSendCount, emailPerformanceDaily.transactionalSendCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bounceCount, deliveredCount, revenue, sequenceSendCount, spamCount, statDts, transactionalSendCount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmailPerformanceDaily {\n");
    sb.append("    bounceCount: ").append(toIndentedString(bounceCount)).append("\n");
    sb.append("    deliveredCount: ").append(toIndentedString(deliveredCount)).append("\n");
    sb.append("    revenue: ").append(toIndentedString(revenue)).append("\n");
    sb.append("    sequenceSendCount: ").append(toIndentedString(sequenceSendCount)).append("\n");
    sb.append("    spamCount: ").append(toIndentedString(spamCount)).append("\n");
    sb.append("    statDts: ").append(toIndentedString(statDts)).append("\n");
    sb.append("    transactionalSendCount: ").append(toIndentedString(transactionalSendCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("bounce_count");
    openapiFields.add("delivered_count");
    openapiFields.add("revenue");
    openapiFields.add("sequence_send_count");
    openapiFields.add("spam_count");
    openapiFields.add("stat_dts");
    openapiFields.add("transactional_send_count");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to EmailPerformanceDaily
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (EmailPerformanceDaily.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in EmailPerformanceDaily is not found in the empty JSON string", EmailPerformanceDaily.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!EmailPerformanceDaily.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EmailPerformanceDaily` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("stat_dts") != null && !jsonObj.get("stat_dts").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stat_dts` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stat_dts").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EmailPerformanceDaily.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EmailPerformanceDaily' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EmailPerformanceDaily> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EmailPerformanceDaily.class));

       return (TypeAdapter<T>) new TypeAdapter<EmailPerformanceDaily>() {
           @Override
           public void write(JsonWriter out, EmailPerformanceDaily value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EmailPerformanceDaily read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of EmailPerformanceDaily given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of EmailPerformanceDaily
  * @throws IOException if the JSON string is invalid with respect to EmailPerformanceDaily
  */
  public static EmailPerformanceDaily fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EmailPerformanceDaily.class);
  }

 /**
  * Convert an instance of EmailPerformanceDaily to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

