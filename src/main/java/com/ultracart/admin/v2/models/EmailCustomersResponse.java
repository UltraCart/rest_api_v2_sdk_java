/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.EmailCustomer;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * EmailCustomersResponse
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-01-03T15:58:00.972-05:00")



public class EmailCustomersResponse {
  @SerializedName("customers")
  private List<EmailCustomer> customers = null;

  @SerializedName("page_number")
  private Integer pageNumber = null;

  @SerializedName("page_size")
  private Integer pageSize = null;

  @SerializedName("total_customers")
  private Integer totalCustomers = null;

  @SerializedName("total_pages")
  private Integer totalPages = null;

  public EmailCustomersResponse customers(List<EmailCustomer> customers) {
    this.customers = customers;
    return this;
  }

  public EmailCustomersResponse addCustomersItem(EmailCustomer customersItem) {
    if (this.customers == null) {
      this.customers = new ArrayList<EmailCustomer>();
    }
    this.customers.add(customersItem);
    return this;
  }

   /**
   * Customers on the page
   * @return customers
  **/
  @ApiModelProperty(value = "Customers on the page")
  public List<EmailCustomer> getCustomers() {
    return customers;
  }

  public void setCustomers(List<EmailCustomer> customers) {
    this.customers = customers;
  }

  public EmailCustomersResponse pageNumber(Integer pageNumber) {
    this.pageNumber = pageNumber;
    return this;
  }

   /**
   * Page number (one based offset)
   * @return pageNumber
  **/
  @ApiModelProperty(value = "Page number (one based offset)")
  public Integer getPageNumber() {
    return pageNumber;
  }

  public void setPageNumber(Integer pageNumber) {
    this.pageNumber = pageNumber;
  }

  public EmailCustomersResponse pageSize(Integer pageSize) {
    this.pageSize = pageSize;
    return this;
  }

   /**
   * Number of records per page
   * @return pageSize
  **/
  @ApiModelProperty(value = "Number of records per page")
  public Integer getPageSize() {
    return pageSize;
  }

  public void setPageSize(Integer pageSize) {
    this.pageSize = pageSize;
  }

  public EmailCustomersResponse totalCustomers(Integer totalCustomers) {
    this.totalCustomers = totalCustomers;
    return this;
  }

   /**
   * Total customers
   * @return totalCustomers
  **/
  @ApiModelProperty(value = "Total customers")
  public Integer getTotalCustomers() {
    return totalCustomers;
  }

  public void setTotalCustomers(Integer totalCustomers) {
    this.totalCustomers = totalCustomers;
  }

  public EmailCustomersResponse totalPages(Integer totalPages) {
    this.totalPages = totalPages;
    return this;
  }

   /**
   * Total number of pages
   * @return totalPages
  **/
  @ApiModelProperty(value = "Total number of pages")
  public Integer getTotalPages() {
    return totalPages;
  }

  public void setTotalPages(Integer totalPages) {
    this.totalPages = totalPages;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmailCustomersResponse emailCustomersResponse = (EmailCustomersResponse) o;
    return Objects.equals(this.customers, emailCustomersResponse.customers) &&
        Objects.equals(this.pageNumber, emailCustomersResponse.pageNumber) &&
        Objects.equals(this.pageSize, emailCustomersResponse.pageSize) &&
        Objects.equals(this.totalCustomers, emailCustomersResponse.totalCustomers) &&
        Objects.equals(this.totalPages, emailCustomersResponse.totalPages);
  }

  @Override
  public int hashCode() {
    return Objects.hash(customers, pageNumber, pageSize, totalCustomers, totalPages);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmailCustomersResponse {\n");
    
    sb.append("    customers: ").append(toIndentedString(customers)).append("\n");
    sb.append("    pageNumber: ").append(toIndentedString(pageNumber)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    totalCustomers: ").append(toIndentedString(totalCustomers)).append("\n");
    sb.append("    totalPages: ").append(toIndentedString(totalPages)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

