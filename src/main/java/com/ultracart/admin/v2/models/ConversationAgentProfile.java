/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * ConversationAgentProfile
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2025-05-19T13:07:33.024-04:00")



public class ConversationAgentProfile {
  @SerializedName("ai")
  private Boolean ai = null;

  @SerializedName("ai_chat_instructions")
  private String aiChatInstructions = null;

  @SerializedName("ai_persona")
  private String aiPersona = null;

  @SerializedName("ai_sms_instructions")
  private String aiSmsInstructions = null;

  @SerializedName("chat_limit")
  private Integer chatLimit = null;

  @SerializedName("default_language_iso_code")
  private String defaultLanguageIsoCode = null;

  /**
   * Default status when the agent loads conversations app.
   */
  @JsonAdapter(DefaultStatusEnum.Adapter.class)
  public enum DefaultStatusEnum {
    AVAILABLE("available"),
    
    BUSY("busy"),
    
    UNAVAILABLE("unavailable");

    private String value;

    DefaultStatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static DefaultStatusEnum fromValue(String text) {
      for (DefaultStatusEnum b : DefaultStatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<DefaultStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DefaultStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public DefaultStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return DefaultStatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("default_status")
  private DefaultStatusEnum defaultStatus = null;

  @SerializedName("display_name")
  private String displayName = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("profile_image_upload_key")
  private String profileImageUploadKey = null;

  @SerializedName("profile_image_url")
  private String profileImageUrl = null;

  @SerializedName("user_id")
  private Integer userId = null;

  public ConversationAgentProfile ai(Boolean ai) {
    this.ai = ai;
    return this;
  }

   /**
   * AI powered chat bot
   * @return ai
  **/
  @ApiModelProperty(value = "AI powered chat bot")
  public Boolean isAi() {
    return ai;
  }

  public void setAi(Boolean ai) {
    this.ai = ai;
  }

  public ConversationAgentProfile aiChatInstructions(String aiChatInstructions) {
    this.aiChatInstructions = aiChatInstructions;
    return this;
  }

   /**
   * Additional instructions for this AI when handle web chats
   * @return aiChatInstructions
  **/
  @ApiModelProperty(value = "Additional instructions for this AI when handle web chats")
  public String getAiChatInstructions() {
    return aiChatInstructions;
  }

  public void setAiChatInstructions(String aiChatInstructions) {
    this.aiChatInstructions = aiChatInstructions;
  }

  public ConversationAgentProfile aiPersona(String aiPersona) {
    this.aiPersona = aiPersona;
    return this;
  }

   /**
   * Persona of this AI agent
   * @return aiPersona
  **/
  @ApiModelProperty(value = "Persona of this AI agent")
  public String getAiPersona() {
    return aiPersona;
  }

  public void setAiPersona(String aiPersona) {
    this.aiPersona = aiPersona;
  }

  public ConversationAgentProfile aiSmsInstructions(String aiSmsInstructions) {
    this.aiSmsInstructions = aiSmsInstructions;
    return this;
  }

   /**
   * Additional instructions for this AI when handle SMS messages
   * @return aiSmsInstructions
  **/
  @ApiModelProperty(value = "Additional instructions for this AI when handle SMS messages")
  public String getAiSmsInstructions() {
    return aiSmsInstructions;
  }

  public void setAiSmsInstructions(String aiSmsInstructions) {
    this.aiSmsInstructions = aiSmsInstructions;
  }

  public ConversationAgentProfile chatLimit(Integer chatLimit) {
    this.chatLimit = chatLimit;
    return this;
  }

   /**
   * The number of engagement chats that can be pushed on them at any given time.
   * @return chatLimit
  **/
  @ApiModelProperty(value = "The number of engagement chats that can be pushed on them at any given time.")
  public Integer getChatLimit() {
    return chatLimit;
  }

  public void setChatLimit(Integer chatLimit) {
    this.chatLimit = chatLimit;
  }

  public ConversationAgentProfile defaultLanguageIsoCode(String defaultLanguageIsoCode) {
    this.defaultLanguageIsoCode = defaultLanguageIsoCode;
    return this;
  }

   /**
   * The default language the agent is chatting in
   * @return defaultLanguageIsoCode
  **/
  @ApiModelProperty(value = "The default language the agent is chatting in")
  public String getDefaultLanguageIsoCode() {
    return defaultLanguageIsoCode;
  }

  public void setDefaultLanguageIsoCode(String defaultLanguageIsoCode) {
    this.defaultLanguageIsoCode = defaultLanguageIsoCode;
  }

  public ConversationAgentProfile defaultStatus(DefaultStatusEnum defaultStatus) {
    this.defaultStatus = defaultStatus;
    return this;
  }

   /**
   * Default status when the agent loads conversations app.
   * @return defaultStatus
  **/
  @ApiModelProperty(value = "Default status when the agent loads conversations app.")
  public DefaultStatusEnum getDefaultStatus() {
    return defaultStatus;
  }

  public void setDefaultStatus(DefaultStatusEnum defaultStatus) {
    this.defaultStatus = defaultStatus;
  }

  public ConversationAgentProfile displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

   /**
   * An alternate name that the agent wants to use in chat.
   * @return displayName
  **/
  @ApiModelProperty(value = "An alternate name that the agent wants to use in chat.")
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }

  public ConversationAgentProfile name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Their actual user name for profile settings display as placeholder test
   * @return name
  **/
  @ApiModelProperty(value = "Their actual user name for profile settings display as placeholder test")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ConversationAgentProfile profileImageUploadKey(String profileImageUploadKey) {
    this.profileImageUploadKey = profileImageUploadKey;
    return this;
  }

   /**
   * An upload key used to update the profile image.
   * @return profileImageUploadKey
  **/
  @ApiModelProperty(value = "An upload key used to update the profile image.")
  public String getProfileImageUploadKey() {
    return profileImageUploadKey;
  }

  public void setProfileImageUploadKey(String profileImageUploadKey) {
    this.profileImageUploadKey = profileImageUploadKey;
  }

  public ConversationAgentProfile profileImageUrl(String profileImageUrl) {
    this.profileImageUrl = profileImageUrl;
    return this;
  }

   /**
   * Their current profile image URL
   * @return profileImageUrl
  **/
  @ApiModelProperty(value = "Their current profile image URL")
  public String getProfileImageUrl() {
    return profileImageUrl;
  }

  public void setProfileImageUrl(String profileImageUrl) {
    this.profileImageUrl = profileImageUrl;
  }

  public ConversationAgentProfile userId(Integer userId) {
    this.userId = userId;
    return this;
  }

   /**
   * User ID associated with the agent.  Populated by getAgentProfiles call only.
   * @return userId
  **/
  @ApiModelProperty(value = "User ID associated with the agent.  Populated by getAgentProfiles call only.")
  public Integer getUserId() {
    return userId;
  }

  public void setUserId(Integer userId) {
    this.userId = userId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConversationAgentProfile conversationAgentProfile = (ConversationAgentProfile) o;
    return Objects.equals(this.ai, conversationAgentProfile.ai) &&
        Objects.equals(this.aiChatInstructions, conversationAgentProfile.aiChatInstructions) &&
        Objects.equals(this.aiPersona, conversationAgentProfile.aiPersona) &&
        Objects.equals(this.aiSmsInstructions, conversationAgentProfile.aiSmsInstructions) &&
        Objects.equals(this.chatLimit, conversationAgentProfile.chatLimit) &&
        Objects.equals(this.defaultLanguageIsoCode, conversationAgentProfile.defaultLanguageIsoCode) &&
        Objects.equals(this.defaultStatus, conversationAgentProfile.defaultStatus) &&
        Objects.equals(this.displayName, conversationAgentProfile.displayName) &&
        Objects.equals(this.name, conversationAgentProfile.name) &&
        Objects.equals(this.profileImageUploadKey, conversationAgentProfile.profileImageUploadKey) &&
        Objects.equals(this.profileImageUrl, conversationAgentProfile.profileImageUrl) &&
        Objects.equals(this.userId, conversationAgentProfile.userId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ai, aiChatInstructions, aiPersona, aiSmsInstructions, chatLimit, defaultLanguageIsoCode, defaultStatus, displayName, name, profileImageUploadKey, profileImageUrl, userId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConversationAgentProfile {\n");
    
    sb.append("    ai: ").append(toIndentedString(ai)).append("\n");
    sb.append("    aiChatInstructions: ").append(toIndentedString(aiChatInstructions)).append("\n");
    sb.append("    aiPersona: ").append(toIndentedString(aiPersona)).append("\n");
    sb.append("    aiSmsInstructions: ").append(toIndentedString(aiSmsInstructions)).append("\n");
    sb.append("    chatLimit: ").append(toIndentedString(chatLimit)).append("\n");
    sb.append("    defaultLanguageIsoCode: ").append(toIndentedString(defaultLanguageIsoCode)).append("\n");
    sb.append("    defaultStatus: ").append(toIndentedString(defaultStatus)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    profileImageUploadKey: ").append(toIndentedString(profileImageUploadKey)).append("\n");
    sb.append("    profileImageUrl: ").append(toIndentedString(profileImageUrl)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

