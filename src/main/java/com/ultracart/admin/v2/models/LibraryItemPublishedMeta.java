/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * LibraryItemPublishedMeta
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-05-12T12:03:12.162-04:00")



public class LibraryItemPublishedMeta {
  @SerializedName("count_of_versions")
  private Integer countOfVersions = null;

  @SerializedName("library_item_published_oid")
  private Integer libraryItemPublishedOid = null;

  @SerializedName("library_item_review_oid")
  private Integer libraryItemReviewOid = null;

  @SerializedName("rejected")
  private Boolean rejected = null;

  @SerializedName("rejected_reason")
  private String rejectedReason = null;

  @SerializedName("release_version")
  private Integer releaseVersion = null;

  @SerializedName("review_version")
  private Integer reviewVersion = null;

  @SerializedName("under_review")
  private Boolean underReview = null;

  public LibraryItemPublishedMeta countOfVersions(Integer countOfVersions) {
    this.countOfVersions = countOfVersions;
    return this;
  }

   /**
   * The number of published versions a source item has, or zero if this item is not a source or is private
   * @return countOfVersions
  **/
  @ApiModelProperty(value = "The number of published versions a source item has, or zero if this item is not a source or is private")
  public Integer getCountOfVersions() {
    return countOfVersions;
  }

  public void setCountOfVersions(Integer countOfVersions) {
    this.countOfVersions = countOfVersions;
  }

  public LibraryItemPublishedMeta libraryItemPublishedOid(Integer libraryItemPublishedOid) {
    this.libraryItemPublishedOid = libraryItemPublishedOid;
    return this;
  }

   /**
   * The oid pointing to the most recent published version, or zero if this is not a published source item.
   * @return libraryItemPublishedOid
  **/
  @ApiModelProperty(value = "The oid pointing to the most recent published version, or zero if this is not a published source item.")
  public Integer getLibraryItemPublishedOid() {
    return libraryItemPublishedOid;
  }

  public void setLibraryItemPublishedOid(Integer libraryItemPublishedOid) {
    this.libraryItemPublishedOid = libraryItemPublishedOid;
  }

  public LibraryItemPublishedMeta libraryItemReviewOid(Integer libraryItemReviewOid) {
    this.libraryItemReviewOid = libraryItemReviewOid;
    return this;
  }

   /**
   * The oid pointing to the review data if this is a source library item and currently under review
   * @return libraryItemReviewOid
  **/
  @ApiModelProperty(value = "The oid pointing to the review data if this is a source library item and currently under review")
  public Integer getLibraryItemReviewOid() {
    return libraryItemReviewOid;
  }

  public void setLibraryItemReviewOid(Integer libraryItemReviewOid) {
    this.libraryItemReviewOid = libraryItemReviewOid;
  }

  public LibraryItemPublishedMeta rejected(Boolean rejected) {
    this.rejected = rejected;
    return this;
  }

   /**
   * True if this is a source item and is under review and was rejected.
   * @return rejected
  **/
  @ApiModelProperty(value = "True if this is a source item and is under review and was rejected.")
  public Boolean isRejected() {
    return rejected;
  }

  public void setRejected(Boolean rejected) {
    this.rejected = rejected;
  }

  public LibraryItemPublishedMeta rejectedReason(String rejectedReason) {
    this.rejectedReason = rejectedReason;
    return this;
  }

   /**
   * The reason for rejection if this item is a source item, is under review, and was rejected.  For all other cases, this value will be null or missing.
   * @return rejectedReason
  **/
  @ApiModelProperty(value = "The reason for rejection if this item is a source item, is under review, and was rejected.  For all other cases, this value will be null or missing.")
  public String getRejectedReason() {
    return rejectedReason;
  }

  public void setRejectedReason(String rejectedReason) {
    this.rejectedReason = rejectedReason;
  }

  public LibraryItemPublishedMeta releaseVersion(Integer releaseVersion) {
    this.releaseVersion = releaseVersion;
    return this;
  }

   /**
   * If this library item is a source item and it is published, this is the most recent release version number
   * @return releaseVersion
  **/
  @ApiModelProperty(value = "If this library item is a source item and it is published, this is the most recent release version number")
  public Integer getReleaseVersion() {
    return releaseVersion;
  }

  public void setReleaseVersion(Integer releaseVersion) {
    this.releaseVersion = releaseVersion;
  }

  public LibraryItemPublishedMeta reviewVersion(Integer reviewVersion) {
    this.reviewVersion = reviewVersion;
    return this;
  }

   /**
   * If this library item is a source item and has a published item currently under review, this is that version number
   * @return reviewVersion
  **/
  @ApiModelProperty(value = "If this library item is a source item and has a published item currently under review, this is that version number")
  public Integer getReviewVersion() {
    return reviewVersion;
  }

  public void setReviewVersion(Integer reviewVersion) {
    this.reviewVersion = reviewVersion;
  }

  public LibraryItemPublishedMeta underReview(Boolean underReview) {
    this.underReview = underReview;
    return this;
  }

   /**
   * True if this library item is a source item and is currently under review
   * @return underReview
  **/
  @ApiModelProperty(value = "True if this library item is a source item and is currently under review")
  public Boolean isUnderReview() {
    return underReview;
  }

  public void setUnderReview(Boolean underReview) {
    this.underReview = underReview;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LibraryItemPublishedMeta libraryItemPublishedMeta = (LibraryItemPublishedMeta) o;
    return Objects.equals(this.countOfVersions, libraryItemPublishedMeta.countOfVersions) &&
        Objects.equals(this.libraryItemPublishedOid, libraryItemPublishedMeta.libraryItemPublishedOid) &&
        Objects.equals(this.libraryItemReviewOid, libraryItemPublishedMeta.libraryItemReviewOid) &&
        Objects.equals(this.rejected, libraryItemPublishedMeta.rejected) &&
        Objects.equals(this.rejectedReason, libraryItemPublishedMeta.rejectedReason) &&
        Objects.equals(this.releaseVersion, libraryItemPublishedMeta.releaseVersion) &&
        Objects.equals(this.reviewVersion, libraryItemPublishedMeta.reviewVersion) &&
        Objects.equals(this.underReview, libraryItemPublishedMeta.underReview);
  }

  @Override
  public int hashCode() {
    return Objects.hash(countOfVersions, libraryItemPublishedOid, libraryItemReviewOid, rejected, rejectedReason, releaseVersion, reviewVersion, underReview);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LibraryItemPublishedMeta {\n");
    
    sb.append("    countOfVersions: ").append(toIndentedString(countOfVersions)).append("\n");
    sb.append("    libraryItemPublishedOid: ").append(toIndentedString(libraryItemPublishedOid)).append("\n");
    sb.append("    libraryItemReviewOid: ").append(toIndentedString(libraryItemReviewOid)).append("\n");
    sb.append("    rejected: ").append(toIndentedString(rejected)).append("\n");
    sb.append("    rejectedReason: ").append(toIndentedString(rejectedReason)).append("\n");
    sb.append("    releaseVersion: ").append(toIndentedString(releaseVersion)).append("\n");
    sb.append("    reviewVersion: ").append(toIndentedString(reviewVersion)).append("\n");
    sb.append("    underReview: ").append(toIndentedString(underReview)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

