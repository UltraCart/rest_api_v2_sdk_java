/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * OrderCurrentStageHistory
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2025-08-04T14:34:21.528-04:00")



public class OrderCurrentStageHistory {
  /**
   * New stage that the order is in.
   */
  @JsonAdapter(AfterStageEnum.Adapter.class)
  public enum AfterStageEnum {
    ACCOUNTS_RECEIVABLE("Accounts Receivable"),
    
    PENDING_CLEARANCE("Pending Clearance"),
    
    FRAUD_REVIEW("Fraud Review"),
    
    REJECTED("Rejected"),
    
    SHIPPING_DEPARTMENT("Shipping Department"),
    
    COMPLETED_ORDER("Completed Order"),
    
    QUOTE_REQUEST("Quote Request"),
    
    QUOTE_SENT("Quote Sent"),
    
    LEAST_COST_ROUTING("Least Cost Routing"),
    
    UNKNOWN("Unknown"),
    
    PRE_ORDERED("Pre-ordered"),
    
    ADVANCED_ORDER_ROUTING("Advanced Order Routing"),
    
    HOLD("Hold");

    private String value;

    AfterStageEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AfterStageEnum fromValue(String text) {
      for (AfterStageEnum b : AfterStageEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<AfterStageEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AfterStageEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AfterStageEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return AfterStageEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("after_stage")
  private AfterStageEnum afterStage = null;

  /**
   * Previous stage that the order was in.
   */
  @JsonAdapter(BeforeStageEnum.Adapter.class)
  public enum BeforeStageEnum {
    ACCOUNTS_RECEIVABLE("Accounts Receivable"),
    
    PENDING_CLEARANCE("Pending Clearance"),
    
    FRAUD_REVIEW("Fraud Review"),
    
    REJECTED("Rejected"),
    
    SHIPPING_DEPARTMENT("Shipping Department"),
    
    COMPLETED_ORDER("Completed Order"),
    
    QUOTE_REQUEST("Quote Request"),
    
    QUOTE_SENT("Quote Sent"),
    
    LEAST_COST_ROUTING("Least Cost Routing"),
    
    UNKNOWN("Unknown"),
    
    PRE_ORDERED("Pre-ordered"),
    
    ADVANCED_ORDER_ROUTING("Advanced Order Routing"),
    
    HOLD("Hold");

    private String value;

    BeforeStageEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static BeforeStageEnum fromValue(String text) {
      for (BeforeStageEnum b : BeforeStageEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<BeforeStageEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final BeforeStageEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public BeforeStageEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return BeforeStageEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("before_stage")
  private BeforeStageEnum beforeStage = null;

  @SerializedName("transition_dts")
  private String transitionDts = null;

  public OrderCurrentStageHistory afterStage(AfterStageEnum afterStage) {
    this.afterStage = afterStage;
    return this;
  }

   /**
   * New stage that the order is in.
   * @return afterStage
  **/
  @ApiModelProperty(value = "New stage that the order is in.")
  public AfterStageEnum getAfterStage() {
    return afterStage;
  }

  public void setAfterStage(AfterStageEnum afterStage) {
    this.afterStage = afterStage;
  }

  public OrderCurrentStageHistory beforeStage(BeforeStageEnum beforeStage) {
    this.beforeStage = beforeStage;
    return this;
  }

   /**
   * Previous stage that the order was in.
   * @return beforeStage
  **/
  @ApiModelProperty(value = "Previous stage that the order was in.")
  public BeforeStageEnum getBeforeStage() {
    return beforeStage;
  }

  public void setBeforeStage(BeforeStageEnum beforeStage) {
    this.beforeStage = beforeStage;
  }

  public OrderCurrentStageHistory transitionDts(String transitionDts) {
    this.transitionDts = transitionDts;
    return this;
  }

   /**
   * Date/time that the stage transitioned
   * @return transitionDts
  **/
  @ApiModelProperty(value = "Date/time that the stage transitioned")
  public String getTransitionDts() {
    return transitionDts;
  }

  public void setTransitionDts(String transitionDts) {
    this.transitionDts = transitionDts;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderCurrentStageHistory orderCurrentStageHistory = (OrderCurrentStageHistory) o;
    return Objects.equals(this.afterStage, orderCurrentStageHistory.afterStage) &&
        Objects.equals(this.beforeStage, orderCurrentStageHistory.beforeStage) &&
        Objects.equals(this.transitionDts, orderCurrentStageHistory.transitionDts);
  }

  @Override
  public int hashCode() {
    return Objects.hash(afterStage, beforeStage, transitionDts);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderCurrentStageHistory {\n");
    
    sb.append("    afterStage: ").append(toIndentedString(afterStage)).append("\n");
    sb.append("    beforeStage: ").append(toIndentedString(beforeStage)).append("\n");
    sb.append("    transitionDts: ").append(toIndentedString(transitionDts)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

