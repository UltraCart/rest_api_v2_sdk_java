/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * AutoOrderQuery
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-04T14:09:35.885-04:00[America/Indianapolis]")
public class AutoOrderQuery {
  public static final String SERIALIZED_NAME_AUTO_ORDER_CODE = "auto_order_code";
  @SerializedName(SERIALIZED_NAME_AUTO_ORDER_CODE)
  private String autoOrderCode;

  public static final String SERIALIZED_NAME_CARD_TYPE = "card_type";
  @SerializedName(SERIALIZED_NAME_CARD_TYPE)
  private String cardType;

  public static final String SERIALIZED_NAME_CITY = "city";
  @SerializedName(SERIALIZED_NAME_CITY)
  private String city;

  public static final String SERIALIZED_NAME_COMPANY = "company";
  @SerializedName(SERIALIZED_NAME_COMPANY)
  private String company;

  public static final String SERIALIZED_NAME_COUNTRY_CODE = "country_code";
  @SerializedName(SERIALIZED_NAME_COUNTRY_CODE)
  private String countryCode;

  public static final String SERIALIZED_NAME_CUSTOMER_PROFILE_OID = "customer_profile_oid";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_PROFILE_OID)
  private Integer customerProfileOid;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_FIRST_NAME = "first_name";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  private String firstName;

  public static final String SERIALIZED_NAME_ITEM_ID = "item_id";
  @SerializedName(SERIALIZED_NAME_ITEM_ID)
  private String itemId;

  public static final String SERIALIZED_NAME_LAST_NAME = "last_name";
  @SerializedName(SERIALIZED_NAME_LAST_NAME)
  private String lastName;

  public static final String SERIALIZED_NAME_NEXT_ITEM_ID = "next_item_id";
  @SerializedName(SERIALIZED_NAME_NEXT_ITEM_ID)
  private String nextItemId;

  public static final String SERIALIZED_NAME_NEXT_SHIPMENT_DATE_BEGIN = "next_shipment_date_begin";
  @SerializedName(SERIALIZED_NAME_NEXT_SHIPMENT_DATE_BEGIN)
  private String nextShipmentDateBegin;

  public static final String SERIALIZED_NAME_NEXT_SHIPMENT_DATE_END = "next_shipment_date_end";
  @SerializedName(SERIALIZED_NAME_NEXT_SHIPMENT_DATE_END)
  private String nextShipmentDateEnd;

  public static final String SERIALIZED_NAME_ORIGINAL_ITEM_ID = "original_item_id";
  @SerializedName(SERIALIZED_NAME_ORIGINAL_ITEM_ID)
  private String originalItemId;

  public static final String SERIALIZED_NAME_ORIGINAL_ORDER_DATE_BEGIN = "original_order_date_begin";
  @SerializedName(SERIALIZED_NAME_ORIGINAL_ORDER_DATE_BEGIN)
  private String originalOrderDateBegin;

  public static final String SERIALIZED_NAME_ORIGINAL_ORDER_DATE_END = "original_order_date_end";
  @SerializedName(SERIALIZED_NAME_ORIGINAL_ORDER_DATE_END)
  private String originalOrderDateEnd;

  public static final String SERIALIZED_NAME_ORIGINAL_ORDER_ID = "original_order_id";
  @SerializedName(SERIALIZED_NAME_ORIGINAL_ORDER_ID)
  private String originalOrderId;

  public static final String SERIALIZED_NAME_PHONE = "phone";
  @SerializedName(SERIALIZED_NAME_PHONE)
  private String phone;

  public static final String SERIALIZED_NAME_POSTAL_CODE = "postal_code";
  @SerializedName(SERIALIZED_NAME_POSTAL_CODE)
  private String postalCode;

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private String state;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public AutoOrderQuery() { 
  }

  public AutoOrderQuery autoOrderCode(String autoOrderCode) {
    
    this.autoOrderCode = autoOrderCode;
    return this;
  }

   /**
   * Auto order code
   * @return autoOrderCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Auto order code")

  public String getAutoOrderCode() {
    return autoOrderCode;
  }


  public void setAutoOrderCode(String autoOrderCode) {
    this.autoOrderCode = autoOrderCode;
  }


  public AutoOrderQuery cardType(String cardType) {
    
    this.cardType = cardType;
    return this;
  }

   /**
   * Card type
   * @return cardType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Card type")

  public String getCardType() {
    return cardType;
  }


  public void setCardType(String cardType) {
    this.cardType = cardType;
  }


  public AutoOrderQuery city(String city) {
    
    this.city = city;
    return this;
  }

   /**
   * City
   * @return city
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "City")

  public String getCity() {
    return city;
  }


  public void setCity(String city) {
    this.city = city;
  }


  public AutoOrderQuery company(String company) {
    
    this.company = company;
    return this;
  }

   /**
   * Company
   * @return company
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Company")

  public String getCompany() {
    return company;
  }


  public void setCompany(String company) {
    this.company = company;
  }


  public AutoOrderQuery countryCode(String countryCode) {
    
    this.countryCode = countryCode;
    return this;
  }

   /**
   * ISO-3166 two letter country code
   * @return countryCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ISO-3166 two letter country code")

  public String getCountryCode() {
    return countryCode;
  }


  public void setCountryCode(String countryCode) {
    this.countryCode = countryCode;
  }


  public AutoOrderQuery customerProfileOid(Integer customerProfileOid) {
    
    this.customerProfileOid = customerProfileOid;
    return this;
  }

   /**
   * Customer profile object identifier
   * @return customerProfileOid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Customer profile object identifier")

  public Integer getCustomerProfileOid() {
    return customerProfileOid;
  }


  public void setCustomerProfileOid(Integer customerProfileOid) {
    this.customerProfileOid = customerProfileOid;
  }


  public AutoOrderQuery email(String email) {
    
    this.email = email;
    return this;
  }

   /**
   * Email
   * @return email
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Email")

  public String getEmail() {
    return email;
  }


  public void setEmail(String email) {
    this.email = email;
  }


  public AutoOrderQuery firstName(String firstName) {
    
    this.firstName = firstName;
    return this;
  }

   /**
   * First name
   * @return firstName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "First name")

  public String getFirstName() {
    return firstName;
  }


  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }


  public AutoOrderQuery itemId(String itemId) {
    
    this.itemId = itemId;
    return this;
  }

   /**
   * Item ID.  Deprecated query field.  This incorrectly meant the original order contained this item id.
   * @return itemId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Item ID.  Deprecated query field.  This incorrectly meant the original order contained this item id.")

  public String getItemId() {
    return itemId;
  }


  public void setItemId(String itemId) {
    this.itemId = itemId;
  }


  public AutoOrderQuery lastName(String lastName) {
    
    this.lastName = lastName;
    return this;
  }

   /**
   * Last name
   * @return lastName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Last name")

  public String getLastName() {
    return lastName;
  }


  public void setLastName(String lastName) {
    this.lastName = lastName;
  }


  public AutoOrderQuery nextItemId(String nextItemId) {
    
    this.nextItemId = nextItemId;
    return this;
  }

   /**
   * Next Item ID that is supposed to ship.  This is calculated based upon the schedule associated with the original item id.
   * @return nextItemId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Next Item ID that is supposed to ship.  This is calculated based upon the schedule associated with the original item id.")

  public String getNextItemId() {
    return nextItemId;
  }


  public void setNextItemId(String nextItemId) {
    this.nextItemId = nextItemId;
  }


  public AutoOrderQuery nextShipmentDateBegin(String nextShipmentDateBegin) {
    
    this.nextShipmentDateBegin = nextShipmentDateBegin;
    return this;
  }

   /**
   * Next shipment date begin
   * @return nextShipmentDateBegin
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Next shipment date begin")

  public String getNextShipmentDateBegin() {
    return nextShipmentDateBegin;
  }


  public void setNextShipmentDateBegin(String nextShipmentDateBegin) {
    this.nextShipmentDateBegin = nextShipmentDateBegin;
  }


  public AutoOrderQuery nextShipmentDateEnd(String nextShipmentDateEnd) {
    
    this.nextShipmentDateEnd = nextShipmentDateEnd;
    return this;
  }

   /**
   * Next shipment date end
   * @return nextShipmentDateEnd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Next shipment date end")

  public String getNextShipmentDateEnd() {
    return nextShipmentDateEnd;
  }


  public void setNextShipmentDateEnd(String nextShipmentDateEnd) {
    this.nextShipmentDateEnd = nextShipmentDateEnd;
  }


  public AutoOrderQuery originalItemId(String originalItemId) {
    
    this.originalItemId = originalItemId;
    return this;
  }

   /**
   * Original Item ID purchased on auto order.
   * @return originalItemId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Original Item ID purchased on auto order.")

  public String getOriginalItemId() {
    return originalItemId;
  }


  public void setOriginalItemId(String originalItemId) {
    this.originalItemId = originalItemId;
  }


  public AutoOrderQuery originalOrderDateBegin(String originalOrderDateBegin) {
    
    this.originalOrderDateBegin = originalOrderDateBegin;
    return this;
  }

   /**
   * Original order date begin
   * @return originalOrderDateBegin
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Original order date begin")

  public String getOriginalOrderDateBegin() {
    return originalOrderDateBegin;
  }


  public void setOriginalOrderDateBegin(String originalOrderDateBegin) {
    this.originalOrderDateBegin = originalOrderDateBegin;
  }


  public AutoOrderQuery originalOrderDateEnd(String originalOrderDateEnd) {
    
    this.originalOrderDateEnd = originalOrderDateEnd;
    return this;
  }

   /**
   * Original order date end
   * @return originalOrderDateEnd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Original order date end")

  public String getOriginalOrderDateEnd() {
    return originalOrderDateEnd;
  }


  public void setOriginalOrderDateEnd(String originalOrderDateEnd) {
    this.originalOrderDateEnd = originalOrderDateEnd;
  }


  public AutoOrderQuery originalOrderId(String originalOrderId) {
    
    this.originalOrderId = originalOrderId;
    return this;
  }

   /**
   * Original order ID
   * @return originalOrderId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Original order ID")

  public String getOriginalOrderId() {
    return originalOrderId;
  }


  public void setOriginalOrderId(String originalOrderId) {
    this.originalOrderId = originalOrderId;
  }


  public AutoOrderQuery phone(String phone) {
    
    this.phone = phone;
    return this;
  }

   /**
   * Phone
   * @return phone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Phone")

  public String getPhone() {
    return phone;
  }


  public void setPhone(String phone) {
    this.phone = phone;
  }


  public AutoOrderQuery postalCode(String postalCode) {
    
    this.postalCode = postalCode;
    return this;
  }

   /**
   * Postal code
   * @return postalCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Postal code")

  public String getPostalCode() {
    return postalCode;
  }


  public void setPostalCode(String postalCode) {
    this.postalCode = postalCode;
  }


  public AutoOrderQuery state(String state) {
    
    this.state = state;
    return this;
  }

   /**
   * State
   * @return state
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "State")

  public String getState() {
    return state;
  }


  public void setState(String state) {
    this.state = state;
  }


  public AutoOrderQuery status(String status) {
    
    this.status = status;
    return this;
  }

   /**
   * Status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Status")

  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    this.status = status;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AutoOrderQuery autoOrderQuery = (AutoOrderQuery) o;
    return Objects.equals(this.autoOrderCode, autoOrderQuery.autoOrderCode) &&
        Objects.equals(this.cardType, autoOrderQuery.cardType) &&
        Objects.equals(this.city, autoOrderQuery.city) &&
        Objects.equals(this.company, autoOrderQuery.company) &&
        Objects.equals(this.countryCode, autoOrderQuery.countryCode) &&
        Objects.equals(this.customerProfileOid, autoOrderQuery.customerProfileOid) &&
        Objects.equals(this.email, autoOrderQuery.email) &&
        Objects.equals(this.firstName, autoOrderQuery.firstName) &&
        Objects.equals(this.itemId, autoOrderQuery.itemId) &&
        Objects.equals(this.lastName, autoOrderQuery.lastName) &&
        Objects.equals(this.nextItemId, autoOrderQuery.nextItemId) &&
        Objects.equals(this.nextShipmentDateBegin, autoOrderQuery.nextShipmentDateBegin) &&
        Objects.equals(this.nextShipmentDateEnd, autoOrderQuery.nextShipmentDateEnd) &&
        Objects.equals(this.originalItemId, autoOrderQuery.originalItemId) &&
        Objects.equals(this.originalOrderDateBegin, autoOrderQuery.originalOrderDateBegin) &&
        Objects.equals(this.originalOrderDateEnd, autoOrderQuery.originalOrderDateEnd) &&
        Objects.equals(this.originalOrderId, autoOrderQuery.originalOrderId) &&
        Objects.equals(this.phone, autoOrderQuery.phone) &&
        Objects.equals(this.postalCode, autoOrderQuery.postalCode) &&
        Objects.equals(this.state, autoOrderQuery.state) &&
        Objects.equals(this.status, autoOrderQuery.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(autoOrderCode, cardType, city, company, countryCode, customerProfileOid, email, firstName, itemId, lastName, nextItemId, nextShipmentDateBegin, nextShipmentDateEnd, originalItemId, originalOrderDateBegin, originalOrderDateEnd, originalOrderId, phone, postalCode, state, status);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AutoOrderQuery {\n");
    sb.append("    autoOrderCode: ").append(toIndentedString(autoOrderCode)).append("\n");
    sb.append("    cardType: ").append(toIndentedString(cardType)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    company: ").append(toIndentedString(company)).append("\n");
    sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
    sb.append("    customerProfileOid: ").append(toIndentedString(customerProfileOid)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    itemId: ").append(toIndentedString(itemId)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    nextItemId: ").append(toIndentedString(nextItemId)).append("\n");
    sb.append("    nextShipmentDateBegin: ").append(toIndentedString(nextShipmentDateBegin)).append("\n");
    sb.append("    nextShipmentDateEnd: ").append(toIndentedString(nextShipmentDateEnd)).append("\n");
    sb.append("    originalItemId: ").append(toIndentedString(originalItemId)).append("\n");
    sb.append("    originalOrderDateBegin: ").append(toIndentedString(originalOrderDateBegin)).append("\n");
    sb.append("    originalOrderDateEnd: ").append(toIndentedString(originalOrderDateEnd)).append("\n");
    sb.append("    originalOrderId: ").append(toIndentedString(originalOrderId)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("auto_order_code");
    openapiFields.add("card_type");
    openapiFields.add("city");
    openapiFields.add("company");
    openapiFields.add("country_code");
    openapiFields.add("customer_profile_oid");
    openapiFields.add("email");
    openapiFields.add("first_name");
    openapiFields.add("item_id");
    openapiFields.add("last_name");
    openapiFields.add("next_item_id");
    openapiFields.add("next_shipment_date_begin");
    openapiFields.add("next_shipment_date_end");
    openapiFields.add("original_item_id");
    openapiFields.add("original_order_date_begin");
    openapiFields.add("original_order_date_end");
    openapiFields.add("original_order_id");
    openapiFields.add("phone");
    openapiFields.add("postal_code");
    openapiFields.add("state");
    openapiFields.add("status");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to AutoOrderQuery
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (AutoOrderQuery.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in AutoOrderQuery is not found in the empty JSON string", AutoOrderQuery.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!AutoOrderQuery.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AutoOrderQuery` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("auto_order_code") != null && !jsonObj.get("auto_order_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `auto_order_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("auto_order_code").toString()));
      }
      if (jsonObj.get("card_type") != null && !jsonObj.get("card_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `card_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("card_type").toString()));
      }
      if (jsonObj.get("city") != null && !jsonObj.get("city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("city").toString()));
      }
      if (jsonObj.get("company") != null && !jsonObj.get("company").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `company` to be a primitive type in the JSON string but got `%s`", jsonObj.get("company").toString()));
      }
      if (jsonObj.get("country_code") != null && !jsonObj.get("country_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `country_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("country_code").toString()));
      }
      if (jsonObj.get("email") != null && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if (jsonObj.get("first_name") != null && !jsonObj.get("first_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `first_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("first_name").toString()));
      }
      if (jsonObj.get("item_id") != null && !jsonObj.get("item_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `item_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("item_id").toString()));
      }
      if (jsonObj.get("last_name") != null && !jsonObj.get("last_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_name").toString()));
      }
      if (jsonObj.get("next_item_id") != null && !jsonObj.get("next_item_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `next_item_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("next_item_id").toString()));
      }
      if (jsonObj.get("next_shipment_date_begin") != null && !jsonObj.get("next_shipment_date_begin").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `next_shipment_date_begin` to be a primitive type in the JSON string but got `%s`", jsonObj.get("next_shipment_date_begin").toString()));
      }
      if (jsonObj.get("next_shipment_date_end") != null && !jsonObj.get("next_shipment_date_end").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `next_shipment_date_end` to be a primitive type in the JSON string but got `%s`", jsonObj.get("next_shipment_date_end").toString()));
      }
      if (jsonObj.get("original_item_id") != null && !jsonObj.get("original_item_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `original_item_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("original_item_id").toString()));
      }
      if (jsonObj.get("original_order_date_begin") != null && !jsonObj.get("original_order_date_begin").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `original_order_date_begin` to be a primitive type in the JSON string but got `%s`", jsonObj.get("original_order_date_begin").toString()));
      }
      if (jsonObj.get("original_order_date_end") != null && !jsonObj.get("original_order_date_end").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `original_order_date_end` to be a primitive type in the JSON string but got `%s`", jsonObj.get("original_order_date_end").toString()));
      }
      if (jsonObj.get("original_order_id") != null && !jsonObj.get("original_order_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `original_order_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("original_order_id").toString()));
      }
      if (jsonObj.get("phone") != null && !jsonObj.get("phone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `phone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phone").toString()));
      }
      if (jsonObj.get("postal_code") != null && !jsonObj.get("postal_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `postal_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("postal_code").toString()));
      }
      if (jsonObj.get("state") != null && !jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AutoOrderQuery.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AutoOrderQuery' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AutoOrderQuery> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AutoOrderQuery.class));

       return (TypeAdapter<T>) new TypeAdapter<AutoOrderQuery>() {
           @Override
           public void write(JsonWriter out, AutoOrderQuery value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AutoOrderQuery read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AutoOrderQuery given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AutoOrderQuery
  * @throws IOException if the JSON string is invalid with respect to AutoOrderQuery
  */
  public static AutoOrderQuery fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AutoOrderQuery.class);
  }

 /**
  * Convert an instance of AutoOrderQuery to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

