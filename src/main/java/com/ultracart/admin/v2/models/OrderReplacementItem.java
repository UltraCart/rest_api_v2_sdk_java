/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * OrderReplacementItem
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-04-19T09:45:42.948-04:00")



public class OrderReplacementItem {
  @SerializedName("arbitrary_unit_cost")
  private BigDecimal arbitraryUnitCost = null;

  @SerializedName("merchant_item_id")
  private String merchantItemId = null;

  @SerializedName("quantity")
  private BigDecimal quantity = null;

  public OrderReplacementItem arbitraryUnitCost(BigDecimal arbitraryUnitCost) {
    this.arbitraryUnitCost = arbitraryUnitCost;
    return this;
  }

   /**
   * Cost to charge the customer if specified.  If not specified then the default item cost is used.
   * @return arbitraryUnitCost
  **/
  @ApiModelProperty(value = "Cost to charge the customer if specified.  If not specified then the default item cost is used.")
  public BigDecimal getArbitraryUnitCost() {
    return arbitraryUnitCost;
  }

  public void setArbitraryUnitCost(BigDecimal arbitraryUnitCost) {
    this.arbitraryUnitCost = arbitraryUnitCost;
  }

  public OrderReplacementItem merchantItemId(String merchantItemId) {
    this.merchantItemId = merchantItemId;
    return this;
  }

   /**
   * Item ID
   * @return merchantItemId
  **/
  @ApiModelProperty(value = "Item ID")
  public String getMerchantItemId() {
    return merchantItemId;
  }

  public void setMerchantItemId(String merchantItemId) {
    this.merchantItemId = merchantItemId;
  }

  public OrderReplacementItem quantity(BigDecimal quantity) {
    this.quantity = quantity;
    return this;
  }

   /**
   * Quantity
   * @return quantity
  **/
  @ApiModelProperty(value = "Quantity")
  public BigDecimal getQuantity() {
    return quantity;
  }

  public void setQuantity(BigDecimal quantity) {
    this.quantity = quantity;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderReplacementItem orderReplacementItem = (OrderReplacementItem) o;
    return Objects.equals(this.arbitraryUnitCost, orderReplacementItem.arbitraryUnitCost) &&
        Objects.equals(this.merchantItemId, orderReplacementItem.merchantItemId) &&
        Objects.equals(this.quantity, orderReplacementItem.quantity);
  }

  @Override
  public int hashCode() {
    return Objects.hash(arbitraryUnitCost, merchantItemId, quantity);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderReplacementItem {\n");
    
    sb.append("    arbitraryUnitCost: ").append(toIndentedString(arbitraryUnitCost)).append("\n");
    sb.append("    merchantItemId: ").append(toIndentedString(merchantItemId)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

