/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * CustomerTaxCodes
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-10-04T13:22:48.517-04:00[America/Indianapolis]")
public class CustomerTaxCodes {
  public static final String SERIALIZED_NAME_AVALARA_CUSTOMER_CODE = "avalara_customer_code";
  @SerializedName(SERIALIZED_NAME_AVALARA_CUSTOMER_CODE)
  private String avalaraCustomerCode;

  public static final String SERIALIZED_NAME_AVALARA_ENTITY_USE_CODE = "avalara_entity_use_code";
  @SerializedName(SERIALIZED_NAME_AVALARA_ENTITY_USE_CODE)
  private String avalaraEntityUseCode;

  public static final String SERIALIZED_NAME_SOVOS_CUSTOMER_CODE = "sovos_customer_code";
  @SerializedName(SERIALIZED_NAME_SOVOS_CUSTOMER_CODE)
  private String sovosCustomerCode;

  public static final String SERIALIZED_NAME_TAXJAR_CUSTOMER_ID = "taxjar_customer_id";
  @SerializedName(SERIALIZED_NAME_TAXJAR_CUSTOMER_ID)
  private String taxjarCustomerId;

  public static final String SERIALIZED_NAME_TAXJAR_EXEMPTION_TYPE = "taxjar_exemption_type";
  @SerializedName(SERIALIZED_NAME_TAXJAR_EXEMPTION_TYPE)
  private String taxjarExemptionType;

  public CustomerTaxCodes() { 
  }

  public CustomerTaxCodes avalaraCustomerCode(String avalaraCustomerCode) {
    
    this.avalaraCustomerCode = avalaraCustomerCode;
    return this;
  }

   /**
   * Avalara customer code
   * @return avalaraCustomerCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Avalara customer code")

  public String getAvalaraCustomerCode() {
    return avalaraCustomerCode;
  }


  public void setAvalaraCustomerCode(String avalaraCustomerCode) {
    this.avalaraCustomerCode = avalaraCustomerCode;
  }


  public CustomerTaxCodes avalaraEntityUseCode(String avalaraEntityUseCode) {
    
    this.avalaraEntityUseCode = avalaraEntityUseCode;
    return this;
  }

   /**
   * Avalara entity use code
   * @return avalaraEntityUseCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Avalara entity use code")

  public String getAvalaraEntityUseCode() {
    return avalaraEntityUseCode;
  }


  public void setAvalaraEntityUseCode(String avalaraEntityUseCode) {
    this.avalaraEntityUseCode = avalaraEntityUseCode;
  }


  public CustomerTaxCodes sovosCustomerCode(String sovosCustomerCode) {
    
    this.sovosCustomerCode = sovosCustomerCode;
    return this;
  }

   /**
   * Sovos customer code
   * @return sovosCustomerCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Sovos customer code")

  public String getSovosCustomerCode() {
    return sovosCustomerCode;
  }


  public void setSovosCustomerCode(String sovosCustomerCode) {
    this.sovosCustomerCode = sovosCustomerCode;
  }


  public CustomerTaxCodes taxjarCustomerId(String taxjarCustomerId) {
    
    this.taxjarCustomerId = taxjarCustomerId;
    return this;
  }

   /**
   * TaxJar customer id
   * @return taxjarCustomerId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "TaxJar customer id")

  public String getTaxjarCustomerId() {
    return taxjarCustomerId;
  }


  public void setTaxjarCustomerId(String taxjarCustomerId) {
    this.taxjarCustomerId = taxjarCustomerId;
  }


  public CustomerTaxCodes taxjarExemptionType(String taxjarExemptionType) {
    
    this.taxjarExemptionType = taxjarExemptionType;
    return this;
  }

   /**
   * TaxJar exemption type
   * @return taxjarExemptionType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "TaxJar exemption type")

  public String getTaxjarExemptionType() {
    return taxjarExemptionType;
  }


  public void setTaxjarExemptionType(String taxjarExemptionType) {
    this.taxjarExemptionType = taxjarExemptionType;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomerTaxCodes customerTaxCodes = (CustomerTaxCodes) o;
    return Objects.equals(this.avalaraCustomerCode, customerTaxCodes.avalaraCustomerCode) &&
        Objects.equals(this.avalaraEntityUseCode, customerTaxCodes.avalaraEntityUseCode) &&
        Objects.equals(this.sovosCustomerCode, customerTaxCodes.sovosCustomerCode) &&
        Objects.equals(this.taxjarCustomerId, customerTaxCodes.taxjarCustomerId) &&
        Objects.equals(this.taxjarExemptionType, customerTaxCodes.taxjarExemptionType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(avalaraCustomerCode, avalaraEntityUseCode, sovosCustomerCode, taxjarCustomerId, taxjarExemptionType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomerTaxCodes {\n");
    sb.append("    avalaraCustomerCode: ").append(toIndentedString(avalaraCustomerCode)).append("\n");
    sb.append("    avalaraEntityUseCode: ").append(toIndentedString(avalaraEntityUseCode)).append("\n");
    sb.append("    sovosCustomerCode: ").append(toIndentedString(sovosCustomerCode)).append("\n");
    sb.append("    taxjarCustomerId: ").append(toIndentedString(taxjarCustomerId)).append("\n");
    sb.append("    taxjarExemptionType: ").append(toIndentedString(taxjarExemptionType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("avalara_customer_code");
    openapiFields.add("avalara_entity_use_code");
    openapiFields.add("sovos_customer_code");
    openapiFields.add("taxjar_customer_id");
    openapiFields.add("taxjar_exemption_type");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CustomerTaxCodes
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (CustomerTaxCodes.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in CustomerTaxCodes is not found in the empty JSON string", CustomerTaxCodes.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!CustomerTaxCodes.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CustomerTaxCodes` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("avalara_customer_code") != null && !jsonObj.get("avalara_customer_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `avalara_customer_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("avalara_customer_code").toString()));
      }
      if (jsonObj.get("avalara_entity_use_code") != null && !jsonObj.get("avalara_entity_use_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `avalara_entity_use_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("avalara_entity_use_code").toString()));
      }
      if (jsonObj.get("sovos_customer_code") != null && !jsonObj.get("sovos_customer_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sovos_customer_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sovos_customer_code").toString()));
      }
      if (jsonObj.get("taxjar_customer_id") != null && !jsonObj.get("taxjar_customer_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `taxjar_customer_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("taxjar_customer_id").toString()));
      }
      if (jsonObj.get("taxjar_exemption_type") != null && !jsonObj.get("taxjar_exemption_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `taxjar_exemption_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("taxjar_exemption_type").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CustomerTaxCodes.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CustomerTaxCodes' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CustomerTaxCodes> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CustomerTaxCodes.class));

       return (TypeAdapter<T>) new TypeAdapter<CustomerTaxCodes>() {
           @Override
           public void write(JsonWriter out, CustomerTaxCodes value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CustomerTaxCodes read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CustomerTaxCodes given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CustomerTaxCodes
  * @throws IOException if the JSON string is invalid with respect to CustomerTaxCodes
  */
  public static CustomerTaxCodes fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CustomerTaxCodes.class);
  }

 /**
  * Convert an instance of CustomerTaxCodes to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

