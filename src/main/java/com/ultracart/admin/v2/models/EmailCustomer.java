/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * EmailCustomer
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-02-04T15:10:33.905-05:00")



public class EmailCustomer {
  @SerializedName("active")
  private Boolean active = null;

  @SerializedName("email")
  private String email = null;

  @SerializedName("email_customer_uuid")
  private String emailCustomerUuid = null;

  @SerializedName("first_name")
  private String firstName = null;

  @SerializedName("global_unsubscribe")
  private Boolean globalUnsubscribe = null;

  @SerializedName("last_interaction_dts")
  private String lastInteractionDts = null;

  @SerializedName("last_name")
  private String lastName = null;

  @SerializedName("list_uuids")
  private List<String> listUuids = null;

  public EmailCustomer active(Boolean active) {
    this.active = active;
    return this;
  }

   /**
   * True if the customer is flagged as active within StoreFront Communications
   * @return active
  **/
  @ApiModelProperty(value = "True if the customer is flagged as active within StoreFront Communications")
  public Boolean isActive() {
    return active;
  }

  public void setActive(Boolean active) {
    this.active = active;
  }

  public EmailCustomer email(String email) {
    this.email = email;
    return this;
  }

   /**
   * Email
   * @return email
  **/
  @ApiModelProperty(value = "Email")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public EmailCustomer emailCustomerUuid(String emailCustomerUuid) {
    this.emailCustomerUuid = emailCustomerUuid;
    return this;
  }

   /**
   * Email customer UUID
   * @return emailCustomerUuid
  **/
  @ApiModelProperty(value = "Email customer UUID")
  public String getEmailCustomerUuid() {
    return emailCustomerUuid;
  }

  public void setEmailCustomerUuid(String emailCustomerUuid) {
    this.emailCustomerUuid = emailCustomerUuid;
  }

  public EmailCustomer firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

   /**
   * First name
   * @return firstName
  **/
  @ApiModelProperty(value = "First name")
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }

  public EmailCustomer globalUnsubscribe(Boolean globalUnsubscribe) {
    this.globalUnsubscribe = globalUnsubscribe;
    return this;
  }

   /**
   * True if the customer has globally unsubscribed from all communication.
   * @return globalUnsubscribe
  **/
  @ApiModelProperty(value = "True if the customer has globally unsubscribed from all communication.")
  public Boolean isGlobalUnsubscribe() {
    return globalUnsubscribe;
  }

  public void setGlobalUnsubscribe(Boolean globalUnsubscribe) {
    this.globalUnsubscribe = globalUnsubscribe;
  }

  public EmailCustomer lastInteractionDts(String lastInteractionDts) {
    this.lastInteractionDts = lastInteractionDts;
    return this;
  }

   /**
   * Last interaction
   * @return lastInteractionDts
  **/
  @ApiModelProperty(value = "Last interaction")
  public String getLastInteractionDts() {
    return lastInteractionDts;
  }

  public void setLastInteractionDts(String lastInteractionDts) {
    this.lastInteractionDts = lastInteractionDts;
  }

  public EmailCustomer lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

   /**
   * Last name
   * @return lastName
  **/
  @ApiModelProperty(value = "Last name")
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }

  public EmailCustomer listUuids(List<String> listUuids) {
    this.listUuids = listUuids;
    return this;
  }

  public EmailCustomer addListUuidsItem(String listUuidsItem) {
    if (this.listUuids == null) {
      this.listUuids = new ArrayList<String>();
    }
    this.listUuids.add(listUuidsItem);
    return this;
  }

   /**
   * UUIDs of the lists they are subscribed to
   * @return listUuids
  **/
  @ApiModelProperty(value = "UUIDs of the lists they are subscribed to")
  public List<String> getListUuids() {
    return listUuids;
  }

  public void setListUuids(List<String> listUuids) {
    this.listUuids = listUuids;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmailCustomer emailCustomer = (EmailCustomer) o;
    return Objects.equals(this.active, emailCustomer.active) &&
        Objects.equals(this.email, emailCustomer.email) &&
        Objects.equals(this.emailCustomerUuid, emailCustomer.emailCustomerUuid) &&
        Objects.equals(this.firstName, emailCustomer.firstName) &&
        Objects.equals(this.globalUnsubscribe, emailCustomer.globalUnsubscribe) &&
        Objects.equals(this.lastInteractionDts, emailCustomer.lastInteractionDts) &&
        Objects.equals(this.lastName, emailCustomer.lastName) &&
        Objects.equals(this.listUuids, emailCustomer.listUuids);
  }

  @Override
  public int hashCode() {
    return Objects.hash(active, email, emailCustomerUuid, firstName, globalUnsubscribe, lastInteractionDts, lastName, listUuids);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmailCustomer {\n");
    
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    emailCustomerUuid: ").append(toIndentedString(emailCustomerUuid)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    globalUnsubscribe: ").append(toIndentedString(globalUnsubscribe)).append("\n");
    sb.append("    lastInteractionDts: ").append(toIndentedString(lastInteractionDts)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    listUuids: ").append(toIndentedString(listUuids)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

