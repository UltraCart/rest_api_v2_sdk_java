/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * CustomerWishListItem
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-20T10:38:24.317-05:00[America/Indianapolis]")
public class CustomerWishListItem {
  public static final String SERIALIZED_NAME_ADD_DTS = "add_dts";
  @SerializedName(SERIALIZED_NAME_ADD_DTS)
  private String addDts;

  public static final String SERIALIZED_NAME_COMMENTS = "comments";
  @SerializedName(SERIALIZED_NAME_COMMENTS)
  private String comments;

  public static final String SERIALIZED_NAME_CUSTOMER_PROFILE_OID = "customer_profile_oid";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_PROFILE_OID)
  private Integer customerProfileOid;

  public static final String SERIALIZED_NAME_CUSTOMER_WISHLIST_ITEM_OID = "customer_wishlist_item_oid";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_WISHLIST_ITEM_OID)
  private Integer customerWishlistItemOid;

  public static final String SERIALIZED_NAME_MERCHANT_ITEM_OID = "merchant_item_oid";
  @SerializedName(SERIALIZED_NAME_MERCHANT_ITEM_OID)
  private Integer merchantItemOid;

  public static final String SERIALIZED_NAME_POSITION = "position";
  @SerializedName(SERIALIZED_NAME_POSITION)
  private Integer position;

  public static final String SERIALIZED_NAME_PRIORITY = "priority";
  @SerializedName(SERIALIZED_NAME_PRIORITY)
  private Integer priority;

  public CustomerWishListItem() { 
  }

  public CustomerWishListItem addDts(String addDts) {
    
    this.addDts = addDts;
    return this;
  }

   /**
   * Add date
   * @return addDts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Add date")

  public String getAddDts() {
    return addDts;
  }


  public void setAddDts(String addDts) {
    this.addDts = addDts;
  }


  public CustomerWishListItem comments(String comments) {
    
    this.comments = comments;
    return this;
  }

   /**
   * Comments
   * @return comments
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Comments")

  public String getComments() {
    return comments;
  }


  public void setComments(String comments) {
    this.comments = comments;
  }


  public CustomerWishListItem customerProfileOid(Integer customerProfileOid) {
    
    this.customerProfileOid = customerProfileOid;
    return this;
  }

   /**
   * Customer profile object identifier
   * @return customerProfileOid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Customer profile object identifier")

  public Integer getCustomerProfileOid() {
    return customerProfileOid;
  }


  public void setCustomerProfileOid(Integer customerProfileOid) {
    this.customerProfileOid = customerProfileOid;
  }


  public CustomerWishListItem customerWishlistItemOid(Integer customerWishlistItemOid) {
    
    this.customerWishlistItemOid = customerWishlistItemOid;
    return this;
  }

   /**
   * Customer wishlist item object identifier
   * @return customerWishlistItemOid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Customer wishlist item object identifier")

  public Integer getCustomerWishlistItemOid() {
    return customerWishlistItemOid;
  }


  public void setCustomerWishlistItemOid(Integer customerWishlistItemOid) {
    this.customerWishlistItemOid = customerWishlistItemOid;
  }


  public CustomerWishListItem merchantItemOid(Integer merchantItemOid) {
    
    this.merchantItemOid = merchantItemOid;
    return this;
  }

   /**
   * Merchant item object identifier
   * @return merchantItemOid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Merchant item object identifier")

  public Integer getMerchantItemOid() {
    return merchantItemOid;
  }


  public void setMerchantItemOid(Integer merchantItemOid) {
    this.merchantItemOid = merchantItemOid;
  }


  public CustomerWishListItem position(Integer position) {
    
    this.position = position;
    return this;
  }

   /**
   * Position in wishlist
   * @return position
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Position in wishlist")

  public Integer getPosition() {
    return position;
  }


  public void setPosition(Integer position) {
    this.position = position;
  }


  public CustomerWishListItem priority(Integer priority) {
    
    this.priority = priority;
    return this;
  }

   /**
   * Priority of wishlist item, 3 being low priority and 5 is high priority.
   * @return priority
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Priority of wishlist item, 3 being low priority and 5 is high priority.")

  public Integer getPriority() {
    return priority;
  }


  public void setPriority(Integer priority) {
    this.priority = priority;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomerWishListItem customerWishListItem = (CustomerWishListItem) o;
    return Objects.equals(this.addDts, customerWishListItem.addDts) &&
        Objects.equals(this.comments, customerWishListItem.comments) &&
        Objects.equals(this.customerProfileOid, customerWishListItem.customerProfileOid) &&
        Objects.equals(this.customerWishlistItemOid, customerWishListItem.customerWishlistItemOid) &&
        Objects.equals(this.merchantItemOid, customerWishListItem.merchantItemOid) &&
        Objects.equals(this.position, customerWishListItem.position) &&
        Objects.equals(this.priority, customerWishListItem.priority);
  }

  @Override
  public int hashCode() {
    return Objects.hash(addDts, comments, customerProfileOid, customerWishlistItemOid, merchantItemOid, position, priority);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomerWishListItem {\n");
    sb.append("    addDts: ").append(toIndentedString(addDts)).append("\n");
    sb.append("    comments: ").append(toIndentedString(comments)).append("\n");
    sb.append("    customerProfileOid: ").append(toIndentedString(customerProfileOid)).append("\n");
    sb.append("    customerWishlistItemOid: ").append(toIndentedString(customerWishlistItemOid)).append("\n");
    sb.append("    merchantItemOid: ").append(toIndentedString(merchantItemOid)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("add_dts");
    openapiFields.add("comments");
    openapiFields.add("customer_profile_oid");
    openapiFields.add("customer_wishlist_item_oid");
    openapiFields.add("merchant_item_oid");
    openapiFields.add("position");
    openapiFields.add("priority");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CustomerWishListItem
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (CustomerWishListItem.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in CustomerWishListItem is not found in the empty JSON string", CustomerWishListItem.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!CustomerWishListItem.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CustomerWishListItem` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("add_dts") != null && !jsonObj.get("add_dts").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `add_dts` to be a primitive type in the JSON string but got `%s`", jsonObj.get("add_dts").toString()));
      }
      if (jsonObj.get("comments") != null && !jsonObj.get("comments").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `comments` to be a primitive type in the JSON string but got `%s`", jsonObj.get("comments").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CustomerWishListItem.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CustomerWishListItem' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CustomerWishListItem> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CustomerWishListItem.class));

       return (TypeAdapter<T>) new TypeAdapter<CustomerWishListItem>() {
           @Override
           public void write(JsonWriter out, CustomerWishListItem value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CustomerWishListItem read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CustomerWishListItem given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CustomerWishListItem
  * @throws IOException if the JSON string is invalid with respect to CustomerWishListItem
  */
  public static CustomerWishListItem fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CustomerWishListItem.class);
  }

 /**
  * Convert an instance of CustomerWishListItem to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

