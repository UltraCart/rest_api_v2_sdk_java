/**
 * UltraCart Rest API V2
 * This is the next generation UltraCart REST API...
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;


/**
 * ItemShippingDistributionCenter
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2016-08-31T13:26:11.909-04:00")
public class ItemShippingDistributionCenter   {
  @SerializedName("allocated_to_placed_orders")
  private Double allocatedToPlacedOrders = null;

  @SerializedName("allocated_to_shopping_carts")
  private Double allocatedToShoppingCarts = null;

  @SerializedName("available_to_allocate")
  private Double availableToAllocate = null;

  @SerializedName("desired_inventory_level")
  private Double desiredInventoryLevel = null;

  @SerializedName("distribution_center_code")
  private String distributionCenterCode = null;

  @SerializedName("distribution_center_oid")
  private Integer distributionCenterOid = null;

  @SerializedName("eta")
  private String eta = null;

  @SerializedName("handles")
  private Boolean handles = null;

  @SerializedName("inventory_level")
  private Double inventoryLevel = null;

  @SerializedName("maximum_backorder")
  private Integer maximumBackorder = null;

  @SerializedName("reorder_inventory_level")
  private Double reorderInventoryLevel = null;

  @SerializedName("sku")
  private String sku = null;

  @SerializedName("stock_picking_location")
  private String stockPickingLocation = null;

  public ItemShippingDistributionCenter allocatedToPlacedOrders(Double allocatedToPlacedOrders) {
    this.allocatedToPlacedOrders = allocatedToPlacedOrders;
    return this;
  }

   /**
   * Get allocatedToPlacedOrders
   * @return allocatedToPlacedOrders
  **/
  @ApiModelProperty(example = "null", value = "")
  public Double getAllocatedToPlacedOrders() {
    return allocatedToPlacedOrders;
  }

  public void setAllocatedToPlacedOrders(Double allocatedToPlacedOrders) {
    this.allocatedToPlacedOrders = allocatedToPlacedOrders;
  }

  public ItemShippingDistributionCenter allocatedToShoppingCarts(Double allocatedToShoppingCarts) {
    this.allocatedToShoppingCarts = allocatedToShoppingCarts;
    return this;
  }

   /**
   * Get allocatedToShoppingCarts
   * @return allocatedToShoppingCarts
  **/
  @ApiModelProperty(example = "null", value = "")
  public Double getAllocatedToShoppingCarts() {
    return allocatedToShoppingCarts;
  }

  public void setAllocatedToShoppingCarts(Double allocatedToShoppingCarts) {
    this.allocatedToShoppingCarts = allocatedToShoppingCarts;
  }

  public ItemShippingDistributionCenter availableToAllocate(Double availableToAllocate) {
    this.availableToAllocate = availableToAllocate;
    return this;
  }

   /**
   * Get availableToAllocate
   * @return availableToAllocate
  **/
  @ApiModelProperty(example = "null", value = "")
  public Double getAvailableToAllocate() {
    return availableToAllocate;
  }

  public void setAvailableToAllocate(Double availableToAllocate) {
    this.availableToAllocate = availableToAllocate;
  }

  public ItemShippingDistributionCenter desiredInventoryLevel(Double desiredInventoryLevel) {
    this.desiredInventoryLevel = desiredInventoryLevel;
    return this;
  }

   /**
   * Get desiredInventoryLevel
   * @return desiredInventoryLevel
  **/
  @ApiModelProperty(example = "null", value = "")
  public Double getDesiredInventoryLevel() {
    return desiredInventoryLevel;
  }

  public void setDesiredInventoryLevel(Double desiredInventoryLevel) {
    this.desiredInventoryLevel = desiredInventoryLevel;
  }

  public ItemShippingDistributionCenter distributionCenterCode(String distributionCenterCode) {
    this.distributionCenterCode = distributionCenterCode;
    return this;
  }

   /**
   * Get distributionCenterCode
   * @return distributionCenterCode
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getDistributionCenterCode() {
    return distributionCenterCode;
  }

  public void setDistributionCenterCode(String distributionCenterCode) {
    this.distributionCenterCode = distributionCenterCode;
  }

  public ItemShippingDistributionCenter distributionCenterOid(Integer distributionCenterOid) {
    this.distributionCenterOid = distributionCenterOid;
    return this;
  }

   /**
   * Get distributionCenterOid
   * @return distributionCenterOid
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getDistributionCenterOid() {
    return distributionCenterOid;
  }

  public void setDistributionCenterOid(Integer distributionCenterOid) {
    this.distributionCenterOid = distributionCenterOid;
  }

  public ItemShippingDistributionCenter eta(String eta) {
    this.eta = eta;
    return this;
  }

   /**
   * Get eta
   * @return eta
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getEta() {
    return eta;
  }

  public void setEta(String eta) {
    this.eta = eta;
  }

  public ItemShippingDistributionCenter handles(Boolean handles) {
    this.handles = handles;
    return this;
  }

   /**
   * Get handles
   * @return handles
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getHandles() {
    return handles;
  }

  public void setHandles(Boolean handles) {
    this.handles = handles;
  }

  public ItemShippingDistributionCenter inventoryLevel(Double inventoryLevel) {
    this.inventoryLevel = inventoryLevel;
    return this;
  }

   /**
   * Get inventoryLevel
   * @return inventoryLevel
  **/
  @ApiModelProperty(example = "null", value = "")
  public Double getInventoryLevel() {
    return inventoryLevel;
  }

  public void setInventoryLevel(Double inventoryLevel) {
    this.inventoryLevel = inventoryLevel;
  }

  public ItemShippingDistributionCenter maximumBackorder(Integer maximumBackorder) {
    this.maximumBackorder = maximumBackorder;
    return this;
  }

   /**
   * Get maximumBackorder
   * @return maximumBackorder
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getMaximumBackorder() {
    return maximumBackorder;
  }

  public void setMaximumBackorder(Integer maximumBackorder) {
    this.maximumBackorder = maximumBackorder;
  }

  public ItemShippingDistributionCenter reorderInventoryLevel(Double reorderInventoryLevel) {
    this.reorderInventoryLevel = reorderInventoryLevel;
    return this;
  }

   /**
   * Get reorderInventoryLevel
   * @return reorderInventoryLevel
  **/
  @ApiModelProperty(example = "null", value = "")
  public Double getReorderInventoryLevel() {
    return reorderInventoryLevel;
  }

  public void setReorderInventoryLevel(Double reorderInventoryLevel) {
    this.reorderInventoryLevel = reorderInventoryLevel;
  }

  public ItemShippingDistributionCenter sku(String sku) {
    this.sku = sku;
    return this;
  }

   /**
   * Get sku
   * @return sku
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getSku() {
    return sku;
  }

  public void setSku(String sku) {
    this.sku = sku;
  }

  public ItemShippingDistributionCenter stockPickingLocation(String stockPickingLocation) {
    this.stockPickingLocation = stockPickingLocation;
    return this;
  }

   /**
   * Get stockPickingLocation
   * @return stockPickingLocation
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getStockPickingLocation() {
    return stockPickingLocation;
  }

  public void setStockPickingLocation(String stockPickingLocation) {
    this.stockPickingLocation = stockPickingLocation;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ItemShippingDistributionCenter itemShippingDistributionCenter = (ItemShippingDistributionCenter) o;
    return Objects.equals(this.allocatedToPlacedOrders, itemShippingDistributionCenter.allocatedToPlacedOrders) &&
        Objects.equals(this.allocatedToShoppingCarts, itemShippingDistributionCenter.allocatedToShoppingCarts) &&
        Objects.equals(this.availableToAllocate, itemShippingDistributionCenter.availableToAllocate) &&
        Objects.equals(this.desiredInventoryLevel, itemShippingDistributionCenter.desiredInventoryLevel) &&
        Objects.equals(this.distributionCenterCode, itemShippingDistributionCenter.distributionCenterCode) &&
        Objects.equals(this.distributionCenterOid, itemShippingDistributionCenter.distributionCenterOid) &&
        Objects.equals(this.eta, itemShippingDistributionCenter.eta) &&
        Objects.equals(this.handles, itemShippingDistributionCenter.handles) &&
        Objects.equals(this.inventoryLevel, itemShippingDistributionCenter.inventoryLevel) &&
        Objects.equals(this.maximumBackorder, itemShippingDistributionCenter.maximumBackorder) &&
        Objects.equals(this.reorderInventoryLevel, itemShippingDistributionCenter.reorderInventoryLevel) &&
        Objects.equals(this.sku, itemShippingDistributionCenter.sku) &&
        Objects.equals(this.stockPickingLocation, itemShippingDistributionCenter.stockPickingLocation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allocatedToPlacedOrders, allocatedToShoppingCarts, availableToAllocate, desiredInventoryLevel, distributionCenterCode, distributionCenterOid, eta, handles, inventoryLevel, maximumBackorder, reorderInventoryLevel, sku, stockPickingLocation);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ItemShippingDistributionCenter {\n");
    
    sb.append("    allocatedToPlacedOrders: ").append(toIndentedString(allocatedToPlacedOrders)).append("\n");
    sb.append("    allocatedToShoppingCarts: ").append(toIndentedString(allocatedToShoppingCarts)).append("\n");
    sb.append("    availableToAllocate: ").append(toIndentedString(availableToAllocate)).append("\n");
    sb.append("    desiredInventoryLevel: ").append(toIndentedString(desiredInventoryLevel)).append("\n");
    sb.append("    distributionCenterCode: ").append(toIndentedString(distributionCenterCode)).append("\n");
    sb.append("    distributionCenterOid: ").append(toIndentedString(distributionCenterOid)).append("\n");
    sb.append("    eta: ").append(toIndentedString(eta)).append("\n");
    sb.append("    handles: ").append(toIndentedString(handles)).append("\n");
    sb.append("    inventoryLevel: ").append(toIndentedString(inventoryLevel)).append("\n");
    sb.append("    maximumBackorder: ").append(toIndentedString(maximumBackorder)).append("\n");
    sb.append("    reorderInventoryLevel: ").append(toIndentedString(reorderInventoryLevel)).append("\n");
    sb.append("    sku: ").append(toIndentedString(sku)).append("\n");
    sb.append("    stockPickingLocation: ").append(toIndentedString(stockPickingLocation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

