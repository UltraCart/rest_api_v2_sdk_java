/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * ItemShippingDistributionCenter
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-12-08T15:42:41.031-05:00[America/Indianapolis]")
public class ItemShippingDistributionCenter {
  public static final String SERIALIZED_NAME_ALLOCATED_TO_PLACED_ORDERS = "allocated_to_placed_orders";
  @SerializedName(SERIALIZED_NAME_ALLOCATED_TO_PLACED_ORDERS)
  private BigDecimal allocatedToPlacedOrders;

  public static final String SERIALIZED_NAME_ALLOCATED_TO_SHOPPING_CARTS = "allocated_to_shopping_carts";
  @SerializedName(SERIALIZED_NAME_ALLOCATED_TO_SHOPPING_CARTS)
  private BigDecimal allocatedToShoppingCarts;

  public static final String SERIALIZED_NAME_AVAILABLE_TO_ALLOCATE = "available_to_allocate";
  @SerializedName(SERIALIZED_NAME_AVAILABLE_TO_ALLOCATE)
  private BigDecimal availableToAllocate;

  public static final String SERIALIZED_NAME_COGS = "cogs";
  @SerializedName(SERIALIZED_NAME_COGS)
  private BigDecimal cogs;

  public static final String SERIALIZED_NAME_DESIRED_INVENTORY_LEVEL = "desired_inventory_level";
  @SerializedName(SERIALIZED_NAME_DESIRED_INVENTORY_LEVEL)
  private BigDecimal desiredInventoryLevel;

  public static final String SERIALIZED_NAME_DISTRIBUTION_CENTER_CODE = "distribution_center_code";
  @SerializedName(SERIALIZED_NAME_DISTRIBUTION_CENTER_CODE)
  private String distributionCenterCode;

  public static final String SERIALIZED_NAME_DISTRIBUTION_CENTER_OID = "distribution_center_oid";
  @SerializedName(SERIALIZED_NAME_DISTRIBUTION_CENTER_OID)
  private Integer distributionCenterOid;

  public static final String SERIALIZED_NAME_ETA = "eta";
  @SerializedName(SERIALIZED_NAME_ETA)
  private String eta;

  public static final String SERIALIZED_NAME_HANDLES = "handles";
  @SerializedName(SERIALIZED_NAME_HANDLES)
  private Boolean handles;

  public static final String SERIALIZED_NAME_INVENTORY_LEVEL = "inventory_level";
  @SerializedName(SERIALIZED_NAME_INVENTORY_LEVEL)
  private BigDecimal inventoryLevel;

  public static final String SERIALIZED_NAME_MAXIMUM_BACKORDER = "maximum_backorder";
  @SerializedName(SERIALIZED_NAME_MAXIMUM_BACKORDER)
  private Integer maximumBackorder;

  public static final String SERIALIZED_NAME_REORDER_INVENTORY_LEVEL = "reorder_inventory_level";
  @SerializedName(SERIALIZED_NAME_REORDER_INVENTORY_LEVEL)
  private BigDecimal reorderInventoryLevel;

  public static final String SERIALIZED_NAME_SKU = "sku";
  @SerializedName(SERIALIZED_NAME_SKU)
  private String sku;

  public static final String SERIALIZED_NAME_STOCK_PICKING_LOCATION = "stock_picking_location";
  @SerializedName(SERIALIZED_NAME_STOCK_PICKING_LOCATION)
  private String stockPickingLocation;

  public ItemShippingDistributionCenter() { 
  }

  public ItemShippingDistributionCenter allocatedToPlacedOrders(BigDecimal allocatedToPlacedOrders) {
    
    this.allocatedToPlacedOrders = allocatedToPlacedOrders;
    return this;
  }

   /**
   * Allocated to placed orders
   * @return allocatedToPlacedOrders
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Allocated to placed orders")

  public BigDecimal getAllocatedToPlacedOrders() {
    return allocatedToPlacedOrders;
  }


  public void setAllocatedToPlacedOrders(BigDecimal allocatedToPlacedOrders) {
    this.allocatedToPlacedOrders = allocatedToPlacedOrders;
  }


  public ItemShippingDistributionCenter allocatedToShoppingCarts(BigDecimal allocatedToShoppingCarts) {
    
    this.allocatedToShoppingCarts = allocatedToShoppingCarts;
    return this;
  }

   /**
   * Allocated to shopping carts
   * @return allocatedToShoppingCarts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Allocated to shopping carts")

  public BigDecimal getAllocatedToShoppingCarts() {
    return allocatedToShoppingCarts;
  }


  public void setAllocatedToShoppingCarts(BigDecimal allocatedToShoppingCarts) {
    this.allocatedToShoppingCarts = allocatedToShoppingCarts;
  }


  public ItemShippingDistributionCenter availableToAllocate(BigDecimal availableToAllocate) {
    
    this.availableToAllocate = availableToAllocate;
    return this;
  }

   /**
   * Available to allocate
   * @return availableToAllocate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Available to allocate")

  public BigDecimal getAvailableToAllocate() {
    return availableToAllocate;
  }


  public void setAvailableToAllocate(BigDecimal availableToAllocate) {
    this.availableToAllocate = availableToAllocate;
  }


  public ItemShippingDistributionCenter cogs(BigDecimal cogs) {
    
    this.cogs = cogs;
    return this;
  }

   /**
   * Cost of goods sold override at the distribution center level
   * @return cogs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Cost of goods sold override at the distribution center level")

  public BigDecimal getCogs() {
    return cogs;
  }


  public void setCogs(BigDecimal cogs) {
    this.cogs = cogs;
  }


  public ItemShippingDistributionCenter desiredInventoryLevel(BigDecimal desiredInventoryLevel) {
    
    this.desiredInventoryLevel = desiredInventoryLevel;
    return this;
  }

   /**
   * Desired inventory level
   * @return desiredInventoryLevel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Desired inventory level")

  public BigDecimal getDesiredInventoryLevel() {
    return desiredInventoryLevel;
  }


  public void setDesiredInventoryLevel(BigDecimal desiredInventoryLevel) {
    this.desiredInventoryLevel = desiredInventoryLevel;
  }


  public ItemShippingDistributionCenter distributionCenterCode(String distributionCenterCode) {
    
    this.distributionCenterCode = distributionCenterCode;
    return this;
  }

   /**
   * Distribution center code
   * @return distributionCenterCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Distribution center code")

  public String getDistributionCenterCode() {
    return distributionCenterCode;
  }


  public void setDistributionCenterCode(String distributionCenterCode) {
    this.distributionCenterCode = distributionCenterCode;
  }


  public ItemShippingDistributionCenter distributionCenterOid(Integer distributionCenterOid) {
    
    this.distributionCenterOid = distributionCenterOid;
    return this;
  }

   /**
   * Distribution center object identifier
   * @return distributionCenterOid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Distribution center object identifier")

  public Integer getDistributionCenterOid() {
    return distributionCenterOid;
  }


  public void setDistributionCenterOid(Integer distributionCenterOid) {
    this.distributionCenterOid = distributionCenterOid;
  }


  public ItemShippingDistributionCenter eta(String eta) {
    
    this.eta = eta;
    return this;
  }

   /**
   * Estimated time of arrival
   * @return eta
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Estimated time of arrival")

  public String getEta() {
    return eta;
  }


  public void setEta(String eta) {
    this.eta = eta;
  }


  public ItemShippingDistributionCenter handles(Boolean handles) {
    
    this.handles = handles;
    return this;
  }

   /**
   * True if this distribution center handles this item
   * @return handles
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if this distribution center handles this item")

  public Boolean getHandles() {
    return handles;
  }


  public void setHandles(Boolean handles) {
    this.handles = handles;
  }


  public ItemShippingDistributionCenter inventoryLevel(BigDecimal inventoryLevel) {
    
    this.inventoryLevel = inventoryLevel;
    return this;
  }

   /**
   * Inventory level
   * @return inventoryLevel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Inventory level")

  public BigDecimal getInventoryLevel() {
    return inventoryLevel;
  }


  public void setInventoryLevel(BigDecimal inventoryLevel) {
    this.inventoryLevel = inventoryLevel;
  }


  public ItemShippingDistributionCenter maximumBackorder(Integer maximumBackorder) {
    
    this.maximumBackorder = maximumBackorder;
    return this;
  }

   /**
   * Maximum back-order
   * @return maximumBackorder
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Maximum back-order")

  public Integer getMaximumBackorder() {
    return maximumBackorder;
  }


  public void setMaximumBackorder(Integer maximumBackorder) {
    this.maximumBackorder = maximumBackorder;
  }


  public ItemShippingDistributionCenter reorderInventoryLevel(BigDecimal reorderInventoryLevel) {
    
    this.reorderInventoryLevel = reorderInventoryLevel;
    return this;
  }

   /**
   * Reorder inventory level (triggers notification)
   * @return reorderInventoryLevel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Reorder inventory level (triggers notification)")

  public BigDecimal getReorderInventoryLevel() {
    return reorderInventoryLevel;
  }


  public void setReorderInventoryLevel(BigDecimal reorderInventoryLevel) {
    this.reorderInventoryLevel = reorderInventoryLevel;
  }


  public ItemShippingDistributionCenter sku(String sku) {
    
    this.sku = sku;
    return this;
  }

   /**
   * SKU
   * @return sku
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "SKU")

  public String getSku() {
    return sku;
  }


  public void setSku(String sku) {
    this.sku = sku;
  }


  public ItemShippingDistributionCenter stockPickingLocation(String stockPickingLocation) {
    
    this.stockPickingLocation = stockPickingLocation;
    return this;
  }

   /**
   * Stock picking location
   * @return stockPickingLocation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Stock picking location")

  public String getStockPickingLocation() {
    return stockPickingLocation;
  }


  public void setStockPickingLocation(String stockPickingLocation) {
    this.stockPickingLocation = stockPickingLocation;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ItemShippingDistributionCenter itemShippingDistributionCenter = (ItemShippingDistributionCenter) o;
    return Objects.equals(this.allocatedToPlacedOrders, itemShippingDistributionCenter.allocatedToPlacedOrders) &&
        Objects.equals(this.allocatedToShoppingCarts, itemShippingDistributionCenter.allocatedToShoppingCarts) &&
        Objects.equals(this.availableToAllocate, itemShippingDistributionCenter.availableToAllocate) &&
        Objects.equals(this.cogs, itemShippingDistributionCenter.cogs) &&
        Objects.equals(this.desiredInventoryLevel, itemShippingDistributionCenter.desiredInventoryLevel) &&
        Objects.equals(this.distributionCenterCode, itemShippingDistributionCenter.distributionCenterCode) &&
        Objects.equals(this.distributionCenterOid, itemShippingDistributionCenter.distributionCenterOid) &&
        Objects.equals(this.eta, itemShippingDistributionCenter.eta) &&
        Objects.equals(this.handles, itemShippingDistributionCenter.handles) &&
        Objects.equals(this.inventoryLevel, itemShippingDistributionCenter.inventoryLevel) &&
        Objects.equals(this.maximumBackorder, itemShippingDistributionCenter.maximumBackorder) &&
        Objects.equals(this.reorderInventoryLevel, itemShippingDistributionCenter.reorderInventoryLevel) &&
        Objects.equals(this.sku, itemShippingDistributionCenter.sku) &&
        Objects.equals(this.stockPickingLocation, itemShippingDistributionCenter.stockPickingLocation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allocatedToPlacedOrders, allocatedToShoppingCarts, availableToAllocate, cogs, desiredInventoryLevel, distributionCenterCode, distributionCenterOid, eta, handles, inventoryLevel, maximumBackorder, reorderInventoryLevel, sku, stockPickingLocation);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ItemShippingDistributionCenter {\n");
    sb.append("    allocatedToPlacedOrders: ").append(toIndentedString(allocatedToPlacedOrders)).append("\n");
    sb.append("    allocatedToShoppingCarts: ").append(toIndentedString(allocatedToShoppingCarts)).append("\n");
    sb.append("    availableToAllocate: ").append(toIndentedString(availableToAllocate)).append("\n");
    sb.append("    cogs: ").append(toIndentedString(cogs)).append("\n");
    sb.append("    desiredInventoryLevel: ").append(toIndentedString(desiredInventoryLevel)).append("\n");
    sb.append("    distributionCenterCode: ").append(toIndentedString(distributionCenterCode)).append("\n");
    sb.append("    distributionCenterOid: ").append(toIndentedString(distributionCenterOid)).append("\n");
    sb.append("    eta: ").append(toIndentedString(eta)).append("\n");
    sb.append("    handles: ").append(toIndentedString(handles)).append("\n");
    sb.append("    inventoryLevel: ").append(toIndentedString(inventoryLevel)).append("\n");
    sb.append("    maximumBackorder: ").append(toIndentedString(maximumBackorder)).append("\n");
    sb.append("    reorderInventoryLevel: ").append(toIndentedString(reorderInventoryLevel)).append("\n");
    sb.append("    sku: ").append(toIndentedString(sku)).append("\n");
    sb.append("    stockPickingLocation: ").append(toIndentedString(stockPickingLocation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("allocated_to_placed_orders");
    openapiFields.add("allocated_to_shopping_carts");
    openapiFields.add("available_to_allocate");
    openapiFields.add("cogs");
    openapiFields.add("desired_inventory_level");
    openapiFields.add("distribution_center_code");
    openapiFields.add("distribution_center_oid");
    openapiFields.add("eta");
    openapiFields.add("handles");
    openapiFields.add("inventory_level");
    openapiFields.add("maximum_backorder");
    openapiFields.add("reorder_inventory_level");
    openapiFields.add("sku");
    openapiFields.add("stock_picking_location");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ItemShippingDistributionCenter
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (ItemShippingDistributionCenter.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in ItemShippingDistributionCenter is not found in the empty JSON string", ItemShippingDistributionCenter.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!ItemShippingDistributionCenter.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ItemShippingDistributionCenter` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("distribution_center_code") != null && !jsonObj.get("distribution_center_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `distribution_center_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("distribution_center_code").toString()));
      }
      if (jsonObj.get("eta") != null && !jsonObj.get("eta").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `eta` to be a primitive type in the JSON string but got `%s`", jsonObj.get("eta").toString()));
      }
      if (jsonObj.get("sku") != null && !jsonObj.get("sku").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sku` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sku").toString()));
      }
      if (jsonObj.get("stock_picking_location") != null && !jsonObj.get("stock_picking_location").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stock_picking_location` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stock_picking_location").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ItemShippingDistributionCenter.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ItemShippingDistributionCenter' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ItemShippingDistributionCenter> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ItemShippingDistributionCenter.class));

       return (TypeAdapter<T>) new TypeAdapter<ItemShippingDistributionCenter>() {
           @Override
           public void write(JsonWriter out, ItemShippingDistributionCenter value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ItemShippingDistributionCenter read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ItemShippingDistributionCenter given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ItemShippingDistributionCenter
  * @throws IOException if the JSON string is invalid with respect to ItemShippingDistributionCenter
  */
  public static ItemShippingDistributionCenter fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ItemShippingDistributionCenter.class);
  }

 /**
  * Convert an instance of ItemShippingDistributionCenter to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

