/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * ItemShippingDistributionCenter
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-10-17T14:32:12.844-04:00")



public class ItemShippingDistributionCenter {
  @SerializedName("allocated_to_placed_orders")
  private BigDecimal allocatedToPlacedOrders = null;

  @SerializedName("allocated_to_shopping_carts")
  private BigDecimal allocatedToShoppingCarts = null;

  @SerializedName("available_to_allocate")
  private BigDecimal availableToAllocate = null;

  @SerializedName("cogs")
  private BigDecimal cogs = null;

  @SerializedName("desired_inventory_level")
  private BigDecimal desiredInventoryLevel = null;

  @SerializedName("distribution_center_code")
  private String distributionCenterCode = null;

  @SerializedName("distribution_center_oid")
  private Integer distributionCenterOid = null;

  @SerializedName("eta")
  private String eta = null;

  @SerializedName("handles")
  private Boolean handles = null;

  @SerializedName("inventory_level")
  private BigDecimal inventoryLevel = null;

  @SerializedName("maximum_backorder")
  private Integer maximumBackorder = null;

  @SerializedName("reorder_inventory_level")
  private BigDecimal reorderInventoryLevel = null;

  @SerializedName("sku")
  private String sku = null;

  @SerializedName("stock_picking_location")
  private String stockPickingLocation = null;

  public ItemShippingDistributionCenter allocatedToPlacedOrders(BigDecimal allocatedToPlacedOrders) {
    this.allocatedToPlacedOrders = allocatedToPlacedOrders;
    return this;
  }

   /**
   * Allocated to placed orders
   * @return allocatedToPlacedOrders
  **/
  @ApiModelProperty(value = "Allocated to placed orders")
  public BigDecimal getAllocatedToPlacedOrders() {
    return allocatedToPlacedOrders;
  }

  public void setAllocatedToPlacedOrders(BigDecimal allocatedToPlacedOrders) {
    this.allocatedToPlacedOrders = allocatedToPlacedOrders;
  }

  public ItemShippingDistributionCenter allocatedToShoppingCarts(BigDecimal allocatedToShoppingCarts) {
    this.allocatedToShoppingCarts = allocatedToShoppingCarts;
    return this;
  }

   /**
   * Allocated to shopping carts
   * @return allocatedToShoppingCarts
  **/
  @ApiModelProperty(value = "Allocated to shopping carts")
  public BigDecimal getAllocatedToShoppingCarts() {
    return allocatedToShoppingCarts;
  }

  public void setAllocatedToShoppingCarts(BigDecimal allocatedToShoppingCarts) {
    this.allocatedToShoppingCarts = allocatedToShoppingCarts;
  }

  public ItemShippingDistributionCenter availableToAllocate(BigDecimal availableToAllocate) {
    this.availableToAllocate = availableToAllocate;
    return this;
  }

   /**
   * Available to allocate
   * @return availableToAllocate
  **/
  @ApiModelProperty(value = "Available to allocate")
  public BigDecimal getAvailableToAllocate() {
    return availableToAllocate;
  }

  public void setAvailableToAllocate(BigDecimal availableToAllocate) {
    this.availableToAllocate = availableToAllocate;
  }

  public ItemShippingDistributionCenter cogs(BigDecimal cogs) {
    this.cogs = cogs;
    return this;
  }

   /**
   * Cost of goods sold override at the distribution center level
   * @return cogs
  **/
  @ApiModelProperty(value = "Cost of goods sold override at the distribution center level")
  public BigDecimal getCogs() {
    return cogs;
  }

  public void setCogs(BigDecimal cogs) {
    this.cogs = cogs;
  }

  public ItemShippingDistributionCenter desiredInventoryLevel(BigDecimal desiredInventoryLevel) {
    this.desiredInventoryLevel = desiredInventoryLevel;
    return this;
  }

   /**
   * Desired inventory level
   * @return desiredInventoryLevel
  **/
  @ApiModelProperty(value = "Desired inventory level")
  public BigDecimal getDesiredInventoryLevel() {
    return desiredInventoryLevel;
  }

  public void setDesiredInventoryLevel(BigDecimal desiredInventoryLevel) {
    this.desiredInventoryLevel = desiredInventoryLevel;
  }

  public ItemShippingDistributionCenter distributionCenterCode(String distributionCenterCode) {
    this.distributionCenterCode = distributionCenterCode;
    return this;
  }

   /**
   * Distribution center code
   * @return distributionCenterCode
  **/
  @ApiModelProperty(value = "Distribution center code")
  public String getDistributionCenterCode() {
    return distributionCenterCode;
  }

  public void setDistributionCenterCode(String distributionCenterCode) {
    this.distributionCenterCode = distributionCenterCode;
  }

  public ItemShippingDistributionCenter distributionCenterOid(Integer distributionCenterOid) {
    this.distributionCenterOid = distributionCenterOid;
    return this;
  }

   /**
   * Distribution center object identifier
   * @return distributionCenterOid
  **/
  @ApiModelProperty(value = "Distribution center object identifier")
  public Integer getDistributionCenterOid() {
    return distributionCenterOid;
  }

  public void setDistributionCenterOid(Integer distributionCenterOid) {
    this.distributionCenterOid = distributionCenterOid;
  }

  public ItemShippingDistributionCenter eta(String eta) {
    this.eta = eta;
    return this;
  }

   /**
   * Estimated time of arrival
   * @return eta
  **/
  @ApiModelProperty(value = "Estimated time of arrival")
  public String getEta() {
    return eta;
  }

  public void setEta(String eta) {
    this.eta = eta;
  }

  public ItemShippingDistributionCenter handles(Boolean handles) {
    this.handles = handles;
    return this;
  }

   /**
   * True if this distribution center handles this item
   * @return handles
  **/
  @ApiModelProperty(value = "True if this distribution center handles this item")
  public Boolean isHandles() {
    return handles;
  }

  public void setHandles(Boolean handles) {
    this.handles = handles;
  }

  public ItemShippingDistributionCenter inventoryLevel(BigDecimal inventoryLevel) {
    this.inventoryLevel = inventoryLevel;
    return this;
  }

   /**
   * Inventory level
   * @return inventoryLevel
  **/
  @ApiModelProperty(value = "Inventory level")
  public BigDecimal getInventoryLevel() {
    return inventoryLevel;
  }

  public void setInventoryLevel(BigDecimal inventoryLevel) {
    this.inventoryLevel = inventoryLevel;
  }

  public ItemShippingDistributionCenter maximumBackorder(Integer maximumBackorder) {
    this.maximumBackorder = maximumBackorder;
    return this;
  }

   /**
   * Maximum back-order
   * @return maximumBackorder
  **/
  @ApiModelProperty(value = "Maximum back-order")
  public Integer getMaximumBackorder() {
    return maximumBackorder;
  }

  public void setMaximumBackorder(Integer maximumBackorder) {
    this.maximumBackorder = maximumBackorder;
  }

  public ItemShippingDistributionCenter reorderInventoryLevel(BigDecimal reorderInventoryLevel) {
    this.reorderInventoryLevel = reorderInventoryLevel;
    return this;
  }

   /**
   * Reorder inventory level (triggers notification)
   * @return reorderInventoryLevel
  **/
  @ApiModelProperty(value = "Reorder inventory level (triggers notification)")
  public BigDecimal getReorderInventoryLevel() {
    return reorderInventoryLevel;
  }

  public void setReorderInventoryLevel(BigDecimal reorderInventoryLevel) {
    this.reorderInventoryLevel = reorderInventoryLevel;
  }

  public ItemShippingDistributionCenter sku(String sku) {
    this.sku = sku;
    return this;
  }

   /**
   * SKU
   * @return sku
  **/
  @ApiModelProperty(value = "SKU")
  public String getSku() {
    return sku;
  }

  public void setSku(String sku) {
    this.sku = sku;
  }

  public ItemShippingDistributionCenter stockPickingLocation(String stockPickingLocation) {
    this.stockPickingLocation = stockPickingLocation;
    return this;
  }

   /**
   * Stock picking location
   * @return stockPickingLocation
  **/
  @ApiModelProperty(value = "Stock picking location")
  public String getStockPickingLocation() {
    return stockPickingLocation;
  }

  public void setStockPickingLocation(String stockPickingLocation) {
    this.stockPickingLocation = stockPickingLocation;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ItemShippingDistributionCenter itemShippingDistributionCenter = (ItemShippingDistributionCenter) o;
    return Objects.equals(this.allocatedToPlacedOrders, itemShippingDistributionCenter.allocatedToPlacedOrders) &&
        Objects.equals(this.allocatedToShoppingCarts, itemShippingDistributionCenter.allocatedToShoppingCarts) &&
        Objects.equals(this.availableToAllocate, itemShippingDistributionCenter.availableToAllocate) &&
        Objects.equals(this.cogs, itemShippingDistributionCenter.cogs) &&
        Objects.equals(this.desiredInventoryLevel, itemShippingDistributionCenter.desiredInventoryLevel) &&
        Objects.equals(this.distributionCenterCode, itemShippingDistributionCenter.distributionCenterCode) &&
        Objects.equals(this.distributionCenterOid, itemShippingDistributionCenter.distributionCenterOid) &&
        Objects.equals(this.eta, itemShippingDistributionCenter.eta) &&
        Objects.equals(this.handles, itemShippingDistributionCenter.handles) &&
        Objects.equals(this.inventoryLevel, itemShippingDistributionCenter.inventoryLevel) &&
        Objects.equals(this.maximumBackorder, itemShippingDistributionCenter.maximumBackorder) &&
        Objects.equals(this.reorderInventoryLevel, itemShippingDistributionCenter.reorderInventoryLevel) &&
        Objects.equals(this.sku, itemShippingDistributionCenter.sku) &&
        Objects.equals(this.stockPickingLocation, itemShippingDistributionCenter.stockPickingLocation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allocatedToPlacedOrders, allocatedToShoppingCarts, availableToAllocate, cogs, desiredInventoryLevel, distributionCenterCode, distributionCenterOid, eta, handles, inventoryLevel, maximumBackorder, reorderInventoryLevel, sku, stockPickingLocation);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ItemShippingDistributionCenter {\n");
    
    sb.append("    allocatedToPlacedOrders: ").append(toIndentedString(allocatedToPlacedOrders)).append("\n");
    sb.append("    allocatedToShoppingCarts: ").append(toIndentedString(allocatedToShoppingCarts)).append("\n");
    sb.append("    availableToAllocate: ").append(toIndentedString(availableToAllocate)).append("\n");
    sb.append("    cogs: ").append(toIndentedString(cogs)).append("\n");
    sb.append("    desiredInventoryLevel: ").append(toIndentedString(desiredInventoryLevel)).append("\n");
    sb.append("    distributionCenterCode: ").append(toIndentedString(distributionCenterCode)).append("\n");
    sb.append("    distributionCenterOid: ").append(toIndentedString(distributionCenterOid)).append("\n");
    sb.append("    eta: ").append(toIndentedString(eta)).append("\n");
    sb.append("    handles: ").append(toIndentedString(handles)).append("\n");
    sb.append("    inventoryLevel: ").append(toIndentedString(inventoryLevel)).append("\n");
    sb.append("    maximumBackorder: ").append(toIndentedString(maximumBackorder)).append("\n");
    sb.append("    reorderInventoryLevel: ").append(toIndentedString(reorderInventoryLevel)).append("\n");
    sb.append("    sku: ").append(toIndentedString(sku)).append("\n");
    sb.append("    stockPickingLocation: ").append(toIndentedString(stockPickingLocation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

