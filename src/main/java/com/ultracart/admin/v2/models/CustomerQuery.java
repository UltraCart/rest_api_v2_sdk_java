/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * CustomerQuery
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-01-03T13:02:50.267-05:00[America/Indianapolis]")
public class CustomerQuery {
  public static final String SERIALIZED_NAME_ALL_TAGS = "all_tags";
  @SerializedName(SERIALIZED_NAME_ALL_TAGS)
  private List<String> allTags = null;

  public static final String SERIALIZED_NAME_ANY_TAGS = "any_tags";
  @SerializedName(SERIALIZED_NAME_ANY_TAGS)
  private List<String> anyTags = null;

  public static final String SERIALIZED_NAME_BILLING_CITY = "billing_city";
  @SerializedName(SERIALIZED_NAME_BILLING_CITY)
  private String billingCity;

  public static final String SERIALIZED_NAME_BILLING_COMPANY = "billing_company";
  @SerializedName(SERIALIZED_NAME_BILLING_COMPANY)
  private String billingCompany;

  public static final String SERIALIZED_NAME_BILLING_COUNTRY_CODE = "billing_country_code";
  @SerializedName(SERIALIZED_NAME_BILLING_COUNTRY_CODE)
  private String billingCountryCode;

  public static final String SERIALIZED_NAME_BILLING_DAY_PHONE = "billing_day_phone";
  @SerializedName(SERIALIZED_NAME_BILLING_DAY_PHONE)
  private String billingDayPhone;

  public static final String SERIALIZED_NAME_BILLING_EVENING_PHONE = "billing_evening_phone";
  @SerializedName(SERIALIZED_NAME_BILLING_EVENING_PHONE)
  private String billingEveningPhone;

  public static final String SERIALIZED_NAME_BILLING_FIRST_NAME = "billing_first_name";
  @SerializedName(SERIALIZED_NAME_BILLING_FIRST_NAME)
  private String billingFirstName;

  public static final String SERIALIZED_NAME_BILLING_LAST_NAME = "billing_last_name";
  @SerializedName(SERIALIZED_NAME_BILLING_LAST_NAME)
  private String billingLastName;

  public static final String SERIALIZED_NAME_BILLING_POSTAL_CODE = "billing_postal_code";
  @SerializedName(SERIALIZED_NAME_BILLING_POSTAL_CODE)
  private String billingPostalCode;

  public static final String SERIALIZED_NAME_BILLING_STATE = "billing_state";
  @SerializedName(SERIALIZED_NAME_BILLING_STATE)
  private String billingState;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_DTS_END = "last_modified_dts_end";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_DTS_END)
  private String lastModifiedDtsEnd;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_DTS_START = "last_modified_dts_start";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_DTS_START)
  private String lastModifiedDtsStart;

  public static final String SERIALIZED_NAME_PRICING_TIER_NAME = "pricing_tier_name";
  @SerializedName(SERIALIZED_NAME_PRICING_TIER_NAME)
  private String pricingTierName;

  public static final String SERIALIZED_NAME_PRICING_TIER_OID = "pricing_tier_oid";
  @SerializedName(SERIALIZED_NAME_PRICING_TIER_OID)
  private Integer pricingTierOid;

  public static final String SERIALIZED_NAME_QB_CLASS = "qb_class";
  @SerializedName(SERIALIZED_NAME_QB_CLASS)
  private String qbClass;

  public static final String SERIALIZED_NAME_QUICKBOOKS_CODE = "quickbooks_code";
  @SerializedName(SERIALIZED_NAME_QUICKBOOKS_CODE)
  private String quickbooksCode;

  public static final String SERIALIZED_NAME_SHIPPING_CITY = "shipping_city";
  @SerializedName(SERIALIZED_NAME_SHIPPING_CITY)
  private String shippingCity;

  public static final String SERIALIZED_NAME_SHIPPING_COMPANY = "shipping_company";
  @SerializedName(SERIALIZED_NAME_SHIPPING_COMPANY)
  private String shippingCompany;

  public static final String SERIALIZED_NAME_SHIPPING_COUNTRY_CODE = "shipping_country_code";
  @SerializedName(SERIALIZED_NAME_SHIPPING_COUNTRY_CODE)
  private String shippingCountryCode;

  public static final String SERIALIZED_NAME_SHIPPING_DAY_PHONE = "shipping_day_phone";
  @SerializedName(SERIALIZED_NAME_SHIPPING_DAY_PHONE)
  private String shippingDayPhone;

  public static final String SERIALIZED_NAME_SHIPPING_EVENING_PHONE = "shipping_evening_phone";
  @SerializedName(SERIALIZED_NAME_SHIPPING_EVENING_PHONE)
  private String shippingEveningPhone;

  public static final String SERIALIZED_NAME_SHIPPING_FIRST_NAME = "shipping_first_name";
  @SerializedName(SERIALIZED_NAME_SHIPPING_FIRST_NAME)
  private String shippingFirstName;

  public static final String SERIALIZED_NAME_SHIPPING_LAST_NAME = "shipping_last_name";
  @SerializedName(SERIALIZED_NAME_SHIPPING_LAST_NAME)
  private String shippingLastName;

  public static final String SERIALIZED_NAME_SHIPPING_POSTAL_CODE = "shipping_postal_code";
  @SerializedName(SERIALIZED_NAME_SHIPPING_POSTAL_CODE)
  private String shippingPostalCode;

  public static final String SERIALIZED_NAME_SHIPPING_STATE = "shipping_state";
  @SerializedName(SERIALIZED_NAME_SHIPPING_STATE)
  private String shippingState;

  public static final String SERIALIZED_NAME_SIGNUP_DTS_END = "signup_dts_end";
  @SerializedName(SERIALIZED_NAME_SIGNUP_DTS_END)
  private String signupDtsEnd;

  public static final String SERIALIZED_NAME_SIGNUP_DTS_START = "signup_dts_start";
  @SerializedName(SERIALIZED_NAME_SIGNUP_DTS_START)
  private String signupDtsStart;

  public CustomerQuery() { 
  }

  public CustomerQuery allTags(List<String> allTags) {
    
    this.allTags = allTags;
    return this;
  }

  public CustomerQuery addAllTagsItem(String allTagsItem) {
    if (this.allTags == null) {
      this.allTags = new ArrayList<>();
    }
    this.allTags.add(allTagsItem);
    return this;
  }

   /**
   * All tags the customer must have
   * @return allTags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "All tags the customer must have")

  public List<String> getAllTags() {
    return allTags;
  }


  public void setAllTags(List<String> allTags) {
    this.allTags = allTags;
  }


  public CustomerQuery anyTags(List<String> anyTags) {
    
    this.anyTags = anyTags;
    return this;
  }

  public CustomerQuery addAnyTagsItem(String anyTagsItem) {
    if (this.anyTags == null) {
      this.anyTags = new ArrayList<>();
    }
    this.anyTags.add(anyTagsItem);
    return this;
  }

   /**
   * Any of these tags the customer must have
   * @return anyTags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Any of these tags the customer must have")

  public List<String> getAnyTags() {
    return anyTags;
  }


  public void setAnyTags(List<String> anyTags) {
    this.anyTags = anyTags;
  }


  public CustomerQuery billingCity(String billingCity) {
    
    this.billingCity = billingCity;
    return this;
  }

   /**
   * Billing city
   * @return billingCity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Billing city")

  public String getBillingCity() {
    return billingCity;
  }


  public void setBillingCity(String billingCity) {
    this.billingCity = billingCity;
  }


  public CustomerQuery billingCompany(String billingCompany) {
    
    this.billingCompany = billingCompany;
    return this;
  }

   /**
   * Billing company
   * @return billingCompany
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Billing company")

  public String getBillingCompany() {
    return billingCompany;
  }


  public void setBillingCompany(String billingCompany) {
    this.billingCompany = billingCompany;
  }


  public CustomerQuery billingCountryCode(String billingCountryCode) {
    
    this.billingCountryCode = billingCountryCode;
    return this;
  }

   /**
   * Billing country code
   * @return billingCountryCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Billing country code")

  public String getBillingCountryCode() {
    return billingCountryCode;
  }


  public void setBillingCountryCode(String billingCountryCode) {
    this.billingCountryCode = billingCountryCode;
  }


  public CustomerQuery billingDayPhone(String billingDayPhone) {
    
    this.billingDayPhone = billingDayPhone;
    return this;
  }

   /**
   * Billing day phone
   * @return billingDayPhone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Billing day phone")

  public String getBillingDayPhone() {
    return billingDayPhone;
  }


  public void setBillingDayPhone(String billingDayPhone) {
    this.billingDayPhone = billingDayPhone;
  }


  public CustomerQuery billingEveningPhone(String billingEveningPhone) {
    
    this.billingEveningPhone = billingEveningPhone;
    return this;
  }

   /**
   * Billing evening phone
   * @return billingEveningPhone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Billing evening phone")

  public String getBillingEveningPhone() {
    return billingEveningPhone;
  }


  public void setBillingEveningPhone(String billingEveningPhone) {
    this.billingEveningPhone = billingEveningPhone;
  }


  public CustomerQuery billingFirstName(String billingFirstName) {
    
    this.billingFirstName = billingFirstName;
    return this;
  }

   /**
   * Billing first name
   * @return billingFirstName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Billing first name")

  public String getBillingFirstName() {
    return billingFirstName;
  }


  public void setBillingFirstName(String billingFirstName) {
    this.billingFirstName = billingFirstName;
  }


  public CustomerQuery billingLastName(String billingLastName) {
    
    this.billingLastName = billingLastName;
    return this;
  }

   /**
   * Billing last name
   * @return billingLastName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Billing last name")

  public String getBillingLastName() {
    return billingLastName;
  }


  public void setBillingLastName(String billingLastName) {
    this.billingLastName = billingLastName;
  }


  public CustomerQuery billingPostalCode(String billingPostalCode) {
    
    this.billingPostalCode = billingPostalCode;
    return this;
  }

   /**
   * Billing postal code
   * @return billingPostalCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Billing postal code")

  public String getBillingPostalCode() {
    return billingPostalCode;
  }


  public void setBillingPostalCode(String billingPostalCode) {
    this.billingPostalCode = billingPostalCode;
  }


  public CustomerQuery billingState(String billingState) {
    
    this.billingState = billingState;
    return this;
  }

   /**
   * Billing state
   * @return billingState
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Billing state")

  public String getBillingState() {
    return billingState;
  }


  public void setBillingState(String billingState) {
    this.billingState = billingState;
  }


  public CustomerQuery email(String email) {
    
    this.email = email;
    return this;
  }

   /**
   * Email address of this customer profile
   * @return email
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Email address of this customer profile")

  public String getEmail() {
    return email;
  }


  public void setEmail(String email) {
    this.email = email;
  }


  public CustomerQuery lastModifiedDtsEnd(String lastModifiedDtsEnd) {
    
    this.lastModifiedDtsEnd = lastModifiedDtsEnd;
    return this;
  }

   /**
   * Last modified date end
   * @return lastModifiedDtsEnd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Last modified date end")

  public String getLastModifiedDtsEnd() {
    return lastModifiedDtsEnd;
  }


  public void setLastModifiedDtsEnd(String lastModifiedDtsEnd) {
    this.lastModifiedDtsEnd = lastModifiedDtsEnd;
  }


  public CustomerQuery lastModifiedDtsStart(String lastModifiedDtsStart) {
    
    this.lastModifiedDtsStart = lastModifiedDtsStart;
    return this;
  }

   /**
   * Last modified date start
   * @return lastModifiedDtsStart
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Last modified date start")

  public String getLastModifiedDtsStart() {
    return lastModifiedDtsStart;
  }


  public void setLastModifiedDtsStart(String lastModifiedDtsStart) {
    this.lastModifiedDtsStart = lastModifiedDtsStart;
  }


  public CustomerQuery pricingTierName(String pricingTierName) {
    
    this.pricingTierName = pricingTierName;
    return this;
  }

   /**
   * Pricing tier name
   * @return pricingTierName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Pricing tier name")

  public String getPricingTierName() {
    return pricingTierName;
  }


  public void setPricingTierName(String pricingTierName) {
    this.pricingTierName = pricingTierName;
  }


  public CustomerQuery pricingTierOid(Integer pricingTierOid) {
    
    this.pricingTierOid = pricingTierOid;
    return this;
  }

   /**
   * Pricing tier oid
   * @return pricingTierOid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Pricing tier oid")

  public Integer getPricingTierOid() {
    return pricingTierOid;
  }


  public void setPricingTierOid(Integer pricingTierOid) {
    this.pricingTierOid = pricingTierOid;
  }


  public CustomerQuery qbClass(String qbClass) {
    
    this.qbClass = qbClass;
    return this;
  }

   /**
   * QuickBooks class to import this customer as
   * @return qbClass
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "QuickBooks class to import this customer as")

  public String getQbClass() {
    return qbClass;
  }


  public void setQbClass(String qbClass) {
    this.qbClass = qbClass;
  }


  public CustomerQuery quickbooksCode(String quickbooksCode) {
    
    this.quickbooksCode = quickbooksCode;
    return this;
  }

   /**
   * QuickBooks name to import this customer as
   * @return quickbooksCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "QuickBooks name to import this customer as")

  public String getQuickbooksCode() {
    return quickbooksCode;
  }


  public void setQuickbooksCode(String quickbooksCode) {
    this.quickbooksCode = quickbooksCode;
  }


  public CustomerQuery shippingCity(String shippingCity) {
    
    this.shippingCity = shippingCity;
    return this;
  }

   /**
   * Billing city
   * @return shippingCity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Billing city")

  public String getShippingCity() {
    return shippingCity;
  }


  public void setShippingCity(String shippingCity) {
    this.shippingCity = shippingCity;
  }


  public CustomerQuery shippingCompany(String shippingCompany) {
    
    this.shippingCompany = shippingCompany;
    return this;
  }

   /**
   * Billing company
   * @return shippingCompany
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Billing company")

  public String getShippingCompany() {
    return shippingCompany;
  }


  public void setShippingCompany(String shippingCompany) {
    this.shippingCompany = shippingCompany;
  }


  public CustomerQuery shippingCountryCode(String shippingCountryCode) {
    
    this.shippingCountryCode = shippingCountryCode;
    return this;
  }

   /**
   * Billing country code
   * @return shippingCountryCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Billing country code")

  public String getShippingCountryCode() {
    return shippingCountryCode;
  }


  public void setShippingCountryCode(String shippingCountryCode) {
    this.shippingCountryCode = shippingCountryCode;
  }


  public CustomerQuery shippingDayPhone(String shippingDayPhone) {
    
    this.shippingDayPhone = shippingDayPhone;
    return this;
  }

   /**
   * Billing day phone
   * @return shippingDayPhone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Billing day phone")

  public String getShippingDayPhone() {
    return shippingDayPhone;
  }


  public void setShippingDayPhone(String shippingDayPhone) {
    this.shippingDayPhone = shippingDayPhone;
  }


  public CustomerQuery shippingEveningPhone(String shippingEveningPhone) {
    
    this.shippingEveningPhone = shippingEveningPhone;
    return this;
  }

   /**
   * Billing evening phone
   * @return shippingEveningPhone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Billing evening phone")

  public String getShippingEveningPhone() {
    return shippingEveningPhone;
  }


  public void setShippingEveningPhone(String shippingEveningPhone) {
    this.shippingEveningPhone = shippingEveningPhone;
  }


  public CustomerQuery shippingFirstName(String shippingFirstName) {
    
    this.shippingFirstName = shippingFirstName;
    return this;
  }

   /**
   * Billing first name
   * @return shippingFirstName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Billing first name")

  public String getShippingFirstName() {
    return shippingFirstName;
  }


  public void setShippingFirstName(String shippingFirstName) {
    this.shippingFirstName = shippingFirstName;
  }


  public CustomerQuery shippingLastName(String shippingLastName) {
    
    this.shippingLastName = shippingLastName;
    return this;
  }

   /**
   * Billing last name
   * @return shippingLastName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Billing last name")

  public String getShippingLastName() {
    return shippingLastName;
  }


  public void setShippingLastName(String shippingLastName) {
    this.shippingLastName = shippingLastName;
  }


  public CustomerQuery shippingPostalCode(String shippingPostalCode) {
    
    this.shippingPostalCode = shippingPostalCode;
    return this;
  }

   /**
   * Billing postal code
   * @return shippingPostalCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Billing postal code")

  public String getShippingPostalCode() {
    return shippingPostalCode;
  }


  public void setShippingPostalCode(String shippingPostalCode) {
    this.shippingPostalCode = shippingPostalCode;
  }


  public CustomerQuery shippingState(String shippingState) {
    
    this.shippingState = shippingState;
    return this;
  }

   /**
   * Billing state
   * @return shippingState
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Billing state")

  public String getShippingState() {
    return shippingState;
  }


  public void setShippingState(String shippingState) {
    this.shippingState = shippingState;
  }


  public CustomerQuery signupDtsEnd(String signupDtsEnd) {
    
    this.signupDtsEnd = signupDtsEnd;
    return this;
  }

   /**
   * Signup date end
   * @return signupDtsEnd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Signup date end")

  public String getSignupDtsEnd() {
    return signupDtsEnd;
  }


  public void setSignupDtsEnd(String signupDtsEnd) {
    this.signupDtsEnd = signupDtsEnd;
  }


  public CustomerQuery signupDtsStart(String signupDtsStart) {
    
    this.signupDtsStart = signupDtsStart;
    return this;
  }

   /**
   * Signup date start
   * @return signupDtsStart
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Signup date start")

  public String getSignupDtsStart() {
    return signupDtsStart;
  }


  public void setSignupDtsStart(String signupDtsStart) {
    this.signupDtsStart = signupDtsStart;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomerQuery customerQuery = (CustomerQuery) o;
    return Objects.equals(this.allTags, customerQuery.allTags) &&
        Objects.equals(this.anyTags, customerQuery.anyTags) &&
        Objects.equals(this.billingCity, customerQuery.billingCity) &&
        Objects.equals(this.billingCompany, customerQuery.billingCompany) &&
        Objects.equals(this.billingCountryCode, customerQuery.billingCountryCode) &&
        Objects.equals(this.billingDayPhone, customerQuery.billingDayPhone) &&
        Objects.equals(this.billingEveningPhone, customerQuery.billingEveningPhone) &&
        Objects.equals(this.billingFirstName, customerQuery.billingFirstName) &&
        Objects.equals(this.billingLastName, customerQuery.billingLastName) &&
        Objects.equals(this.billingPostalCode, customerQuery.billingPostalCode) &&
        Objects.equals(this.billingState, customerQuery.billingState) &&
        Objects.equals(this.email, customerQuery.email) &&
        Objects.equals(this.lastModifiedDtsEnd, customerQuery.lastModifiedDtsEnd) &&
        Objects.equals(this.lastModifiedDtsStart, customerQuery.lastModifiedDtsStart) &&
        Objects.equals(this.pricingTierName, customerQuery.pricingTierName) &&
        Objects.equals(this.pricingTierOid, customerQuery.pricingTierOid) &&
        Objects.equals(this.qbClass, customerQuery.qbClass) &&
        Objects.equals(this.quickbooksCode, customerQuery.quickbooksCode) &&
        Objects.equals(this.shippingCity, customerQuery.shippingCity) &&
        Objects.equals(this.shippingCompany, customerQuery.shippingCompany) &&
        Objects.equals(this.shippingCountryCode, customerQuery.shippingCountryCode) &&
        Objects.equals(this.shippingDayPhone, customerQuery.shippingDayPhone) &&
        Objects.equals(this.shippingEveningPhone, customerQuery.shippingEveningPhone) &&
        Objects.equals(this.shippingFirstName, customerQuery.shippingFirstName) &&
        Objects.equals(this.shippingLastName, customerQuery.shippingLastName) &&
        Objects.equals(this.shippingPostalCode, customerQuery.shippingPostalCode) &&
        Objects.equals(this.shippingState, customerQuery.shippingState) &&
        Objects.equals(this.signupDtsEnd, customerQuery.signupDtsEnd) &&
        Objects.equals(this.signupDtsStart, customerQuery.signupDtsStart);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allTags, anyTags, billingCity, billingCompany, billingCountryCode, billingDayPhone, billingEveningPhone, billingFirstName, billingLastName, billingPostalCode, billingState, email, lastModifiedDtsEnd, lastModifiedDtsStart, pricingTierName, pricingTierOid, qbClass, quickbooksCode, shippingCity, shippingCompany, shippingCountryCode, shippingDayPhone, shippingEveningPhone, shippingFirstName, shippingLastName, shippingPostalCode, shippingState, signupDtsEnd, signupDtsStart);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomerQuery {\n");
    sb.append("    allTags: ").append(toIndentedString(allTags)).append("\n");
    sb.append("    anyTags: ").append(toIndentedString(anyTags)).append("\n");
    sb.append("    billingCity: ").append(toIndentedString(billingCity)).append("\n");
    sb.append("    billingCompany: ").append(toIndentedString(billingCompany)).append("\n");
    sb.append("    billingCountryCode: ").append(toIndentedString(billingCountryCode)).append("\n");
    sb.append("    billingDayPhone: ").append(toIndentedString(billingDayPhone)).append("\n");
    sb.append("    billingEveningPhone: ").append(toIndentedString(billingEveningPhone)).append("\n");
    sb.append("    billingFirstName: ").append(toIndentedString(billingFirstName)).append("\n");
    sb.append("    billingLastName: ").append(toIndentedString(billingLastName)).append("\n");
    sb.append("    billingPostalCode: ").append(toIndentedString(billingPostalCode)).append("\n");
    sb.append("    billingState: ").append(toIndentedString(billingState)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    lastModifiedDtsEnd: ").append(toIndentedString(lastModifiedDtsEnd)).append("\n");
    sb.append("    lastModifiedDtsStart: ").append(toIndentedString(lastModifiedDtsStart)).append("\n");
    sb.append("    pricingTierName: ").append(toIndentedString(pricingTierName)).append("\n");
    sb.append("    pricingTierOid: ").append(toIndentedString(pricingTierOid)).append("\n");
    sb.append("    qbClass: ").append(toIndentedString(qbClass)).append("\n");
    sb.append("    quickbooksCode: ").append(toIndentedString(quickbooksCode)).append("\n");
    sb.append("    shippingCity: ").append(toIndentedString(shippingCity)).append("\n");
    sb.append("    shippingCompany: ").append(toIndentedString(shippingCompany)).append("\n");
    sb.append("    shippingCountryCode: ").append(toIndentedString(shippingCountryCode)).append("\n");
    sb.append("    shippingDayPhone: ").append(toIndentedString(shippingDayPhone)).append("\n");
    sb.append("    shippingEveningPhone: ").append(toIndentedString(shippingEveningPhone)).append("\n");
    sb.append("    shippingFirstName: ").append(toIndentedString(shippingFirstName)).append("\n");
    sb.append("    shippingLastName: ").append(toIndentedString(shippingLastName)).append("\n");
    sb.append("    shippingPostalCode: ").append(toIndentedString(shippingPostalCode)).append("\n");
    sb.append("    shippingState: ").append(toIndentedString(shippingState)).append("\n");
    sb.append("    signupDtsEnd: ").append(toIndentedString(signupDtsEnd)).append("\n");
    sb.append("    signupDtsStart: ").append(toIndentedString(signupDtsStart)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("all_tags");
    openapiFields.add("any_tags");
    openapiFields.add("billing_city");
    openapiFields.add("billing_company");
    openapiFields.add("billing_country_code");
    openapiFields.add("billing_day_phone");
    openapiFields.add("billing_evening_phone");
    openapiFields.add("billing_first_name");
    openapiFields.add("billing_last_name");
    openapiFields.add("billing_postal_code");
    openapiFields.add("billing_state");
    openapiFields.add("email");
    openapiFields.add("last_modified_dts_end");
    openapiFields.add("last_modified_dts_start");
    openapiFields.add("pricing_tier_name");
    openapiFields.add("pricing_tier_oid");
    openapiFields.add("qb_class");
    openapiFields.add("quickbooks_code");
    openapiFields.add("shipping_city");
    openapiFields.add("shipping_company");
    openapiFields.add("shipping_country_code");
    openapiFields.add("shipping_day_phone");
    openapiFields.add("shipping_evening_phone");
    openapiFields.add("shipping_first_name");
    openapiFields.add("shipping_last_name");
    openapiFields.add("shipping_postal_code");
    openapiFields.add("shipping_state");
    openapiFields.add("signup_dts_end");
    openapiFields.add("signup_dts_start");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CustomerQuery
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (CustomerQuery.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in CustomerQuery is not found in the empty JSON string", CustomerQuery.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!CustomerQuery.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CustomerQuery` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      // ensure the json data is an array
      if (jsonObj.get("all_tags") != null && !jsonObj.get("all_tags").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `all_tags` to be an array in the JSON string but got `%s`", jsonObj.get("all_tags").toString()));
      }
      // ensure the json data is an array
      if (jsonObj.get("any_tags") != null && !jsonObj.get("any_tags").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `any_tags` to be an array in the JSON string but got `%s`", jsonObj.get("any_tags").toString()));
      }
      if (jsonObj.get("billing_city") != null && !jsonObj.get("billing_city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `billing_city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("billing_city").toString()));
      }
      if (jsonObj.get("billing_company") != null && !jsonObj.get("billing_company").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `billing_company` to be a primitive type in the JSON string but got `%s`", jsonObj.get("billing_company").toString()));
      }
      if (jsonObj.get("billing_country_code") != null && !jsonObj.get("billing_country_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `billing_country_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("billing_country_code").toString()));
      }
      if (jsonObj.get("billing_day_phone") != null && !jsonObj.get("billing_day_phone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `billing_day_phone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("billing_day_phone").toString()));
      }
      if (jsonObj.get("billing_evening_phone") != null && !jsonObj.get("billing_evening_phone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `billing_evening_phone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("billing_evening_phone").toString()));
      }
      if (jsonObj.get("billing_first_name") != null && !jsonObj.get("billing_first_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `billing_first_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("billing_first_name").toString()));
      }
      if (jsonObj.get("billing_last_name") != null && !jsonObj.get("billing_last_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `billing_last_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("billing_last_name").toString()));
      }
      if (jsonObj.get("billing_postal_code") != null && !jsonObj.get("billing_postal_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `billing_postal_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("billing_postal_code").toString()));
      }
      if (jsonObj.get("billing_state") != null && !jsonObj.get("billing_state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `billing_state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("billing_state").toString()));
      }
      if (jsonObj.get("email") != null && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if (jsonObj.get("last_modified_dts_end") != null && !jsonObj.get("last_modified_dts_end").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_modified_dts_end` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_modified_dts_end").toString()));
      }
      if (jsonObj.get("last_modified_dts_start") != null && !jsonObj.get("last_modified_dts_start").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_modified_dts_start` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_modified_dts_start").toString()));
      }
      if (jsonObj.get("pricing_tier_name") != null && !jsonObj.get("pricing_tier_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pricing_tier_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pricing_tier_name").toString()));
      }
      if (jsonObj.get("qb_class") != null && !jsonObj.get("qb_class").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `qb_class` to be a primitive type in the JSON string but got `%s`", jsonObj.get("qb_class").toString()));
      }
      if (jsonObj.get("quickbooks_code") != null && !jsonObj.get("quickbooks_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `quickbooks_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("quickbooks_code").toString()));
      }
      if (jsonObj.get("shipping_city") != null && !jsonObj.get("shipping_city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipping_city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipping_city").toString()));
      }
      if (jsonObj.get("shipping_company") != null && !jsonObj.get("shipping_company").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipping_company` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipping_company").toString()));
      }
      if (jsonObj.get("shipping_country_code") != null && !jsonObj.get("shipping_country_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipping_country_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipping_country_code").toString()));
      }
      if (jsonObj.get("shipping_day_phone") != null && !jsonObj.get("shipping_day_phone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipping_day_phone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipping_day_phone").toString()));
      }
      if (jsonObj.get("shipping_evening_phone") != null && !jsonObj.get("shipping_evening_phone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipping_evening_phone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipping_evening_phone").toString()));
      }
      if (jsonObj.get("shipping_first_name") != null && !jsonObj.get("shipping_first_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipping_first_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipping_first_name").toString()));
      }
      if (jsonObj.get("shipping_last_name") != null && !jsonObj.get("shipping_last_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipping_last_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipping_last_name").toString()));
      }
      if (jsonObj.get("shipping_postal_code") != null && !jsonObj.get("shipping_postal_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipping_postal_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipping_postal_code").toString()));
      }
      if (jsonObj.get("shipping_state") != null && !jsonObj.get("shipping_state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipping_state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipping_state").toString()));
      }
      if (jsonObj.get("signup_dts_end") != null && !jsonObj.get("signup_dts_end").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `signup_dts_end` to be a primitive type in the JSON string but got `%s`", jsonObj.get("signup_dts_end").toString()));
      }
      if (jsonObj.get("signup_dts_start") != null && !jsonObj.get("signup_dts_start").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `signup_dts_start` to be a primitive type in the JSON string but got `%s`", jsonObj.get("signup_dts_start").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CustomerQuery.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CustomerQuery' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CustomerQuery> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CustomerQuery.class));

       return (TypeAdapter<T>) new TypeAdapter<CustomerQuery>() {
           @Override
           public void write(JsonWriter out, CustomerQuery value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CustomerQuery read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CustomerQuery given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CustomerQuery
  * @throws IOException if the JSON string is invalid with respect to CustomerQuery
  */
  public static CustomerQuery fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CustomerQuery.class);
  }

 /**
  * Convert an instance of CustomerQuery to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

