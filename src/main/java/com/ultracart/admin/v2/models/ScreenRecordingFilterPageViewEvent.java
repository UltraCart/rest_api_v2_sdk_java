/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.ScreenRecordingFilterPageViewEventParam;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * ScreenRecordingFilterPageViewEvent
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-03-02T16:33:24.445-05:00")



public class ScreenRecordingFilterPageViewEvent {
  @SerializedName("event_name")
  private String eventName = null;

  @SerializedName("event_params")
  private List<ScreenRecordingFilterPageViewEventParam> eventParams = null;

  public ScreenRecordingFilterPageViewEvent eventName(String eventName) {
    this.eventName = eventName;
    return this;
  }

   /**
   * Get eventName
   * @return eventName
  **/
  @ApiModelProperty(value = "")
  public String getEventName() {
    return eventName;
  }

  public void setEventName(String eventName) {
    this.eventName = eventName;
  }

  public ScreenRecordingFilterPageViewEvent eventParams(List<ScreenRecordingFilterPageViewEventParam> eventParams) {
    this.eventParams = eventParams;
    return this;
  }

  public ScreenRecordingFilterPageViewEvent addEventParamsItem(ScreenRecordingFilterPageViewEventParam eventParamsItem) {
    if (this.eventParams == null) {
      this.eventParams = new ArrayList<ScreenRecordingFilterPageViewEventParam>();
    }
    this.eventParams.add(eventParamsItem);
    return this;
  }

   /**
   * Get eventParams
   * @return eventParams
  **/
  @ApiModelProperty(value = "")
  public List<ScreenRecordingFilterPageViewEventParam> getEventParams() {
    return eventParams;
  }

  public void setEventParams(List<ScreenRecordingFilterPageViewEventParam> eventParams) {
    this.eventParams = eventParams;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ScreenRecordingFilterPageViewEvent screenRecordingFilterPageViewEvent = (ScreenRecordingFilterPageViewEvent) o;
    return Objects.equals(this.eventName, screenRecordingFilterPageViewEvent.eventName) &&
        Objects.equals(this.eventParams, screenRecordingFilterPageViewEvent.eventParams);
  }

  @Override
  public int hashCode() {
    return Objects.hash(eventName, eventParams);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ScreenRecordingFilterPageViewEvent {\n");
    
    sb.append("    eventName: ").append(toIndentedString(eventName)).append("\n");
    sb.append("    eventParams: ").append(toIndentedString(eventParams)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

