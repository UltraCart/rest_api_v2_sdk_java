/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.PaymentsConfigurationRestrictions;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * PaymentsConfigurationCOD
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-04-14T09:59:09.012-04:00")



public class PaymentsConfigurationCOD {
  @SerializedName("accept_cod")
  private Boolean acceptCod = null;

  @SerializedName("approved_customers_only")
  private Boolean approvedCustomersOnly = null;

  @SerializedName("restrictions")
  private PaymentsConfigurationRestrictions restrictions = null;

  @SerializedName("surcharge_accounting_code")
  private String surchargeAccountingCode = null;

  @SerializedName("surcharge_fee")
  private BigDecimal surchargeFee = null;

  @SerializedName("surcharge_percentage")
  private BigDecimal surchargePercentage = null;

  public PaymentsConfigurationCOD acceptCod(Boolean acceptCod) {
    this.acceptCod = acceptCod;
    return this;
  }

   /**
   * Master flag indicating this merchant accepts COD
   * @return acceptCod
  **/
  @ApiModelProperty(value = "Master flag indicating this merchant accepts COD")
  public Boolean isAcceptCod() {
    return acceptCod;
  }

  public void setAcceptCod(Boolean acceptCod) {
    this.acceptCod = acceptCod;
  }

  public PaymentsConfigurationCOD approvedCustomersOnly(Boolean approvedCustomersOnly) {
    this.approvedCustomersOnly = approvedCustomersOnly;
    return this;
  }

   /**
   * If true, only approved customers may pay with COD
   * @return approvedCustomersOnly
  **/
  @ApiModelProperty(value = "If true, only approved customers may pay with COD")
  public Boolean isApprovedCustomersOnly() {
    return approvedCustomersOnly;
  }

  public void setApprovedCustomersOnly(Boolean approvedCustomersOnly) {
    this.approvedCustomersOnly = approvedCustomersOnly;
  }

  public PaymentsConfigurationCOD restrictions(PaymentsConfigurationRestrictions restrictions) {
    this.restrictions = restrictions;
    return this;
  }

   /**
   * Get restrictions
   * @return restrictions
  **/
  @ApiModelProperty(value = "")
  public PaymentsConfigurationRestrictions getRestrictions() {
    return restrictions;
  }

  public void setRestrictions(PaymentsConfigurationRestrictions restrictions) {
    this.restrictions = restrictions;
  }

  public PaymentsConfigurationCOD surchargeAccountingCode(String surchargeAccountingCode) {
    this.surchargeAccountingCode = surchargeAccountingCode;
    return this;
  }

   /**
   * Optional field, if surcharge is set, this is the accounting code the surcharge is tagged with when sent to Quickbooks
   * @return surchargeAccountingCode
  **/
  @ApiModelProperty(value = "Optional field, if surcharge is set, this is the accounting code the surcharge is tagged with when sent to Quickbooks")
  public String getSurchargeAccountingCode() {
    return surchargeAccountingCode;
  }

  public void setSurchargeAccountingCode(String surchargeAccountingCode) {
    this.surchargeAccountingCode = surchargeAccountingCode;
  }

  public PaymentsConfigurationCOD surchargeFee(BigDecimal surchargeFee) {
    this.surchargeFee = surchargeFee;
    return this;
  }

   /**
   * Additional cost for using COD
   * @return surchargeFee
  **/
  @ApiModelProperty(value = "Additional cost for using COD")
  public BigDecimal getSurchargeFee() {
    return surchargeFee;
  }

  public void setSurchargeFee(BigDecimal surchargeFee) {
    this.surchargeFee = surchargeFee;
  }

  public PaymentsConfigurationCOD surchargePercentage(BigDecimal surchargePercentage) {
    this.surchargePercentage = surchargePercentage;
    return this;
  }

   /**
   * Additional percentage cost for using COD
   * @return surchargePercentage
  **/
  @ApiModelProperty(value = "Additional percentage cost for using COD")
  public BigDecimal getSurchargePercentage() {
    return surchargePercentage;
  }

  public void setSurchargePercentage(BigDecimal surchargePercentage) {
    this.surchargePercentage = surchargePercentage;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentsConfigurationCOD paymentsConfigurationCOD = (PaymentsConfigurationCOD) o;
    return Objects.equals(this.acceptCod, paymentsConfigurationCOD.acceptCod) &&
        Objects.equals(this.approvedCustomersOnly, paymentsConfigurationCOD.approvedCustomersOnly) &&
        Objects.equals(this.restrictions, paymentsConfigurationCOD.restrictions) &&
        Objects.equals(this.surchargeAccountingCode, paymentsConfigurationCOD.surchargeAccountingCode) &&
        Objects.equals(this.surchargeFee, paymentsConfigurationCOD.surchargeFee) &&
        Objects.equals(this.surchargePercentage, paymentsConfigurationCOD.surchargePercentage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(acceptCod, approvedCustomersOnly, restrictions, surchargeAccountingCode, surchargeFee, surchargePercentage);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentsConfigurationCOD {\n");
    
    sb.append("    acceptCod: ").append(toIndentedString(acceptCod)).append("\n");
    sb.append("    approvedCustomersOnly: ").append(toIndentedString(approvedCustomersOnly)).append("\n");
    sb.append("    restrictions: ").append(toIndentedString(restrictions)).append("\n");
    sb.append("    surchargeAccountingCode: ").append(toIndentedString(surchargeAccountingCode)).append("\n");
    sb.append("    surchargeFee: ").append(toIndentedString(surchargeFee)).append("\n");
    sb.append("    surchargePercentage: ").append(toIndentedString(surchargePercentage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

