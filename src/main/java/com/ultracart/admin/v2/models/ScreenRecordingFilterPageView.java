/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.ScreenRecordingFilterPageViewEvent;
import com.ultracart.admin.v2.models.ScreenRecordingFilterPageViewParam;
import com.ultracart.admin.v2.models.ScreenRecordingFilterPageViewReferrerParam;
import com.ultracart.admin.v2.models.ScreenRecordingFilterRangeInteger;
import com.ultracart.admin.v2.models.ScreenRecordingFilterStringSearch;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * ScreenRecordingFilterPageView
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-07-08T12:47:10.747-04:00")



public class ScreenRecordingFilterPageView {
  @SerializedName("domain")
  private ScreenRecordingFilterStringSearch domain = null;

  @SerializedName("events")
  private List<ScreenRecordingFilterPageViewEvent> events = null;

  @SerializedName("params")
  private List<ScreenRecordingFilterPageViewParam> params = null;

  @SerializedName("referrer")
  private ScreenRecordingFilterStringSearch referrer = null;

  @SerializedName("referrer_params")
  private List<ScreenRecordingFilterPageViewReferrerParam> referrerParams = null;

  @SerializedName("referrer_raw")
  private ScreenRecordingFilterStringSearch referrerRaw = null;

  @SerializedName("time_on_page")
  private ScreenRecordingFilterRangeInteger timeOnPage = null;

  @SerializedName("url")
  private ScreenRecordingFilterStringSearch url = null;

  public ScreenRecordingFilterPageView domain(ScreenRecordingFilterStringSearch domain) {
    this.domain = domain;
    return this;
  }

   /**
   * Get domain
   * @return domain
  **/
  @ApiModelProperty(value = "")
  public ScreenRecordingFilterStringSearch getDomain() {
    return domain;
  }

  public void setDomain(ScreenRecordingFilterStringSearch domain) {
    this.domain = domain;
  }

  public ScreenRecordingFilterPageView events(List<ScreenRecordingFilterPageViewEvent> events) {
    this.events = events;
    return this;
  }

  public ScreenRecordingFilterPageView addEventsItem(ScreenRecordingFilterPageViewEvent eventsItem) {
    if (this.events == null) {
      this.events = new ArrayList<ScreenRecordingFilterPageViewEvent>();
    }
    this.events.add(eventsItem);
    return this;
  }

   /**
   * Get events
   * @return events
  **/
  @ApiModelProperty(value = "")
  public List<ScreenRecordingFilterPageViewEvent> getEvents() {
    return events;
  }

  public void setEvents(List<ScreenRecordingFilterPageViewEvent> events) {
    this.events = events;
  }

  public ScreenRecordingFilterPageView params(List<ScreenRecordingFilterPageViewParam> params) {
    this.params = params;
    return this;
  }

  public ScreenRecordingFilterPageView addParamsItem(ScreenRecordingFilterPageViewParam paramsItem) {
    if (this.params == null) {
      this.params = new ArrayList<ScreenRecordingFilterPageViewParam>();
    }
    this.params.add(paramsItem);
    return this;
  }

   /**
   * Get params
   * @return params
  **/
  @ApiModelProperty(value = "")
  public List<ScreenRecordingFilterPageViewParam> getParams() {
    return params;
  }

  public void setParams(List<ScreenRecordingFilterPageViewParam> params) {
    this.params = params;
  }

  public ScreenRecordingFilterPageView referrer(ScreenRecordingFilterStringSearch referrer) {
    this.referrer = referrer;
    return this;
  }

   /**
   * Get referrer
   * @return referrer
  **/
  @ApiModelProperty(value = "")
  public ScreenRecordingFilterStringSearch getReferrer() {
    return referrer;
  }

  public void setReferrer(ScreenRecordingFilterStringSearch referrer) {
    this.referrer = referrer;
  }

  public ScreenRecordingFilterPageView referrerParams(List<ScreenRecordingFilterPageViewReferrerParam> referrerParams) {
    this.referrerParams = referrerParams;
    return this;
  }

  public ScreenRecordingFilterPageView addReferrerParamsItem(ScreenRecordingFilterPageViewReferrerParam referrerParamsItem) {
    if (this.referrerParams == null) {
      this.referrerParams = new ArrayList<ScreenRecordingFilterPageViewReferrerParam>();
    }
    this.referrerParams.add(referrerParamsItem);
    return this;
  }

   /**
   * Get referrerParams
   * @return referrerParams
  **/
  @ApiModelProperty(value = "")
  public List<ScreenRecordingFilterPageViewReferrerParam> getReferrerParams() {
    return referrerParams;
  }

  public void setReferrerParams(List<ScreenRecordingFilterPageViewReferrerParam> referrerParams) {
    this.referrerParams = referrerParams;
  }

  public ScreenRecordingFilterPageView referrerRaw(ScreenRecordingFilterStringSearch referrerRaw) {
    this.referrerRaw = referrerRaw;
    return this;
  }

   /**
   * Get referrerRaw
   * @return referrerRaw
  **/
  @ApiModelProperty(value = "")
  public ScreenRecordingFilterStringSearch getReferrerRaw() {
    return referrerRaw;
  }

  public void setReferrerRaw(ScreenRecordingFilterStringSearch referrerRaw) {
    this.referrerRaw = referrerRaw;
  }

  public ScreenRecordingFilterPageView timeOnPage(ScreenRecordingFilterRangeInteger timeOnPage) {
    this.timeOnPage = timeOnPage;
    return this;
  }

   /**
   * Get timeOnPage
   * @return timeOnPage
  **/
  @ApiModelProperty(value = "")
  public ScreenRecordingFilterRangeInteger getTimeOnPage() {
    return timeOnPage;
  }

  public void setTimeOnPage(ScreenRecordingFilterRangeInteger timeOnPage) {
    this.timeOnPage = timeOnPage;
  }

  public ScreenRecordingFilterPageView url(ScreenRecordingFilterStringSearch url) {
    this.url = url;
    return this;
  }

   /**
   * Get url
   * @return url
  **/
  @ApiModelProperty(value = "")
  public ScreenRecordingFilterStringSearch getUrl() {
    return url;
  }

  public void setUrl(ScreenRecordingFilterStringSearch url) {
    this.url = url;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ScreenRecordingFilterPageView screenRecordingFilterPageView = (ScreenRecordingFilterPageView) o;
    return Objects.equals(this.domain, screenRecordingFilterPageView.domain) &&
        Objects.equals(this.events, screenRecordingFilterPageView.events) &&
        Objects.equals(this.params, screenRecordingFilterPageView.params) &&
        Objects.equals(this.referrer, screenRecordingFilterPageView.referrer) &&
        Objects.equals(this.referrerParams, screenRecordingFilterPageView.referrerParams) &&
        Objects.equals(this.referrerRaw, screenRecordingFilterPageView.referrerRaw) &&
        Objects.equals(this.timeOnPage, screenRecordingFilterPageView.timeOnPage) &&
        Objects.equals(this.url, screenRecordingFilterPageView.url);
  }

  @Override
  public int hashCode() {
    return Objects.hash(domain, events, params, referrer, referrerParams, referrerRaw, timeOnPage, url);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ScreenRecordingFilterPageView {\n");
    
    sb.append("    domain: ").append(toIndentedString(domain)).append("\n");
    sb.append("    events: ").append(toIndentedString(events)).append("\n");
    sb.append("    params: ").append(toIndentedString(params)).append("\n");
    sb.append("    referrer: ").append(toIndentedString(referrer)).append("\n");
    sb.append("    referrerParams: ").append(toIndentedString(referrerParams)).append("\n");
    sb.append("    referrerRaw: ").append(toIndentedString(referrerRaw)).append("\n");
    sb.append("    timeOnPage: ").append(toIndentedString(timeOnPage)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

