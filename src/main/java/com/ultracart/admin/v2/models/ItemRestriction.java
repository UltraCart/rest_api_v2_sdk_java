/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.ItemRestrictionItem;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * ItemRestriction
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-08-01T11:46:50.322-04:00[America/Indianapolis]")
public class ItemRestriction {
  public static final String SERIALIZED_NAME_EXCLUDE_COUPON = "exclude_coupon";
  @SerializedName(SERIALIZED_NAME_EXCLUDE_COUPON)
  private Boolean excludeCoupon;

  public static final String SERIALIZED_NAME_EXCLUDE_FROM_FREE_PROMOTION = "exclude_from_free_promotion";
  @SerializedName(SERIALIZED_NAME_EXCLUDE_FROM_FREE_PROMOTION)
  private Boolean excludeFromFreePromotion;

  public static final String SERIALIZED_NAME_ITEMS = "items";
  @SerializedName(SERIALIZED_NAME_ITEMS)
  private List<ItemRestrictionItem> items = null;

  public static final String SERIALIZED_NAME_MAXIMUM_QUANTITY = "maximum_quantity";
  @SerializedName(SERIALIZED_NAME_MAXIMUM_QUANTITY)
  private Integer maximumQuantity;

  public static final String SERIALIZED_NAME_MINIMUM_QUANTITY = "minimum_quantity";
  @SerializedName(SERIALIZED_NAME_MINIMUM_QUANTITY)
  private Integer minimumQuantity;

  public static final String SERIALIZED_NAME_MULTIPLE_QUANTITY = "multiple_quantity";
  @SerializedName(SERIALIZED_NAME_MULTIPLE_QUANTITY)
  private Integer multipleQuantity;

  public static final String SERIALIZED_NAME_ONE_PER_CUSTOMER = "one_per_customer";
  @SerializedName(SERIALIZED_NAME_ONE_PER_CUSTOMER)
  private Boolean onePerCustomer;

  public static final String SERIALIZED_NAME_PURCHASE_SEPARATELY = "purchase_separately";
  @SerializedName(SERIALIZED_NAME_PURCHASE_SEPARATELY)
  private Boolean purchaseSeparately;

  public ItemRestriction() { 
  }

  public ItemRestriction excludeCoupon(Boolean excludeCoupon) {
    
    this.excludeCoupon = excludeCoupon;
    return this;
  }

   /**
   * Exclude coupons
   * @return excludeCoupon
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Exclude coupons")

  public Boolean getExcludeCoupon() {
    return excludeCoupon;
  }


  public void setExcludeCoupon(Boolean excludeCoupon) {
    this.excludeCoupon = excludeCoupon;
  }


  public ItemRestriction excludeFromFreePromotion(Boolean excludeFromFreePromotion) {
    
    this.excludeFromFreePromotion = excludeFromFreePromotion;
    return this;
  }

   /**
   * Exclude from free promotion
   * @return excludeFromFreePromotion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Exclude from free promotion")

  public Boolean getExcludeFromFreePromotion() {
    return excludeFromFreePromotion;
  }


  public void setExcludeFromFreePromotion(Boolean excludeFromFreePromotion) {
    this.excludeFromFreePromotion = excludeFromFreePromotion;
  }


  public ItemRestriction items(List<ItemRestrictionItem> items) {
    
    this.items = items;
    return this;
  }

  public ItemRestriction addItemsItem(ItemRestrictionItem itemsItem) {
    if (this.items == null) {
      this.items = new ArrayList<>();
    }
    this.items.add(itemsItem);
    return this;
  }

   /**
   * Items
   * @return items
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Items")

  public List<ItemRestrictionItem> getItems() {
    return items;
  }


  public void setItems(List<ItemRestrictionItem> items) {
    this.items = items;
  }


  public ItemRestriction maximumQuantity(Integer maximumQuantity) {
    
    this.maximumQuantity = maximumQuantity;
    return this;
  }

   /**
   * Maximum quantity
   * @return maximumQuantity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Maximum quantity")

  public Integer getMaximumQuantity() {
    return maximumQuantity;
  }


  public void setMaximumQuantity(Integer maximumQuantity) {
    this.maximumQuantity = maximumQuantity;
  }


  public ItemRestriction minimumQuantity(Integer minimumQuantity) {
    
    this.minimumQuantity = minimumQuantity;
    return this;
  }

   /**
   * Minimum quantity (defaults to 1)
   * @return minimumQuantity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Minimum quantity (defaults to 1)")

  public Integer getMinimumQuantity() {
    return minimumQuantity;
  }


  public void setMinimumQuantity(Integer minimumQuantity) {
    this.minimumQuantity = minimumQuantity;
  }


  public ItemRestriction multipleQuantity(Integer multipleQuantity) {
    
    this.multipleQuantity = multipleQuantity;
    return this;
  }

   /**
   * Multiple of quantity
   * @return multipleQuantity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Multiple of quantity")

  public Integer getMultipleQuantity() {
    return multipleQuantity;
  }


  public void setMultipleQuantity(Integer multipleQuantity) {
    this.multipleQuantity = multipleQuantity;
  }


  public ItemRestriction onePerCustomer(Boolean onePerCustomer) {
    
    this.onePerCustomer = onePerCustomer;
    return this;
  }

   /**
   * One per customer
   * @return onePerCustomer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "One per customer")

  public Boolean getOnePerCustomer() {
    return onePerCustomer;
  }


  public void setOnePerCustomer(Boolean onePerCustomer) {
    this.onePerCustomer = onePerCustomer;
  }


  public ItemRestriction purchaseSeparately(Boolean purchaseSeparately) {
    
    this.purchaseSeparately = purchaseSeparately;
    return this;
  }

   /**
   * Purchase separately
   * @return purchaseSeparately
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Purchase separately")

  public Boolean getPurchaseSeparately() {
    return purchaseSeparately;
  }


  public void setPurchaseSeparately(Boolean purchaseSeparately) {
    this.purchaseSeparately = purchaseSeparately;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ItemRestriction itemRestriction = (ItemRestriction) o;
    return Objects.equals(this.excludeCoupon, itemRestriction.excludeCoupon) &&
        Objects.equals(this.excludeFromFreePromotion, itemRestriction.excludeFromFreePromotion) &&
        Objects.equals(this.items, itemRestriction.items) &&
        Objects.equals(this.maximumQuantity, itemRestriction.maximumQuantity) &&
        Objects.equals(this.minimumQuantity, itemRestriction.minimumQuantity) &&
        Objects.equals(this.multipleQuantity, itemRestriction.multipleQuantity) &&
        Objects.equals(this.onePerCustomer, itemRestriction.onePerCustomer) &&
        Objects.equals(this.purchaseSeparately, itemRestriction.purchaseSeparately);
  }

  @Override
  public int hashCode() {
    return Objects.hash(excludeCoupon, excludeFromFreePromotion, items, maximumQuantity, minimumQuantity, multipleQuantity, onePerCustomer, purchaseSeparately);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ItemRestriction {\n");
    sb.append("    excludeCoupon: ").append(toIndentedString(excludeCoupon)).append("\n");
    sb.append("    excludeFromFreePromotion: ").append(toIndentedString(excludeFromFreePromotion)).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("    maximumQuantity: ").append(toIndentedString(maximumQuantity)).append("\n");
    sb.append("    minimumQuantity: ").append(toIndentedString(minimumQuantity)).append("\n");
    sb.append("    multipleQuantity: ").append(toIndentedString(multipleQuantity)).append("\n");
    sb.append("    onePerCustomer: ").append(toIndentedString(onePerCustomer)).append("\n");
    sb.append("    purchaseSeparately: ").append(toIndentedString(purchaseSeparately)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("exclude_coupon");
    openapiFields.add("exclude_from_free_promotion");
    openapiFields.add("items");
    openapiFields.add("maximum_quantity");
    openapiFields.add("minimum_quantity");
    openapiFields.add("multiple_quantity");
    openapiFields.add("one_per_customer");
    openapiFields.add("purchase_separately");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ItemRestriction
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (ItemRestriction.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in ItemRestriction is not found in the empty JSON string", ItemRestriction.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!ItemRestriction.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ItemRestriction` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      JsonArray jsonArrayitems = jsonObj.getAsJsonArray("items");
      if (jsonArrayitems != null) {
        // ensure the json data is an array
        if (!jsonObj.get("items").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `items` to be an array in the JSON string but got `%s`", jsonObj.get("items").toString()));
        }

        // validate the optional field `items` (array)
        for (int i = 0; i < jsonArrayitems.size(); i++) {
          ItemRestrictionItem.validateJsonObject(jsonArrayitems.get(i).getAsJsonObject());
        };
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ItemRestriction.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ItemRestriction' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ItemRestriction> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ItemRestriction.class));

       return (TypeAdapter<T>) new TypeAdapter<ItemRestriction>() {
           @Override
           public void write(JsonWriter out, ItemRestriction value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ItemRestriction read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ItemRestriction given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ItemRestriction
  * @throws IOException if the JSON string is invalid with respect to ItemRestriction
  */
  public static ItemRestriction fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ItemRestriction.class);
  }

 /**
  * Convert an instance of ItemRestriction to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

