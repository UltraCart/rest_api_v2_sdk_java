/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.ConversationVirtualAgentCapabilityZohoDeskDepartment;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * ConversationVirtualAgentCapabilities
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2025-10-06T15:02:44.982-04:00")



public class ConversationVirtualAgentCapabilities {
  @SerializedName("cancel_subscription")
  private Boolean cancelSubscription = null;

  @SerializedName("delay_subscription")
  private Boolean delaySubscription = null;

  @SerializedName("lookup_order_information")
  private Boolean lookupOrderInformation = null;

  @SerializedName("lookup_subscription_information")
  private Boolean lookupSubscriptionInformation = null;

  @SerializedName("open_support_ticket")
  private Boolean openSupportTicket = null;

  /**
   * Channel to use to open the support ticket
   */
  @JsonAdapter(OpenSupportTicketChannelEnum.Adapter.class)
  public enum OpenSupportTicketChannelEnum {
    NONE("none"),
    
    EMAIL("email"),
    
    ULTRACART_TASK("ultracart_task"),
    
    ZOHO_DESK_TICKET("zoho_desk_ticket");

    private String value;

    OpenSupportTicketChannelEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static OpenSupportTicketChannelEnum fromValue(String text) {
      for (OpenSupportTicketChannelEnum b : OpenSupportTicketChannelEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<OpenSupportTicketChannelEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final OpenSupportTicketChannelEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public OpenSupportTicketChannelEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return OpenSupportTicketChannelEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("open_support_ticket_channel")
  private OpenSupportTicketChannelEnum openSupportTicketChannel = null;

  @SerializedName("open_support_ticket_channel_email")
  private String openSupportTicketChannelEmail = null;

  @SerializedName("open_support_ticket_zoho_desk_department_id")
  private String openSupportTicketZohoDeskDepartmentId = null;

  @SerializedName("pause_subscription")
  private Boolean pauseSubscription = null;

  @SerializedName("resume_subscription")
  private Boolean resumeSubscription = null;

  @SerializedName("transfer_chat_to_live_agent")
  private Boolean transferChatToLiveAgent = null;

  @SerializedName("update_subscription_credit_card")
  private Boolean updateSubscriptionCreditCard = null;

  @SerializedName("zoho_desk_available")
  private Boolean zohoDeskAvailable = null;

  @SerializedName("zoho_desk_departments")
  private List<ConversationVirtualAgentCapabilityZohoDeskDepartment> zohoDeskDepartments = null;

  public ConversationVirtualAgentCapabilities cancelSubscription(Boolean cancelSubscription) {
    this.cancelSubscription = cancelSubscription;
    return this;
  }

   /**
   * Get cancelSubscription
   * @return cancelSubscription
  **/
  @ApiModelProperty(value = "")
  public Boolean isCancelSubscription() {
    return cancelSubscription;
  }

  public void setCancelSubscription(Boolean cancelSubscription) {
    this.cancelSubscription = cancelSubscription;
  }

  public ConversationVirtualAgentCapabilities delaySubscription(Boolean delaySubscription) {
    this.delaySubscription = delaySubscription;
    return this;
  }

   /**
   * Get delaySubscription
   * @return delaySubscription
  **/
  @ApiModelProperty(value = "")
  public Boolean isDelaySubscription() {
    return delaySubscription;
  }

  public void setDelaySubscription(Boolean delaySubscription) {
    this.delaySubscription = delaySubscription;
  }

  public ConversationVirtualAgentCapabilities lookupOrderInformation(Boolean lookupOrderInformation) {
    this.lookupOrderInformation = lookupOrderInformation;
    return this;
  }

   /**
   * Get lookupOrderInformation
   * @return lookupOrderInformation
  **/
  @ApiModelProperty(value = "")
  public Boolean isLookupOrderInformation() {
    return lookupOrderInformation;
  }

  public void setLookupOrderInformation(Boolean lookupOrderInformation) {
    this.lookupOrderInformation = lookupOrderInformation;
  }

  public ConversationVirtualAgentCapabilities lookupSubscriptionInformation(Boolean lookupSubscriptionInformation) {
    this.lookupSubscriptionInformation = lookupSubscriptionInformation;
    return this;
  }

   /**
   * Get lookupSubscriptionInformation
   * @return lookupSubscriptionInformation
  **/
  @ApiModelProperty(value = "")
  public Boolean isLookupSubscriptionInformation() {
    return lookupSubscriptionInformation;
  }

  public void setLookupSubscriptionInformation(Boolean lookupSubscriptionInformation) {
    this.lookupSubscriptionInformation = lookupSubscriptionInformation;
  }

  public ConversationVirtualAgentCapabilities openSupportTicket(Boolean openSupportTicket) {
    this.openSupportTicket = openSupportTicket;
    return this;
  }

   /**
   * Get openSupportTicket
   * @return openSupportTicket
  **/
  @ApiModelProperty(value = "")
  public Boolean isOpenSupportTicket() {
    return openSupportTicket;
  }

  public void setOpenSupportTicket(Boolean openSupportTicket) {
    this.openSupportTicket = openSupportTicket;
  }

  public ConversationVirtualAgentCapabilities openSupportTicketChannel(OpenSupportTicketChannelEnum openSupportTicketChannel) {
    this.openSupportTicketChannel = openSupportTicketChannel;
    return this;
  }

   /**
   * Channel to use to open the support ticket
   * @return openSupportTicketChannel
  **/
  @ApiModelProperty(value = "Channel to use to open the support ticket")
  public OpenSupportTicketChannelEnum getOpenSupportTicketChannel() {
    return openSupportTicketChannel;
  }

  public void setOpenSupportTicketChannel(OpenSupportTicketChannelEnum openSupportTicketChannel) {
    this.openSupportTicketChannel = openSupportTicketChannel;
  }

  public ConversationVirtualAgentCapabilities openSupportTicketChannelEmail(String openSupportTicketChannelEmail) {
    this.openSupportTicketChannelEmail = openSupportTicketChannelEmail;
    return this;
  }

   /**
   * Email to send support ticket to
   * @return openSupportTicketChannelEmail
  **/
  @ApiModelProperty(value = "Email to send support ticket to")
  public String getOpenSupportTicketChannelEmail() {
    return openSupportTicketChannelEmail;
  }

  public void setOpenSupportTicketChannelEmail(String openSupportTicketChannelEmail) {
    this.openSupportTicketChannelEmail = openSupportTicketChannelEmail;
  }

  public ConversationVirtualAgentCapabilities openSupportTicketZohoDeskDepartmentId(String openSupportTicketZohoDeskDepartmentId) {
    this.openSupportTicketZohoDeskDepartmentId = openSupportTicketZohoDeskDepartmentId;
    return this;
  }

   /**
   * Department ID to open a Zoho Desk ticket for
   * @return openSupportTicketZohoDeskDepartmentId
  **/
  @ApiModelProperty(value = "Department ID to open a Zoho Desk ticket for")
  public String getOpenSupportTicketZohoDeskDepartmentId() {
    return openSupportTicketZohoDeskDepartmentId;
  }

  public void setOpenSupportTicketZohoDeskDepartmentId(String openSupportTicketZohoDeskDepartmentId) {
    this.openSupportTicketZohoDeskDepartmentId = openSupportTicketZohoDeskDepartmentId;
  }

  public ConversationVirtualAgentCapabilities pauseSubscription(Boolean pauseSubscription) {
    this.pauseSubscription = pauseSubscription;
    return this;
  }

   /**
   * Get pauseSubscription
   * @return pauseSubscription
  **/
  @ApiModelProperty(value = "")
  public Boolean isPauseSubscription() {
    return pauseSubscription;
  }

  public void setPauseSubscription(Boolean pauseSubscription) {
    this.pauseSubscription = pauseSubscription;
  }

  public ConversationVirtualAgentCapabilities resumeSubscription(Boolean resumeSubscription) {
    this.resumeSubscription = resumeSubscription;
    return this;
  }

   /**
   * Get resumeSubscription
   * @return resumeSubscription
  **/
  @ApiModelProperty(value = "")
  public Boolean isResumeSubscription() {
    return resumeSubscription;
  }

  public void setResumeSubscription(Boolean resumeSubscription) {
    this.resumeSubscription = resumeSubscription;
  }

  public ConversationVirtualAgentCapabilities transferChatToLiveAgent(Boolean transferChatToLiveAgent) {
    this.transferChatToLiveAgent = transferChatToLiveAgent;
    return this;
  }

   /**
   * Get transferChatToLiveAgent
   * @return transferChatToLiveAgent
  **/
  @ApiModelProperty(value = "")
  public Boolean isTransferChatToLiveAgent() {
    return transferChatToLiveAgent;
  }

  public void setTransferChatToLiveAgent(Boolean transferChatToLiveAgent) {
    this.transferChatToLiveAgent = transferChatToLiveAgent;
  }

  public ConversationVirtualAgentCapabilities updateSubscriptionCreditCard(Boolean updateSubscriptionCreditCard) {
    this.updateSubscriptionCreditCard = updateSubscriptionCreditCard;
    return this;
  }

   /**
   * Get updateSubscriptionCreditCard
   * @return updateSubscriptionCreditCard
  **/
  @ApiModelProperty(value = "")
  public Boolean isUpdateSubscriptionCreditCard() {
    return updateSubscriptionCreditCard;
  }

  public void setUpdateSubscriptionCreditCard(Boolean updateSubscriptionCreditCard) {
    this.updateSubscriptionCreditCard = updateSubscriptionCreditCard;
  }

  public ConversationVirtualAgentCapabilities zohoDeskAvailable(Boolean zohoDeskAvailable) {
    this.zohoDeskAvailable = zohoDeskAvailable;
    return this;
  }

   /**
   * True if Zoho Desk is connected to UltraCart
   * @return zohoDeskAvailable
  **/
  @ApiModelProperty(value = "True if Zoho Desk is connected to UltraCart")
  public Boolean isZohoDeskAvailable() {
    return zohoDeskAvailable;
  }

  public void setZohoDeskAvailable(Boolean zohoDeskAvailable) {
    this.zohoDeskAvailable = zohoDeskAvailable;
  }

  public ConversationVirtualAgentCapabilities zohoDeskDepartments(List<ConversationVirtualAgentCapabilityZohoDeskDepartment> zohoDeskDepartments) {
    this.zohoDeskDepartments = zohoDeskDepartments;
    return this;
  }

  public ConversationVirtualAgentCapabilities addZohoDeskDepartmentsItem(ConversationVirtualAgentCapabilityZohoDeskDepartment zohoDeskDepartmentsItem) {
    if (this.zohoDeskDepartments == null) {
      this.zohoDeskDepartments = new ArrayList<ConversationVirtualAgentCapabilityZohoDeskDepartment>();
    }
    this.zohoDeskDepartments.add(zohoDeskDepartmentsItem);
    return this;
  }

   /**
   * Array of Zoho Desk Department if zoho desk is connected to UltraCart
   * @return zohoDeskDepartments
  **/
  @ApiModelProperty(value = "Array of Zoho Desk Department if zoho desk is connected to UltraCart")
  public List<ConversationVirtualAgentCapabilityZohoDeskDepartment> getZohoDeskDepartments() {
    return zohoDeskDepartments;
  }

  public void setZohoDeskDepartments(List<ConversationVirtualAgentCapabilityZohoDeskDepartment> zohoDeskDepartments) {
    this.zohoDeskDepartments = zohoDeskDepartments;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConversationVirtualAgentCapabilities conversationVirtualAgentCapabilities = (ConversationVirtualAgentCapabilities) o;
    return Objects.equals(this.cancelSubscription, conversationVirtualAgentCapabilities.cancelSubscription) &&
        Objects.equals(this.delaySubscription, conversationVirtualAgentCapabilities.delaySubscription) &&
        Objects.equals(this.lookupOrderInformation, conversationVirtualAgentCapabilities.lookupOrderInformation) &&
        Objects.equals(this.lookupSubscriptionInformation, conversationVirtualAgentCapabilities.lookupSubscriptionInformation) &&
        Objects.equals(this.openSupportTicket, conversationVirtualAgentCapabilities.openSupportTicket) &&
        Objects.equals(this.openSupportTicketChannel, conversationVirtualAgentCapabilities.openSupportTicketChannel) &&
        Objects.equals(this.openSupportTicketChannelEmail, conversationVirtualAgentCapabilities.openSupportTicketChannelEmail) &&
        Objects.equals(this.openSupportTicketZohoDeskDepartmentId, conversationVirtualAgentCapabilities.openSupportTicketZohoDeskDepartmentId) &&
        Objects.equals(this.pauseSubscription, conversationVirtualAgentCapabilities.pauseSubscription) &&
        Objects.equals(this.resumeSubscription, conversationVirtualAgentCapabilities.resumeSubscription) &&
        Objects.equals(this.transferChatToLiveAgent, conversationVirtualAgentCapabilities.transferChatToLiveAgent) &&
        Objects.equals(this.updateSubscriptionCreditCard, conversationVirtualAgentCapabilities.updateSubscriptionCreditCard) &&
        Objects.equals(this.zohoDeskAvailable, conversationVirtualAgentCapabilities.zohoDeskAvailable) &&
        Objects.equals(this.zohoDeskDepartments, conversationVirtualAgentCapabilities.zohoDeskDepartments);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cancelSubscription, delaySubscription, lookupOrderInformation, lookupSubscriptionInformation, openSupportTicket, openSupportTicketChannel, openSupportTicketChannelEmail, openSupportTicketZohoDeskDepartmentId, pauseSubscription, resumeSubscription, transferChatToLiveAgent, updateSubscriptionCreditCard, zohoDeskAvailable, zohoDeskDepartments);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConversationVirtualAgentCapabilities {\n");
    
    sb.append("    cancelSubscription: ").append(toIndentedString(cancelSubscription)).append("\n");
    sb.append("    delaySubscription: ").append(toIndentedString(delaySubscription)).append("\n");
    sb.append("    lookupOrderInformation: ").append(toIndentedString(lookupOrderInformation)).append("\n");
    sb.append("    lookupSubscriptionInformation: ").append(toIndentedString(lookupSubscriptionInformation)).append("\n");
    sb.append("    openSupportTicket: ").append(toIndentedString(openSupportTicket)).append("\n");
    sb.append("    openSupportTicketChannel: ").append(toIndentedString(openSupportTicketChannel)).append("\n");
    sb.append("    openSupportTicketChannelEmail: ").append(toIndentedString(openSupportTicketChannelEmail)).append("\n");
    sb.append("    openSupportTicketZohoDeskDepartmentId: ").append(toIndentedString(openSupportTicketZohoDeskDepartmentId)).append("\n");
    sb.append("    pauseSubscription: ").append(toIndentedString(pauseSubscription)).append("\n");
    sb.append("    resumeSubscription: ").append(toIndentedString(resumeSubscription)).append("\n");
    sb.append("    transferChatToLiveAgent: ").append(toIndentedString(transferChatToLiveAgent)).append("\n");
    sb.append("    updateSubscriptionCreditCard: ").append(toIndentedString(updateSubscriptionCreditCard)).append("\n");
    sb.append("    zohoDeskAvailable: ").append(toIndentedString(zohoDeskAvailable)).append("\n");
    sb.append("    zohoDeskDepartments: ").append(toIndentedString(zohoDeskDepartments)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

