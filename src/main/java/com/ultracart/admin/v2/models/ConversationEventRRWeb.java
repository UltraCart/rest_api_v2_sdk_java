/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * ConversationEventRRWeb
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-12-02T14:49:18.945-05:00")



public class ConversationEventRRWeb {
  @SerializedName("data")
  private String data = null;

  @SerializedName("data_part")
  private Integer dataPart = null;

  @SerializedName("data_sha256")
  private String dataSha256 = null;

  @SerializedName("data_total_parts")
  private Integer dataTotalParts = null;

  @SerializedName("data_total_sha256")
  private String dataTotalSha256 = null;

  @SerializedName("event_index")
  private Integer eventIndex = null;

  /**
   * Type of event
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    INIT("init"),
    
    EVENTS("events");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("type")
  private TypeEnum type = null;

  public ConversationEventRRWeb data(String data) {
    this.data = data;
    return this;
  }

   /**
   * Get data
   * @return data
  **/
  @ApiModelProperty(value = "")
  public String getData() {
    return data;
  }

  public void setData(String data) {
    this.data = data;
  }

  public ConversationEventRRWeb dataPart(Integer dataPart) {
    this.dataPart = dataPart;
    return this;
  }

   /**
   * Get dataPart
   * @return dataPart
  **/
  @ApiModelProperty(value = "")
  public Integer getDataPart() {
    return dataPart;
  }

  public void setDataPart(Integer dataPart) {
    this.dataPart = dataPart;
  }

  public ConversationEventRRWeb dataSha256(String dataSha256) {
    this.dataSha256 = dataSha256;
    return this;
  }

   /**
   * Get dataSha256
   * @return dataSha256
  **/
  @ApiModelProperty(value = "")
  public String getDataSha256() {
    return dataSha256;
  }

  public void setDataSha256(String dataSha256) {
    this.dataSha256 = dataSha256;
  }

  public ConversationEventRRWeb dataTotalParts(Integer dataTotalParts) {
    this.dataTotalParts = dataTotalParts;
    return this;
  }

   /**
   * Get dataTotalParts
   * @return dataTotalParts
  **/
  @ApiModelProperty(value = "")
  public Integer getDataTotalParts() {
    return dataTotalParts;
  }

  public void setDataTotalParts(Integer dataTotalParts) {
    this.dataTotalParts = dataTotalParts;
  }

  public ConversationEventRRWeb dataTotalSha256(String dataTotalSha256) {
    this.dataTotalSha256 = dataTotalSha256;
    return this;
  }

   /**
   * Get dataTotalSha256
   * @return dataTotalSha256
  **/
  @ApiModelProperty(value = "")
  public String getDataTotalSha256() {
    return dataTotalSha256;
  }

  public void setDataTotalSha256(String dataTotalSha256) {
    this.dataTotalSha256 = dataTotalSha256;
  }

  public ConversationEventRRWeb eventIndex(Integer eventIndex) {
    this.eventIndex = eventIndex;
    return this;
  }

   /**
   * Get eventIndex
   * @return eventIndex
  **/
  @ApiModelProperty(value = "")
  public Integer getEventIndex() {
    return eventIndex;
  }

  public void setEventIndex(Integer eventIndex) {
    this.eventIndex = eventIndex;
  }

  public ConversationEventRRWeb type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Type of event
   * @return type
  **/
  @ApiModelProperty(value = "Type of event")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConversationEventRRWeb conversationEventRRWeb = (ConversationEventRRWeb) o;
    return Objects.equals(this.data, conversationEventRRWeb.data) &&
        Objects.equals(this.dataPart, conversationEventRRWeb.dataPart) &&
        Objects.equals(this.dataSha256, conversationEventRRWeb.dataSha256) &&
        Objects.equals(this.dataTotalParts, conversationEventRRWeb.dataTotalParts) &&
        Objects.equals(this.dataTotalSha256, conversationEventRRWeb.dataTotalSha256) &&
        Objects.equals(this.eventIndex, conversationEventRRWeb.eventIndex) &&
        Objects.equals(this.type, conversationEventRRWeb.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(data, dataPart, dataSha256, dataTotalParts, dataTotalSha256, eventIndex, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConversationEventRRWeb {\n");
    
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("    dataPart: ").append(toIndentedString(dataPart)).append("\n");
    sb.append("    dataSha256: ").append(toIndentedString(dataSha256)).append("\n");
    sb.append("    dataTotalParts: ").append(toIndentedString(dataTotalParts)).append("\n");
    sb.append("    dataTotalSha256: ").append(toIndentedString(dataTotalSha256)).append("\n");
    sb.append("    eventIndex: ").append(toIndentedString(eventIndex)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

