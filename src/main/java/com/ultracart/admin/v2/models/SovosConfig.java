/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * SovosConfig
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-04T10:02:29.437-04:00[America/Indianapolis]")
public class SovosConfig {
  public static final String SERIALIZED_NAME_ACCESS_KEY = "access_key";
  @SerializedName(SERIALIZED_NAME_ACCESS_KEY)
  private String accessKey;

  public static final String SERIALIZED_NAME_ESTIMATE_ONLY = "estimate_only";
  @SerializedName(SERIALIZED_NAME_ESTIMATE_ONLY)
  private Boolean estimateOnly;

  public static final String SERIALIZED_NAME_LAST_TEST_DTS = "last_test_dts";
  @SerializedName(SERIALIZED_NAME_LAST_TEST_DTS)
  private String lastTestDts;

  public static final String SERIALIZED_NAME_SECRET_KEY = "secret_key";
  @SerializedName(SERIALIZED_NAME_SECRET_KEY)
  private String secretKey;

  public static final String SERIALIZED_NAME_SEND_TEST_ORDERS = "send_test_orders";
  @SerializedName(SERIALIZED_NAME_SEND_TEST_ORDERS)
  private Boolean sendTestOrders;

  public static final String SERIALIZED_NAME_TEST_RESULTS = "test_results";
  @SerializedName(SERIALIZED_NAME_TEST_RESULTS)
  private String testResults;

  public static final String SERIALIZED_NAME_UAT = "uat";
  @SerializedName(SERIALIZED_NAME_UAT)
  private Boolean uat;

  public SovosConfig() { 
  }

  public SovosConfig accessKey(String accessKey) {
    
    this.accessKey = accessKey;
    return this;
  }

   /**
   * Sovos access key
   * @return accessKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Sovos access key")

  public String getAccessKey() {
    return accessKey;
  }


  public void setAccessKey(String accessKey) {
    this.accessKey = accessKey;
  }


  public SovosConfig estimateOnly(Boolean estimateOnly) {
    
    this.estimateOnly = estimateOnly;
    return this;
  }

   /**
   * True if this Sovos configuration is to estimate taxes only and not report placed orders to Sovos
   * @return estimateOnly
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if this Sovos configuration is to estimate taxes only and not report placed orders to Sovos")

  public Boolean getEstimateOnly() {
    return estimateOnly;
  }


  public void setEstimateOnly(Boolean estimateOnly) {
    this.estimateOnly = estimateOnly;
  }


  public SovosConfig lastTestDts(String lastTestDts) {
    
    this.lastTestDts = lastTestDts;
    return this;
  }

   /**
   * Date/time of the connection test to Sovos
   * @return lastTestDts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Date/time of the connection test to Sovos")

  public String getLastTestDts() {
    return lastTestDts;
  }


  public void setLastTestDts(String lastTestDts) {
    this.lastTestDts = lastTestDts;
  }


  public SovosConfig secretKey(String secretKey) {
    
    this.secretKey = secretKey;
    return this;
  }

   /**
   * Sovos secret key
   * @return secretKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Sovos secret key")

  public String getSecretKey() {
    return secretKey;
  }


  public void setSecretKey(String secretKey) {
    this.secretKey = secretKey;
  }


  public SovosConfig sendTestOrders(Boolean sendTestOrders) {
    
    this.sendTestOrders = sendTestOrders;
    return this;
  }

   /**
   * Send test orders through to Sovos.  The default is to not transmit test orders to Sovos.
   * @return sendTestOrders
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Send test orders through to Sovos.  The default is to not transmit test orders to Sovos.")

  public Boolean getSendTestOrders() {
    return sendTestOrders;
  }


  public void setSendTestOrders(Boolean sendTestOrders) {
    this.sendTestOrders = sendTestOrders;
  }


  public SovosConfig testResults(String testResults) {
    
    this.testResults = testResults;
    return this;
  }

   /**
   * Test results of the last connection test to Sovos
   * @return testResults
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Test results of the last connection test to Sovos")

  public String getTestResults() {
    return testResults;
  }


  public void setTestResults(String testResults) {
    this.testResults = testResults;
  }


  public SovosConfig uat(Boolean uat) {
    
    this.uat = uat;
    return this;
  }

   /**
   * True if this Sovos configuration is currently undergoing user acceptance testing
   * @return uat
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if this Sovos configuration is currently undergoing user acceptance testing")

  public Boolean getUat() {
    return uat;
  }


  public void setUat(Boolean uat) {
    this.uat = uat;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SovosConfig sovosConfig = (SovosConfig) o;
    return Objects.equals(this.accessKey, sovosConfig.accessKey) &&
        Objects.equals(this.estimateOnly, sovosConfig.estimateOnly) &&
        Objects.equals(this.lastTestDts, sovosConfig.lastTestDts) &&
        Objects.equals(this.secretKey, sovosConfig.secretKey) &&
        Objects.equals(this.sendTestOrders, sovosConfig.sendTestOrders) &&
        Objects.equals(this.testResults, sovosConfig.testResults) &&
        Objects.equals(this.uat, sovosConfig.uat);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessKey, estimateOnly, lastTestDts, secretKey, sendTestOrders, testResults, uat);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SovosConfig {\n");
    sb.append("    accessKey: ").append(toIndentedString(accessKey)).append("\n");
    sb.append("    estimateOnly: ").append(toIndentedString(estimateOnly)).append("\n");
    sb.append("    lastTestDts: ").append(toIndentedString(lastTestDts)).append("\n");
    sb.append("    secretKey: ").append(toIndentedString(secretKey)).append("\n");
    sb.append("    sendTestOrders: ").append(toIndentedString(sendTestOrders)).append("\n");
    sb.append("    testResults: ").append(toIndentedString(testResults)).append("\n");
    sb.append("    uat: ").append(toIndentedString(uat)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("access_key");
    openapiFields.add("estimate_only");
    openapiFields.add("last_test_dts");
    openapiFields.add("secret_key");
    openapiFields.add("send_test_orders");
    openapiFields.add("test_results");
    openapiFields.add("uat");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to SovosConfig
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (SovosConfig.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in SovosConfig is not found in the empty JSON string", SovosConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!SovosConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SovosConfig` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("access_key") != null && !jsonObj.get("access_key").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `access_key` to be a primitive type in the JSON string but got `%s`", jsonObj.get("access_key").toString()));
      }
      if (jsonObj.get("last_test_dts") != null && !jsonObj.get("last_test_dts").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_test_dts` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_test_dts").toString()));
      }
      if (jsonObj.get("secret_key") != null && !jsonObj.get("secret_key").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `secret_key` to be a primitive type in the JSON string but got `%s`", jsonObj.get("secret_key").toString()));
      }
      if (jsonObj.get("test_results") != null && !jsonObj.get("test_results").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `test_results` to be a primitive type in the JSON string but got `%s`", jsonObj.get("test_results").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SovosConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SovosConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SovosConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SovosConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<SovosConfig>() {
           @Override
           public void write(JsonWriter out, SovosConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SovosConfig read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of SovosConfig given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of SovosConfig
  * @throws IOException if the JSON string is invalid with respect to SovosConfig
  */
  public static SovosConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SovosConfig.class);
  }

 /**
  * Convert an instance of SovosConfig to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

