/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * SovosConfig
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-05-18T23:07:15.581-04:00")



public class SovosConfig {
  @SerializedName("access_key")
  private String accessKey = null;

  @SerializedName("estimate_only")
  private Boolean estimateOnly = null;

  @SerializedName("last_test_dts")
  private String lastTestDts = null;

  @SerializedName("secret_key")
  private String secretKey = null;

  @SerializedName("send_test_orders")
  private Boolean sendTestOrders = null;

  @SerializedName("test_results")
  private String testResults = null;

  @SerializedName("uat")
  private Boolean uat = null;

  public SovosConfig accessKey(String accessKey) {
    this.accessKey = accessKey;
    return this;
  }

   /**
   * Sovos access key
   * @return accessKey
  **/
  @ApiModelProperty(value = "Sovos access key")
  public String getAccessKey() {
    return accessKey;
  }

  public void setAccessKey(String accessKey) {
    this.accessKey = accessKey;
  }

  public SovosConfig estimateOnly(Boolean estimateOnly) {
    this.estimateOnly = estimateOnly;
    return this;
  }

   /**
   * True if this Sovos configuration is to estimate taxes only and not report placed orders to Sovos
   * @return estimateOnly
  **/
  @ApiModelProperty(value = "True if this Sovos configuration is to estimate taxes only and not report placed orders to Sovos")
  public Boolean isEstimateOnly() {
    return estimateOnly;
  }

  public void setEstimateOnly(Boolean estimateOnly) {
    this.estimateOnly = estimateOnly;
  }

  public SovosConfig lastTestDts(String lastTestDts) {
    this.lastTestDts = lastTestDts;
    return this;
  }

   /**
   * Date/time of the connection test to Sovos
   * @return lastTestDts
  **/
  @ApiModelProperty(value = "Date/time of the connection test to Sovos")
  public String getLastTestDts() {
    return lastTestDts;
  }

  public void setLastTestDts(String lastTestDts) {
    this.lastTestDts = lastTestDts;
  }

  public SovosConfig secretKey(String secretKey) {
    this.secretKey = secretKey;
    return this;
  }

   /**
   * Sovos secret key
   * @return secretKey
  **/
  @ApiModelProperty(value = "Sovos secret key")
  public String getSecretKey() {
    return secretKey;
  }

  public void setSecretKey(String secretKey) {
    this.secretKey = secretKey;
  }

  public SovosConfig sendTestOrders(Boolean sendTestOrders) {
    this.sendTestOrders = sendTestOrders;
    return this;
  }

   /**
   * Send test orders through to Sovos.  The default is to not transmit test orders to Sovos.
   * @return sendTestOrders
  **/
  @ApiModelProperty(value = "Send test orders through to Sovos.  The default is to not transmit test orders to Sovos.")
  public Boolean isSendTestOrders() {
    return sendTestOrders;
  }

  public void setSendTestOrders(Boolean sendTestOrders) {
    this.sendTestOrders = sendTestOrders;
  }

  public SovosConfig testResults(String testResults) {
    this.testResults = testResults;
    return this;
  }

   /**
   * Test results of the last connection test to Sovos
   * @return testResults
  **/
  @ApiModelProperty(value = "Test results of the last connection test to Sovos")
  public String getTestResults() {
    return testResults;
  }

  public void setTestResults(String testResults) {
    this.testResults = testResults;
  }

  public SovosConfig uat(Boolean uat) {
    this.uat = uat;
    return this;
  }

   /**
   * True if this Sovos configuration is currently undergoing user acceptance testing
   * @return uat
  **/
  @ApiModelProperty(value = "True if this Sovos configuration is currently undergoing user acceptance testing")
  public Boolean isUat() {
    return uat;
  }

  public void setUat(Boolean uat) {
    this.uat = uat;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SovosConfig sovosConfig = (SovosConfig) o;
    return Objects.equals(this.accessKey, sovosConfig.accessKey) &&
        Objects.equals(this.estimateOnly, sovosConfig.estimateOnly) &&
        Objects.equals(this.lastTestDts, sovosConfig.lastTestDts) &&
        Objects.equals(this.secretKey, sovosConfig.secretKey) &&
        Objects.equals(this.sendTestOrders, sovosConfig.sendTestOrders) &&
        Objects.equals(this.testResults, sovosConfig.testResults) &&
        Objects.equals(this.uat, sovosConfig.uat);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessKey, estimateOnly, lastTestDts, secretKey, sendTestOrders, testResults, uat);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SovosConfig {\n");
    
    sb.append("    accessKey: ").append(toIndentedString(accessKey)).append("\n");
    sb.append("    estimateOnly: ").append(toIndentedString(estimateOnly)).append("\n");
    sb.append("    lastTestDts: ").append(toIndentedString(lastTestDts)).append("\n");
    sb.append("    secretKey: ").append(toIndentedString(secretKey)).append("\n");
    sb.append("    sendTestOrders: ").append(toIndentedString(sendTestOrders)).append("\n");
    sb.append("    testResults: ").append(toIndentedString(testResults)).append("\n");
    sb.append("    uat: ").append(toIndentedString(uat)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

