/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.LibraryItemAccount;
import com.ultracart.admin.v2.models.LibraryItemAsset;
import com.ultracart.admin.v2.models.LibraryItemAttribute;
import com.ultracart.admin.v2.models.LibraryItemEmail;
import com.ultracart.admin.v2.models.LibraryItemPublishedMeta;
import com.ultracart.admin.v2.models.LibraryItemPurchasedMeta;
import com.ultracart.admin.v2.models.LibraryItemScreenshot;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * LibraryItem
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-21T12:08:57.583-05:00[America/Indianapolis]")
public class LibraryItem {
  public static final String SERIALIZED_NAME_ASSETS = "assets";
  @SerializedName(SERIALIZED_NAME_ASSETS)
  private List<LibraryItemAsset> assets = null;

  public static final String SERIALIZED_NAME_ATTRIBUTES = "attributes";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTES)
  private List<LibraryItemAttribute> attributes = null;

  public static final String SERIALIZED_NAME_CATEGORIES = "categories";
  @SerializedName(SERIALIZED_NAME_CATEGORIES)
  private List<String> categories = null;

  public static final String SERIALIZED_NAME_CONTENT = "content";
  @SerializedName(SERIALIZED_NAME_CONTENT)
  private String content;

  public static final String SERIALIZED_NAME_CONTENT_TYPE = "content_type";
  @SerializedName(SERIALIZED_NAME_CONTENT_TYPE)
  private String contentType;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_INDUSTRIES = "industries";
  @SerializedName(SERIALIZED_NAME_INDUSTRIES)
  private List<String> industries = null;

  public static final String SERIALIZED_NAME_LIBRARY_ITEM_OID = "library_item_oid";
  @SerializedName(SERIALIZED_NAME_LIBRARY_ITEM_OID)
  private Integer libraryItemOid;

  public static final String SERIALIZED_NAME_MERCHANT_ID = "merchant_id";
  @SerializedName(SERIALIZED_NAME_MERCHANT_ID)
  private String merchantId;

  public static final String SERIALIZED_NAME_MY_PURCHASED_VERSION = "my_purchased_version";
  @SerializedName(SERIALIZED_NAME_MY_PURCHASED_VERSION)
  private Integer myPurchasedVersion;

  public static final String SERIALIZED_NAME_ORIGINAL_OBJECT_ID = "original_object_id";
  @SerializedName(SERIALIZED_NAME_ORIGINAL_OBJECT_ID)
  private String originalObjectId;

  public static final String SERIALIZED_NAME_PRICE = "price";
  @SerializedName(SERIALIZED_NAME_PRICE)
  private BigDecimal price;

  public static final String SERIALIZED_NAME_PRICE_FORMATTED = "price_formatted";
  @SerializedName(SERIALIZED_NAME_PRICE_FORMATTED)
  private String priceFormatted;

  public static final String SERIALIZED_NAME_PUBLISHED = "published";
  @SerializedName(SERIALIZED_NAME_PUBLISHED)
  private Boolean published;

  public static final String SERIALIZED_NAME_PUBLISHED_DTS = "published_dts";
  @SerializedName(SERIALIZED_NAME_PUBLISHED_DTS)
  private Object publishedDts;

  public static final String SERIALIZED_NAME_PUBLISHED_FROM_LIBRARY_ITEM_OID = "published_from_library_item_oid";
  @SerializedName(SERIALIZED_NAME_PUBLISHED_FROM_LIBRARY_ITEM_OID)
  private Integer publishedFromLibraryItemOid;

  public static final String SERIALIZED_NAME_PUBLISHED_META = "published_meta";
  @SerializedName(SERIALIZED_NAME_PUBLISHED_META)
  private LibraryItemPublishedMeta publishedMeta;

  public static final String SERIALIZED_NAME_PUBLISHED_VERSION = "published_version";
  @SerializedName(SERIALIZED_NAME_PUBLISHED_VERSION)
  private Integer publishedVersion;

  public static final String SERIALIZED_NAME_PURCHASED = "purchased";
  @SerializedName(SERIALIZED_NAME_PURCHASED)
  private Boolean purchased;

  public static final String SERIALIZED_NAME_PURCHASED_FROM_LIBRARY_ITEM_OID = "purchased_from_library_item_oid";
  @SerializedName(SERIALIZED_NAME_PURCHASED_FROM_LIBRARY_ITEM_OID)
  private Integer purchasedFromLibraryItemOid;

  public static final String SERIALIZED_NAME_PURCHASED_META = "purchased_meta";
  @SerializedName(SERIALIZED_NAME_PURCHASED_META)
  private LibraryItemPurchasedMeta purchasedMeta;

  public static final String SERIALIZED_NAME_PURCHASED_VERSION = "purchased_version";
  @SerializedName(SERIALIZED_NAME_PURCHASED_VERSION)
  private Integer purchasedVersion;

  public static final String SERIALIZED_NAME_REJECTED = "rejected";
  @SerializedName(SERIALIZED_NAME_REJECTED)
  private Boolean rejected;

  public static final String SERIALIZED_NAME_REJECTED_REASON = "rejected_reason";
  @SerializedName(SERIALIZED_NAME_REJECTED_REASON)
  private String rejectedReason;

  public static final String SERIALIZED_NAME_RELEASE_NOTES = "release_notes";
  @SerializedName(SERIALIZED_NAME_RELEASE_NOTES)
  private String releaseNotes;

  public static final String SERIALIZED_NAME_RELEASE_VERSION = "release_version";
  @SerializedName(SERIALIZED_NAME_RELEASE_VERSION)
  private Integer releaseVersion;

  public static final String SERIALIZED_NAME_REVIEWED = "reviewed";
  @SerializedName(SERIALIZED_NAME_REVIEWED)
  private Boolean reviewed;

  public static final String SERIALIZED_NAME_REVIEWED_DTS = "reviewed_dts";
  @SerializedName(SERIALIZED_NAME_REVIEWED_DTS)
  private Object reviewedDts;

  public static final String SERIALIZED_NAME_SCREENSHOTS = "screenshots";
  @SerializedName(SERIALIZED_NAME_SCREENSHOTS)
  private List<LibraryItemScreenshot> screenshots = null;

  public static final String SERIALIZED_NAME_SHARE_WITH_ACCOUNTS = "share_with_accounts";
  @SerializedName(SERIALIZED_NAME_SHARE_WITH_ACCOUNTS)
  private List<LibraryItemAccount> shareWithAccounts = null;

  public static final String SERIALIZED_NAME_SHARE_WITH_OTHER_EMAILS = "share_with_other_emails";
  @SerializedName(SERIALIZED_NAME_SHARE_WITH_OTHER_EMAILS)
  private List<LibraryItemEmail> shareWithOtherEmails = null;

  public static final String SERIALIZED_NAME_SHARED = "shared";
  @SerializedName(SERIALIZED_NAME_SHARED)
  private Boolean shared;

  public static final String SERIALIZED_NAME_SOURCE = "source";
  @SerializedName(SERIALIZED_NAME_SOURCE)
  private Boolean source;

  public static final String SERIALIZED_NAME_SOURCE_TO_LIBRARY_ITEM_OID = "source_to_library_item_oid";
  @SerializedName(SERIALIZED_NAME_SOURCE_TO_LIBRARY_ITEM_OID)
  private Integer sourceToLibraryItemOid;

  public static final String SERIALIZED_NAME_SOURCE_VERSION = "source_version";
  @SerializedName(SERIALIZED_NAME_SOURCE_VERSION)
  private Integer sourceVersion;

  public static final String SERIALIZED_NAME_STYLE = "style";
  @SerializedName(SERIALIZED_NAME_STYLE)
  private String style;

  public static final String SERIALIZED_NAME_TIMES_PURCHASED = "times_purchased";
  @SerializedName(SERIALIZED_NAME_TIMES_PURCHASED)
  private Integer timesPurchased;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_UNDER_REVIEW = "under_review";
  @SerializedName(SERIALIZED_NAME_UNDER_REVIEW)
  private Boolean underReview;

  public LibraryItem() { 
  }

  public LibraryItem assets(List<LibraryItemAsset> assets) {
    
    this.assets = assets;
    return this;
  }

  public LibraryItem addAssetsItem(LibraryItemAsset assetsItem) {
    if (this.assets == null) {
      this.assets = new ArrayList<>();
    }
    this.assets.add(assetsItem);
    return this;
  }

   /**
   * Get assets
   * @return assets
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<LibraryItemAsset> getAssets() {
    return assets;
  }


  public void setAssets(List<LibraryItemAsset> assets) {
    this.assets = assets;
  }


  public LibraryItem attributes(List<LibraryItemAttribute> attributes) {
    
    this.attributes = attributes;
    return this;
  }

  public LibraryItem addAttributesItem(LibraryItemAttribute attributesItem) {
    if (this.attributes == null) {
      this.attributes = new ArrayList<>();
    }
    this.attributes.add(attributesItem);
    return this;
  }

   /**
   * Get attributes
   * @return attributes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<LibraryItemAttribute> getAttributes() {
    return attributes;
  }


  public void setAttributes(List<LibraryItemAttribute> attributes) {
    this.attributes = attributes;
  }


  public LibraryItem categories(List<String> categories) {
    
    this.categories = categories;
    return this;
  }

  public LibraryItem addCategoriesItem(String categoriesItem) {
    if (this.categories == null) {
      this.categories = new ArrayList<>();
    }
    this.categories.add(categoriesItem);
    return this;
  }

   /**
   * Get categories
   * @return categories
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getCategories() {
    return categories;
  }


  public void setCategories(List<String> categories) {
    this.categories = categories;
  }


  public LibraryItem content(String content) {
    
    this.content = content;
    return this;
  }

   /**
   * Get content
   * @return content
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getContent() {
    return content;
  }


  public void setContent(String content) {
    this.content = content;
  }


  public LibraryItem contentType(String contentType) {
    
    this.contentType = contentType;
    return this;
  }

   /**
   * Get contentType
   * @return contentType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getContentType() {
    return contentType;
  }


  public void setContentType(String contentType) {
    this.contentType = contentType;
  }


  public LibraryItem description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public LibraryItem industries(List<String> industries) {
    
    this.industries = industries;
    return this;
  }

  public LibraryItem addIndustriesItem(String industriesItem) {
    if (this.industries == null) {
      this.industries = new ArrayList<>();
    }
    this.industries.add(industriesItem);
    return this;
  }

   /**
   * Get industries
   * @return industries
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getIndustries() {
    return industries;
  }


  public void setIndustries(List<String> industries) {
    this.industries = industries;
  }


  public LibraryItem libraryItemOid(Integer libraryItemOid) {
    
    this.libraryItemOid = libraryItemOid;
    return this;
  }

   /**
   * Get libraryItemOid
   * @return libraryItemOid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getLibraryItemOid() {
    return libraryItemOid;
  }


  public void setLibraryItemOid(Integer libraryItemOid) {
    this.libraryItemOid = libraryItemOid;
  }


  public LibraryItem merchantId(String merchantId) {
    
    this.merchantId = merchantId;
    return this;
  }

   /**
   * Get merchantId
   * @return merchantId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMerchantId() {
    return merchantId;
  }


  public void setMerchantId(String merchantId) {
    this.merchantId = merchantId;
  }


  public LibraryItem myPurchasedVersion(Integer myPurchasedVersion) {
    
    this.myPurchasedVersion = myPurchasedVersion;
    return this;
  }

   /**
   * If this is a public item and the merchant has already purchased it, this is their version.  If not yet purchased, this will be zero.  This value will only be populated during a searchPublicItems() call.
   * @return myPurchasedVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If this is a public item and the merchant has already purchased it, this is their version.  If not yet purchased, this will be zero.  This value will only be populated during a searchPublicItems() call.")

  public Integer getMyPurchasedVersion() {
    return myPurchasedVersion;
  }


  public void setMyPurchasedVersion(Integer myPurchasedVersion) {
    this.myPurchasedVersion = myPurchasedVersion;
  }


  public LibraryItem originalObjectId(String originalObjectId) {
    
    this.originalObjectId = originalObjectId;
    return this;
  }

   /**
   * This id points to the original object that was added to the library. For flows and campaigns, this is a uuid string.  For upsells, it is an oid integer.  For transactional_emails, it is an email name.
   * @return originalObjectId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This id points to the original object that was added to the library. For flows and campaigns, this is a uuid string.  For upsells, it is an oid integer.  For transactional_emails, it is an email name.")

  public String getOriginalObjectId() {
    return originalObjectId;
  }


  public void setOriginalObjectId(String originalObjectId) {
    this.originalObjectId = originalObjectId;
  }


  public LibraryItem price(BigDecimal price) {
    
    this.price = price;
    return this;
  }

   /**
   * The price of the published item.  Null for any private library items.
   * @return price
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The price of the published item.  Null for any private library items.")

  public BigDecimal getPrice() {
    return price;
  }


  public void setPrice(BigDecimal price) {
    this.price = price;
  }


  public LibraryItem priceFormatted(String priceFormatted) {
    
    this.priceFormatted = priceFormatted;
    return this;
  }

   /**
   * The formatted price of the published item.  Null for any private library items.
   * @return priceFormatted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The formatted price of the published item.  Null for any private library items.")

  public String getPriceFormatted() {
    return priceFormatted;
  }


  public void setPriceFormatted(String priceFormatted) {
    this.priceFormatted = priceFormatted;
  }


  public LibraryItem published(Boolean published) {
    
    this.published = published;
    return this;
  }

   /**
   * True if this library item is a published item (not source)
   * @return published
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if this library item is a published item (not source)")

  public Boolean getPublished() {
    return published;
  }


  public void setPublished(Boolean published) {
    this.published = published;
  }


  public LibraryItem publishedDts(Object publishedDts) {
    
    this.publishedDts = publishedDts;
    return this;
  }

   /**
   * The timestamp of the last published version
   * @return publishedDts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The timestamp of the last published version")

  public Object getPublishedDts() {
    return publishedDts;
  }


  public void setPublishedDts(Object publishedDts) {
    this.publishedDts = publishedDts;
  }


  public LibraryItem publishedFromLibraryItemOid(Integer publishedFromLibraryItemOid) {
    
    this.publishedFromLibraryItemOid = publishedFromLibraryItemOid;
    return this;
  }

   /**
   * The source item used to publish this item.  This allows for comparisons between source and published
   * @return publishedFromLibraryItemOid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The source item used to publish this item.  This allows for comparisons between source and published")

  public Integer getPublishedFromLibraryItemOid() {
    return publishedFromLibraryItemOid;
  }


  public void setPublishedFromLibraryItemOid(Integer publishedFromLibraryItemOid) {
    this.publishedFromLibraryItemOid = publishedFromLibraryItemOid;
  }


  public LibraryItem publishedMeta(LibraryItemPublishedMeta publishedMeta) {
    
    this.publishedMeta = publishedMeta;
    return this;
  }

   /**
   * Get publishedMeta
   * @return publishedMeta
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LibraryItemPublishedMeta getPublishedMeta() {
    return publishedMeta;
  }


  public void setPublishedMeta(LibraryItemPublishedMeta publishedMeta) {
    this.publishedMeta = publishedMeta;
  }


  public LibraryItem publishedVersion(Integer publishedVersion) {
    
    this.publishedVersion = publishedVersion;
    return this;
  }

   /**
   * The source version when this item was published.  This allows for out-of-date alerts to be shown when there is a difference between source and published
   * @return publishedVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The source version when this item was published.  This allows for out-of-date alerts to be shown when there is a difference between source and published")

  public Integer getPublishedVersion() {
    return publishedVersion;
  }


  public void setPublishedVersion(Integer publishedVersion) {
    this.publishedVersion = publishedVersion;
  }


  public LibraryItem purchased(Boolean purchased) {
    
    this.purchased = purchased;
    return this;
  }

   /**
   * True if this library item has been purchased
   * @return purchased
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if this library item has been purchased")

  public Boolean getPurchased() {
    return purchased;
  }


  public void setPurchased(Boolean purchased) {
    this.purchased = purchased;
  }


  public LibraryItem purchasedFromLibraryItemOid(Integer purchasedFromLibraryItemOid) {
    
    this.purchasedFromLibraryItemOid = purchasedFromLibraryItemOid;
    return this;
  }

   /**
   * The published item that was purchased to make this item.  This allows for comparisons between published and purchased
   * @return purchasedFromLibraryItemOid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The published item that was purchased to make this item.  This allows for comparisons between published and purchased")

  public Integer getPurchasedFromLibraryItemOid() {
    return purchasedFromLibraryItemOid;
  }


  public void setPurchasedFromLibraryItemOid(Integer purchasedFromLibraryItemOid) {
    this.purchasedFromLibraryItemOid = purchasedFromLibraryItemOid;
  }


  public LibraryItem purchasedMeta(LibraryItemPurchasedMeta purchasedMeta) {
    
    this.purchasedMeta = purchasedMeta;
    return this;
  }

   /**
   * Get purchasedMeta
   * @return purchasedMeta
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LibraryItemPurchasedMeta getPurchasedMeta() {
    return purchasedMeta;
  }


  public void setPurchasedMeta(LibraryItemPurchasedMeta purchasedMeta) {
    this.purchasedMeta = purchasedMeta;
  }


  public LibraryItem purchasedVersion(Integer purchasedVersion) {
    
    this.purchasedVersion = purchasedVersion;
    return this;
  }

   /**
   * The published version when this item was purchased.  This allows for out-of-date alerts to be shown when there is a difference between published and purchased
   * @return purchasedVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The published version when this item was purchased.  This allows for out-of-date alerts to be shown when there is a difference between published and purchased")

  public Integer getPurchasedVersion() {
    return purchasedVersion;
  }


  public void setPurchasedVersion(Integer purchasedVersion) {
    this.purchasedVersion = purchasedVersion;
  }


  public LibraryItem rejected(Boolean rejected) {
    
    this.rejected = rejected;
    return this;
  }

   /**
   * Any published library reviewed by UltraCart staff for malicious or inappropriate content will have this flag set to true.  This is always false for non-published items
   * @return rejected
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Any published library reviewed by UltraCart staff for malicious or inappropriate content will have this flag set to true.  This is always false for non-published items")

  public Boolean getRejected() {
    return rejected;
  }


  public void setRejected(Boolean rejected) {
    this.rejected = rejected;
  }


  public LibraryItem rejectedReason(String rejectedReason) {
    
    this.rejectedReason = rejectedReason;
    return this;
  }

   /**
   * Any rejected published item will have this field populated with the reason.
   * @return rejectedReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Any rejected published item will have this field populated with the reason.")

  public String getRejectedReason() {
    return rejectedReason;
  }


  public void setRejectedReason(String rejectedReason) {
    this.rejectedReason = rejectedReason;
  }


  public LibraryItem releaseNotes(String releaseNotes) {
    
    this.releaseNotes = releaseNotes;
    return this;
  }

   /**
   * Release notes specific to each published version and only appearing on public items.
   * @return releaseNotes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Release notes specific to each published version and only appearing on public items.")

  public String getReleaseNotes() {
    return releaseNotes;
  }


  public void setReleaseNotes(String releaseNotes) {
    this.releaseNotes = releaseNotes;
  }


  public LibraryItem releaseVersion(Integer releaseVersion) {
    
    this.releaseVersion = releaseVersion;
    return this;
  }

   /**
   * This counter records how many times a library item has been published.  This is used to show version history.
   * @return releaseVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This counter records how many times a library item has been published.  This is used to show version history.")

  public Integer getReleaseVersion() {
    return releaseVersion;
  }


  public void setReleaseVersion(Integer releaseVersion) {
    this.releaseVersion = releaseVersion;
  }


  public LibraryItem reviewed(Boolean reviewed) {
    
    this.reviewed = reviewed;
    return this;
  }

   /**
   * Any published library items must be reviewed by UltraCart staff for malicious content.  This flag shows the status of that review.  This is always false for non-published items
   * @return reviewed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Any published library items must be reviewed by UltraCart staff for malicious content.  This flag shows the status of that review.  This is always false for non-published items")

  public Boolean getReviewed() {
    return reviewed;
  }


  public void setReviewed(Boolean reviewed) {
    this.reviewed = reviewed;
  }


  public LibraryItem reviewedDts(Object reviewedDts) {
    
    this.reviewedDts = reviewedDts;
    return this;
  }

   /**
   * This is the timestamp for a published items formal review by UltraCart staff for malicious content.
   * @return reviewedDts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This is the timestamp for a published items formal review by UltraCart staff for malicious content.")

  public Object getReviewedDts() {
    return reviewedDts;
  }


  public void setReviewedDts(Object reviewedDts) {
    this.reviewedDts = reviewedDts;
  }


  public LibraryItem screenshots(List<LibraryItemScreenshot> screenshots) {
    
    this.screenshots = screenshots;
    return this;
  }

  public LibraryItem addScreenshotsItem(LibraryItemScreenshot screenshotsItem) {
    if (this.screenshots == null) {
      this.screenshots = new ArrayList<>();
    }
    this.screenshots.add(screenshotsItem);
    return this;
  }

   /**
   * Get screenshots
   * @return screenshots
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<LibraryItemScreenshot> getScreenshots() {
    return screenshots;
  }


  public void setScreenshots(List<LibraryItemScreenshot> screenshots) {
    this.screenshots = screenshots;
  }


  public LibraryItem shareWithAccounts(List<LibraryItemAccount> shareWithAccounts) {
    
    this.shareWithAccounts = shareWithAccounts;
    return this;
  }

  public LibraryItem addShareWithAccountsItem(LibraryItemAccount shareWithAccountsItem) {
    if (this.shareWithAccounts == null) {
      this.shareWithAccounts = new ArrayList<>();
    }
    this.shareWithAccounts.add(shareWithAccountsItem);
    return this;
  }

   /**
   * Get shareWithAccounts
   * @return shareWithAccounts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<LibraryItemAccount> getShareWithAccounts() {
    return shareWithAccounts;
  }


  public void setShareWithAccounts(List<LibraryItemAccount> shareWithAccounts) {
    this.shareWithAccounts = shareWithAccounts;
  }


  public LibraryItem shareWithOtherEmails(List<LibraryItemEmail> shareWithOtherEmails) {
    
    this.shareWithOtherEmails = shareWithOtherEmails;
    return this;
  }

  public LibraryItem addShareWithOtherEmailsItem(LibraryItemEmail shareWithOtherEmailsItem) {
    if (this.shareWithOtherEmails == null) {
      this.shareWithOtherEmails = new ArrayList<>();
    }
    this.shareWithOtherEmails.add(shareWithOtherEmailsItem);
    return this;
  }

   /**
   * Get shareWithOtherEmails
   * @return shareWithOtherEmails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<LibraryItemEmail> getShareWithOtherEmails() {
    return shareWithOtherEmails;
  }


  public void setShareWithOtherEmails(List<LibraryItemEmail> shareWithOtherEmails) {
    this.shareWithOtherEmails = shareWithOtherEmails;
  }


  public LibraryItem shared(Boolean shared) {
    
    this.shared = shared;
    return this;
  }

   /**
   * True if this item is shared from another merchant account
   * @return shared
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if this item is shared from another merchant account")

  public Boolean getShared() {
    return shared;
  }


  public void setShared(Boolean shared) {
    this.shared = shared;
  }


  public LibraryItem source(Boolean source) {
    
    this.source = source;
    return this;
  }

   /**
   * True if this library item has been published
   * @return source
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if this library item has been published")

  public Boolean getSource() {
    return source;
  }


  public void setSource(Boolean source) {
    this.source = source;
  }


  public LibraryItem sourceToLibraryItemOid(Integer sourceToLibraryItemOid) {
    
    this.sourceToLibraryItemOid = sourceToLibraryItemOid;
    return this;
  }

   /**
   * This oid points to the published library item, if there is one.
   * @return sourceToLibraryItemOid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This oid points to the published library item, if there is one.")

  public Integer getSourceToLibraryItemOid() {
    return sourceToLibraryItemOid;
  }


  public void setSourceToLibraryItemOid(Integer sourceToLibraryItemOid) {
    this.sourceToLibraryItemOid = sourceToLibraryItemOid;
  }


  public LibraryItem sourceVersion(Integer sourceVersion) {
    
    this.sourceVersion = sourceVersion;
    return this;
  }

   /**
   * The version of this item.  Increment every time the item is saved.
   * @return sourceVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The version of this item.  Increment every time the item is saved.")

  public Integer getSourceVersion() {
    return sourceVersion;
  }


  public void setSourceVersion(Integer sourceVersion) {
    this.sourceVersion = sourceVersion;
  }


  public LibraryItem style(String style) {
    
    this.style = style;
    return this;
  }

   /**
   * Get style
   * @return style
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStyle() {
    return style;
  }


  public void setStyle(String style) {
    this.style = style;
  }


  public LibraryItem timesPurchased(Integer timesPurchased) {
    
    this.timesPurchased = timesPurchased;
    return this;
  }

   /**
   * Get timesPurchased
   * @return timesPurchased
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getTimesPurchased() {
    return timesPurchased;
  }


  public void setTimesPurchased(Integer timesPurchased) {
    this.timesPurchased = timesPurchased;
  }


  public LibraryItem title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    this.title = title;
  }


  public LibraryItem type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getType() {
    return type;
  }


  public void setType(String type) {
    this.type = type;
  }


  public LibraryItem underReview(Boolean underReview) {
    
    this.underReview = underReview;
    return this;
  }

   /**
   * True if this library item was published but is awaiting review from UltraCart staff.
   * @return underReview
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if this library item was published but is awaiting review from UltraCart staff.")

  public Boolean getUnderReview() {
    return underReview;
  }


  public void setUnderReview(Boolean underReview) {
    this.underReview = underReview;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LibraryItem libraryItem = (LibraryItem) o;
    return Objects.equals(this.assets, libraryItem.assets) &&
        Objects.equals(this.attributes, libraryItem.attributes) &&
        Objects.equals(this.categories, libraryItem.categories) &&
        Objects.equals(this.content, libraryItem.content) &&
        Objects.equals(this.contentType, libraryItem.contentType) &&
        Objects.equals(this.description, libraryItem.description) &&
        Objects.equals(this.industries, libraryItem.industries) &&
        Objects.equals(this.libraryItemOid, libraryItem.libraryItemOid) &&
        Objects.equals(this.merchantId, libraryItem.merchantId) &&
        Objects.equals(this.myPurchasedVersion, libraryItem.myPurchasedVersion) &&
        Objects.equals(this.originalObjectId, libraryItem.originalObjectId) &&
        Objects.equals(this.price, libraryItem.price) &&
        Objects.equals(this.priceFormatted, libraryItem.priceFormatted) &&
        Objects.equals(this.published, libraryItem.published) &&
        Objects.equals(this.publishedDts, libraryItem.publishedDts) &&
        Objects.equals(this.publishedFromLibraryItemOid, libraryItem.publishedFromLibraryItemOid) &&
        Objects.equals(this.publishedMeta, libraryItem.publishedMeta) &&
        Objects.equals(this.publishedVersion, libraryItem.publishedVersion) &&
        Objects.equals(this.purchased, libraryItem.purchased) &&
        Objects.equals(this.purchasedFromLibraryItemOid, libraryItem.purchasedFromLibraryItemOid) &&
        Objects.equals(this.purchasedMeta, libraryItem.purchasedMeta) &&
        Objects.equals(this.purchasedVersion, libraryItem.purchasedVersion) &&
        Objects.equals(this.rejected, libraryItem.rejected) &&
        Objects.equals(this.rejectedReason, libraryItem.rejectedReason) &&
        Objects.equals(this.releaseNotes, libraryItem.releaseNotes) &&
        Objects.equals(this.releaseVersion, libraryItem.releaseVersion) &&
        Objects.equals(this.reviewed, libraryItem.reviewed) &&
        Objects.equals(this.reviewedDts, libraryItem.reviewedDts) &&
        Objects.equals(this.screenshots, libraryItem.screenshots) &&
        Objects.equals(this.shareWithAccounts, libraryItem.shareWithAccounts) &&
        Objects.equals(this.shareWithOtherEmails, libraryItem.shareWithOtherEmails) &&
        Objects.equals(this.shared, libraryItem.shared) &&
        Objects.equals(this.source, libraryItem.source) &&
        Objects.equals(this.sourceToLibraryItemOid, libraryItem.sourceToLibraryItemOid) &&
        Objects.equals(this.sourceVersion, libraryItem.sourceVersion) &&
        Objects.equals(this.style, libraryItem.style) &&
        Objects.equals(this.timesPurchased, libraryItem.timesPurchased) &&
        Objects.equals(this.title, libraryItem.title) &&
        Objects.equals(this.type, libraryItem.type) &&
        Objects.equals(this.underReview, libraryItem.underReview);
  }

  @Override
  public int hashCode() {
    return Objects.hash(assets, attributes, categories, content, contentType, description, industries, libraryItemOid, merchantId, myPurchasedVersion, originalObjectId, price, priceFormatted, published, publishedDts, publishedFromLibraryItemOid, publishedMeta, publishedVersion, purchased, purchasedFromLibraryItemOid, purchasedMeta, purchasedVersion, rejected, rejectedReason, releaseNotes, releaseVersion, reviewed, reviewedDts, screenshots, shareWithAccounts, shareWithOtherEmails, shared, source, sourceToLibraryItemOid, sourceVersion, style, timesPurchased, title, type, underReview);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LibraryItem {\n");
    sb.append("    assets: ").append(toIndentedString(assets)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    categories: ").append(toIndentedString(categories)).append("\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("    contentType: ").append(toIndentedString(contentType)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    industries: ").append(toIndentedString(industries)).append("\n");
    sb.append("    libraryItemOid: ").append(toIndentedString(libraryItemOid)).append("\n");
    sb.append("    merchantId: ").append(toIndentedString(merchantId)).append("\n");
    sb.append("    myPurchasedVersion: ").append(toIndentedString(myPurchasedVersion)).append("\n");
    sb.append("    originalObjectId: ").append(toIndentedString(originalObjectId)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    priceFormatted: ").append(toIndentedString(priceFormatted)).append("\n");
    sb.append("    published: ").append(toIndentedString(published)).append("\n");
    sb.append("    publishedDts: ").append(toIndentedString(publishedDts)).append("\n");
    sb.append("    publishedFromLibraryItemOid: ").append(toIndentedString(publishedFromLibraryItemOid)).append("\n");
    sb.append("    publishedMeta: ").append(toIndentedString(publishedMeta)).append("\n");
    sb.append("    publishedVersion: ").append(toIndentedString(publishedVersion)).append("\n");
    sb.append("    purchased: ").append(toIndentedString(purchased)).append("\n");
    sb.append("    purchasedFromLibraryItemOid: ").append(toIndentedString(purchasedFromLibraryItemOid)).append("\n");
    sb.append("    purchasedMeta: ").append(toIndentedString(purchasedMeta)).append("\n");
    sb.append("    purchasedVersion: ").append(toIndentedString(purchasedVersion)).append("\n");
    sb.append("    rejected: ").append(toIndentedString(rejected)).append("\n");
    sb.append("    rejectedReason: ").append(toIndentedString(rejectedReason)).append("\n");
    sb.append("    releaseNotes: ").append(toIndentedString(releaseNotes)).append("\n");
    sb.append("    releaseVersion: ").append(toIndentedString(releaseVersion)).append("\n");
    sb.append("    reviewed: ").append(toIndentedString(reviewed)).append("\n");
    sb.append("    reviewedDts: ").append(toIndentedString(reviewedDts)).append("\n");
    sb.append("    screenshots: ").append(toIndentedString(screenshots)).append("\n");
    sb.append("    shareWithAccounts: ").append(toIndentedString(shareWithAccounts)).append("\n");
    sb.append("    shareWithOtherEmails: ").append(toIndentedString(shareWithOtherEmails)).append("\n");
    sb.append("    shared: ").append(toIndentedString(shared)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    sourceToLibraryItemOid: ").append(toIndentedString(sourceToLibraryItemOid)).append("\n");
    sb.append("    sourceVersion: ").append(toIndentedString(sourceVersion)).append("\n");
    sb.append("    style: ").append(toIndentedString(style)).append("\n");
    sb.append("    timesPurchased: ").append(toIndentedString(timesPurchased)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    underReview: ").append(toIndentedString(underReview)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("assets");
    openapiFields.add("attributes");
    openapiFields.add("categories");
    openapiFields.add("content");
    openapiFields.add("content_type");
    openapiFields.add("description");
    openapiFields.add("industries");
    openapiFields.add("library_item_oid");
    openapiFields.add("merchant_id");
    openapiFields.add("my_purchased_version");
    openapiFields.add("original_object_id");
    openapiFields.add("price");
    openapiFields.add("price_formatted");
    openapiFields.add("published");
    openapiFields.add("published_dts");
    openapiFields.add("published_from_library_item_oid");
    openapiFields.add("published_meta");
    openapiFields.add("published_version");
    openapiFields.add("purchased");
    openapiFields.add("purchased_from_library_item_oid");
    openapiFields.add("purchased_meta");
    openapiFields.add("purchased_version");
    openapiFields.add("rejected");
    openapiFields.add("rejected_reason");
    openapiFields.add("release_notes");
    openapiFields.add("release_version");
    openapiFields.add("reviewed");
    openapiFields.add("reviewed_dts");
    openapiFields.add("screenshots");
    openapiFields.add("share_with_accounts");
    openapiFields.add("share_with_other_emails");
    openapiFields.add("shared");
    openapiFields.add("source");
    openapiFields.add("source_to_library_item_oid");
    openapiFields.add("source_version");
    openapiFields.add("style");
    openapiFields.add("times_purchased");
    openapiFields.add("title");
    openapiFields.add("type");
    openapiFields.add("under_review");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to LibraryItem
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (LibraryItem.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in LibraryItem is not found in the empty JSON string", LibraryItem.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!LibraryItem.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `LibraryItem` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      JsonArray jsonArrayassets = jsonObj.getAsJsonArray("assets");
      if (jsonArrayassets != null) {
        // ensure the json data is an array
        if (!jsonObj.get("assets").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `assets` to be an array in the JSON string but got `%s`", jsonObj.get("assets").toString()));
        }

        // validate the optional field `assets` (array)
        for (int i = 0; i < jsonArrayassets.size(); i++) {
          LibraryItemAsset.validateJsonObject(jsonArrayassets.get(i).getAsJsonObject());
        };
      }
      JsonArray jsonArrayattributes = jsonObj.getAsJsonArray("attributes");
      if (jsonArrayattributes != null) {
        // ensure the json data is an array
        if (!jsonObj.get("attributes").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `attributes` to be an array in the JSON string but got `%s`", jsonObj.get("attributes").toString()));
        }

        // validate the optional field `attributes` (array)
        for (int i = 0; i < jsonArrayattributes.size(); i++) {
          LibraryItemAttribute.validateJsonObject(jsonArrayattributes.get(i).getAsJsonObject());
        };
      }
      // ensure the json data is an array
      if (jsonObj.get("categories") != null && !jsonObj.get("categories").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `categories` to be an array in the JSON string but got `%s`", jsonObj.get("categories").toString()));
      }
      if (jsonObj.get("content") != null && !jsonObj.get("content").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `content` to be a primitive type in the JSON string but got `%s`", jsonObj.get("content").toString()));
      }
      if (jsonObj.get("content_type") != null && !jsonObj.get("content_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `content_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("content_type").toString()));
      }
      if (jsonObj.get("description") != null && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      // ensure the json data is an array
      if (jsonObj.get("industries") != null && !jsonObj.get("industries").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `industries` to be an array in the JSON string but got `%s`", jsonObj.get("industries").toString()));
      }
      if (jsonObj.get("merchant_id") != null && !jsonObj.get("merchant_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `merchant_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("merchant_id").toString()));
      }
      if (jsonObj.get("original_object_id") != null && !jsonObj.get("original_object_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `original_object_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("original_object_id").toString()));
      }
      if (jsonObj.get("price_formatted") != null && !jsonObj.get("price_formatted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `price_formatted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("price_formatted").toString()));
      }
      // validate the optional field `published_meta`
      if (jsonObj.getAsJsonObject("published_meta") != null) {
        LibraryItemPublishedMeta.validateJsonObject(jsonObj.getAsJsonObject("published_meta"));
      }
      // validate the optional field `purchased_meta`
      if (jsonObj.getAsJsonObject("purchased_meta") != null) {
        LibraryItemPurchasedMeta.validateJsonObject(jsonObj.getAsJsonObject("purchased_meta"));
      }
      if (jsonObj.get("rejected_reason") != null && !jsonObj.get("rejected_reason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `rejected_reason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("rejected_reason").toString()));
      }
      if (jsonObj.get("release_notes") != null && !jsonObj.get("release_notes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `release_notes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("release_notes").toString()));
      }
      JsonArray jsonArrayscreenshots = jsonObj.getAsJsonArray("screenshots");
      if (jsonArrayscreenshots != null) {
        // ensure the json data is an array
        if (!jsonObj.get("screenshots").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `screenshots` to be an array in the JSON string but got `%s`", jsonObj.get("screenshots").toString()));
        }

        // validate the optional field `screenshots` (array)
        for (int i = 0; i < jsonArrayscreenshots.size(); i++) {
          LibraryItemScreenshot.validateJsonObject(jsonArrayscreenshots.get(i).getAsJsonObject());
        };
      }
      JsonArray jsonArrayshareWithAccounts = jsonObj.getAsJsonArray("share_with_accounts");
      if (jsonArrayshareWithAccounts != null) {
        // ensure the json data is an array
        if (!jsonObj.get("share_with_accounts").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `share_with_accounts` to be an array in the JSON string but got `%s`", jsonObj.get("share_with_accounts").toString()));
        }

        // validate the optional field `share_with_accounts` (array)
        for (int i = 0; i < jsonArrayshareWithAccounts.size(); i++) {
          LibraryItemAccount.validateJsonObject(jsonArrayshareWithAccounts.get(i).getAsJsonObject());
        };
      }
      JsonArray jsonArrayshareWithOtherEmails = jsonObj.getAsJsonArray("share_with_other_emails");
      if (jsonArrayshareWithOtherEmails != null) {
        // ensure the json data is an array
        if (!jsonObj.get("share_with_other_emails").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `share_with_other_emails` to be an array in the JSON string but got `%s`", jsonObj.get("share_with_other_emails").toString()));
        }

        // validate the optional field `share_with_other_emails` (array)
        for (int i = 0; i < jsonArrayshareWithOtherEmails.size(); i++) {
          LibraryItemEmail.validateJsonObject(jsonArrayshareWithOtherEmails.get(i).getAsJsonObject());
        };
      }
      if (jsonObj.get("style") != null && !jsonObj.get("style").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `style` to be a primitive type in the JSON string but got `%s`", jsonObj.get("style").toString()));
      }
      if (jsonObj.get("title") != null && !jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
      if (jsonObj.get("type") != null && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!LibraryItem.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'LibraryItem' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<LibraryItem> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(LibraryItem.class));

       return (TypeAdapter<T>) new TypeAdapter<LibraryItem>() {
           @Override
           public void write(JsonWriter out, LibraryItem value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public LibraryItem read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of LibraryItem given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of LibraryItem
  * @throws IOException if the JSON string is invalid with respect to LibraryItem
  */
  public static LibraryItem fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, LibraryItem.class);
  }

 /**
  * Convert an instance of LibraryItem to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

