/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * OrderAffiliateLedger
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-08-11T12:02:23.034-04:00")



public class OrderAffiliateLedger {
  @SerializedName("assigned_by_user")
  private String assignedByUser = null;

  @SerializedName("item_id")
  private String itemId = null;

  @SerializedName("tier_number")
  private Integer tierNumber = null;

  @SerializedName("transaction_amount")
  private BigDecimal transactionAmount = null;

  @SerializedName("transaction_amount_paid")
  private BigDecimal transactionAmountPaid = null;

  @SerializedName("transaction_dts")
  private String transactionDts = null;

  @SerializedName("transaction_memo")
  private String transactionMemo = null;

  @SerializedName("transaction_percentage")
  private BigDecimal transactionPercentage = null;

  /**
   * The state of the transaction
   */
  @JsonAdapter(TransactionStateEnum.Adapter.class)
  public enum TransactionStateEnum {
    PENDING("Pending"),
    
    POSTED("Posted"),
    
    APPROVED("Approved"),
    
    PAID("Paid"),
    
    REJECTED("Rejected"),
    
    PARTIALLY_PAID("Partially Paid");

    private String value;

    TransactionStateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TransactionStateEnum fromValue(String text) {
      for (TransactionStateEnum b : TransactionStateEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TransactionStateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TransactionStateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TransactionStateEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TransactionStateEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("transaction_state")
  private TransactionStateEnum transactionState = null;

  public OrderAffiliateLedger assignedByUser(String assignedByUser) {
    this.assignedByUser = assignedByUser;
    return this;
  }

   /**
   * UltraCart user name that assigned this commission if manually assigned
   * @return assignedByUser
  **/
  @ApiModelProperty(value = "UltraCart user name that assigned this commission if manually assigned")
  public String getAssignedByUser() {
    return assignedByUser;
  }

  public void setAssignedByUser(String assignedByUser) {
    this.assignedByUser = assignedByUser;
  }

  public OrderAffiliateLedger itemId(String itemId) {
    this.itemId = itemId;
    return this;
  }

   /**
   * Item ID that this ledger record is associated with
   * @return itemId
  **/
  @ApiModelProperty(value = "Item ID that this ledger record is associated with")
  public String getItemId() {
    return itemId;
  }

  public void setItemId(String itemId) {
    this.itemId = itemId;
  }

  public OrderAffiliateLedger tierNumber(Integer tierNumber) {
    this.tierNumber = tierNumber;
    return this;
  }

   /**
   * Tier number of this affiliate in the commission calculation
   * @return tierNumber
  **/
  @ApiModelProperty(value = "Tier number of this affiliate in the commission calculation")
  public Integer getTierNumber() {
    return tierNumber;
  }

  public void setTierNumber(Integer tierNumber) {
    this.tierNumber = tierNumber;
  }

  public OrderAffiliateLedger transactionAmount(BigDecimal transactionAmount) {
    this.transactionAmount = transactionAmount;
    return this;
  }

   /**
   * Amount of the transaction
   * @return transactionAmount
  **/
  @ApiModelProperty(value = "Amount of the transaction")
  public BigDecimal getTransactionAmount() {
    return transactionAmount;
  }

  public void setTransactionAmount(BigDecimal transactionAmount) {
    this.transactionAmount = transactionAmount;
  }

  public OrderAffiliateLedger transactionAmountPaid(BigDecimal transactionAmountPaid) {
    this.transactionAmountPaid = transactionAmountPaid;
    return this;
  }

   /**
   * The amount that has been paid so far on the transaction
   * @return transactionAmountPaid
  **/
  @ApiModelProperty(value = "The amount that has been paid so far on the transaction")
  public BigDecimal getTransactionAmountPaid() {
    return transactionAmountPaid;
  }

  public void setTransactionAmountPaid(BigDecimal transactionAmountPaid) {
    this.transactionAmountPaid = transactionAmountPaid;
  }

  public OrderAffiliateLedger transactionDts(String transactionDts) {
    this.transactionDts = transactionDts;
    return this;
  }

   /**
   * The date/time that the affiliate ledger was generated for the transaction
   * @return transactionDts
  **/
  @ApiModelProperty(value = "The date/time that the affiliate ledger was generated for the transaction")
  public String getTransactionDts() {
    return transactionDts;
  }

  public void setTransactionDts(String transactionDts) {
    this.transactionDts = transactionDts;
  }

  public OrderAffiliateLedger transactionMemo(String transactionMemo) {
    this.transactionMemo = transactionMemo;
    return this;
  }

   /**
   * Details of the transaction suitable for display to the affiliate
   * @return transactionMemo
  **/
  @ApiModelProperty(value = "Details of the transaction suitable for display to the affiliate")
  public String getTransactionMemo() {
    return transactionMemo;
  }

  public void setTransactionMemo(String transactionMemo) {
    this.transactionMemo = transactionMemo;
  }

  public OrderAffiliateLedger transactionPercentage(BigDecimal transactionPercentage) {
    this.transactionPercentage = transactionPercentage;
    return this;
  }

   /**
   * The percentage earned on the transaction
   * @return transactionPercentage
  **/
  @ApiModelProperty(value = "The percentage earned on the transaction")
  public BigDecimal getTransactionPercentage() {
    return transactionPercentage;
  }

  public void setTransactionPercentage(BigDecimal transactionPercentage) {
    this.transactionPercentage = transactionPercentage;
  }

  public OrderAffiliateLedger transactionState(TransactionStateEnum transactionState) {
    this.transactionState = transactionState;
    return this;
  }

   /**
   * The state of the transaction
   * @return transactionState
  **/
  @ApiModelProperty(value = "The state of the transaction")
  public TransactionStateEnum getTransactionState() {
    return transactionState;
  }

  public void setTransactionState(TransactionStateEnum transactionState) {
    this.transactionState = transactionState;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderAffiliateLedger orderAffiliateLedger = (OrderAffiliateLedger) o;
    return Objects.equals(this.assignedByUser, orderAffiliateLedger.assignedByUser) &&
        Objects.equals(this.itemId, orderAffiliateLedger.itemId) &&
        Objects.equals(this.tierNumber, orderAffiliateLedger.tierNumber) &&
        Objects.equals(this.transactionAmount, orderAffiliateLedger.transactionAmount) &&
        Objects.equals(this.transactionAmountPaid, orderAffiliateLedger.transactionAmountPaid) &&
        Objects.equals(this.transactionDts, orderAffiliateLedger.transactionDts) &&
        Objects.equals(this.transactionMemo, orderAffiliateLedger.transactionMemo) &&
        Objects.equals(this.transactionPercentage, orderAffiliateLedger.transactionPercentage) &&
        Objects.equals(this.transactionState, orderAffiliateLedger.transactionState);
  }

  @Override
  public int hashCode() {
    return Objects.hash(assignedByUser, itemId, tierNumber, transactionAmount, transactionAmountPaid, transactionDts, transactionMemo, transactionPercentage, transactionState);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderAffiliateLedger {\n");
    
    sb.append("    assignedByUser: ").append(toIndentedString(assignedByUser)).append("\n");
    sb.append("    itemId: ").append(toIndentedString(itemId)).append("\n");
    sb.append("    tierNumber: ").append(toIndentedString(tierNumber)).append("\n");
    sb.append("    transactionAmount: ").append(toIndentedString(transactionAmount)).append("\n");
    sb.append("    transactionAmountPaid: ").append(toIndentedString(transactionAmountPaid)).append("\n");
    sb.append("    transactionDts: ").append(toIndentedString(transactionDts)).append("\n");
    sb.append("    transactionMemo: ").append(toIndentedString(transactionMemo)).append("\n");
    sb.append("    transactionPercentage: ").append(toIndentedString(transactionPercentage)).append("\n");
    sb.append("    transactionState: ").append(toIndentedString(transactionState)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

