/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.CouponType;
import com.ultracart.admin.v2.models.SimpleValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.swagger.JSON;

/**
 * CouponEditorValues
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-22T23:24:31.283-04:00[America/Indianapolis]")
public class CouponEditorValues {
  public static final String SERIALIZED_NAME_AFFILIATES = "affiliates";
  @SerializedName(SERIALIZED_NAME_AFFILIATES)
  private List<SimpleValue> affiliates = null;

  public static final String SERIALIZED_NAME_COUPON_TYPES = "coupon_types";
  @SerializedName(SERIALIZED_NAME_COUPON_TYPES)
  private List<String> couponTypes = null;

  public static final String SERIALIZED_NAME_COUPON_TYPES_FOR_DISPLAY = "coupon_types_for_display";
  @SerializedName(SERIALIZED_NAME_COUPON_TYPES_FOR_DISPLAY)
  private List<CouponType> couponTypesForDisplay = null;

  public static final String SERIALIZED_NAME_CURRENCY_CODES = "currency_codes";
  @SerializedName(SERIALIZED_NAME_CURRENCY_CODES)
  private List<String> currencyCodes = null;

  public static final String SERIALIZED_NAME_DEPRECATED_THEMES = "deprecated_themes";
  @SerializedName(SERIALIZED_NAME_DEPRECATED_THEMES)
  private List<SimpleValue> deprecatedThemes = null;

  public static final String SERIALIZED_NAME_MIX_AND_MATCH_NAMES = "mix_and_match_names";
  @SerializedName(SERIALIZED_NAME_MIX_AND_MATCH_NAMES)
  private List<String> mixAndMatchNames = null;

  public static final String SERIALIZED_NAME_SHIPPING_METHODS = "shipping_methods";
  @SerializedName(SERIALIZED_NAME_SHIPPING_METHODS)
  private List<String> shippingMethods = null;

  public static final String SERIALIZED_NAME_STOREFRONTS = "storefronts";
  @SerializedName(SERIALIZED_NAME_STOREFRONTS)
  private List<SimpleValue> storefronts = null;

  public static final String SERIALIZED_NAME_USABLE_BY = "usable_by";
  @SerializedName(SERIALIZED_NAME_USABLE_BY)
  private List<SimpleValue> usableBy = null;

  public static final String SERIALIZED_NAME_VALID_WITH_OTHER_COUPONS = "valid_with_other_coupons";
  @SerializedName(SERIALIZED_NAME_VALID_WITH_OTHER_COUPONS)
  private List<String> validWithOtherCoupons = null;

  public CouponEditorValues() { 
  }

  public CouponEditorValues affiliates(List<SimpleValue> affiliates) {
    
    this.affiliates = affiliates;
    return this;
  }

  public CouponEditorValues addAffiliatesItem(SimpleValue affiliatesItem) {
    if (this.affiliates == null) {
      this.affiliates = new ArrayList<>();
    }
    this.affiliates.add(affiliatesItem);
    return this;
  }

   /**
   * affiliates
   * @return affiliates
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "affiliates")

  public List<SimpleValue> getAffiliates() {
    return affiliates;
  }


  public void setAffiliates(List<SimpleValue> affiliates) {
    this.affiliates = affiliates;
  }


  public CouponEditorValues couponTypes(List<String> couponTypes) {
    
    this.couponTypes = couponTypes;
    return this;
  }

  public CouponEditorValues addCouponTypesItem(String couponTypesItem) {
    if (this.couponTypes == null) {
      this.couponTypes = new ArrayList<>();
    }
    this.couponTypes.add(couponTypesItem);
    return this;
  }

   /**
   * coupon_types
   * @return couponTypes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "coupon_types")

  public List<String> getCouponTypes() {
    return couponTypes;
  }


  public void setCouponTypes(List<String> couponTypes) {
    this.couponTypes = couponTypes;
  }


  public CouponEditorValues couponTypesForDisplay(List<CouponType> couponTypesForDisplay) {
    
    this.couponTypesForDisplay = couponTypesForDisplay;
    return this;
  }

  public CouponEditorValues addCouponTypesForDisplayItem(CouponType couponTypesForDisplayItem) {
    if (this.couponTypesForDisplay == null) {
      this.couponTypesForDisplay = new ArrayList<>();
    }
    this.couponTypesForDisplay.add(couponTypesForDisplayItem);
    return this;
  }

   /**
   * coupon_types_for_display
   * @return couponTypesForDisplay
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "coupon_types_for_display")

  public List<CouponType> getCouponTypesForDisplay() {
    return couponTypesForDisplay;
  }


  public void setCouponTypesForDisplay(List<CouponType> couponTypesForDisplay) {
    this.couponTypesForDisplay = couponTypesForDisplay;
  }


  public CouponEditorValues currencyCodes(List<String> currencyCodes) {
    
    this.currencyCodes = currencyCodes;
    return this;
  }

  public CouponEditorValues addCurrencyCodesItem(String currencyCodesItem) {
    if (this.currencyCodes == null) {
      this.currencyCodes = new ArrayList<>();
    }
    this.currencyCodes.add(currencyCodesItem);
    return this;
  }

   /**
   * currency_codes
   * @return currencyCodes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "currency_codes")

  public List<String> getCurrencyCodes() {
    return currencyCodes;
  }


  public void setCurrencyCodes(List<String> currencyCodes) {
    this.currencyCodes = currencyCodes;
  }


  public CouponEditorValues deprecatedThemes(List<SimpleValue> deprecatedThemes) {
    
    this.deprecatedThemes = deprecatedThemes;
    return this;
  }

  public CouponEditorValues addDeprecatedThemesItem(SimpleValue deprecatedThemesItem) {
    if (this.deprecatedThemes == null) {
      this.deprecatedThemes = new ArrayList<>();
    }
    this.deprecatedThemes.add(deprecatedThemesItem);
    return this;
  }

   /**
   * deprecated_themes
   * @return deprecatedThemes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "deprecated_themes")

  public List<SimpleValue> getDeprecatedThemes() {
    return deprecatedThemes;
  }


  public void setDeprecatedThemes(List<SimpleValue> deprecatedThemes) {
    this.deprecatedThemes = deprecatedThemes;
  }


  public CouponEditorValues mixAndMatchNames(List<String> mixAndMatchNames) {
    
    this.mixAndMatchNames = mixAndMatchNames;
    return this;
  }

  public CouponEditorValues addMixAndMatchNamesItem(String mixAndMatchNamesItem) {
    if (this.mixAndMatchNames == null) {
      this.mixAndMatchNames = new ArrayList<>();
    }
    this.mixAndMatchNames.add(mixAndMatchNamesItem);
    return this;
  }

   /**
   * mix_and_match_names
   * @return mixAndMatchNames
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "mix_and_match_names")

  public List<String> getMixAndMatchNames() {
    return mixAndMatchNames;
  }


  public void setMixAndMatchNames(List<String> mixAndMatchNames) {
    this.mixAndMatchNames = mixAndMatchNames;
  }


  public CouponEditorValues shippingMethods(List<String> shippingMethods) {
    
    this.shippingMethods = shippingMethods;
    return this;
  }

  public CouponEditorValues addShippingMethodsItem(String shippingMethodsItem) {
    if (this.shippingMethods == null) {
      this.shippingMethods = new ArrayList<>();
    }
    this.shippingMethods.add(shippingMethodsItem);
    return this;
  }

   /**
   * shipping_methods
   * @return shippingMethods
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "shipping_methods")

  public List<String> getShippingMethods() {
    return shippingMethods;
  }


  public void setShippingMethods(List<String> shippingMethods) {
    this.shippingMethods = shippingMethods;
  }


  public CouponEditorValues storefronts(List<SimpleValue> storefronts) {
    
    this.storefronts = storefronts;
    return this;
  }

  public CouponEditorValues addStorefrontsItem(SimpleValue storefrontsItem) {
    if (this.storefronts == null) {
      this.storefronts = new ArrayList<>();
    }
    this.storefronts.add(storefrontsItem);
    return this;
  }

   /**
   * storefronts
   * @return storefronts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "storefronts")

  public List<SimpleValue> getStorefronts() {
    return storefronts;
  }


  public void setStorefronts(List<SimpleValue> storefronts) {
    this.storefronts = storefronts;
  }


  public CouponEditorValues usableBy(List<SimpleValue> usableBy) {
    
    this.usableBy = usableBy;
    return this;
  }

  public CouponEditorValues addUsableByItem(SimpleValue usableByItem) {
    if (this.usableBy == null) {
      this.usableBy = new ArrayList<>();
    }
    this.usableBy.add(usableByItem);
    return this;
  }

   /**
   * usable_by
   * @return usableBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "usable_by")

  public List<SimpleValue> getUsableBy() {
    return usableBy;
  }


  public void setUsableBy(List<SimpleValue> usableBy) {
    this.usableBy = usableBy;
  }


  public CouponEditorValues validWithOtherCoupons(List<String> validWithOtherCoupons) {
    
    this.validWithOtherCoupons = validWithOtherCoupons;
    return this;
  }

  public CouponEditorValues addValidWithOtherCouponsItem(String validWithOtherCouponsItem) {
    if (this.validWithOtherCoupons == null) {
      this.validWithOtherCoupons = new ArrayList<>();
    }
    this.validWithOtherCoupons.add(validWithOtherCouponsItem);
    return this;
  }

   /**
   * valid_with_other_coupons
   * @return validWithOtherCoupons
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "valid_with_other_coupons")

  public List<String> getValidWithOtherCoupons() {
    return validWithOtherCoupons;
  }


  public void setValidWithOtherCoupons(List<String> validWithOtherCoupons) {
    this.validWithOtherCoupons = validWithOtherCoupons;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CouponEditorValues couponEditorValues = (CouponEditorValues) o;
    return Objects.equals(this.affiliates, couponEditorValues.affiliates) &&
        Objects.equals(this.couponTypes, couponEditorValues.couponTypes) &&
        Objects.equals(this.couponTypesForDisplay, couponEditorValues.couponTypesForDisplay) &&
        Objects.equals(this.currencyCodes, couponEditorValues.currencyCodes) &&
        Objects.equals(this.deprecatedThemes, couponEditorValues.deprecatedThemes) &&
        Objects.equals(this.mixAndMatchNames, couponEditorValues.mixAndMatchNames) &&
        Objects.equals(this.shippingMethods, couponEditorValues.shippingMethods) &&
        Objects.equals(this.storefronts, couponEditorValues.storefronts) &&
        Objects.equals(this.usableBy, couponEditorValues.usableBy) &&
        Objects.equals(this.validWithOtherCoupons, couponEditorValues.validWithOtherCoupons);
  }

  @Override
  public int hashCode() {
    return Objects.hash(affiliates, couponTypes, couponTypesForDisplay, currencyCodes, deprecatedThemes, mixAndMatchNames, shippingMethods, storefronts, usableBy, validWithOtherCoupons);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CouponEditorValues {\n");
    sb.append("    affiliates: ").append(toIndentedString(affiliates)).append("\n");
    sb.append("    couponTypes: ").append(toIndentedString(couponTypes)).append("\n");
    sb.append("    couponTypesForDisplay: ").append(toIndentedString(couponTypesForDisplay)).append("\n");
    sb.append("    currencyCodes: ").append(toIndentedString(currencyCodes)).append("\n");
    sb.append("    deprecatedThemes: ").append(toIndentedString(deprecatedThemes)).append("\n");
    sb.append("    mixAndMatchNames: ").append(toIndentedString(mixAndMatchNames)).append("\n");
    sb.append("    shippingMethods: ").append(toIndentedString(shippingMethods)).append("\n");
    sb.append("    storefronts: ").append(toIndentedString(storefronts)).append("\n");
    sb.append("    usableBy: ").append(toIndentedString(usableBy)).append("\n");
    sb.append("    validWithOtherCoupons: ").append(toIndentedString(validWithOtherCoupons)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("affiliates");
    openapiFields.add("coupon_types");
    openapiFields.add("coupon_types_for_display");
    openapiFields.add("currency_codes");
    openapiFields.add("deprecated_themes");
    openapiFields.add("mix_and_match_names");
    openapiFields.add("shipping_methods");
    openapiFields.add("storefronts");
    openapiFields.add("usable_by");
    openapiFields.add("valid_with_other_coupons");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CouponEditorValues
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (CouponEditorValues.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in CouponEditorValues is not found in the empty JSON string", CouponEditorValues.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!CouponEditorValues.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CouponEditorValues` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      JsonArray jsonArrayaffiliates = jsonObj.getAsJsonArray("affiliates");
      if (jsonArrayaffiliates != null) {
        // ensure the json data is an array
        if (!jsonObj.get("affiliates").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `affiliates` to be an array in the JSON string but got `%s`", jsonObj.get("affiliates").toString()));
        }

        // validate the optional field `affiliates` (array)
        for (int i = 0; i < jsonArrayaffiliates.size(); i++) {
          SimpleValue.validateJsonObject(jsonArrayaffiliates.get(i).getAsJsonObject());
        };
      }
      // ensure the json data is an array
      if (jsonObj.get("coupon_types") != null && !jsonObj.get("coupon_types").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `coupon_types` to be an array in the JSON string but got `%s`", jsonObj.get("coupon_types").toString()));
      }
      JsonArray jsonArraycouponTypesForDisplay = jsonObj.getAsJsonArray("coupon_types_for_display");
      if (jsonArraycouponTypesForDisplay != null) {
        // ensure the json data is an array
        if (!jsonObj.get("coupon_types_for_display").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `coupon_types_for_display` to be an array in the JSON string but got `%s`", jsonObj.get("coupon_types_for_display").toString()));
        }

        // validate the optional field `coupon_types_for_display` (array)
        for (int i = 0; i < jsonArraycouponTypesForDisplay.size(); i++) {
          CouponType.validateJsonObject(jsonArraycouponTypesForDisplay.get(i).getAsJsonObject());
        };
      }
      // ensure the json data is an array
      if (jsonObj.get("currency_codes") != null && !jsonObj.get("currency_codes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `currency_codes` to be an array in the JSON string but got `%s`", jsonObj.get("currency_codes").toString()));
      }
      JsonArray jsonArraydeprecatedThemes = jsonObj.getAsJsonArray("deprecated_themes");
      if (jsonArraydeprecatedThemes != null) {
        // ensure the json data is an array
        if (!jsonObj.get("deprecated_themes").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `deprecated_themes` to be an array in the JSON string but got `%s`", jsonObj.get("deprecated_themes").toString()));
        }

        // validate the optional field `deprecated_themes` (array)
        for (int i = 0; i < jsonArraydeprecatedThemes.size(); i++) {
          SimpleValue.validateJsonObject(jsonArraydeprecatedThemes.get(i).getAsJsonObject());
        };
      }
      // ensure the json data is an array
      if (jsonObj.get("mix_and_match_names") != null && !jsonObj.get("mix_and_match_names").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `mix_and_match_names` to be an array in the JSON string but got `%s`", jsonObj.get("mix_and_match_names").toString()));
      }
      // ensure the json data is an array
      if (jsonObj.get("shipping_methods") != null && !jsonObj.get("shipping_methods").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipping_methods` to be an array in the JSON string but got `%s`", jsonObj.get("shipping_methods").toString()));
      }
      JsonArray jsonArraystorefronts = jsonObj.getAsJsonArray("storefronts");
      if (jsonArraystorefronts != null) {
        // ensure the json data is an array
        if (!jsonObj.get("storefronts").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `storefronts` to be an array in the JSON string but got `%s`", jsonObj.get("storefronts").toString()));
        }

        // validate the optional field `storefronts` (array)
        for (int i = 0; i < jsonArraystorefronts.size(); i++) {
          SimpleValue.validateJsonObject(jsonArraystorefronts.get(i).getAsJsonObject());
        };
      }
      JsonArray jsonArrayusableBy = jsonObj.getAsJsonArray("usable_by");
      if (jsonArrayusableBy != null) {
        // ensure the json data is an array
        if (!jsonObj.get("usable_by").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `usable_by` to be an array in the JSON string but got `%s`", jsonObj.get("usable_by").toString()));
        }

        // validate the optional field `usable_by` (array)
        for (int i = 0; i < jsonArrayusableBy.size(); i++) {
          SimpleValue.validateJsonObject(jsonArrayusableBy.get(i).getAsJsonObject());
        };
      }
      // ensure the json data is an array
      if (jsonObj.get("valid_with_other_coupons") != null && !jsonObj.get("valid_with_other_coupons").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `valid_with_other_coupons` to be an array in the JSON string but got `%s`", jsonObj.get("valid_with_other_coupons").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CouponEditorValues.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CouponEditorValues' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CouponEditorValues> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CouponEditorValues.class));

       return (TypeAdapter<T>) new TypeAdapter<CouponEditorValues>() {
           @Override
           public void write(JsonWriter out, CouponEditorValues value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CouponEditorValues read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CouponEditorValues given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CouponEditorValues
  * @throws IOException if the JSON string is invalid with respect to CouponEditorValues
  */
  public static CouponEditorValues fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CouponEditorValues.class);
  }

 /**
  * Convert an instance of CouponEditorValues to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

