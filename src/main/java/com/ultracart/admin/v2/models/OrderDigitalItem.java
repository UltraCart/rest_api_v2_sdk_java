/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * OrderDigitalItem
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-01-23T14:56:24.133-05:00[America/Indianapolis]")
public class OrderDigitalItem {
  public static final String SERIALIZED_NAME_FILE_SIZE = "file_size";
  @SerializedName(SERIALIZED_NAME_FILE_SIZE)
  private Long fileSize;

  public static final String SERIALIZED_NAME_LAST_DOWNLOAD = "last_download";
  @SerializedName(SERIALIZED_NAME_LAST_DOWNLOAD)
  private String lastDownload;

  public static final String SERIALIZED_NAME_LAST_DOWNLOAD_IP_ADDRESS = "last_download_ip_address";
  @SerializedName(SERIALIZED_NAME_LAST_DOWNLOAD_IP_ADDRESS)
  private String lastDownloadIpAddress;

  public static final String SERIALIZED_NAME_ORIGINAL_FILENAME = "original_filename";
  @SerializedName(SERIALIZED_NAME_ORIGINAL_FILENAME)
  private String originalFilename;

  public static final String SERIALIZED_NAME_PRODUCT_CODE = "product_code";
  @SerializedName(SERIALIZED_NAME_PRODUCT_CODE)
  private String productCode;

  public static final String SERIALIZED_NAME_PRODUCT_DESCRIPTION = "product_description";
  @SerializedName(SERIALIZED_NAME_PRODUCT_DESCRIPTION)
  private String productDescription;

  public static final String SERIALIZED_NAME_REMAINING_DOWNLOADS = "remaining_downloads";
  @SerializedName(SERIALIZED_NAME_REMAINING_DOWNLOADS)
  private Integer remainingDownloads;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public OrderDigitalItem() { 
  }

  public OrderDigitalItem fileSize(Long fileSize) {
    
    this.fileSize = fileSize;
    return this;
  }

   /**
   * File size
   * @return fileSize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "File size")

  public Long getFileSize() {
    return fileSize;
  }


  public void setFileSize(Long fileSize) {
    this.fileSize = fileSize;
  }


  public OrderDigitalItem lastDownload(String lastDownload) {
    
    this.lastDownload = lastDownload;
    return this;
  }

   /**
   * Last download
   * @return lastDownload
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Last download")

  public String getLastDownload() {
    return lastDownload;
  }


  public void setLastDownload(String lastDownload) {
    this.lastDownload = lastDownload;
  }


  public OrderDigitalItem lastDownloadIpAddress(String lastDownloadIpAddress) {
    
    this.lastDownloadIpAddress = lastDownloadIpAddress;
    return this;
  }

   /**
   * IP address that performed the last download
   * @return lastDownloadIpAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "IP address that performed the last download")

  public String getLastDownloadIpAddress() {
    return lastDownloadIpAddress;
  }


  public void setLastDownloadIpAddress(String lastDownloadIpAddress) {
    this.lastDownloadIpAddress = lastDownloadIpAddress;
  }


  public OrderDigitalItem originalFilename(String originalFilename) {
    
    this.originalFilename = originalFilename;
    return this;
  }

   /**
   * Original file name
   * @return originalFilename
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Original file name")

  public String getOriginalFilename() {
    return originalFilename;
  }


  public void setOriginalFilename(String originalFilename) {
    this.originalFilename = originalFilename;
  }


  public OrderDigitalItem productCode(String productCode) {
    
    this.productCode = productCode;
    return this;
  }

   /**
   * Item id associated with this item
   * @return productCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Item id associated with this item")

  public String getProductCode() {
    return productCode;
  }


  public void setProductCode(String productCode) {
    this.productCode = productCode;
  }


  public OrderDigitalItem productDescription(String productDescription) {
    
    this.productDescription = productDescription;
    return this;
  }

   /**
   * Item description associated with this item
   * @return productDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Item description associated with this item")

  public String getProductDescription() {
    return productDescription;
  }


  public void setProductDescription(String productDescription) {
    this.productDescription = productDescription;
  }


  public OrderDigitalItem remainingDownloads(Integer remainingDownloads) {
    
    this.remainingDownloads = remainingDownloads;
    return this;
  }

   /**
   * Remaining number of downloads
   * @return remainingDownloads
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Remaining number of downloads")

  public Integer getRemainingDownloads() {
    return remainingDownloads;
  }


  public void setRemainingDownloads(Integer remainingDownloads) {
    this.remainingDownloads = remainingDownloads;
  }


  public OrderDigitalItem url(String url) {
    
    this.url = url;
    return this;
  }

   /**
   * URL that the customer can click to download the specific digital item
   * @return url
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "URL that the customer can click to download the specific digital item")

  public String getUrl() {
    return url;
  }


  public void setUrl(String url) {
    this.url = url;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderDigitalItem orderDigitalItem = (OrderDigitalItem) o;
    return Objects.equals(this.fileSize, orderDigitalItem.fileSize) &&
        Objects.equals(this.lastDownload, orderDigitalItem.lastDownload) &&
        Objects.equals(this.lastDownloadIpAddress, orderDigitalItem.lastDownloadIpAddress) &&
        Objects.equals(this.originalFilename, orderDigitalItem.originalFilename) &&
        Objects.equals(this.productCode, orderDigitalItem.productCode) &&
        Objects.equals(this.productDescription, orderDigitalItem.productDescription) &&
        Objects.equals(this.remainingDownloads, orderDigitalItem.remainingDownloads) &&
        Objects.equals(this.url, orderDigitalItem.url);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fileSize, lastDownload, lastDownloadIpAddress, originalFilename, productCode, productDescription, remainingDownloads, url);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderDigitalItem {\n");
    sb.append("    fileSize: ").append(toIndentedString(fileSize)).append("\n");
    sb.append("    lastDownload: ").append(toIndentedString(lastDownload)).append("\n");
    sb.append("    lastDownloadIpAddress: ").append(toIndentedString(lastDownloadIpAddress)).append("\n");
    sb.append("    originalFilename: ").append(toIndentedString(originalFilename)).append("\n");
    sb.append("    productCode: ").append(toIndentedString(productCode)).append("\n");
    sb.append("    productDescription: ").append(toIndentedString(productDescription)).append("\n");
    sb.append("    remainingDownloads: ").append(toIndentedString(remainingDownloads)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("file_size");
    openapiFields.add("last_download");
    openapiFields.add("last_download_ip_address");
    openapiFields.add("original_filename");
    openapiFields.add("product_code");
    openapiFields.add("product_description");
    openapiFields.add("remaining_downloads");
    openapiFields.add("url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to OrderDigitalItem
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (OrderDigitalItem.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in OrderDigitalItem is not found in the empty JSON string", OrderDigitalItem.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!OrderDigitalItem.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OrderDigitalItem` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("last_download") != null && !jsonObj.get("last_download").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_download` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_download").toString()));
      }
      if (jsonObj.get("last_download_ip_address") != null && !jsonObj.get("last_download_ip_address").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_download_ip_address` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_download_ip_address").toString()));
      }
      if (jsonObj.get("original_filename") != null && !jsonObj.get("original_filename").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `original_filename` to be a primitive type in the JSON string but got `%s`", jsonObj.get("original_filename").toString()));
      }
      if (jsonObj.get("product_code") != null && !jsonObj.get("product_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `product_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("product_code").toString()));
      }
      if (jsonObj.get("product_description") != null && !jsonObj.get("product_description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `product_description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("product_description").toString()));
      }
      if (jsonObj.get("url") != null && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OrderDigitalItem.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OrderDigitalItem' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OrderDigitalItem> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OrderDigitalItem.class));

       return (TypeAdapter<T>) new TypeAdapter<OrderDigitalItem>() {
           @Override
           public void write(JsonWriter out, OrderDigitalItem value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OrderDigitalItem read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of OrderDigitalItem given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of OrderDigitalItem
  * @throws IOException if the JSON string is invalid with respect to OrderDigitalItem
  */
  public static OrderDigitalItem fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OrderDigitalItem.class);
  }

 /**
  * Convert an instance of OrderDigitalItem to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

