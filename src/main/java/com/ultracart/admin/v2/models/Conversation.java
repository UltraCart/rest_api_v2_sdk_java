/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.ConversationMessage;
import com.ultracart.admin.v2.models.ConversationParticipant;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Conversation
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-09-29T10:55:33.118-04:00")



public class Conversation {
  @SerializedName("closed")
  private Boolean closed = null;

  @SerializedName("conversation_arn")
  private String conversationArn = null;

  @SerializedName("conversation_uuid")
  private String conversationUuid = null;

  @SerializedName("last_conversation_message_body")
  private String lastConversationMessageBody = null;

  @SerializedName("last_conversation_participant_arn")
  private String lastConversationParticipantArn = null;

  @SerializedName("last_conversation_participant_name")
  private String lastConversationParticipantName = null;

  @SerializedName("last_message_dts")
  private String lastMessageDts = null;

  /**
   * The communication medium of the customer.
   */
  @JsonAdapter(MediumEnum.Adapter.class)
  public enum MediumEnum {
    SMS("sms"),
    
    WEBSOCKET("websocket");

    private String value;

    MediumEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static MediumEnum fromValue(String text) {
      for (MediumEnum b : MediumEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<MediumEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final MediumEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public MediumEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return MediumEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("medium")
  private MediumEnum medium = null;

  @SerializedName("merchant_id")
  private String merchantId = null;

  @SerializedName("message_count")
  private Integer messageCount = null;

  @SerializedName("messages")
  private List<ConversationMessage> messages = null;

  @SerializedName("participants")
  private List<ConversationParticipant> participants = null;

  @SerializedName("start_dts")
  private String startDts = null;

  @SerializedName("unread_messages")
  private Boolean unreadMessages = null;

  @SerializedName("visible")
  private Boolean visible = null;

  public Conversation closed(Boolean closed) {
    this.closed = closed;
    return this;
  }

   /**
   * Get closed
   * @return closed
  **/
  @ApiModelProperty(value = "")
  public Boolean isClosed() {
    return closed;
  }

  public void setClosed(Boolean closed) {
    this.closed = closed;
  }

  public Conversation conversationArn(String conversationArn) {
    this.conversationArn = conversationArn;
    return this;
  }

   /**
   * Get conversationArn
   * @return conversationArn
  **/
  @ApiModelProperty(value = "")
  public String getConversationArn() {
    return conversationArn;
  }

  public void setConversationArn(String conversationArn) {
    this.conversationArn = conversationArn;
  }

  public Conversation conversationUuid(String conversationUuid) {
    this.conversationUuid = conversationUuid;
    return this;
  }

   /**
   * Get conversationUuid
   * @return conversationUuid
  **/
  @ApiModelProperty(value = "")
  public String getConversationUuid() {
    return conversationUuid;
  }

  public void setConversationUuid(String conversationUuid) {
    this.conversationUuid = conversationUuid;
  }

  public Conversation lastConversationMessageBody(String lastConversationMessageBody) {
    this.lastConversationMessageBody = lastConversationMessageBody;
    return this;
  }

   /**
   * Get lastConversationMessageBody
   * @return lastConversationMessageBody
  **/
  @ApiModelProperty(value = "")
  public String getLastConversationMessageBody() {
    return lastConversationMessageBody;
  }

  public void setLastConversationMessageBody(String lastConversationMessageBody) {
    this.lastConversationMessageBody = lastConversationMessageBody;
  }

  public Conversation lastConversationParticipantArn(String lastConversationParticipantArn) {
    this.lastConversationParticipantArn = lastConversationParticipantArn;
    return this;
  }

   /**
   * Get lastConversationParticipantArn
   * @return lastConversationParticipantArn
  **/
  @ApiModelProperty(value = "")
  public String getLastConversationParticipantArn() {
    return lastConversationParticipantArn;
  }

  public void setLastConversationParticipantArn(String lastConversationParticipantArn) {
    this.lastConversationParticipantArn = lastConversationParticipantArn;
  }

  public Conversation lastConversationParticipantName(String lastConversationParticipantName) {
    this.lastConversationParticipantName = lastConversationParticipantName;
    return this;
  }

   /**
   * Get lastConversationParticipantName
   * @return lastConversationParticipantName
  **/
  @ApiModelProperty(value = "")
  public String getLastConversationParticipantName() {
    return lastConversationParticipantName;
  }

  public void setLastConversationParticipantName(String lastConversationParticipantName) {
    this.lastConversationParticipantName = lastConversationParticipantName;
  }

  public Conversation lastMessageDts(String lastMessageDts) {
    this.lastMessageDts = lastMessageDts;
    return this;
  }

   /**
   * Last message date/time
   * @return lastMessageDts
  **/
  @ApiModelProperty(value = "Last message date/time")
  public String getLastMessageDts() {
    return lastMessageDts;
  }

  public void setLastMessageDts(String lastMessageDts) {
    this.lastMessageDts = lastMessageDts;
  }

  public Conversation medium(MediumEnum medium) {
    this.medium = medium;
    return this;
  }

   /**
   * The communication medium of the customer.
   * @return medium
  **/
  @ApiModelProperty(value = "The communication medium of the customer.")
  public MediumEnum getMedium() {
    return medium;
  }

  public void setMedium(MediumEnum medium) {
    this.medium = medium;
  }

  public Conversation merchantId(String merchantId) {
    this.merchantId = merchantId;
    return this;
  }

   /**
   * Get merchantId
   * @return merchantId
  **/
  @ApiModelProperty(value = "")
  public String getMerchantId() {
    return merchantId;
  }

  public void setMerchantId(String merchantId) {
    this.merchantId = merchantId;
  }

  public Conversation messageCount(Integer messageCount) {
    this.messageCount = messageCount;
    return this;
  }

   /**
   * Get messageCount
   * @return messageCount
  **/
  @ApiModelProperty(value = "")
  public Integer getMessageCount() {
    return messageCount;
  }

  public void setMessageCount(Integer messageCount) {
    this.messageCount = messageCount;
  }

  public Conversation messages(List<ConversationMessage> messages) {
    this.messages = messages;
    return this;
  }

  public Conversation addMessagesItem(ConversationMessage messagesItem) {
    if (this.messages == null) {
      this.messages = new ArrayList<ConversationMessage>();
    }
    this.messages.add(messagesItem);
    return this;
  }

   /**
   * Get messages
   * @return messages
  **/
  @ApiModelProperty(value = "")
  public List<ConversationMessage> getMessages() {
    return messages;
  }

  public void setMessages(List<ConversationMessage> messages) {
    this.messages = messages;
  }

  public Conversation participants(List<ConversationParticipant> participants) {
    this.participants = participants;
    return this;
  }

  public Conversation addParticipantsItem(ConversationParticipant participantsItem) {
    if (this.participants == null) {
      this.participants = new ArrayList<ConversationParticipant>();
    }
    this.participants.add(participantsItem);
    return this;
  }

   /**
   * Get participants
   * @return participants
  **/
  @ApiModelProperty(value = "")
  public List<ConversationParticipant> getParticipants() {
    return participants;
  }

  public void setParticipants(List<ConversationParticipant> participants) {
    this.participants = participants;
  }

  public Conversation startDts(String startDts) {
    this.startDts = startDts;
    return this;
  }

   /**
   * Start of the conversation date/time
   * @return startDts
  **/
  @ApiModelProperty(value = "Start of the conversation date/time")
  public String getStartDts() {
    return startDts;
  }

  public void setStartDts(String startDts) {
    this.startDts = startDts;
  }

  public Conversation unreadMessages(Boolean unreadMessages) {
    this.unreadMessages = unreadMessages;
    return this;
  }

   /**
   * Get unreadMessages
   * @return unreadMessages
  **/
  @ApiModelProperty(value = "")
  public Boolean isUnreadMessages() {
    return unreadMessages;
  }

  public void setUnreadMessages(Boolean unreadMessages) {
    this.unreadMessages = unreadMessages;
  }

  public Conversation visible(Boolean visible) {
    this.visible = visible;
    return this;
  }

   /**
   * Get visible
   * @return visible
  **/
  @ApiModelProperty(value = "")
  public Boolean isVisible() {
    return visible;
  }

  public void setVisible(Boolean visible) {
    this.visible = visible;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Conversation conversation = (Conversation) o;
    return Objects.equals(this.closed, conversation.closed) &&
        Objects.equals(this.conversationArn, conversation.conversationArn) &&
        Objects.equals(this.conversationUuid, conversation.conversationUuid) &&
        Objects.equals(this.lastConversationMessageBody, conversation.lastConversationMessageBody) &&
        Objects.equals(this.lastConversationParticipantArn, conversation.lastConversationParticipantArn) &&
        Objects.equals(this.lastConversationParticipantName, conversation.lastConversationParticipantName) &&
        Objects.equals(this.lastMessageDts, conversation.lastMessageDts) &&
        Objects.equals(this.medium, conversation.medium) &&
        Objects.equals(this.merchantId, conversation.merchantId) &&
        Objects.equals(this.messageCount, conversation.messageCount) &&
        Objects.equals(this.messages, conversation.messages) &&
        Objects.equals(this.participants, conversation.participants) &&
        Objects.equals(this.startDts, conversation.startDts) &&
        Objects.equals(this.unreadMessages, conversation.unreadMessages) &&
        Objects.equals(this.visible, conversation.visible);
  }

  @Override
  public int hashCode() {
    return Objects.hash(closed, conversationArn, conversationUuid, lastConversationMessageBody, lastConversationParticipantArn, lastConversationParticipantName, lastMessageDts, medium, merchantId, messageCount, messages, participants, startDts, unreadMessages, visible);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Conversation {\n");
    
    sb.append("    closed: ").append(toIndentedString(closed)).append("\n");
    sb.append("    conversationArn: ").append(toIndentedString(conversationArn)).append("\n");
    sb.append("    conversationUuid: ").append(toIndentedString(conversationUuid)).append("\n");
    sb.append("    lastConversationMessageBody: ").append(toIndentedString(lastConversationMessageBody)).append("\n");
    sb.append("    lastConversationParticipantArn: ").append(toIndentedString(lastConversationParticipantArn)).append("\n");
    sb.append("    lastConversationParticipantName: ").append(toIndentedString(lastConversationParticipantName)).append("\n");
    sb.append("    lastMessageDts: ").append(toIndentedString(lastMessageDts)).append("\n");
    sb.append("    medium: ").append(toIndentedString(medium)).append("\n");
    sb.append("    merchantId: ").append(toIndentedString(merchantId)).append("\n");
    sb.append("    messageCount: ").append(toIndentedString(messageCount)).append("\n");
    sb.append("    messages: ").append(toIndentedString(messages)).append("\n");
    sb.append("    participants: ").append(toIndentedString(participants)).append("\n");
    sb.append("    startDts: ").append(toIndentedString(startDts)).append("\n");
    sb.append("    unreadMessages: ").append(toIndentedString(unreadMessages)).append("\n");
    sb.append("    visible: ").append(toIndentedString(visible)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

