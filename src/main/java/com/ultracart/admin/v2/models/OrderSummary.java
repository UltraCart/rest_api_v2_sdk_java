/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.Currency;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * OrderSummary
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-09-12T09:21:23.610-04:00[America/Indianapolis]")
public class OrderSummary {
  public static final String SERIALIZED_NAME_ACTUAL_FULFILLMENT = "actual_fulfillment";
  @SerializedName(SERIALIZED_NAME_ACTUAL_FULFILLMENT)
  private Currency actualFulfillment;

  public static final String SERIALIZED_NAME_ACTUAL_PAYMENT_PROCESSING = "actual_payment_processing";
  @SerializedName(SERIALIZED_NAME_ACTUAL_PAYMENT_PROCESSING)
  private Currency actualPaymentProcessing;

  public static final String SERIALIZED_NAME_ACTUAL_SHIPPING = "actual_shipping";
  @SerializedName(SERIALIZED_NAME_ACTUAL_SHIPPING)
  private Currency actualShipping;

  public static final String SERIALIZED_NAME_ARBITRARY_SHIPPING_HANDLING_TOTAL = "arbitrary_shipping_handling_total";
  @SerializedName(SERIALIZED_NAME_ARBITRARY_SHIPPING_HANDLING_TOTAL)
  private Currency arbitraryShippingHandlingTotal;

  public static final String SERIALIZED_NAME_INTERNAL_GIFT_CERTIFICATE_AMOUNT = "internal_gift_certificate_amount";
  @SerializedName(SERIALIZED_NAME_INTERNAL_GIFT_CERTIFICATE_AMOUNT)
  private Currency internalGiftCertificateAmount;

  public static final String SERIALIZED_NAME_INTERNAL_GIFT_CERTIFICATE_REFUNDED = "internal_gift_certificate_refunded";
  @SerializedName(SERIALIZED_NAME_INTERNAL_GIFT_CERTIFICATE_REFUNDED)
  private Currency internalGiftCertificateRefunded;

  public static final String SERIALIZED_NAME_OTHER_REFUNDED = "other_refunded";
  @SerializedName(SERIALIZED_NAME_OTHER_REFUNDED)
  private Currency otherRefunded;

  public static final String SERIALIZED_NAME_SHIPPING_HANDLING_REFUNDED = "shipping_handling_refunded";
  @SerializedName(SERIALIZED_NAME_SHIPPING_HANDLING_REFUNDED)
  private Currency shippingHandlingRefunded;

  public static final String SERIALIZED_NAME_SHIPPING_HANDLING_TOTAL = "shipping_handling_total";
  @SerializedName(SERIALIZED_NAME_SHIPPING_HANDLING_TOTAL)
  private Currency shippingHandlingTotal;

  public static final String SERIALIZED_NAME_SHIPPING_HANDLING_TOTAL_DISCOUNT = "shipping_handling_total_discount";
  @SerializedName(SERIALIZED_NAME_SHIPPING_HANDLING_TOTAL_DISCOUNT)
  private Currency shippingHandlingTotalDiscount;

  public static final String SERIALIZED_NAME_SUBTOTAL = "subtotal";
  @SerializedName(SERIALIZED_NAME_SUBTOTAL)
  private Currency subtotal;

  public static final String SERIALIZED_NAME_SUBTOTAL_DISCOUNT = "subtotal_discount";
  @SerializedName(SERIALIZED_NAME_SUBTOTAL_DISCOUNT)
  private Currency subtotalDiscount;

  public static final String SERIALIZED_NAME_SUBTOTAL_DISCOUNT_REFUNDED = "subtotal_discount_refunded";
  @SerializedName(SERIALIZED_NAME_SUBTOTAL_DISCOUNT_REFUNDED)
  private Currency subtotalDiscountRefunded;

  public static final String SERIALIZED_NAME_SUBTOTAL_REFUNDED = "subtotal_refunded";
  @SerializedName(SERIALIZED_NAME_SUBTOTAL_REFUNDED)
  private Currency subtotalRefunded;

  public static final String SERIALIZED_NAME_TAX = "tax";
  @SerializedName(SERIALIZED_NAME_TAX)
  private Currency tax;

  public static final String SERIALIZED_NAME_TAX_REFUNDED = "tax_refunded";
  @SerializedName(SERIALIZED_NAME_TAX_REFUNDED)
  private Currency taxRefunded;

  public static final String SERIALIZED_NAME_TAXABLE_SUBTOTAL = "taxable_subtotal";
  @SerializedName(SERIALIZED_NAME_TAXABLE_SUBTOTAL)
  private Currency taxableSubtotal;

  public static final String SERIALIZED_NAME_TAXABLE_SUBTOTAL_DISCOUNT = "taxable_subtotal_discount";
  @SerializedName(SERIALIZED_NAME_TAXABLE_SUBTOTAL_DISCOUNT)
  private Currency taxableSubtotalDiscount;

  public static final String SERIALIZED_NAME_TOTAL = "total";
  @SerializedName(SERIALIZED_NAME_TOTAL)
  private Currency total;

  public static final String SERIALIZED_NAME_TOTAL_REFUNDED = "total_refunded";
  @SerializedName(SERIALIZED_NAME_TOTAL_REFUNDED)
  private Currency totalRefunded;

  public OrderSummary() { 
  }

  public OrderSummary actualFulfillment(Currency actualFulfillment) {
    
    this.actualFulfillment = actualFulfillment;
    return this;
  }

   /**
   * Get actualFulfillment
   * @return actualFulfillment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Currency getActualFulfillment() {
    return actualFulfillment;
  }


  public void setActualFulfillment(Currency actualFulfillment) {
    this.actualFulfillment = actualFulfillment;
  }


  public OrderSummary actualPaymentProcessing(Currency actualPaymentProcessing) {
    
    this.actualPaymentProcessing = actualPaymentProcessing;
    return this;
  }

   /**
   * Get actualPaymentProcessing
   * @return actualPaymentProcessing
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Currency getActualPaymentProcessing() {
    return actualPaymentProcessing;
  }


  public void setActualPaymentProcessing(Currency actualPaymentProcessing) {
    this.actualPaymentProcessing = actualPaymentProcessing;
  }


  public OrderSummary actualShipping(Currency actualShipping) {
    
    this.actualShipping = actualShipping;
    return this;
  }

   /**
   * Get actualShipping
   * @return actualShipping
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Currency getActualShipping() {
    return actualShipping;
  }


  public void setActualShipping(Currency actualShipping) {
    this.actualShipping = actualShipping;
  }


  public OrderSummary arbitraryShippingHandlingTotal(Currency arbitraryShippingHandlingTotal) {
    
    this.arbitraryShippingHandlingTotal = arbitraryShippingHandlingTotal;
    return this;
  }

   /**
   * Get arbitraryShippingHandlingTotal
   * @return arbitraryShippingHandlingTotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Currency getArbitraryShippingHandlingTotal() {
    return arbitraryShippingHandlingTotal;
  }


  public void setArbitraryShippingHandlingTotal(Currency arbitraryShippingHandlingTotal) {
    this.arbitraryShippingHandlingTotal = arbitraryShippingHandlingTotal;
  }


  public OrderSummary internalGiftCertificateAmount(Currency internalGiftCertificateAmount) {
    
    this.internalGiftCertificateAmount = internalGiftCertificateAmount;
    return this;
  }

   /**
   * Get internalGiftCertificateAmount
   * @return internalGiftCertificateAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Currency getInternalGiftCertificateAmount() {
    return internalGiftCertificateAmount;
  }


  public void setInternalGiftCertificateAmount(Currency internalGiftCertificateAmount) {
    this.internalGiftCertificateAmount = internalGiftCertificateAmount;
  }


  public OrderSummary internalGiftCertificateRefunded(Currency internalGiftCertificateRefunded) {
    
    this.internalGiftCertificateRefunded = internalGiftCertificateRefunded;
    return this;
  }

   /**
   * Get internalGiftCertificateRefunded
   * @return internalGiftCertificateRefunded
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Currency getInternalGiftCertificateRefunded() {
    return internalGiftCertificateRefunded;
  }


  public void setInternalGiftCertificateRefunded(Currency internalGiftCertificateRefunded) {
    this.internalGiftCertificateRefunded = internalGiftCertificateRefunded;
  }


  public OrderSummary otherRefunded(Currency otherRefunded) {
    
    this.otherRefunded = otherRefunded;
    return this;
  }

   /**
   * Get otherRefunded
   * @return otherRefunded
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Currency getOtherRefunded() {
    return otherRefunded;
  }


  public void setOtherRefunded(Currency otherRefunded) {
    this.otherRefunded = otherRefunded;
  }


  public OrderSummary shippingHandlingRefunded(Currency shippingHandlingRefunded) {
    
    this.shippingHandlingRefunded = shippingHandlingRefunded;
    return this;
  }

   /**
   * Get shippingHandlingRefunded
   * @return shippingHandlingRefunded
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Currency getShippingHandlingRefunded() {
    return shippingHandlingRefunded;
  }


  public void setShippingHandlingRefunded(Currency shippingHandlingRefunded) {
    this.shippingHandlingRefunded = shippingHandlingRefunded;
  }


  public OrderSummary shippingHandlingTotal(Currency shippingHandlingTotal) {
    
    this.shippingHandlingTotal = shippingHandlingTotal;
    return this;
  }

   /**
   * Get shippingHandlingTotal
   * @return shippingHandlingTotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Currency getShippingHandlingTotal() {
    return shippingHandlingTotal;
  }


  public void setShippingHandlingTotal(Currency shippingHandlingTotal) {
    this.shippingHandlingTotal = shippingHandlingTotal;
  }


  public OrderSummary shippingHandlingTotalDiscount(Currency shippingHandlingTotalDiscount) {
    
    this.shippingHandlingTotalDiscount = shippingHandlingTotalDiscount;
    return this;
  }

   /**
   * Get shippingHandlingTotalDiscount
   * @return shippingHandlingTotalDiscount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Currency getShippingHandlingTotalDiscount() {
    return shippingHandlingTotalDiscount;
  }


  public void setShippingHandlingTotalDiscount(Currency shippingHandlingTotalDiscount) {
    this.shippingHandlingTotalDiscount = shippingHandlingTotalDiscount;
  }


  public OrderSummary subtotal(Currency subtotal) {
    
    this.subtotal = subtotal;
    return this;
  }

   /**
   * Get subtotal
   * @return subtotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Currency getSubtotal() {
    return subtotal;
  }


  public void setSubtotal(Currency subtotal) {
    this.subtotal = subtotal;
  }


  public OrderSummary subtotalDiscount(Currency subtotalDiscount) {
    
    this.subtotalDiscount = subtotalDiscount;
    return this;
  }

   /**
   * Get subtotalDiscount
   * @return subtotalDiscount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Currency getSubtotalDiscount() {
    return subtotalDiscount;
  }


  public void setSubtotalDiscount(Currency subtotalDiscount) {
    this.subtotalDiscount = subtotalDiscount;
  }


  public OrderSummary subtotalDiscountRefunded(Currency subtotalDiscountRefunded) {
    
    this.subtotalDiscountRefunded = subtotalDiscountRefunded;
    return this;
  }

   /**
   * Get subtotalDiscountRefunded
   * @return subtotalDiscountRefunded
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Currency getSubtotalDiscountRefunded() {
    return subtotalDiscountRefunded;
  }


  public void setSubtotalDiscountRefunded(Currency subtotalDiscountRefunded) {
    this.subtotalDiscountRefunded = subtotalDiscountRefunded;
  }


  public OrderSummary subtotalRefunded(Currency subtotalRefunded) {
    
    this.subtotalRefunded = subtotalRefunded;
    return this;
  }

   /**
   * Get subtotalRefunded
   * @return subtotalRefunded
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Currency getSubtotalRefunded() {
    return subtotalRefunded;
  }


  public void setSubtotalRefunded(Currency subtotalRefunded) {
    this.subtotalRefunded = subtotalRefunded;
  }


  public OrderSummary tax(Currency tax) {
    
    this.tax = tax;
    return this;
  }

   /**
   * Get tax
   * @return tax
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Currency getTax() {
    return tax;
  }


  public void setTax(Currency tax) {
    this.tax = tax;
  }


  public OrderSummary taxRefunded(Currency taxRefunded) {
    
    this.taxRefunded = taxRefunded;
    return this;
  }

   /**
   * Get taxRefunded
   * @return taxRefunded
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Currency getTaxRefunded() {
    return taxRefunded;
  }


  public void setTaxRefunded(Currency taxRefunded) {
    this.taxRefunded = taxRefunded;
  }


  public OrderSummary taxableSubtotal(Currency taxableSubtotal) {
    
    this.taxableSubtotal = taxableSubtotal;
    return this;
  }

   /**
   * Get taxableSubtotal
   * @return taxableSubtotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Currency getTaxableSubtotal() {
    return taxableSubtotal;
  }


  public void setTaxableSubtotal(Currency taxableSubtotal) {
    this.taxableSubtotal = taxableSubtotal;
  }


  public OrderSummary taxableSubtotalDiscount(Currency taxableSubtotalDiscount) {
    
    this.taxableSubtotalDiscount = taxableSubtotalDiscount;
    return this;
  }

   /**
   * Get taxableSubtotalDiscount
   * @return taxableSubtotalDiscount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Currency getTaxableSubtotalDiscount() {
    return taxableSubtotalDiscount;
  }


  public void setTaxableSubtotalDiscount(Currency taxableSubtotalDiscount) {
    this.taxableSubtotalDiscount = taxableSubtotalDiscount;
  }


  public OrderSummary total(Currency total) {
    
    this.total = total;
    return this;
  }

   /**
   * Get total
   * @return total
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Currency getTotal() {
    return total;
  }


  public void setTotal(Currency total) {
    this.total = total;
  }


  public OrderSummary totalRefunded(Currency totalRefunded) {
    
    this.totalRefunded = totalRefunded;
    return this;
  }

   /**
   * Get totalRefunded
   * @return totalRefunded
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Currency getTotalRefunded() {
    return totalRefunded;
  }


  public void setTotalRefunded(Currency totalRefunded) {
    this.totalRefunded = totalRefunded;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderSummary orderSummary = (OrderSummary) o;
    return Objects.equals(this.actualFulfillment, orderSummary.actualFulfillment) &&
        Objects.equals(this.actualPaymentProcessing, orderSummary.actualPaymentProcessing) &&
        Objects.equals(this.actualShipping, orderSummary.actualShipping) &&
        Objects.equals(this.arbitraryShippingHandlingTotal, orderSummary.arbitraryShippingHandlingTotal) &&
        Objects.equals(this.internalGiftCertificateAmount, orderSummary.internalGiftCertificateAmount) &&
        Objects.equals(this.internalGiftCertificateRefunded, orderSummary.internalGiftCertificateRefunded) &&
        Objects.equals(this.otherRefunded, orderSummary.otherRefunded) &&
        Objects.equals(this.shippingHandlingRefunded, orderSummary.shippingHandlingRefunded) &&
        Objects.equals(this.shippingHandlingTotal, orderSummary.shippingHandlingTotal) &&
        Objects.equals(this.shippingHandlingTotalDiscount, orderSummary.shippingHandlingTotalDiscount) &&
        Objects.equals(this.subtotal, orderSummary.subtotal) &&
        Objects.equals(this.subtotalDiscount, orderSummary.subtotalDiscount) &&
        Objects.equals(this.subtotalDiscountRefunded, orderSummary.subtotalDiscountRefunded) &&
        Objects.equals(this.subtotalRefunded, orderSummary.subtotalRefunded) &&
        Objects.equals(this.tax, orderSummary.tax) &&
        Objects.equals(this.taxRefunded, orderSummary.taxRefunded) &&
        Objects.equals(this.taxableSubtotal, orderSummary.taxableSubtotal) &&
        Objects.equals(this.taxableSubtotalDiscount, orderSummary.taxableSubtotalDiscount) &&
        Objects.equals(this.total, orderSummary.total) &&
        Objects.equals(this.totalRefunded, orderSummary.totalRefunded);
  }

  @Override
  public int hashCode() {
    return Objects.hash(actualFulfillment, actualPaymentProcessing, actualShipping, arbitraryShippingHandlingTotal, internalGiftCertificateAmount, internalGiftCertificateRefunded, otherRefunded, shippingHandlingRefunded, shippingHandlingTotal, shippingHandlingTotalDiscount, subtotal, subtotalDiscount, subtotalDiscountRefunded, subtotalRefunded, tax, taxRefunded, taxableSubtotal, taxableSubtotalDiscount, total, totalRefunded);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderSummary {\n");
    sb.append("    actualFulfillment: ").append(toIndentedString(actualFulfillment)).append("\n");
    sb.append("    actualPaymentProcessing: ").append(toIndentedString(actualPaymentProcessing)).append("\n");
    sb.append("    actualShipping: ").append(toIndentedString(actualShipping)).append("\n");
    sb.append("    arbitraryShippingHandlingTotal: ").append(toIndentedString(arbitraryShippingHandlingTotal)).append("\n");
    sb.append("    internalGiftCertificateAmount: ").append(toIndentedString(internalGiftCertificateAmount)).append("\n");
    sb.append("    internalGiftCertificateRefunded: ").append(toIndentedString(internalGiftCertificateRefunded)).append("\n");
    sb.append("    otherRefunded: ").append(toIndentedString(otherRefunded)).append("\n");
    sb.append("    shippingHandlingRefunded: ").append(toIndentedString(shippingHandlingRefunded)).append("\n");
    sb.append("    shippingHandlingTotal: ").append(toIndentedString(shippingHandlingTotal)).append("\n");
    sb.append("    shippingHandlingTotalDiscount: ").append(toIndentedString(shippingHandlingTotalDiscount)).append("\n");
    sb.append("    subtotal: ").append(toIndentedString(subtotal)).append("\n");
    sb.append("    subtotalDiscount: ").append(toIndentedString(subtotalDiscount)).append("\n");
    sb.append("    subtotalDiscountRefunded: ").append(toIndentedString(subtotalDiscountRefunded)).append("\n");
    sb.append("    subtotalRefunded: ").append(toIndentedString(subtotalRefunded)).append("\n");
    sb.append("    tax: ").append(toIndentedString(tax)).append("\n");
    sb.append("    taxRefunded: ").append(toIndentedString(taxRefunded)).append("\n");
    sb.append("    taxableSubtotal: ").append(toIndentedString(taxableSubtotal)).append("\n");
    sb.append("    taxableSubtotalDiscount: ").append(toIndentedString(taxableSubtotalDiscount)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("    totalRefunded: ").append(toIndentedString(totalRefunded)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("actual_fulfillment");
    openapiFields.add("actual_payment_processing");
    openapiFields.add("actual_shipping");
    openapiFields.add("arbitrary_shipping_handling_total");
    openapiFields.add("internal_gift_certificate_amount");
    openapiFields.add("internal_gift_certificate_refunded");
    openapiFields.add("other_refunded");
    openapiFields.add("shipping_handling_refunded");
    openapiFields.add("shipping_handling_total");
    openapiFields.add("shipping_handling_total_discount");
    openapiFields.add("subtotal");
    openapiFields.add("subtotal_discount");
    openapiFields.add("subtotal_discount_refunded");
    openapiFields.add("subtotal_refunded");
    openapiFields.add("tax");
    openapiFields.add("tax_refunded");
    openapiFields.add("taxable_subtotal");
    openapiFields.add("taxable_subtotal_discount");
    openapiFields.add("total");
    openapiFields.add("total_refunded");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to OrderSummary
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (OrderSummary.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in OrderSummary is not found in the empty JSON string", OrderSummary.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!OrderSummary.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OrderSummary` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      // validate the optional field `actual_fulfillment`
      if (jsonObj.getAsJsonObject("actual_fulfillment") != null) {
        Currency.validateJsonObject(jsonObj.getAsJsonObject("actual_fulfillment"));
      }
      // validate the optional field `actual_payment_processing`
      if (jsonObj.getAsJsonObject("actual_payment_processing") != null) {
        Currency.validateJsonObject(jsonObj.getAsJsonObject("actual_payment_processing"));
      }
      // validate the optional field `actual_shipping`
      if (jsonObj.getAsJsonObject("actual_shipping") != null) {
        Currency.validateJsonObject(jsonObj.getAsJsonObject("actual_shipping"));
      }
      // validate the optional field `arbitrary_shipping_handling_total`
      if (jsonObj.getAsJsonObject("arbitrary_shipping_handling_total") != null) {
        Currency.validateJsonObject(jsonObj.getAsJsonObject("arbitrary_shipping_handling_total"));
      }
      // validate the optional field `internal_gift_certificate_amount`
      if (jsonObj.getAsJsonObject("internal_gift_certificate_amount") != null) {
        Currency.validateJsonObject(jsonObj.getAsJsonObject("internal_gift_certificate_amount"));
      }
      // validate the optional field `internal_gift_certificate_refunded`
      if (jsonObj.getAsJsonObject("internal_gift_certificate_refunded") != null) {
        Currency.validateJsonObject(jsonObj.getAsJsonObject("internal_gift_certificate_refunded"));
      }
      // validate the optional field `other_refunded`
      if (jsonObj.getAsJsonObject("other_refunded") != null) {
        Currency.validateJsonObject(jsonObj.getAsJsonObject("other_refunded"));
      }
      // validate the optional field `shipping_handling_refunded`
      if (jsonObj.getAsJsonObject("shipping_handling_refunded") != null) {
        Currency.validateJsonObject(jsonObj.getAsJsonObject("shipping_handling_refunded"));
      }
      // validate the optional field `shipping_handling_total`
      if (jsonObj.getAsJsonObject("shipping_handling_total") != null) {
        Currency.validateJsonObject(jsonObj.getAsJsonObject("shipping_handling_total"));
      }
      // validate the optional field `shipping_handling_total_discount`
      if (jsonObj.getAsJsonObject("shipping_handling_total_discount") != null) {
        Currency.validateJsonObject(jsonObj.getAsJsonObject("shipping_handling_total_discount"));
      }
      // validate the optional field `subtotal`
      if (jsonObj.getAsJsonObject("subtotal") != null) {
        Currency.validateJsonObject(jsonObj.getAsJsonObject("subtotal"));
      }
      // validate the optional field `subtotal_discount`
      if (jsonObj.getAsJsonObject("subtotal_discount") != null) {
        Currency.validateJsonObject(jsonObj.getAsJsonObject("subtotal_discount"));
      }
      // validate the optional field `subtotal_discount_refunded`
      if (jsonObj.getAsJsonObject("subtotal_discount_refunded") != null) {
        Currency.validateJsonObject(jsonObj.getAsJsonObject("subtotal_discount_refunded"));
      }
      // validate the optional field `subtotal_refunded`
      if (jsonObj.getAsJsonObject("subtotal_refunded") != null) {
        Currency.validateJsonObject(jsonObj.getAsJsonObject("subtotal_refunded"));
      }
      // validate the optional field `tax`
      if (jsonObj.getAsJsonObject("tax") != null) {
        Currency.validateJsonObject(jsonObj.getAsJsonObject("tax"));
      }
      // validate the optional field `tax_refunded`
      if (jsonObj.getAsJsonObject("tax_refunded") != null) {
        Currency.validateJsonObject(jsonObj.getAsJsonObject("tax_refunded"));
      }
      // validate the optional field `taxable_subtotal`
      if (jsonObj.getAsJsonObject("taxable_subtotal") != null) {
        Currency.validateJsonObject(jsonObj.getAsJsonObject("taxable_subtotal"));
      }
      // validate the optional field `taxable_subtotal_discount`
      if (jsonObj.getAsJsonObject("taxable_subtotal_discount") != null) {
        Currency.validateJsonObject(jsonObj.getAsJsonObject("taxable_subtotal_discount"));
      }
      // validate the optional field `total`
      if (jsonObj.getAsJsonObject("total") != null) {
        Currency.validateJsonObject(jsonObj.getAsJsonObject("total"));
      }
      // validate the optional field `total_refunded`
      if (jsonObj.getAsJsonObject("total_refunded") != null) {
        Currency.validateJsonObject(jsonObj.getAsJsonObject("total_refunded"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OrderSummary.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OrderSummary' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OrderSummary> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OrderSummary.class));

       return (TypeAdapter<T>) new TypeAdapter<OrderSummary>() {
           @Override
           public void write(JsonWriter out, OrderSummary value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OrderSummary read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of OrderSummary given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of OrderSummary
  * @throws IOException if the JSON string is invalid with respect to OrderSummary
  */
  public static OrderSummary fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OrderSummary.class);
  }

 /**
  * Convert an instance of OrderSummary to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

