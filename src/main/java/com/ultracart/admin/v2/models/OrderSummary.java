/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.Currency;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * OrderSummary
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-09-02T10:14:50.766-04:00")



public class OrderSummary {
  @SerializedName("actual_fulfillment")
  private Currency actualFulfillment = null;

  @SerializedName("actual_payment_processing")
  private Currency actualPaymentProcessing = null;

  @SerializedName("actual_shipping")
  private Currency actualShipping = null;

  @SerializedName("arbitrary_shipping_handling_total")
  private Currency arbitraryShippingHandlingTotal = null;

  @SerializedName("internal_gift_certificate_amount")
  private Currency internalGiftCertificateAmount = null;

  @SerializedName("internal_gift_certificate_refunded")
  private Currency internalGiftCertificateRefunded = null;

  @SerializedName("other_refunded")
  private Currency otherRefunded = null;

  @SerializedName("shipping_handling_refunded")
  private Currency shippingHandlingRefunded = null;

  @SerializedName("shipping_handling_total")
  private Currency shippingHandlingTotal = null;

  @SerializedName("shipping_handling_total_discount")
  private Currency shippingHandlingTotalDiscount = null;

  @SerializedName("subtotal")
  private Currency subtotal = null;

  @SerializedName("subtotal_discount")
  private Currency subtotalDiscount = null;

  @SerializedName("subtotal_discount_refunded")
  private Currency subtotalDiscountRefunded = null;

  @SerializedName("subtotal_refunded")
  private Currency subtotalRefunded = null;

  @SerializedName("tax")
  private Currency tax = null;

  @SerializedName("tax_refunded")
  private Currency taxRefunded = null;

  @SerializedName("taxable_subtotal")
  private Currency taxableSubtotal = null;

  @SerializedName("taxable_subtotal_discount")
  private Currency taxableSubtotalDiscount = null;

  @SerializedName("total")
  private Currency total = null;

  @SerializedName("total_refunded")
  private Currency totalRefunded = null;

  public OrderSummary actualFulfillment(Currency actualFulfillment) {
    this.actualFulfillment = actualFulfillment;
    return this;
  }

   /**
   * Get actualFulfillment
   * @return actualFulfillment
  **/
  @ApiModelProperty(value = "")
  public Currency getActualFulfillment() {
    return actualFulfillment;
  }

  public void setActualFulfillment(Currency actualFulfillment) {
    this.actualFulfillment = actualFulfillment;
  }

  public OrderSummary actualPaymentProcessing(Currency actualPaymentProcessing) {
    this.actualPaymentProcessing = actualPaymentProcessing;
    return this;
  }

   /**
   * Get actualPaymentProcessing
   * @return actualPaymentProcessing
  **/
  @ApiModelProperty(value = "")
  public Currency getActualPaymentProcessing() {
    return actualPaymentProcessing;
  }

  public void setActualPaymentProcessing(Currency actualPaymentProcessing) {
    this.actualPaymentProcessing = actualPaymentProcessing;
  }

  public OrderSummary actualShipping(Currency actualShipping) {
    this.actualShipping = actualShipping;
    return this;
  }

   /**
   * Get actualShipping
   * @return actualShipping
  **/
  @ApiModelProperty(value = "")
  public Currency getActualShipping() {
    return actualShipping;
  }

  public void setActualShipping(Currency actualShipping) {
    this.actualShipping = actualShipping;
  }

  public OrderSummary arbitraryShippingHandlingTotal(Currency arbitraryShippingHandlingTotal) {
    this.arbitraryShippingHandlingTotal = arbitraryShippingHandlingTotal;
    return this;
  }

   /**
   * Get arbitraryShippingHandlingTotal
   * @return arbitraryShippingHandlingTotal
  **/
  @ApiModelProperty(value = "")
  public Currency getArbitraryShippingHandlingTotal() {
    return arbitraryShippingHandlingTotal;
  }

  public void setArbitraryShippingHandlingTotal(Currency arbitraryShippingHandlingTotal) {
    this.arbitraryShippingHandlingTotal = arbitraryShippingHandlingTotal;
  }

  public OrderSummary internalGiftCertificateAmount(Currency internalGiftCertificateAmount) {
    this.internalGiftCertificateAmount = internalGiftCertificateAmount;
    return this;
  }

   /**
   * Get internalGiftCertificateAmount
   * @return internalGiftCertificateAmount
  **/
  @ApiModelProperty(value = "")
  public Currency getInternalGiftCertificateAmount() {
    return internalGiftCertificateAmount;
  }

  public void setInternalGiftCertificateAmount(Currency internalGiftCertificateAmount) {
    this.internalGiftCertificateAmount = internalGiftCertificateAmount;
  }

  public OrderSummary internalGiftCertificateRefunded(Currency internalGiftCertificateRefunded) {
    this.internalGiftCertificateRefunded = internalGiftCertificateRefunded;
    return this;
  }

   /**
   * Get internalGiftCertificateRefunded
   * @return internalGiftCertificateRefunded
  **/
  @ApiModelProperty(value = "")
  public Currency getInternalGiftCertificateRefunded() {
    return internalGiftCertificateRefunded;
  }

  public void setInternalGiftCertificateRefunded(Currency internalGiftCertificateRefunded) {
    this.internalGiftCertificateRefunded = internalGiftCertificateRefunded;
  }

  public OrderSummary otherRefunded(Currency otherRefunded) {
    this.otherRefunded = otherRefunded;
    return this;
  }

   /**
   * Get otherRefunded
   * @return otherRefunded
  **/
  @ApiModelProperty(value = "")
  public Currency getOtherRefunded() {
    return otherRefunded;
  }

  public void setOtherRefunded(Currency otherRefunded) {
    this.otherRefunded = otherRefunded;
  }

  public OrderSummary shippingHandlingRefunded(Currency shippingHandlingRefunded) {
    this.shippingHandlingRefunded = shippingHandlingRefunded;
    return this;
  }

   /**
   * Get shippingHandlingRefunded
   * @return shippingHandlingRefunded
  **/
  @ApiModelProperty(value = "")
  public Currency getShippingHandlingRefunded() {
    return shippingHandlingRefunded;
  }

  public void setShippingHandlingRefunded(Currency shippingHandlingRefunded) {
    this.shippingHandlingRefunded = shippingHandlingRefunded;
  }

  public OrderSummary shippingHandlingTotal(Currency shippingHandlingTotal) {
    this.shippingHandlingTotal = shippingHandlingTotal;
    return this;
  }

   /**
   * Get shippingHandlingTotal
   * @return shippingHandlingTotal
  **/
  @ApiModelProperty(value = "")
  public Currency getShippingHandlingTotal() {
    return shippingHandlingTotal;
  }

  public void setShippingHandlingTotal(Currency shippingHandlingTotal) {
    this.shippingHandlingTotal = shippingHandlingTotal;
  }

  public OrderSummary shippingHandlingTotalDiscount(Currency shippingHandlingTotalDiscount) {
    this.shippingHandlingTotalDiscount = shippingHandlingTotalDiscount;
    return this;
  }

   /**
   * Get shippingHandlingTotalDiscount
   * @return shippingHandlingTotalDiscount
  **/
  @ApiModelProperty(value = "")
  public Currency getShippingHandlingTotalDiscount() {
    return shippingHandlingTotalDiscount;
  }

  public void setShippingHandlingTotalDiscount(Currency shippingHandlingTotalDiscount) {
    this.shippingHandlingTotalDiscount = shippingHandlingTotalDiscount;
  }

  public OrderSummary subtotal(Currency subtotal) {
    this.subtotal = subtotal;
    return this;
  }

   /**
   * Get subtotal
   * @return subtotal
  **/
  @ApiModelProperty(value = "")
  public Currency getSubtotal() {
    return subtotal;
  }

  public void setSubtotal(Currency subtotal) {
    this.subtotal = subtotal;
  }

  public OrderSummary subtotalDiscount(Currency subtotalDiscount) {
    this.subtotalDiscount = subtotalDiscount;
    return this;
  }

   /**
   * Get subtotalDiscount
   * @return subtotalDiscount
  **/
  @ApiModelProperty(value = "")
  public Currency getSubtotalDiscount() {
    return subtotalDiscount;
  }

  public void setSubtotalDiscount(Currency subtotalDiscount) {
    this.subtotalDiscount = subtotalDiscount;
  }

  public OrderSummary subtotalDiscountRefunded(Currency subtotalDiscountRefunded) {
    this.subtotalDiscountRefunded = subtotalDiscountRefunded;
    return this;
  }

   /**
   * Get subtotalDiscountRefunded
   * @return subtotalDiscountRefunded
  **/
  @ApiModelProperty(value = "")
  public Currency getSubtotalDiscountRefunded() {
    return subtotalDiscountRefunded;
  }

  public void setSubtotalDiscountRefunded(Currency subtotalDiscountRefunded) {
    this.subtotalDiscountRefunded = subtotalDiscountRefunded;
  }

  public OrderSummary subtotalRefunded(Currency subtotalRefunded) {
    this.subtotalRefunded = subtotalRefunded;
    return this;
  }

   /**
   * Get subtotalRefunded
   * @return subtotalRefunded
  **/
  @ApiModelProperty(value = "")
  public Currency getSubtotalRefunded() {
    return subtotalRefunded;
  }

  public void setSubtotalRefunded(Currency subtotalRefunded) {
    this.subtotalRefunded = subtotalRefunded;
  }

  public OrderSummary tax(Currency tax) {
    this.tax = tax;
    return this;
  }

   /**
   * Get tax
   * @return tax
  **/
  @ApiModelProperty(value = "")
  public Currency getTax() {
    return tax;
  }

  public void setTax(Currency tax) {
    this.tax = tax;
  }

  public OrderSummary taxRefunded(Currency taxRefunded) {
    this.taxRefunded = taxRefunded;
    return this;
  }

   /**
   * Get taxRefunded
   * @return taxRefunded
  **/
  @ApiModelProperty(value = "")
  public Currency getTaxRefunded() {
    return taxRefunded;
  }

  public void setTaxRefunded(Currency taxRefunded) {
    this.taxRefunded = taxRefunded;
  }

  public OrderSummary taxableSubtotal(Currency taxableSubtotal) {
    this.taxableSubtotal = taxableSubtotal;
    return this;
  }

   /**
   * Get taxableSubtotal
   * @return taxableSubtotal
  **/
  @ApiModelProperty(value = "")
  public Currency getTaxableSubtotal() {
    return taxableSubtotal;
  }

  public void setTaxableSubtotal(Currency taxableSubtotal) {
    this.taxableSubtotal = taxableSubtotal;
  }

  public OrderSummary taxableSubtotalDiscount(Currency taxableSubtotalDiscount) {
    this.taxableSubtotalDiscount = taxableSubtotalDiscount;
    return this;
  }

   /**
   * Get taxableSubtotalDiscount
   * @return taxableSubtotalDiscount
  **/
  @ApiModelProperty(value = "")
  public Currency getTaxableSubtotalDiscount() {
    return taxableSubtotalDiscount;
  }

  public void setTaxableSubtotalDiscount(Currency taxableSubtotalDiscount) {
    this.taxableSubtotalDiscount = taxableSubtotalDiscount;
  }

  public OrderSummary total(Currency total) {
    this.total = total;
    return this;
  }

   /**
   * Get total
   * @return total
  **/
  @ApiModelProperty(value = "")
  public Currency getTotal() {
    return total;
  }

  public void setTotal(Currency total) {
    this.total = total;
  }

  public OrderSummary totalRefunded(Currency totalRefunded) {
    this.totalRefunded = totalRefunded;
    return this;
  }

   /**
   * Get totalRefunded
   * @return totalRefunded
  **/
  @ApiModelProperty(value = "")
  public Currency getTotalRefunded() {
    return totalRefunded;
  }

  public void setTotalRefunded(Currency totalRefunded) {
    this.totalRefunded = totalRefunded;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderSummary orderSummary = (OrderSummary) o;
    return Objects.equals(this.actualFulfillment, orderSummary.actualFulfillment) &&
        Objects.equals(this.actualPaymentProcessing, orderSummary.actualPaymentProcessing) &&
        Objects.equals(this.actualShipping, orderSummary.actualShipping) &&
        Objects.equals(this.arbitraryShippingHandlingTotal, orderSummary.arbitraryShippingHandlingTotal) &&
        Objects.equals(this.internalGiftCertificateAmount, orderSummary.internalGiftCertificateAmount) &&
        Objects.equals(this.internalGiftCertificateRefunded, orderSummary.internalGiftCertificateRefunded) &&
        Objects.equals(this.otherRefunded, orderSummary.otherRefunded) &&
        Objects.equals(this.shippingHandlingRefunded, orderSummary.shippingHandlingRefunded) &&
        Objects.equals(this.shippingHandlingTotal, orderSummary.shippingHandlingTotal) &&
        Objects.equals(this.shippingHandlingTotalDiscount, orderSummary.shippingHandlingTotalDiscount) &&
        Objects.equals(this.subtotal, orderSummary.subtotal) &&
        Objects.equals(this.subtotalDiscount, orderSummary.subtotalDiscount) &&
        Objects.equals(this.subtotalDiscountRefunded, orderSummary.subtotalDiscountRefunded) &&
        Objects.equals(this.subtotalRefunded, orderSummary.subtotalRefunded) &&
        Objects.equals(this.tax, orderSummary.tax) &&
        Objects.equals(this.taxRefunded, orderSummary.taxRefunded) &&
        Objects.equals(this.taxableSubtotal, orderSummary.taxableSubtotal) &&
        Objects.equals(this.taxableSubtotalDiscount, orderSummary.taxableSubtotalDiscount) &&
        Objects.equals(this.total, orderSummary.total) &&
        Objects.equals(this.totalRefunded, orderSummary.totalRefunded);
  }

  @Override
  public int hashCode() {
    return Objects.hash(actualFulfillment, actualPaymentProcessing, actualShipping, arbitraryShippingHandlingTotal, internalGiftCertificateAmount, internalGiftCertificateRefunded, otherRefunded, shippingHandlingRefunded, shippingHandlingTotal, shippingHandlingTotalDiscount, subtotal, subtotalDiscount, subtotalDiscountRefunded, subtotalRefunded, tax, taxRefunded, taxableSubtotal, taxableSubtotalDiscount, total, totalRefunded);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderSummary {\n");
    
    sb.append("    actualFulfillment: ").append(toIndentedString(actualFulfillment)).append("\n");
    sb.append("    actualPaymentProcessing: ").append(toIndentedString(actualPaymentProcessing)).append("\n");
    sb.append("    actualShipping: ").append(toIndentedString(actualShipping)).append("\n");
    sb.append("    arbitraryShippingHandlingTotal: ").append(toIndentedString(arbitraryShippingHandlingTotal)).append("\n");
    sb.append("    internalGiftCertificateAmount: ").append(toIndentedString(internalGiftCertificateAmount)).append("\n");
    sb.append("    internalGiftCertificateRefunded: ").append(toIndentedString(internalGiftCertificateRefunded)).append("\n");
    sb.append("    otherRefunded: ").append(toIndentedString(otherRefunded)).append("\n");
    sb.append("    shippingHandlingRefunded: ").append(toIndentedString(shippingHandlingRefunded)).append("\n");
    sb.append("    shippingHandlingTotal: ").append(toIndentedString(shippingHandlingTotal)).append("\n");
    sb.append("    shippingHandlingTotalDiscount: ").append(toIndentedString(shippingHandlingTotalDiscount)).append("\n");
    sb.append("    subtotal: ").append(toIndentedString(subtotal)).append("\n");
    sb.append("    subtotalDiscount: ").append(toIndentedString(subtotalDiscount)).append("\n");
    sb.append("    subtotalDiscountRefunded: ").append(toIndentedString(subtotalDiscountRefunded)).append("\n");
    sb.append("    subtotalRefunded: ").append(toIndentedString(subtotalRefunded)).append("\n");
    sb.append("    tax: ").append(toIndentedString(tax)).append("\n");
    sb.append("    taxRefunded: ").append(toIndentedString(taxRefunded)).append("\n");
    sb.append("    taxableSubtotal: ").append(toIndentedString(taxableSubtotal)).append("\n");
    sb.append("    taxableSubtotalDiscount: ").append(toIndentedString(taxableSubtotalDiscount)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("    totalRefunded: ").append(toIndentedString(totalRefunded)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

