/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * OrderFraudScore
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-01-10T12:05:11.750-05:00[America/Indianapolis]")
public class OrderFraudScore {
  public static final String SERIALIZED_NAME_ANONYMOUS_PROXY = "anonymous_proxy";
  @SerializedName(SERIALIZED_NAME_ANONYMOUS_PROXY)
  private Boolean anonymousProxy;

  /**
   * Whether the BIN (first six digits) matched the country
   */
  @JsonAdapter(BinMatchEnum.Adapter.class)
  public enum BinMatchEnum {
    NA("NA"),
    
    NO("No"),
    
    NOTFOUND("NotFound"),
    
    YES("Yes");

    private String value;

    BinMatchEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static BinMatchEnum fromValue(String value) {
      for (BinMatchEnum b : BinMatchEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<BinMatchEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final BinMatchEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public BinMatchEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return BinMatchEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_BIN_MATCH = "bin_match";
  @SerializedName(SERIALIZED_NAME_BIN_MATCH)
  private BinMatchEnum binMatch;

  public static final String SERIALIZED_NAME_CARDER_EMAIL = "carder_email";
  @SerializedName(SERIALIZED_NAME_CARDER_EMAIL)
  private Boolean carderEmail;

  public static final String SERIALIZED_NAME_COUNTRY_CODE = "country_code";
  @SerializedName(SERIALIZED_NAME_COUNTRY_CODE)
  private String countryCode;

  public static final String SERIALIZED_NAME_COUNTRY_MATCH = "country_match";
  @SerializedName(SERIALIZED_NAME_COUNTRY_MATCH)
  private Boolean countryMatch;

  public static final String SERIALIZED_NAME_CUSTOMER_PHONE_IN_BILLING_LOCATION = "customer_phone_in_billing_location";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_PHONE_IN_BILLING_LOCATION)
  private String customerPhoneInBillingLocation;

  public static final String SERIALIZED_NAME_DISTANCE_KM = "distance_km";
  @SerializedName(SERIALIZED_NAME_DISTANCE_KM)
  private Integer distanceKm;

  public static final String SERIALIZED_NAME_FREE_EMAIL = "free_email";
  @SerializedName(SERIALIZED_NAME_FREE_EMAIL)
  private Boolean freeEmail;

  public static final String SERIALIZED_NAME_HIGH_RISK_COUNTRY = "high_risk_country";
  @SerializedName(SERIALIZED_NAME_HIGH_RISK_COUNTRY)
  private Boolean highRiskCountry;

  public static final String SERIALIZED_NAME_IP_CITY = "ip_city";
  @SerializedName(SERIALIZED_NAME_IP_CITY)
  private String ipCity;

  public static final String SERIALIZED_NAME_IP_ISP = "ip_isp";
  @SerializedName(SERIALIZED_NAME_IP_ISP)
  private String ipIsp;

  public static final String SERIALIZED_NAME_IP_LATITUDE = "ip_latitude";
  @SerializedName(SERIALIZED_NAME_IP_LATITUDE)
  private String ipLatitude;

  public static final String SERIALIZED_NAME_IP_LONGITUDE = "ip_longitude";
  @SerializedName(SERIALIZED_NAME_IP_LONGITUDE)
  private String ipLongitude;

  public static final String SERIALIZED_NAME_IP_ORG = "ip_org";
  @SerializedName(SERIALIZED_NAME_IP_ORG)
  private String ipOrg;

  public static final String SERIALIZED_NAME_IP_REGION = "ip_region";
  @SerializedName(SERIALIZED_NAME_IP_REGION)
  private String ipRegion;

  public static final String SERIALIZED_NAME_PROXY_SCORE = "proxy_score";
  @SerializedName(SERIALIZED_NAME_PROXY_SCORE)
  private BigDecimal proxyScore;

  public static final String SERIALIZED_NAME_SCORE = "score";
  @SerializedName(SERIALIZED_NAME_SCORE)
  private BigDecimal score;

  public static final String SERIALIZED_NAME_SHIP_FORWARDER = "ship_forwarder";
  @SerializedName(SERIALIZED_NAME_SHIP_FORWARDER)
  private Boolean shipForwarder;

  public static final String SERIALIZED_NAME_SPAM_SCORE = "spam_score";
  @SerializedName(SERIALIZED_NAME_SPAM_SCORE)
  private BigDecimal spamScore;

  public static final String SERIALIZED_NAME_TRANSPARENT_PROXY = "transparent_proxy";
  @SerializedName(SERIALIZED_NAME_TRANSPARENT_PROXY)
  private Boolean transparentProxy;

  public OrderFraudScore() { 
  }

  public OrderFraudScore anonymousProxy(Boolean anonymousProxy) {
    
    this.anonymousProxy = anonymousProxy;
    return this;
  }

   /**
   * True if the IP address is a known anonymous proxy server
   * @return anonymousProxy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if the IP address is a known anonymous proxy server")

  public Boolean getAnonymousProxy() {
    return anonymousProxy;
  }


  public void setAnonymousProxy(Boolean anonymousProxy) {
    this.anonymousProxy = anonymousProxy;
  }


  public OrderFraudScore binMatch(BinMatchEnum binMatch) {
    
    this.binMatch = binMatch;
    return this;
  }

   /**
   * Whether the BIN (first six digits) matched the country
   * @return binMatch
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether the BIN (first six digits) matched the country")

  public BinMatchEnum getBinMatch() {
    return binMatch;
  }


  public void setBinMatch(BinMatchEnum binMatch) {
    this.binMatch = binMatch;
  }


  public OrderFraudScore carderEmail(Boolean carderEmail) {
    
    this.carderEmail = carderEmail;
    return this;
  }

   /**
   * True if the email address belongs to a known credit card fraudster
   * @return carderEmail
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if the email address belongs to a known credit card fraudster")

  public Boolean getCarderEmail() {
    return carderEmail;
  }


  public void setCarderEmail(Boolean carderEmail) {
    this.carderEmail = carderEmail;
  }


  public OrderFraudScore countryCode(String countryCode) {
    
    this.countryCode = countryCode;
    return this;
  }

   /**
   * Country code
   * @return countryCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Country code")

  public String getCountryCode() {
    return countryCode;
  }


  public void setCountryCode(String countryCode) {
    this.countryCode = countryCode;
  }


  public OrderFraudScore countryMatch(Boolean countryMatch) {
    
    this.countryMatch = countryMatch;
    return this;
  }

   /**
   * Country code matches BIN country
   * @return countryMatch
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Country code matches BIN country")

  public Boolean getCountryMatch() {
    return countryMatch;
  }


  public void setCountryMatch(Boolean countryMatch) {
    this.countryMatch = countryMatch;
  }


  public OrderFraudScore customerPhoneInBillingLocation(String customerPhoneInBillingLocation) {
    
    this.customerPhoneInBillingLocation = customerPhoneInBillingLocation;
    return this;
  }

   /**
   * Whether the customer&#39;s phone number is located in the area of the billing address
   * @return customerPhoneInBillingLocation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether the customer's phone number is located in the area of the billing address")

  public String getCustomerPhoneInBillingLocation() {
    return customerPhoneInBillingLocation;
  }


  public void setCustomerPhoneInBillingLocation(String customerPhoneInBillingLocation) {
    this.customerPhoneInBillingLocation = customerPhoneInBillingLocation;
  }


  public OrderFraudScore distanceKm(Integer distanceKm) {
    
    this.distanceKm = distanceKm;
    return this;
  }

   /**
   * Distance in kilometers between the IP address and the BIN
   * @return distanceKm
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Distance in kilometers between the IP address and the BIN")

  public Integer getDistanceKm() {
    return distanceKm;
  }


  public void setDistanceKm(Integer distanceKm) {
    this.distanceKm = distanceKm;
  }


  public OrderFraudScore freeEmail(Boolean freeEmail) {
    
    this.freeEmail = freeEmail;
    return this;
  }

   /**
   * True if the email address is for a free service like gmail.com
   * @return freeEmail
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if the email address is for a free service like gmail.com")

  public Boolean getFreeEmail() {
    return freeEmail;
  }


  public void setFreeEmail(Boolean freeEmail) {
    this.freeEmail = freeEmail;
  }


  public OrderFraudScore highRiskCountry(Boolean highRiskCountry) {
    
    this.highRiskCountry = highRiskCountry;
    return this;
  }

   /**
   * True if the customer is in a high risk country known for internet fraud
   * @return highRiskCountry
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if the customer is in a high risk country known for internet fraud")

  public Boolean getHighRiskCountry() {
    return highRiskCountry;
  }


  public void setHighRiskCountry(Boolean highRiskCountry) {
    this.highRiskCountry = highRiskCountry;
  }


  public OrderFraudScore ipCity(String ipCity) {
    
    this.ipCity = ipCity;
    return this;
  }

   /**
   * City associated with the IP address
   * @return ipCity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "City associated with the IP address")

  public String getIpCity() {
    return ipCity;
  }


  public void setIpCity(String ipCity) {
    this.ipCity = ipCity;
  }


  public OrderFraudScore ipIsp(String ipIsp) {
    
    this.ipIsp = ipIsp;
    return this;
  }

   /**
   * ISP that owns the IP address
   * @return ipIsp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ISP that owns the IP address")

  public String getIpIsp() {
    return ipIsp;
  }


  public void setIpIsp(String ipIsp) {
    this.ipIsp = ipIsp;
  }


  public OrderFraudScore ipLatitude(String ipLatitude) {
    
    this.ipLatitude = ipLatitude;
    return this;
  }

   /**
   * Approximate latitude associated with the IP address
   * @return ipLatitude
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Approximate latitude associated with the IP address")

  public String getIpLatitude() {
    return ipLatitude;
  }


  public void setIpLatitude(String ipLatitude) {
    this.ipLatitude = ipLatitude;
  }


  public OrderFraudScore ipLongitude(String ipLongitude) {
    
    this.ipLongitude = ipLongitude;
    return this;
  }

   /**
   * Approximate longitude associated with the IP address
   * @return ipLongitude
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Approximate longitude associated with the IP address")

  public String getIpLongitude() {
    return ipLongitude;
  }


  public void setIpLongitude(String ipLongitude) {
    this.ipLongitude = ipLongitude;
  }


  public OrderFraudScore ipOrg(String ipOrg) {
    
    this.ipOrg = ipOrg;
    return this;
  }

   /**
   * Organization that owns the IP address
   * @return ipOrg
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Organization that owns the IP address")

  public String getIpOrg() {
    return ipOrg;
  }


  public void setIpOrg(String ipOrg) {
    this.ipOrg = ipOrg;
  }


  public OrderFraudScore ipRegion(String ipRegion) {
    
    this.ipRegion = ipRegion;
    return this;
  }

   /**
   * State/region associated with the IP address
   * @return ipRegion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "State/region associated with the IP address")

  public String getIpRegion() {
    return ipRegion;
  }


  public void setIpRegion(String ipRegion) {
    this.ipRegion = ipRegion;
  }


  public OrderFraudScore proxyScore(BigDecimal proxyScore) {
    
    this.proxyScore = proxyScore;
    return this;
  }

   /**
   * Likelihood of the IP address being a proxy server
   * @return proxyScore
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Likelihood of the IP address being a proxy server")

  public BigDecimal getProxyScore() {
    return proxyScore;
  }


  public void setProxyScore(BigDecimal proxyScore) {
    this.proxyScore = proxyScore;
  }


  public OrderFraudScore score(BigDecimal score) {
    
    this.score = score;
    return this;
  }

   /**
   * Overall score.  This is the score that is compared to see if the order is rejected or held for review by the fraud filter rules.
   * @return score
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Overall score.  This is the score that is compared to see if the order is rejected or held for review by the fraud filter rules.")

  public BigDecimal getScore() {
    return score;
  }


  public void setScore(BigDecimal score) {
    this.score = score;
  }


  public OrderFraudScore shipForwarder(Boolean shipForwarder) {
    
    this.shipForwarder = shipForwarder;
    return this;
  }

   /**
   * True if the address is a known ship forwarding company
   * @return shipForwarder
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if the address is a known ship forwarding company")

  public Boolean getShipForwarder() {
    return shipForwarder;
  }


  public void setShipForwarder(Boolean shipForwarder) {
    this.shipForwarder = shipForwarder;
  }


  public OrderFraudScore spamScore(BigDecimal spamScore) {
    
    this.spamScore = spamScore;
    return this;
  }

   /**
   * Likelihood of the email address being associated with a spammer
   * @return spamScore
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Likelihood of the email address being associated with a spammer")

  public BigDecimal getSpamScore() {
    return spamScore;
  }


  public void setSpamScore(BigDecimal spamScore) {
    this.spamScore = spamScore;
  }


  public OrderFraudScore transparentProxy(Boolean transparentProxy) {
    
    this.transparentProxy = transparentProxy;
    return this;
  }

   /**
   * True if the IP address that placed the order is a transparent proxy server
   * @return transparentProxy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if the IP address that placed the order is a transparent proxy server")

  public Boolean getTransparentProxy() {
    return transparentProxy;
  }


  public void setTransparentProxy(Boolean transparentProxy) {
    this.transparentProxy = transparentProxy;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderFraudScore orderFraudScore = (OrderFraudScore) o;
    return Objects.equals(this.anonymousProxy, orderFraudScore.anonymousProxy) &&
        Objects.equals(this.binMatch, orderFraudScore.binMatch) &&
        Objects.equals(this.carderEmail, orderFraudScore.carderEmail) &&
        Objects.equals(this.countryCode, orderFraudScore.countryCode) &&
        Objects.equals(this.countryMatch, orderFraudScore.countryMatch) &&
        Objects.equals(this.customerPhoneInBillingLocation, orderFraudScore.customerPhoneInBillingLocation) &&
        Objects.equals(this.distanceKm, orderFraudScore.distanceKm) &&
        Objects.equals(this.freeEmail, orderFraudScore.freeEmail) &&
        Objects.equals(this.highRiskCountry, orderFraudScore.highRiskCountry) &&
        Objects.equals(this.ipCity, orderFraudScore.ipCity) &&
        Objects.equals(this.ipIsp, orderFraudScore.ipIsp) &&
        Objects.equals(this.ipLatitude, orderFraudScore.ipLatitude) &&
        Objects.equals(this.ipLongitude, orderFraudScore.ipLongitude) &&
        Objects.equals(this.ipOrg, orderFraudScore.ipOrg) &&
        Objects.equals(this.ipRegion, orderFraudScore.ipRegion) &&
        Objects.equals(this.proxyScore, orderFraudScore.proxyScore) &&
        Objects.equals(this.score, orderFraudScore.score) &&
        Objects.equals(this.shipForwarder, orderFraudScore.shipForwarder) &&
        Objects.equals(this.spamScore, orderFraudScore.spamScore) &&
        Objects.equals(this.transparentProxy, orderFraudScore.transparentProxy);
  }

  @Override
  public int hashCode() {
    return Objects.hash(anonymousProxy, binMatch, carderEmail, countryCode, countryMatch, customerPhoneInBillingLocation, distanceKm, freeEmail, highRiskCountry, ipCity, ipIsp, ipLatitude, ipLongitude, ipOrg, ipRegion, proxyScore, score, shipForwarder, spamScore, transparentProxy);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderFraudScore {\n");
    sb.append("    anonymousProxy: ").append(toIndentedString(anonymousProxy)).append("\n");
    sb.append("    binMatch: ").append(toIndentedString(binMatch)).append("\n");
    sb.append("    carderEmail: ").append(toIndentedString(carderEmail)).append("\n");
    sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
    sb.append("    countryMatch: ").append(toIndentedString(countryMatch)).append("\n");
    sb.append("    customerPhoneInBillingLocation: ").append(toIndentedString(customerPhoneInBillingLocation)).append("\n");
    sb.append("    distanceKm: ").append(toIndentedString(distanceKm)).append("\n");
    sb.append("    freeEmail: ").append(toIndentedString(freeEmail)).append("\n");
    sb.append("    highRiskCountry: ").append(toIndentedString(highRiskCountry)).append("\n");
    sb.append("    ipCity: ").append(toIndentedString(ipCity)).append("\n");
    sb.append("    ipIsp: ").append(toIndentedString(ipIsp)).append("\n");
    sb.append("    ipLatitude: ").append(toIndentedString(ipLatitude)).append("\n");
    sb.append("    ipLongitude: ").append(toIndentedString(ipLongitude)).append("\n");
    sb.append("    ipOrg: ").append(toIndentedString(ipOrg)).append("\n");
    sb.append("    ipRegion: ").append(toIndentedString(ipRegion)).append("\n");
    sb.append("    proxyScore: ").append(toIndentedString(proxyScore)).append("\n");
    sb.append("    score: ").append(toIndentedString(score)).append("\n");
    sb.append("    shipForwarder: ").append(toIndentedString(shipForwarder)).append("\n");
    sb.append("    spamScore: ").append(toIndentedString(spamScore)).append("\n");
    sb.append("    transparentProxy: ").append(toIndentedString(transparentProxy)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("anonymous_proxy");
    openapiFields.add("bin_match");
    openapiFields.add("carder_email");
    openapiFields.add("country_code");
    openapiFields.add("country_match");
    openapiFields.add("customer_phone_in_billing_location");
    openapiFields.add("distance_km");
    openapiFields.add("free_email");
    openapiFields.add("high_risk_country");
    openapiFields.add("ip_city");
    openapiFields.add("ip_isp");
    openapiFields.add("ip_latitude");
    openapiFields.add("ip_longitude");
    openapiFields.add("ip_org");
    openapiFields.add("ip_region");
    openapiFields.add("proxy_score");
    openapiFields.add("score");
    openapiFields.add("ship_forwarder");
    openapiFields.add("spam_score");
    openapiFields.add("transparent_proxy");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to OrderFraudScore
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (OrderFraudScore.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in OrderFraudScore is not found in the empty JSON string", OrderFraudScore.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!OrderFraudScore.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OrderFraudScore` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("bin_match") != null && !jsonObj.get("bin_match").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bin_match` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bin_match").toString()));
      }
      if (jsonObj.get("country_code") != null && !jsonObj.get("country_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `country_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("country_code").toString()));
      }
      if (jsonObj.get("customer_phone_in_billing_location") != null && !jsonObj.get("customer_phone_in_billing_location").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customer_phone_in_billing_location` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customer_phone_in_billing_location").toString()));
      }
      if (jsonObj.get("ip_city") != null && !jsonObj.get("ip_city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ip_city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ip_city").toString()));
      }
      if (jsonObj.get("ip_isp") != null && !jsonObj.get("ip_isp").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ip_isp` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ip_isp").toString()));
      }
      if (jsonObj.get("ip_latitude") != null && !jsonObj.get("ip_latitude").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ip_latitude` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ip_latitude").toString()));
      }
      if (jsonObj.get("ip_longitude") != null && !jsonObj.get("ip_longitude").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ip_longitude` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ip_longitude").toString()));
      }
      if (jsonObj.get("ip_org") != null && !jsonObj.get("ip_org").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ip_org` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ip_org").toString()));
      }
      if (jsonObj.get("ip_region") != null && !jsonObj.get("ip_region").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ip_region` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ip_region").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OrderFraudScore.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OrderFraudScore' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OrderFraudScore> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OrderFraudScore.class));

       return (TypeAdapter<T>) new TypeAdapter<OrderFraudScore>() {
           @Override
           public void write(JsonWriter out, OrderFraudScore value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OrderFraudScore read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of OrderFraudScore given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of OrderFraudScore
  * @throws IOException if the JSON string is invalid with respect to OrderFraudScore
  */
  public static OrderFraudScore fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OrderFraudScore.class);
  }

 /**
  * Convert an instance of OrderFraudScore to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

