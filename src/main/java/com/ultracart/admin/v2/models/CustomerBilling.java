/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * CustomerBilling
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-04T10:02:29.437-04:00[America/Indianapolis]")
public class CustomerBilling {
  public static final String SERIALIZED_NAME_ADDRESS1 = "address1";
  @SerializedName(SERIALIZED_NAME_ADDRESS1)
  private String address1;

  public static final String SERIALIZED_NAME_ADDRESS2 = "address2";
  @SerializedName(SERIALIZED_NAME_ADDRESS2)
  private String address2;

  public static final String SERIALIZED_NAME_CITY = "city";
  @SerializedName(SERIALIZED_NAME_CITY)
  private String city;

  public static final String SERIALIZED_NAME_COMPANY = "company";
  @SerializedName(SERIALIZED_NAME_COMPANY)
  private String company;

  public static final String SERIALIZED_NAME_COUNTRY_CODE = "country_code";
  @SerializedName(SERIALIZED_NAME_COUNTRY_CODE)
  private String countryCode;

  public static final String SERIALIZED_NAME_CUSTOMER_BILLING_OID = "customer_billing_oid";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_BILLING_OID)
  private Integer customerBillingOid;

  public static final String SERIALIZED_NAME_CUSTOMER_PROFILE_OID = "customer_profile_oid";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_PROFILE_OID)
  private Integer customerProfileOid;

  public static final String SERIALIZED_NAME_DAY_PHONE = "day_phone";
  @SerializedName(SERIALIZED_NAME_DAY_PHONE)
  private String dayPhone;

  public static final String SERIALIZED_NAME_DEFAULT_BILLING = "default_billing";
  @SerializedName(SERIALIZED_NAME_DEFAULT_BILLING)
  private Boolean defaultBilling;

  public static final String SERIALIZED_NAME_EVENING_PHONE = "evening_phone";
  @SerializedName(SERIALIZED_NAME_EVENING_PHONE)
  private String eveningPhone;

  public static final String SERIALIZED_NAME_FIRST_NAME = "first_name";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  private String firstName;

  public static final String SERIALIZED_NAME_LAST_NAME = "last_name";
  @SerializedName(SERIALIZED_NAME_LAST_NAME)
  private String lastName;

  public static final String SERIALIZED_NAME_LAST_USED_DTS = "last_used_dts";
  @SerializedName(SERIALIZED_NAME_LAST_USED_DTS)
  private String lastUsedDts;

  public static final String SERIALIZED_NAME_POSTAL_CODE = "postal_code";
  @SerializedName(SERIALIZED_NAME_POSTAL_CODE)
  private String postalCode;

  public static final String SERIALIZED_NAME_STATE_REGION = "state_region";
  @SerializedName(SERIALIZED_NAME_STATE_REGION)
  private String stateRegion;

  public static final String SERIALIZED_NAME_TAX_COUNTY = "tax_county";
  @SerializedName(SERIALIZED_NAME_TAX_COUNTY)
  private String taxCounty;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public CustomerBilling() { 
  }

  public CustomerBilling address1(String address1) {
    
    this.address1 = address1;
    return this;
  }

   /**
   * Address line 1
   * @return address1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Address line 1")

  public String getAddress1() {
    return address1;
  }


  public void setAddress1(String address1) {
    this.address1 = address1;
  }


  public CustomerBilling address2(String address2) {
    
    this.address2 = address2;
    return this;
  }

   /**
   * Address line 2
   * @return address2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Address line 2")

  public String getAddress2() {
    return address2;
  }


  public void setAddress2(String address2) {
    this.address2 = address2;
  }


  public CustomerBilling city(String city) {
    
    this.city = city;
    return this;
  }

   /**
   * City
   * @return city
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "City")

  public String getCity() {
    return city;
  }


  public void setCity(String city) {
    this.city = city;
  }


  public CustomerBilling company(String company) {
    
    this.company = company;
    return this;
  }

   /**
   * Company
   * @return company
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Company")

  public String getCompany() {
    return company;
  }


  public void setCompany(String company) {
    this.company = company;
  }


  public CustomerBilling countryCode(String countryCode) {
    
    this.countryCode = countryCode;
    return this;
  }

   /**
   * ISO-3166 two letter country code
   * @return countryCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ISO-3166 two letter country code")

  public String getCountryCode() {
    return countryCode;
  }


  public void setCountryCode(String countryCode) {
    this.countryCode = countryCode;
  }


  public CustomerBilling customerBillingOid(Integer customerBillingOid) {
    
    this.customerBillingOid = customerBillingOid;
    return this;
  }

   /**
   * Customer profile billing object identifier
   * @return customerBillingOid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Customer profile billing object identifier")

  public Integer getCustomerBillingOid() {
    return customerBillingOid;
  }


  public void setCustomerBillingOid(Integer customerBillingOid) {
    this.customerBillingOid = customerBillingOid;
  }


  public CustomerBilling customerProfileOid(Integer customerProfileOid) {
    
    this.customerProfileOid = customerProfileOid;
    return this;
  }

   /**
   * Customer profile object identifier
   * @return customerProfileOid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Customer profile object identifier")

  public Integer getCustomerProfileOid() {
    return customerProfileOid;
  }


  public void setCustomerProfileOid(Integer customerProfileOid) {
    this.customerProfileOid = customerProfileOid;
  }


  public CustomerBilling dayPhone(String dayPhone) {
    
    this.dayPhone = dayPhone;
    return this;
  }

   /**
   * Day phone
   * @return dayPhone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Day phone")

  public String getDayPhone() {
    return dayPhone;
  }


  public void setDayPhone(String dayPhone) {
    this.dayPhone = dayPhone;
  }


  public CustomerBilling defaultBilling(Boolean defaultBilling) {
    
    this.defaultBilling = defaultBilling;
    return this;
  }

   /**
   * Default billing
   * @return defaultBilling
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Default billing")

  public Boolean getDefaultBilling() {
    return defaultBilling;
  }


  public void setDefaultBilling(Boolean defaultBilling) {
    this.defaultBilling = defaultBilling;
  }


  public CustomerBilling eveningPhone(String eveningPhone) {
    
    this.eveningPhone = eveningPhone;
    return this;
  }

   /**
   * Evening phone
   * @return eveningPhone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Evening phone")

  public String getEveningPhone() {
    return eveningPhone;
  }


  public void setEveningPhone(String eveningPhone) {
    this.eveningPhone = eveningPhone;
  }


  public CustomerBilling firstName(String firstName) {
    
    this.firstName = firstName;
    return this;
  }

   /**
   * First name
   * @return firstName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "First name")

  public String getFirstName() {
    return firstName;
  }


  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }


  public CustomerBilling lastName(String lastName) {
    
    this.lastName = lastName;
    return this;
  }

   /**
   * Last name
   * @return lastName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Last name")

  public String getLastName() {
    return lastName;
  }


  public void setLastName(String lastName) {
    this.lastName = lastName;
  }


  public CustomerBilling lastUsedDts(String lastUsedDts) {
    
    this.lastUsedDts = lastUsedDts;
    return this;
  }

   /**
   * Last used date
   * @return lastUsedDts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Last used date")

  public String getLastUsedDts() {
    return lastUsedDts;
  }


  public void setLastUsedDts(String lastUsedDts) {
    this.lastUsedDts = lastUsedDts;
  }


  public CustomerBilling postalCode(String postalCode) {
    
    this.postalCode = postalCode;
    return this;
  }

   /**
   * Postal code
   * @return postalCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Postal code")

  public String getPostalCode() {
    return postalCode;
  }


  public void setPostalCode(String postalCode) {
    this.postalCode = postalCode;
  }


  public CustomerBilling stateRegion(String stateRegion) {
    
    this.stateRegion = stateRegion;
    return this;
  }

   /**
   * State for United States otherwise region or province for other countries
   * @return stateRegion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "State for United States otherwise region or province for other countries")

  public String getStateRegion() {
    return stateRegion;
  }


  public void setStateRegion(String stateRegion) {
    this.stateRegion = stateRegion;
  }


  public CustomerBilling taxCounty(String taxCounty) {
    
    this.taxCounty = taxCounty;
    return this;
  }

   /**
   * Tax County
   * @return taxCounty
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Tax County")

  public String getTaxCounty() {
    return taxCounty;
  }


  public void setTaxCounty(String taxCounty) {
    this.taxCounty = taxCounty;
  }


  public CustomerBilling title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * Title
   * @return title
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Title")

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    this.title = title;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomerBilling customerBilling = (CustomerBilling) o;
    return Objects.equals(this.address1, customerBilling.address1) &&
        Objects.equals(this.address2, customerBilling.address2) &&
        Objects.equals(this.city, customerBilling.city) &&
        Objects.equals(this.company, customerBilling.company) &&
        Objects.equals(this.countryCode, customerBilling.countryCode) &&
        Objects.equals(this.customerBillingOid, customerBilling.customerBillingOid) &&
        Objects.equals(this.customerProfileOid, customerBilling.customerProfileOid) &&
        Objects.equals(this.dayPhone, customerBilling.dayPhone) &&
        Objects.equals(this.defaultBilling, customerBilling.defaultBilling) &&
        Objects.equals(this.eveningPhone, customerBilling.eveningPhone) &&
        Objects.equals(this.firstName, customerBilling.firstName) &&
        Objects.equals(this.lastName, customerBilling.lastName) &&
        Objects.equals(this.lastUsedDts, customerBilling.lastUsedDts) &&
        Objects.equals(this.postalCode, customerBilling.postalCode) &&
        Objects.equals(this.stateRegion, customerBilling.stateRegion) &&
        Objects.equals(this.taxCounty, customerBilling.taxCounty) &&
        Objects.equals(this.title, customerBilling.title);
  }

  @Override
  public int hashCode() {
    return Objects.hash(address1, address2, city, company, countryCode, customerBillingOid, customerProfileOid, dayPhone, defaultBilling, eveningPhone, firstName, lastName, lastUsedDts, postalCode, stateRegion, taxCounty, title);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomerBilling {\n");
    sb.append("    address1: ").append(toIndentedString(address1)).append("\n");
    sb.append("    address2: ").append(toIndentedString(address2)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    company: ").append(toIndentedString(company)).append("\n");
    sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
    sb.append("    customerBillingOid: ").append(toIndentedString(customerBillingOid)).append("\n");
    sb.append("    customerProfileOid: ").append(toIndentedString(customerProfileOid)).append("\n");
    sb.append("    dayPhone: ").append(toIndentedString(dayPhone)).append("\n");
    sb.append("    defaultBilling: ").append(toIndentedString(defaultBilling)).append("\n");
    sb.append("    eveningPhone: ").append(toIndentedString(eveningPhone)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    lastUsedDts: ").append(toIndentedString(lastUsedDts)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("    stateRegion: ").append(toIndentedString(stateRegion)).append("\n");
    sb.append("    taxCounty: ").append(toIndentedString(taxCounty)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("address1");
    openapiFields.add("address2");
    openapiFields.add("city");
    openapiFields.add("company");
    openapiFields.add("country_code");
    openapiFields.add("customer_billing_oid");
    openapiFields.add("customer_profile_oid");
    openapiFields.add("day_phone");
    openapiFields.add("default_billing");
    openapiFields.add("evening_phone");
    openapiFields.add("first_name");
    openapiFields.add("last_name");
    openapiFields.add("last_used_dts");
    openapiFields.add("postal_code");
    openapiFields.add("state_region");
    openapiFields.add("tax_county");
    openapiFields.add("title");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CustomerBilling
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (CustomerBilling.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in CustomerBilling is not found in the empty JSON string", CustomerBilling.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!CustomerBilling.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CustomerBilling` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("address1") != null && !jsonObj.get("address1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `address1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("address1").toString()));
      }
      if (jsonObj.get("address2") != null && !jsonObj.get("address2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `address2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("address2").toString()));
      }
      if (jsonObj.get("city") != null && !jsonObj.get("city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("city").toString()));
      }
      if (jsonObj.get("company") != null && !jsonObj.get("company").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `company` to be a primitive type in the JSON string but got `%s`", jsonObj.get("company").toString()));
      }
      if (jsonObj.get("country_code") != null && !jsonObj.get("country_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `country_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("country_code").toString()));
      }
      if (jsonObj.get("day_phone") != null && !jsonObj.get("day_phone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `day_phone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("day_phone").toString()));
      }
      if (jsonObj.get("evening_phone") != null && !jsonObj.get("evening_phone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `evening_phone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("evening_phone").toString()));
      }
      if (jsonObj.get("first_name") != null && !jsonObj.get("first_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `first_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("first_name").toString()));
      }
      if (jsonObj.get("last_name") != null && !jsonObj.get("last_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_name").toString()));
      }
      if (jsonObj.get("last_used_dts") != null && !jsonObj.get("last_used_dts").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_used_dts` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_used_dts").toString()));
      }
      if (jsonObj.get("postal_code") != null && !jsonObj.get("postal_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `postal_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("postal_code").toString()));
      }
      if (jsonObj.get("state_region") != null && !jsonObj.get("state_region").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state_region` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state_region").toString()));
      }
      if (jsonObj.get("tax_county") != null && !jsonObj.get("tax_county").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tax_county` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tax_county").toString()));
      }
      if (jsonObj.get("title") != null && !jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CustomerBilling.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CustomerBilling' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CustomerBilling> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CustomerBilling.class));

       return (TypeAdapter<T>) new TypeAdapter<CustomerBilling>() {
           @Override
           public void write(JsonWriter out, CustomerBilling value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CustomerBilling read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CustomerBilling given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CustomerBilling
  * @throws IOException if the JSON string is invalid with respect to CustomerBilling
  */
  public static CustomerBilling fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CustomerBilling.class);
  }

 /**
  * Convert an instance of CustomerBilling to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

