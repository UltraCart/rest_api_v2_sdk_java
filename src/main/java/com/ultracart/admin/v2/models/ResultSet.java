/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * ResultSet
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2025-02-28T09:16:56.926-05:00")



public class ResultSet {
  @SerializedName("count")
  private Integer count = null;

  @SerializedName("limit")
  private Integer limit = null;

  @SerializedName("more")
  private Boolean more = null;

  @SerializedName("next_offset")
  private Integer nextOffset = null;

  @SerializedName("offset")
  private Integer offset = null;

  @SerializedName("total_records")
  private Integer totalRecords = null;

  public ResultSet count(Integer count) {
    this.count = count;
    return this;
  }

   /**
   * Number of results in this set
   * @return count
  **/
  @ApiModelProperty(value = "Number of results in this set")
  public Integer getCount() {
    return count;
  }

  public void setCount(Integer count) {
    this.count = count;
  }

  public ResultSet limit(Integer limit) {
    this.limit = limit;
    return this;
  }

   /**
   * Maximum number of results that can be returned in a set
   * @return limit
  **/
  @ApiModelProperty(value = "Maximum number of results that can be returned in a set")
  public Integer getLimit() {
    return limit;
  }

  public void setLimit(Integer limit) {
    this.limit = limit;
  }

  public ResultSet more(Boolean more) {
    this.more = more;
    return this;
  }

   /**
   * True if there are more results to query
   * @return more
  **/
  @ApiModelProperty(value = "True if there are more results to query")
  public Boolean isMore() {
    return more;
  }

  public void setMore(Boolean more) {
    this.more = more;
  }

  public ResultSet nextOffset(Integer nextOffset) {
    this.nextOffset = nextOffset;
    return this;
  }

   /**
   * The next offset that you should query to retrieve more results
   * @return nextOffset
  **/
  @ApiModelProperty(value = "The next offset that you should query to retrieve more results")
  public Integer getNextOffset() {
    return nextOffset;
  }

  public void setNextOffset(Integer nextOffset) {
    this.nextOffset = nextOffset;
  }

  public ResultSet offset(Integer offset) {
    this.offset = offset;
    return this;
  }

   /**
   * Offset of this result set (zero based)
   * @return offset
  **/
  @ApiModelProperty(value = "Offset of this result set (zero based)")
  public Integer getOffset() {
    return offset;
  }

  public void setOffset(Integer offset) {
    this.offset = offset;
  }

  public ResultSet totalRecords(Integer totalRecords) {
    this.totalRecords = totalRecords;
    return this;
  }

   /**
   * The total number of records in the result set.  May be null if the number is not known and the client should continue iterating as long as more is true.
   * @return totalRecords
  **/
  @ApiModelProperty(value = "The total number of records in the result set.  May be null if the number is not known and the client should continue iterating as long as more is true.")
  public Integer getTotalRecords() {
    return totalRecords;
  }

  public void setTotalRecords(Integer totalRecords) {
    this.totalRecords = totalRecords;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResultSet resultSet = (ResultSet) o;
    return Objects.equals(this.count, resultSet.count) &&
        Objects.equals(this.limit, resultSet.limit) &&
        Objects.equals(this.more, resultSet.more) &&
        Objects.equals(this.nextOffset, resultSet.nextOffset) &&
        Objects.equals(this.offset, resultSet.offset) &&
        Objects.equals(this.totalRecords, resultSet.totalRecords);
  }

  @Override
  public int hashCode() {
    return Objects.hash(count, limit, more, nextOffset, offset, totalRecords);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResultSet {\n");
    
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    more: ").append(toIndentedString(more)).append("\n");
    sb.append("    nextOffset: ").append(toIndentedString(nextOffset)).append("\n");
    sb.append("    offset: ").append(toIndentedString(offset)).append("\n");
    sb.append("    totalRecords: ").append(toIndentedString(totalRecords)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

