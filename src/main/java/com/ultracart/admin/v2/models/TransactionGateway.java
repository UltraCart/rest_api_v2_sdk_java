/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * TransactionGateway
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-11-29T09:52:39.024-05:00")



public class TransactionGateway {
  @SerializedName("arbitrary_html")
  private String arbitraryHtml = null;

  @SerializedName("comment")
  private String comment = null;

  @SerializedName("credit_card_capable")
  private Boolean creditCardCapable = null;

  @SerializedName("echeck_capable")
  private Boolean echeckCapable = null;

  @SerializedName("echeck_supported")
  private String echeckSupported = null;

  @SerializedName("enabled")
  private Boolean enabled = null;

  @SerializedName("gateway_cert_pem")
  private String gatewayCertPem = null;

  @SerializedName("gateway_cert_pem_label")
  private String gatewayCertPemLabel = null;

  @SerializedName("gateway_email")
  private String gatewayEmail = null;

  @SerializedName("gateway_email_label")
  private String gatewayEmailLabel = null;

  @SerializedName("gateway_environment")
  private String gatewayEnvironment = null;

  @SerializedName("gateway_environment_label")
  private String gatewayEnvironmentLabel = null;

  @SerializedName("gateway_environments")
  private List<String> gatewayEnvironments = null;

  @SerializedName("gateway_header_back_color")
  private String gatewayHeaderBackColor = null;

  @SerializedName("gateway_header_border_color")
  private String gatewayHeaderBorderColor = null;

  @SerializedName("gateway_header_image_url")
  private String gatewayHeaderImageUrl = null;

  @SerializedName("gateway_key")
  private String gatewayKey = null;

  @SerializedName("gateway_key_label")
  private String gatewayKeyLabel = null;

  @SerializedName("gateway_key_pem")
  private String gatewayKeyPem = null;

  @SerializedName("gateway_key_pem_label")
  private String gatewayKeyPemLabel = null;

  @SerializedName("gateway_landing_page")
  private String gatewayLandingPage = null;

  @SerializedName("gateway_merchant_id")
  private String gatewayMerchantId = null;

  @SerializedName("gateway_merchant_id_label")
  private String gatewayMerchantIdLabel = null;

  @SerializedName("gateway_mode")
  private String gatewayMode = null;

  @SerializedName("gateway_mode_label")
  private String gatewayModeLabel = null;

  @SerializedName("gateway_modes")
  private List<String> gatewayModes = null;

  @SerializedName("gateway_page_style")
  private String gatewayPageStyle = null;

  @SerializedName("gateway_page_style_label")
  private String gatewayPageStyleLabel = null;

  @SerializedName("gateway_page_styles")
  private List<String> gatewayPageStyles = null;

  @SerializedName("gateway_partner")
  private String gatewayPartner = null;

  @SerializedName("gateway_partner_label")
  private String gatewayPartnerLabel = null;

  @SerializedName("gateway_password")
  private String gatewayPassword = null;

  @SerializedName("gateway_password_label")
  private String gatewayPasswordLabel = null;

  @SerializedName("gateway_payflow_color")
  private String gatewayPayflowColor = null;

  @SerializedName("gateway_private_key_password")
  private String gatewayPrivateKeyPassword = null;

  @SerializedName("gateway_private_key_password_label")
  private String gatewayPrivateKeyPasswordLabel = null;

  @SerializedName("gateway_solution_type")
  private String gatewaySolutionType = null;

  @SerializedName("gateway_solution_type_label")
  private String gatewaySolutionTypeLabel = null;

  @SerializedName("gateway_solution_types")
  private List<String> gatewaySolutionTypes = null;

  @SerializedName("gateway_url")
  private String gatewayUrl = null;

  @SerializedName("gateway_url_label")
  private String gatewayUrlLabel = null;

  @SerializedName("gateway_username")
  private String gatewayUsername = null;

  @SerializedName("gateway_username_label")
  private String gatewayUsernameLabel = null;

  @SerializedName("merchant_account_profile_amex")
  private String merchantAccountProfileAmex = null;

  @SerializedName("merchant_account_profile_diners_club")
  private String merchantAccountProfileDinersClub = null;

  @SerializedName("merchant_account_profile_discover")
  private String merchantAccountProfileDiscover = null;

  @SerializedName("merchant_account_profile_jcb")
  private String merchantAccountProfileJcb = null;

  @SerializedName("merchant_account_profile_mastercard")
  private String merchantAccountProfileMastercard = null;

  @SerializedName("merchant_account_profile_visa")
  private String merchantAccountProfileVisa = null;

  @SerializedName("merchant_id")
  private String merchantId = null;

  @SerializedName("multi_currency_details")
  private Boolean multiCurrencyDetails = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("refund_supported")
  private Boolean refundSupported = null;

  @SerializedName("require_echeck_tax_id_or_drivers_license")
  private Boolean requireEcheckTaxIdOrDriversLicense = null;

  @SerializedName("support_vbv_3ds")
  private Boolean supportVbv3ds = null;

  @SerializedName("supports_amex")
  private Boolean supportsAmex = null;

  @SerializedName("supports_diners_club")
  private Boolean supportsDinersClub = null;

  @SerializedName("supports_discover")
  private Boolean supportsDiscover = null;

  @SerializedName("supports_echeck")
  private Boolean supportsEcheck = null;

  @SerializedName("supports_electronic_gift_card")
  private Boolean supportsElectronicGiftCard = null;

  @SerializedName("supports_jcb")
  private Boolean supportsJcb = null;

  @SerializedName("supports_mastercard")
  private Boolean supportsMastercard = null;

  @SerializedName("supports_visa")
  private Boolean supportsVisa = null;

  @SerializedName("third_party")
  private Boolean thirdParty = null;

  public TransactionGateway arbitraryHtml(String arbitraryHtml) {
    this.arbitraryHtml = arbitraryHtml;
    return this;
  }

   /**
   * Additional html to display for this transaction gateway.  This html will include instructions and connection links
   * @return arbitraryHtml
  **/
  @ApiModelProperty(value = "Additional html to display for this transaction gateway.  This html will include instructions and connection links")
  public String getArbitraryHtml() {
    return arbitraryHtml;
  }

  public void setArbitraryHtml(String arbitraryHtml) {
    this.arbitraryHtml = arbitraryHtml;
  }

  public TransactionGateway comment(String comment) {
    this.comment = comment;
    return this;
  }

   /**
   * Additional comments
   * @return comment
  **/
  @ApiModelProperty(value = "Additional comments")
  public String getComment() {
    return comment;
  }

  public void setComment(String comment) {
    this.comment = comment;
  }

  public TransactionGateway creditCardCapable(Boolean creditCardCapable) {
    this.creditCardCapable = creditCardCapable;
    return this;
  }

   /**
   * True if this gateway supports credit cards
   * @return creditCardCapable
  **/
  @ApiModelProperty(value = "True if this gateway supports credit cards")
  public Boolean isCreditCardCapable() {
    return creditCardCapable;
  }

  public void setCreditCardCapable(Boolean creditCardCapable) {
    this.creditCardCapable = creditCardCapable;
  }

  public TransactionGateway echeckCapable(Boolean echeckCapable) {
    this.echeckCapable = echeckCapable;
    return this;
  }

   /**
   * True if this gateway supports eChecks
   * @return echeckCapable
  **/
  @ApiModelProperty(value = "True if this gateway supports eChecks")
  public Boolean isEcheckCapable() {
    return echeckCapable;
  }

  public void setEcheckCapable(Boolean echeckCapable) {
    this.echeckCapable = echeckCapable;
  }

  public TransactionGateway echeckSupported(String echeckSupported) {
    this.echeckSupported = echeckSupported;
    return this;
  }

   /**
   * True if this gateway supports eChecks
   * @return echeckSupported
  **/
  @ApiModelProperty(value = "True if this gateway supports eChecks")
  public String getEcheckSupported() {
    return echeckSupported;
  }

  public void setEcheckSupported(String echeckSupported) {
    this.echeckSupported = echeckSupported;
  }

  public TransactionGateway enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * True if this transaction gateway is the currently active gateway.
   * @return enabled
  **/
  @ApiModelProperty(value = "True if this transaction gateway is the currently active gateway.")
  public Boolean isEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }

  public TransactionGateway gatewayCertPem(String gatewayCertPem) {
    this.gatewayCertPem = gatewayCertPem;
    return this;
  }

   /**
   * Cryptographic public certificate allowing UltraCart to communicate securely with this gateway.
   * @return gatewayCertPem
  **/
  @ApiModelProperty(value = "Cryptographic public certificate allowing UltraCart to communicate securely with this gateway.")
  public String getGatewayCertPem() {
    return gatewayCertPem;
  }

  public void setGatewayCertPem(String gatewayCertPem) {
    this.gatewayCertPem = gatewayCertPem;
  }

  public TransactionGateway gatewayCertPemLabel(String gatewayCertPemLabel) {
    this.gatewayCertPemLabel = gatewayCertPemLabel;
    return this;
  }

   /**
   * The label for the gateway certificate pem.   The actual value stored may vary by gateway, so the label will vary too.
   * @return gatewayCertPemLabel
  **/
  @ApiModelProperty(value = "The label for the gateway certificate pem.   The actual value stored may vary by gateway, so the label will vary too.")
  public String getGatewayCertPemLabel() {
    return gatewayCertPemLabel;
  }

  public void setGatewayCertPemLabel(String gatewayCertPemLabel) {
    this.gatewayCertPemLabel = gatewayCertPemLabel;
  }

  public TransactionGateway gatewayEmail(String gatewayEmail) {
    this.gatewayEmail = gatewayEmail;
    return this;
  }

   /**
   * Gateway Email
   * @return gatewayEmail
  **/
  @ApiModelProperty(value = "Gateway Email")
  public String getGatewayEmail() {
    return gatewayEmail;
  }

  public void setGatewayEmail(String gatewayEmail) {
    this.gatewayEmail = gatewayEmail;
  }

  public TransactionGateway gatewayEmailLabel(String gatewayEmailLabel) {
    this.gatewayEmailLabel = gatewayEmailLabel;
    return this;
  }

   /**
   * The label for the gateway email.   The actual value stored may vary by gateway, so the label will vary too.
   * @return gatewayEmailLabel
  **/
  @ApiModelProperty(value = "The label for the gateway email.   The actual value stored may vary by gateway, so the label will vary too.")
  public String getGatewayEmailLabel() {
    return gatewayEmailLabel;
  }

  public void setGatewayEmailLabel(String gatewayEmailLabel) {
    this.gatewayEmailLabel = gatewayEmailLabel;
  }

  public TransactionGateway gatewayEnvironment(String gatewayEnvironment) {
    this.gatewayEnvironment = gatewayEnvironment;
    return this;
  }

   /**
   * Gateway Environment to indicate sandbox versus production environments
   * @return gatewayEnvironment
  **/
  @ApiModelProperty(value = "Gateway Environment to indicate sandbox versus production environments")
  public String getGatewayEnvironment() {
    return gatewayEnvironment;
  }

  public void setGatewayEnvironment(String gatewayEnvironment) {
    this.gatewayEnvironment = gatewayEnvironment;
  }

  public TransactionGateway gatewayEnvironmentLabel(String gatewayEnvironmentLabel) {
    this.gatewayEnvironmentLabel = gatewayEnvironmentLabel;
    return this;
  }

   /**
   * The label for the gateway environment.  The actual value stored may vary by gateway, so the label will vary too.
   * @return gatewayEnvironmentLabel
  **/
  @ApiModelProperty(value = "The label for the gateway environment.  The actual value stored may vary by gateway, so the label will vary too.")
  public String getGatewayEnvironmentLabel() {
    return gatewayEnvironmentLabel;
  }

  public void setGatewayEnvironmentLabel(String gatewayEnvironmentLabel) {
    this.gatewayEnvironmentLabel = gatewayEnvironmentLabel;
  }

  public TransactionGateway gatewayEnvironments(List<String> gatewayEnvironments) {
    this.gatewayEnvironments = gatewayEnvironments;
    return this;
  }

  public TransactionGateway addGatewayEnvironmentsItem(String gatewayEnvironmentsItem) {
    if (this.gatewayEnvironments == null) {
      this.gatewayEnvironments = new ArrayList<String>();
    }
    this.gatewayEnvironments.add(gatewayEnvironmentsItem);
    return this;
  }

   /**
   * Used to populate drop down lists for the gateway environment.  Varies by gateway.
   * @return gatewayEnvironments
  **/
  @ApiModelProperty(value = "Used to populate drop down lists for the gateway environment.  Varies by gateway.")
  public List<String> getGatewayEnvironments() {
    return gatewayEnvironments;
  }

  public void setGatewayEnvironments(List<String> gatewayEnvironments) {
    this.gatewayEnvironments = gatewayEnvironments;
  }

  public TransactionGateway gatewayHeaderBackColor(String gatewayHeaderBackColor) {
    this.gatewayHeaderBackColor = gatewayHeaderBackColor;
    return this;
  }

   /**
   * Optional Look and feel setting for Verified-by-VISA.  Only needed if you are using 3DS
   * @return gatewayHeaderBackColor
  **/
  @ApiModelProperty(value = "Optional Look and feel setting for Verified-by-VISA.  Only needed if you are using 3DS")
  public String getGatewayHeaderBackColor() {
    return gatewayHeaderBackColor;
  }

  public void setGatewayHeaderBackColor(String gatewayHeaderBackColor) {
    this.gatewayHeaderBackColor = gatewayHeaderBackColor;
  }

  public TransactionGateway gatewayHeaderBorderColor(String gatewayHeaderBorderColor) {
    this.gatewayHeaderBorderColor = gatewayHeaderBorderColor;
    return this;
  }

   /**
   * Optional Look and feel setting for Verified-by-VISA.  Only needed if you are using 3DS
   * @return gatewayHeaderBorderColor
  **/
  @ApiModelProperty(value = "Optional Look and feel setting for Verified-by-VISA.  Only needed if you are using 3DS")
  public String getGatewayHeaderBorderColor() {
    return gatewayHeaderBorderColor;
  }

  public void setGatewayHeaderBorderColor(String gatewayHeaderBorderColor) {
    this.gatewayHeaderBorderColor = gatewayHeaderBorderColor;
  }

  public TransactionGateway gatewayHeaderImageUrl(String gatewayHeaderImageUrl) {
    this.gatewayHeaderImageUrl = gatewayHeaderImageUrl;
    return this;
  }

   /**
   * Optional Look and feel setting for Verified-by-VISA.  Only needed if you are using 3DS
   * @return gatewayHeaderImageUrl
  **/
  @ApiModelProperty(value = "Optional Look and feel setting for Verified-by-VISA.  Only needed if you are using 3DS")
  public String getGatewayHeaderImageUrl() {
    return gatewayHeaderImageUrl;
  }

  public void setGatewayHeaderImageUrl(String gatewayHeaderImageUrl) {
    this.gatewayHeaderImageUrl = gatewayHeaderImageUrl;
  }

  public TransactionGateway gatewayKey(String gatewayKey) {
    this.gatewayKey = gatewayKey;
    return this;
  }

   /**
   * Gateway Key
   * @return gatewayKey
  **/
  @ApiModelProperty(value = "Gateway Key")
  public String getGatewayKey() {
    return gatewayKey;
  }

  public void setGatewayKey(String gatewayKey) {
    this.gatewayKey = gatewayKey;
  }

  public TransactionGateway gatewayKeyLabel(String gatewayKeyLabel) {
    this.gatewayKeyLabel = gatewayKeyLabel;
    return this;
  }

   /**
   * The label for the gateway key.   The actual value stored may vary by gateway, so the label will vary too.
   * @return gatewayKeyLabel
  **/
  @ApiModelProperty(value = "The label for the gateway key.   The actual value stored may vary by gateway, so the label will vary too.")
  public String getGatewayKeyLabel() {
    return gatewayKeyLabel;
  }

  public void setGatewayKeyLabel(String gatewayKeyLabel) {
    this.gatewayKeyLabel = gatewayKeyLabel;
  }

  public TransactionGateway gatewayKeyPem(String gatewayKeyPem) {
    this.gatewayKeyPem = gatewayKeyPem;
    return this;
  }

   /**
   * Cryptographic private key allowing UltraCart to communicate securely with this gateway.
   * @return gatewayKeyPem
  **/
  @ApiModelProperty(value = "Cryptographic private key allowing UltraCart to communicate securely with this gateway.")
  public String getGatewayKeyPem() {
    return gatewayKeyPem;
  }

  public void setGatewayKeyPem(String gatewayKeyPem) {
    this.gatewayKeyPem = gatewayKeyPem;
  }

  public TransactionGateway gatewayKeyPemLabel(String gatewayKeyPemLabel) {
    this.gatewayKeyPemLabel = gatewayKeyPemLabel;
    return this;
  }

   /**
   * The label for the gateway key pem.   The actual value stored may vary by gateway, so the label will vary too.
   * @return gatewayKeyPemLabel
  **/
  @ApiModelProperty(value = "The label for the gateway key pem.   The actual value stored may vary by gateway, so the label will vary too.")
  public String getGatewayKeyPemLabel() {
    return gatewayKeyPemLabel;
  }

  public void setGatewayKeyPemLabel(String gatewayKeyPemLabel) {
    this.gatewayKeyPemLabel = gatewayKeyPemLabel;
  }

  public TransactionGateway gatewayLandingPage(String gatewayLandingPage) {
    this.gatewayLandingPage = gatewayLandingPage;
    return this;
  }

   /**
   * Optional Look and feel setting for Verified-by-VISA.  Only needed if you are using 3DS
   * @return gatewayLandingPage
  **/
  @ApiModelProperty(value = "Optional Look and feel setting for Verified-by-VISA.  Only needed if you are using 3DS")
  public String getGatewayLandingPage() {
    return gatewayLandingPage;
  }

  public void setGatewayLandingPage(String gatewayLandingPage) {
    this.gatewayLandingPage = gatewayLandingPage;
  }

  public TransactionGateway gatewayMerchantId(String gatewayMerchantId) {
    this.gatewayMerchantId = gatewayMerchantId;
    return this;
  }

   /**
   * Gateway Merchant ID
   * @return gatewayMerchantId
  **/
  @ApiModelProperty(value = "Gateway Merchant ID")
  public String getGatewayMerchantId() {
    return gatewayMerchantId;
  }

  public void setGatewayMerchantId(String gatewayMerchantId) {
    this.gatewayMerchantId = gatewayMerchantId;
  }

  public TransactionGateway gatewayMerchantIdLabel(String gatewayMerchantIdLabel) {
    this.gatewayMerchantIdLabel = gatewayMerchantIdLabel;
    return this;
  }

   /**
   * The label for the gateway merchant id.  The actual value stored may vary by gateway, so the label will vary too.
   * @return gatewayMerchantIdLabel
  **/
  @ApiModelProperty(value = "The label for the gateway merchant id.  The actual value stored may vary by gateway, so the label will vary too.")
  public String getGatewayMerchantIdLabel() {
    return gatewayMerchantIdLabel;
  }

  public void setGatewayMerchantIdLabel(String gatewayMerchantIdLabel) {
    this.gatewayMerchantIdLabel = gatewayMerchantIdLabel;
  }

  public TransactionGateway gatewayMode(String gatewayMode) {
    this.gatewayMode = gatewayMode;
    return this;
  }

   /**
   * Gateway Mode
   * @return gatewayMode
  **/
  @ApiModelProperty(value = "Gateway Mode")
  public String getGatewayMode() {
    return gatewayMode;
  }

  public void setGatewayMode(String gatewayMode) {
    this.gatewayMode = gatewayMode;
  }

  public TransactionGateway gatewayModeLabel(String gatewayModeLabel) {
    this.gatewayModeLabel = gatewayModeLabel;
    return this;
  }

   /**
   * The label for the gateway mode.   The actual value stored may vary by gateway, so the label will vary too.
   * @return gatewayModeLabel
  **/
  @ApiModelProperty(value = "The label for the gateway mode.   The actual value stored may vary by gateway, so the label will vary too.")
  public String getGatewayModeLabel() {
    return gatewayModeLabel;
  }

  public void setGatewayModeLabel(String gatewayModeLabel) {
    this.gatewayModeLabel = gatewayModeLabel;
  }

  public TransactionGateway gatewayModes(List<String> gatewayModes) {
    this.gatewayModes = gatewayModes;
    return this;
  }

  public TransactionGateway addGatewayModesItem(String gatewayModesItem) {
    if (this.gatewayModes == null) {
      this.gatewayModes = new ArrayList<String>();
    }
    this.gatewayModes.add(gatewayModesItem);
    return this;
  }

   /**
   * Used to populate drop down lists for gateway modes
   * @return gatewayModes
  **/
  @ApiModelProperty(value = "Used to populate drop down lists for gateway modes")
  public List<String> getGatewayModes() {
    return gatewayModes;
  }

  public void setGatewayModes(List<String> gatewayModes) {
    this.gatewayModes = gatewayModes;
  }

  public TransactionGateway gatewayPageStyle(String gatewayPageStyle) {
    this.gatewayPageStyle = gatewayPageStyle;
    return this;
  }

   /**
   * Gateway Page Style
   * @return gatewayPageStyle
  **/
  @ApiModelProperty(value = "Gateway Page Style")
  public String getGatewayPageStyle() {
    return gatewayPageStyle;
  }

  public void setGatewayPageStyle(String gatewayPageStyle) {
    this.gatewayPageStyle = gatewayPageStyle;
  }

  public TransactionGateway gatewayPageStyleLabel(String gatewayPageStyleLabel) {
    this.gatewayPageStyleLabel = gatewayPageStyleLabel;
    return this;
  }

   /**
   * Gateway page style label
   * @return gatewayPageStyleLabel
  **/
  @ApiModelProperty(value = "Gateway page style label")
  public String getGatewayPageStyleLabel() {
    return gatewayPageStyleLabel;
  }

  public void setGatewayPageStyleLabel(String gatewayPageStyleLabel) {
    this.gatewayPageStyleLabel = gatewayPageStyleLabel;
  }

  public TransactionGateway gatewayPageStyles(List<String> gatewayPageStyles) {
    this.gatewayPageStyles = gatewayPageStyles;
    return this;
  }

  public TransactionGateway addGatewayPageStylesItem(String gatewayPageStylesItem) {
    if (this.gatewayPageStyles == null) {
      this.gatewayPageStyles = new ArrayList<String>();
    }
    this.gatewayPageStyles.add(gatewayPageStylesItem);
    return this;
  }

   /**
   * Used to populate drop down lists for gateway page style
   * @return gatewayPageStyles
  **/
  @ApiModelProperty(value = "Used to populate drop down lists for gateway page style")
  public List<String> getGatewayPageStyles() {
    return gatewayPageStyles;
  }

  public void setGatewayPageStyles(List<String> gatewayPageStyles) {
    this.gatewayPageStyles = gatewayPageStyles;
  }

  public TransactionGateway gatewayPartner(String gatewayPartner) {
    this.gatewayPartner = gatewayPartner;
    return this;
  }

   /**
   * Gateway Partner
   * @return gatewayPartner
  **/
  @ApiModelProperty(value = "Gateway Partner")
  public String getGatewayPartner() {
    return gatewayPartner;
  }

  public void setGatewayPartner(String gatewayPartner) {
    this.gatewayPartner = gatewayPartner;
  }

  public TransactionGateway gatewayPartnerLabel(String gatewayPartnerLabel) {
    this.gatewayPartnerLabel = gatewayPartnerLabel;
    return this;
  }

   /**
   * The label for the gateway partner.   The actual value stored may vary by gateway, so the label will vary too.
   * @return gatewayPartnerLabel
  **/
  @ApiModelProperty(value = "The label for the gateway partner.   The actual value stored may vary by gateway, so the label will vary too.")
  public String getGatewayPartnerLabel() {
    return gatewayPartnerLabel;
  }

  public void setGatewayPartnerLabel(String gatewayPartnerLabel) {
    this.gatewayPartnerLabel = gatewayPartnerLabel;
  }

  public TransactionGateway gatewayPassword(String gatewayPassword) {
    this.gatewayPassword = gatewayPassword;
    return this;
  }

   /**
   * Gateway Password
   * @return gatewayPassword
  **/
  @ApiModelProperty(value = "Gateway Password")
  public String getGatewayPassword() {
    return gatewayPassword;
  }

  public void setGatewayPassword(String gatewayPassword) {
    this.gatewayPassword = gatewayPassword;
  }

  public TransactionGateway gatewayPasswordLabel(String gatewayPasswordLabel) {
    this.gatewayPasswordLabel = gatewayPasswordLabel;
    return this;
  }

   /**
   * The label for the gateway password.   The actual value stored may vary by gateway, so the label will vary too.
   * @return gatewayPasswordLabel
  **/
  @ApiModelProperty(value = "The label for the gateway password.   The actual value stored may vary by gateway, so the label will vary too.")
  public String getGatewayPasswordLabel() {
    return gatewayPasswordLabel;
  }

  public void setGatewayPasswordLabel(String gatewayPasswordLabel) {
    this.gatewayPasswordLabel = gatewayPasswordLabel;
  }

  public TransactionGateway gatewayPayflowColor(String gatewayPayflowColor) {
    this.gatewayPayflowColor = gatewayPayflowColor;
    return this;
  }

   /**
   * Optional Look and feel setting for Verified-by-VISA.  Only needed if you are using 3DS
   * @return gatewayPayflowColor
  **/
  @ApiModelProperty(value = "Optional Look and feel setting for Verified-by-VISA.  Only needed if you are using 3DS")
  public String getGatewayPayflowColor() {
    return gatewayPayflowColor;
  }

  public void setGatewayPayflowColor(String gatewayPayflowColor) {
    this.gatewayPayflowColor = gatewayPayflowColor;
  }

  public TransactionGateway gatewayPrivateKeyPassword(String gatewayPrivateKeyPassword) {
    this.gatewayPrivateKeyPassword = gatewayPrivateKeyPassword;
    return this;
  }

   /**
   * Gateway private key password
   * @return gatewayPrivateKeyPassword
  **/
  @ApiModelProperty(value = "Gateway private key password")
  public String getGatewayPrivateKeyPassword() {
    return gatewayPrivateKeyPassword;
  }

  public void setGatewayPrivateKeyPassword(String gatewayPrivateKeyPassword) {
    this.gatewayPrivateKeyPassword = gatewayPrivateKeyPassword;
  }

  public TransactionGateway gatewayPrivateKeyPasswordLabel(String gatewayPrivateKeyPasswordLabel) {
    this.gatewayPrivateKeyPasswordLabel = gatewayPrivateKeyPasswordLabel;
    return this;
  }

   /**
   * The label for the gateway private key password.  The actual value stored may vary by gateway, so the label will vary too.
   * @return gatewayPrivateKeyPasswordLabel
  **/
  @ApiModelProperty(value = "The label for the gateway private key password.  The actual value stored may vary by gateway, so the label will vary too.")
  public String getGatewayPrivateKeyPasswordLabel() {
    return gatewayPrivateKeyPasswordLabel;
  }

  public void setGatewayPrivateKeyPasswordLabel(String gatewayPrivateKeyPasswordLabel) {
    this.gatewayPrivateKeyPasswordLabel = gatewayPrivateKeyPasswordLabel;
  }

  public TransactionGateway gatewaySolutionType(String gatewaySolutionType) {
    this.gatewaySolutionType = gatewaySolutionType;
    return this;
  }

   /**
   * Optional Look and feel setting for Verified-by-VISA.  Only needed if you are using 3DS
   * @return gatewaySolutionType
  **/
  @ApiModelProperty(value = "Optional Look and feel setting for Verified-by-VISA.  Only needed if you are using 3DS")
  public String getGatewaySolutionType() {
    return gatewaySolutionType;
  }

  public void setGatewaySolutionType(String gatewaySolutionType) {
    this.gatewaySolutionType = gatewaySolutionType;
  }

  public TransactionGateway gatewaySolutionTypeLabel(String gatewaySolutionTypeLabel) {
    this.gatewaySolutionTypeLabel = gatewaySolutionTypeLabel;
    return this;
  }

   /**
   * The label for the gateway solution type.  The actual value stored may vary by gateway, so the label will vary too.
   * @return gatewaySolutionTypeLabel
  **/
  @ApiModelProperty(value = "The label for the gateway solution type.  The actual value stored may vary by gateway, so the label will vary too.")
  public String getGatewaySolutionTypeLabel() {
    return gatewaySolutionTypeLabel;
  }

  public void setGatewaySolutionTypeLabel(String gatewaySolutionTypeLabel) {
    this.gatewaySolutionTypeLabel = gatewaySolutionTypeLabel;
  }

  public TransactionGateway gatewaySolutionTypes(List<String> gatewaySolutionTypes) {
    this.gatewaySolutionTypes = gatewaySolutionTypes;
    return this;
  }

  public TransactionGateway addGatewaySolutionTypesItem(String gatewaySolutionTypesItem) {
    if (this.gatewaySolutionTypes == null) {
      this.gatewaySolutionTypes = new ArrayList<String>();
    }
    this.gatewaySolutionTypes.add(gatewaySolutionTypesItem);
    return this;
  }

   /**
   * Used to populate drop down lists for gateway solution types
   * @return gatewaySolutionTypes
  **/
  @ApiModelProperty(value = "Used to populate drop down lists for gateway solution types")
  public List<String> getGatewaySolutionTypes() {
    return gatewaySolutionTypes;
  }

  public void setGatewaySolutionTypes(List<String> gatewaySolutionTypes) {
    this.gatewaySolutionTypes = gatewaySolutionTypes;
  }

  public TransactionGateway gatewayUrl(String gatewayUrl) {
    this.gatewayUrl = gatewayUrl;
    return this;
  }

   /**
   * Gateway URL
   * @return gatewayUrl
  **/
  @ApiModelProperty(value = "Gateway URL")
  public String getGatewayUrl() {
    return gatewayUrl;
  }

  public void setGatewayUrl(String gatewayUrl) {
    this.gatewayUrl = gatewayUrl;
  }

  public TransactionGateway gatewayUrlLabel(String gatewayUrlLabel) {
    this.gatewayUrlLabel = gatewayUrlLabel;
    return this;
  }

   /**
   * The label for the gateway url.   The actual value stored may vary by gateway, so the label will vary too.
   * @return gatewayUrlLabel
  **/
  @ApiModelProperty(value = "The label for the gateway url.   The actual value stored may vary by gateway, so the label will vary too.")
  public String getGatewayUrlLabel() {
    return gatewayUrlLabel;
  }

  public void setGatewayUrlLabel(String gatewayUrlLabel) {
    this.gatewayUrlLabel = gatewayUrlLabel;
  }

  public TransactionGateway gatewayUsername(String gatewayUsername) {
    this.gatewayUsername = gatewayUsername;
    return this;
  }

   /**
   * Gateway Username
   * @return gatewayUsername
  **/
  @ApiModelProperty(value = "Gateway Username")
  public String getGatewayUsername() {
    return gatewayUsername;
  }

  public void setGatewayUsername(String gatewayUsername) {
    this.gatewayUsername = gatewayUsername;
  }

  public TransactionGateway gatewayUsernameLabel(String gatewayUsernameLabel) {
    this.gatewayUsernameLabel = gatewayUsernameLabel;
    return this;
  }

   /**
   * The label for the gateway username.  The actual value stored may vary by gateway, so the label will vary too.
   * @return gatewayUsernameLabel
  **/
  @ApiModelProperty(value = "The label for the gateway username.  The actual value stored may vary by gateway, so the label will vary too.")
  public String getGatewayUsernameLabel() {
    return gatewayUsernameLabel;
  }

  public void setGatewayUsernameLabel(String gatewayUsernameLabel) {
    this.gatewayUsernameLabel = gatewayUsernameLabel;
  }

  public TransactionGateway merchantAccountProfileAmex(String merchantAccountProfileAmex) {
    this.merchantAccountProfileAmex = merchantAccountProfileAmex;
    return this;
  }

   /**
   * If a merchant has multiple card processing accounts, this is the one to use for American Express cards.
   * @return merchantAccountProfileAmex
  **/
  @ApiModelProperty(value = "If a merchant has multiple card processing accounts, this is the one to use for American Express cards.")
  public String getMerchantAccountProfileAmex() {
    return merchantAccountProfileAmex;
  }

  public void setMerchantAccountProfileAmex(String merchantAccountProfileAmex) {
    this.merchantAccountProfileAmex = merchantAccountProfileAmex;
  }

  public TransactionGateway merchantAccountProfileDinersClub(String merchantAccountProfileDinersClub) {
    this.merchantAccountProfileDinersClub = merchantAccountProfileDinersClub;
    return this;
  }

   /**
   * If a merchant has multiple card processing accounts, this is the one to use for Diners Club cards.
   * @return merchantAccountProfileDinersClub
  **/
  @ApiModelProperty(value = "If a merchant has multiple card processing accounts, this is the one to use for Diners Club cards.")
  public String getMerchantAccountProfileDinersClub() {
    return merchantAccountProfileDinersClub;
  }

  public void setMerchantAccountProfileDinersClub(String merchantAccountProfileDinersClub) {
    this.merchantAccountProfileDinersClub = merchantAccountProfileDinersClub;
  }

  public TransactionGateway merchantAccountProfileDiscover(String merchantAccountProfileDiscover) {
    this.merchantAccountProfileDiscover = merchantAccountProfileDiscover;
    return this;
  }

   /**
   * If a merchant has multiple card processing accounts, this is the one to use for Discover cards.
   * @return merchantAccountProfileDiscover
  **/
  @ApiModelProperty(value = "If a merchant has multiple card processing accounts, this is the one to use for Discover cards.")
  public String getMerchantAccountProfileDiscover() {
    return merchantAccountProfileDiscover;
  }

  public void setMerchantAccountProfileDiscover(String merchantAccountProfileDiscover) {
    this.merchantAccountProfileDiscover = merchantAccountProfileDiscover;
  }

  public TransactionGateway merchantAccountProfileJcb(String merchantAccountProfileJcb) {
    this.merchantAccountProfileJcb = merchantAccountProfileJcb;
    return this;
  }

   /**
   * If a merchant has multiple card processing accounts, this is the one to use for JCB cards.
   * @return merchantAccountProfileJcb
  **/
  @ApiModelProperty(value = "If a merchant has multiple card processing accounts, this is the one to use for JCB cards.")
  public String getMerchantAccountProfileJcb() {
    return merchantAccountProfileJcb;
  }

  public void setMerchantAccountProfileJcb(String merchantAccountProfileJcb) {
    this.merchantAccountProfileJcb = merchantAccountProfileJcb;
  }

  public TransactionGateway merchantAccountProfileMastercard(String merchantAccountProfileMastercard) {
    this.merchantAccountProfileMastercard = merchantAccountProfileMastercard;
    return this;
  }

   /**
   * If a merchant has multiple card processing accounts, this is the one to use for MasterCard cards.
   * @return merchantAccountProfileMastercard
  **/
  @ApiModelProperty(value = "If a merchant has multiple card processing accounts, this is the one to use for MasterCard cards.")
  public String getMerchantAccountProfileMastercard() {
    return merchantAccountProfileMastercard;
  }

  public void setMerchantAccountProfileMastercard(String merchantAccountProfileMastercard) {
    this.merchantAccountProfileMastercard = merchantAccountProfileMastercard;
  }

  public TransactionGateway merchantAccountProfileVisa(String merchantAccountProfileVisa) {
    this.merchantAccountProfileVisa = merchantAccountProfileVisa;
    return this;
  }

   /**
   * If a merchant has multiple card processing accounts, this is the one to use for VISA cards.
   * @return merchantAccountProfileVisa
  **/
  @ApiModelProperty(value = "If a merchant has multiple card processing accounts, this is the one to use for VISA cards.")
  public String getMerchantAccountProfileVisa() {
    return merchantAccountProfileVisa;
  }

  public void setMerchantAccountProfileVisa(String merchantAccountProfileVisa) {
    this.merchantAccountProfileVisa = merchantAccountProfileVisa;
  }

  public TransactionGateway merchantId(String merchantId) {
    this.merchantId = merchantId;
    return this;
  }

   /**
   * UltraCart Merchant ID
   * @return merchantId
  **/
  @ApiModelProperty(value = "UltraCart Merchant ID")
  public String getMerchantId() {
    return merchantId;
  }

  public void setMerchantId(String merchantId) {
    this.merchantId = merchantId;
  }

  public TransactionGateway multiCurrencyDetails(Boolean multiCurrencyDetails) {
    this.multiCurrencyDetails = multiCurrencyDetails;
    return this;
  }

   /**
   * True if this gateway provides details for multiple currency transactions
   * @return multiCurrencyDetails
  **/
  @ApiModelProperty(value = "True if this gateway provides details for multiple currency transactions")
  public Boolean isMultiCurrencyDetails() {
    return multiCurrencyDetails;
  }

  public void setMultiCurrencyDetails(Boolean multiCurrencyDetails) {
    this.multiCurrencyDetails = multiCurrencyDetails;
  }

  public TransactionGateway name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of this transaction gateway
   * @return name
  **/
  @ApiModelProperty(value = "Name of this transaction gateway")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public TransactionGateway refundSupported(Boolean refundSupported) {
    this.refundSupported = refundSupported;
    return this;
  }

   /**
   * True if this gateway supports refunds
   * @return refundSupported
  **/
  @ApiModelProperty(value = "True if this gateway supports refunds")
  public Boolean isRefundSupported() {
    return refundSupported;
  }

  public void setRefundSupported(Boolean refundSupported) {
    this.refundSupported = refundSupported;
  }

  public TransactionGateway requireEcheckTaxIdOrDriversLicense(Boolean requireEcheckTaxIdOrDriversLicense) {
    this.requireEcheckTaxIdOrDriversLicense = requireEcheckTaxIdOrDriversLicense;
    return this;
  }

   /**
   * If true, e-Check transaction will require either a Tax ID or a Driver License
   * @return requireEcheckTaxIdOrDriversLicense
  **/
  @ApiModelProperty(value = "If true, e-Check transaction will require either a Tax ID or a Driver License")
  public Boolean isRequireEcheckTaxIdOrDriversLicense() {
    return requireEcheckTaxIdOrDriversLicense;
  }

  public void setRequireEcheckTaxIdOrDriversLicense(Boolean requireEcheckTaxIdOrDriversLicense) {
    this.requireEcheckTaxIdOrDriversLicense = requireEcheckTaxIdOrDriversLicense;
  }

  public TransactionGateway supportVbv3ds(Boolean supportVbv3ds) {
    this.supportVbv3ds = supportVbv3ds;
    return this;
  }

   /**
   * True if this gateway supported Verified-by-VISA 3D Secure
   * @return supportVbv3ds
  **/
  @ApiModelProperty(value = "True if this gateway supported Verified-by-VISA 3D Secure")
  public Boolean isSupportVbv3ds() {
    return supportVbv3ds;
  }

  public void setSupportVbv3ds(Boolean supportVbv3ds) {
    this.supportVbv3ds = supportVbv3ds;
  }

  public TransactionGateway supportsAmex(Boolean supportsAmex) {
    this.supportsAmex = supportsAmex;
    return this;
  }

   /**
   * If true, this gateway will attempt to process American Express transactions.  If false, the customer will not be allowed to use this type of Credit Card.
   * @return supportsAmex
  **/
  @ApiModelProperty(value = "If true, this gateway will attempt to process American Express transactions.  If false, the customer will not be allowed to use this type of Credit Card.")
  public Boolean isSupportsAmex() {
    return supportsAmex;
  }

  public void setSupportsAmex(Boolean supportsAmex) {
    this.supportsAmex = supportsAmex;
  }

  public TransactionGateway supportsDinersClub(Boolean supportsDinersClub) {
    this.supportsDinersClub = supportsDinersClub;
    return this;
  }

   /**
   * If true, this gateway will attempt to process Diners Club transactions.  If false, the customer will not be allowed to use this type of Credit Card.
   * @return supportsDinersClub
  **/
  @ApiModelProperty(value = "If true, this gateway will attempt to process Diners Club transactions.  If false, the customer will not be allowed to use this type of Credit Card.")
  public Boolean isSupportsDinersClub() {
    return supportsDinersClub;
  }

  public void setSupportsDinersClub(Boolean supportsDinersClub) {
    this.supportsDinersClub = supportsDinersClub;
  }

  public TransactionGateway supportsDiscover(Boolean supportsDiscover) {
    this.supportsDiscover = supportsDiscover;
    return this;
  }

   /**
   * If true, this gateway will attempt to process Discover transactions.  If false, the customer will not be allowed to use this type of Credit Card.
   * @return supportsDiscover
  **/
  @ApiModelProperty(value = "If true, this gateway will attempt to process Discover transactions.  If false, the customer will not be allowed to use this type of Credit Card.")
  public Boolean isSupportsDiscover() {
    return supportsDiscover;
  }

  public void setSupportsDiscover(Boolean supportsDiscover) {
    this.supportsDiscover = supportsDiscover;
  }

  public TransactionGateway supportsEcheck(Boolean supportsEcheck) {
    this.supportsEcheck = supportsEcheck;
    return this;
  }

   /**
   * If true, this gateway will attempt to process e-Check transactions.  If false, the customer will not be allowed to use e-Checks.
   * @return supportsEcheck
  **/
  @ApiModelProperty(value = "If true, this gateway will attempt to process e-Check transactions.  If false, the customer will not be allowed to use e-Checks.")
  public Boolean isSupportsEcheck() {
    return supportsEcheck;
  }

  public void setSupportsEcheck(Boolean supportsEcheck) {
    this.supportsEcheck = supportsEcheck;
  }

  public TransactionGateway supportsElectronicGiftCard(Boolean supportsElectronicGiftCard) {
    this.supportsElectronicGiftCard = supportsElectronicGiftCard;
    return this;
  }

   /**
   * if true, this gateway will attempt to process electronic gift cards.
   * @return supportsElectronicGiftCard
  **/
  @ApiModelProperty(value = "if true, this gateway will attempt to process electronic gift cards.")
  public Boolean isSupportsElectronicGiftCard() {
    return supportsElectronicGiftCard;
  }

  public void setSupportsElectronicGiftCard(Boolean supportsElectronicGiftCard) {
    this.supportsElectronicGiftCard = supportsElectronicGiftCard;
  }

  public TransactionGateway supportsJcb(Boolean supportsJcb) {
    this.supportsJcb = supportsJcb;
    return this;
  }

   /**
   * If true, this gateway will attempt to process JCB transactions.  If false, the customer will not be allowed to use this type of Credit Card.
   * @return supportsJcb
  **/
  @ApiModelProperty(value = "If true, this gateway will attempt to process JCB transactions.  If false, the customer will not be allowed to use this type of Credit Card.")
  public Boolean isSupportsJcb() {
    return supportsJcb;
  }

  public void setSupportsJcb(Boolean supportsJcb) {
    this.supportsJcb = supportsJcb;
  }

  public TransactionGateway supportsMastercard(Boolean supportsMastercard) {
    this.supportsMastercard = supportsMastercard;
    return this;
  }

   /**
   * If true, this gateway will attempt to process MasterCard transactions.  If false, the customer will not be allowed to use this type of Credit Card.
   * @return supportsMastercard
  **/
  @ApiModelProperty(value = "If true, this gateway will attempt to process MasterCard transactions.  If false, the customer will not be allowed to use this type of Credit Card.")
  public Boolean isSupportsMastercard() {
    return supportsMastercard;
  }

  public void setSupportsMastercard(Boolean supportsMastercard) {
    this.supportsMastercard = supportsMastercard;
  }

  public TransactionGateway supportsVisa(Boolean supportsVisa) {
    this.supportsVisa = supportsVisa;
    return this;
  }

   /**
   * If true, this gateway will attempt to process VISA transactions.  If false, the customer will not be allowed to use this type of Credit Card.
   * @return supportsVisa
  **/
  @ApiModelProperty(value = "If true, this gateway will attempt to process VISA transactions.  If false, the customer will not be allowed to use this type of Credit Card.")
  public Boolean isSupportsVisa() {
    return supportsVisa;
  }

  public void setSupportsVisa(Boolean supportsVisa) {
    this.supportsVisa = supportsVisa;
  }

  public TransactionGateway thirdParty(Boolean thirdParty) {
    this.thirdParty = thirdParty;
    return this;
  }

   /**
   * True if this gateway supports third parties
   * @return thirdParty
  **/
  @ApiModelProperty(value = "True if this gateway supports third parties")
  public Boolean isThirdParty() {
    return thirdParty;
  }

  public void setThirdParty(Boolean thirdParty) {
    this.thirdParty = thirdParty;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TransactionGateway transactionGateway = (TransactionGateway) o;
    return Objects.equals(this.arbitraryHtml, transactionGateway.arbitraryHtml) &&
        Objects.equals(this.comment, transactionGateway.comment) &&
        Objects.equals(this.creditCardCapable, transactionGateway.creditCardCapable) &&
        Objects.equals(this.echeckCapable, transactionGateway.echeckCapable) &&
        Objects.equals(this.echeckSupported, transactionGateway.echeckSupported) &&
        Objects.equals(this.enabled, transactionGateway.enabled) &&
        Objects.equals(this.gatewayCertPem, transactionGateway.gatewayCertPem) &&
        Objects.equals(this.gatewayCertPemLabel, transactionGateway.gatewayCertPemLabel) &&
        Objects.equals(this.gatewayEmail, transactionGateway.gatewayEmail) &&
        Objects.equals(this.gatewayEmailLabel, transactionGateway.gatewayEmailLabel) &&
        Objects.equals(this.gatewayEnvironment, transactionGateway.gatewayEnvironment) &&
        Objects.equals(this.gatewayEnvironmentLabel, transactionGateway.gatewayEnvironmentLabel) &&
        Objects.equals(this.gatewayEnvironments, transactionGateway.gatewayEnvironments) &&
        Objects.equals(this.gatewayHeaderBackColor, transactionGateway.gatewayHeaderBackColor) &&
        Objects.equals(this.gatewayHeaderBorderColor, transactionGateway.gatewayHeaderBorderColor) &&
        Objects.equals(this.gatewayHeaderImageUrl, transactionGateway.gatewayHeaderImageUrl) &&
        Objects.equals(this.gatewayKey, transactionGateway.gatewayKey) &&
        Objects.equals(this.gatewayKeyLabel, transactionGateway.gatewayKeyLabel) &&
        Objects.equals(this.gatewayKeyPem, transactionGateway.gatewayKeyPem) &&
        Objects.equals(this.gatewayKeyPemLabel, transactionGateway.gatewayKeyPemLabel) &&
        Objects.equals(this.gatewayLandingPage, transactionGateway.gatewayLandingPage) &&
        Objects.equals(this.gatewayMerchantId, transactionGateway.gatewayMerchantId) &&
        Objects.equals(this.gatewayMerchantIdLabel, transactionGateway.gatewayMerchantIdLabel) &&
        Objects.equals(this.gatewayMode, transactionGateway.gatewayMode) &&
        Objects.equals(this.gatewayModeLabel, transactionGateway.gatewayModeLabel) &&
        Objects.equals(this.gatewayModes, transactionGateway.gatewayModes) &&
        Objects.equals(this.gatewayPageStyle, transactionGateway.gatewayPageStyle) &&
        Objects.equals(this.gatewayPageStyleLabel, transactionGateway.gatewayPageStyleLabel) &&
        Objects.equals(this.gatewayPageStyles, transactionGateway.gatewayPageStyles) &&
        Objects.equals(this.gatewayPartner, transactionGateway.gatewayPartner) &&
        Objects.equals(this.gatewayPartnerLabel, transactionGateway.gatewayPartnerLabel) &&
        Objects.equals(this.gatewayPassword, transactionGateway.gatewayPassword) &&
        Objects.equals(this.gatewayPasswordLabel, transactionGateway.gatewayPasswordLabel) &&
        Objects.equals(this.gatewayPayflowColor, transactionGateway.gatewayPayflowColor) &&
        Objects.equals(this.gatewayPrivateKeyPassword, transactionGateway.gatewayPrivateKeyPassword) &&
        Objects.equals(this.gatewayPrivateKeyPasswordLabel, transactionGateway.gatewayPrivateKeyPasswordLabel) &&
        Objects.equals(this.gatewaySolutionType, transactionGateway.gatewaySolutionType) &&
        Objects.equals(this.gatewaySolutionTypeLabel, transactionGateway.gatewaySolutionTypeLabel) &&
        Objects.equals(this.gatewaySolutionTypes, transactionGateway.gatewaySolutionTypes) &&
        Objects.equals(this.gatewayUrl, transactionGateway.gatewayUrl) &&
        Objects.equals(this.gatewayUrlLabel, transactionGateway.gatewayUrlLabel) &&
        Objects.equals(this.gatewayUsername, transactionGateway.gatewayUsername) &&
        Objects.equals(this.gatewayUsernameLabel, transactionGateway.gatewayUsernameLabel) &&
        Objects.equals(this.merchantAccountProfileAmex, transactionGateway.merchantAccountProfileAmex) &&
        Objects.equals(this.merchantAccountProfileDinersClub, transactionGateway.merchantAccountProfileDinersClub) &&
        Objects.equals(this.merchantAccountProfileDiscover, transactionGateway.merchantAccountProfileDiscover) &&
        Objects.equals(this.merchantAccountProfileJcb, transactionGateway.merchantAccountProfileJcb) &&
        Objects.equals(this.merchantAccountProfileMastercard, transactionGateway.merchantAccountProfileMastercard) &&
        Objects.equals(this.merchantAccountProfileVisa, transactionGateway.merchantAccountProfileVisa) &&
        Objects.equals(this.merchantId, transactionGateway.merchantId) &&
        Objects.equals(this.multiCurrencyDetails, transactionGateway.multiCurrencyDetails) &&
        Objects.equals(this.name, transactionGateway.name) &&
        Objects.equals(this.refundSupported, transactionGateway.refundSupported) &&
        Objects.equals(this.requireEcheckTaxIdOrDriversLicense, transactionGateway.requireEcheckTaxIdOrDriversLicense) &&
        Objects.equals(this.supportVbv3ds, transactionGateway.supportVbv3ds) &&
        Objects.equals(this.supportsAmex, transactionGateway.supportsAmex) &&
        Objects.equals(this.supportsDinersClub, transactionGateway.supportsDinersClub) &&
        Objects.equals(this.supportsDiscover, transactionGateway.supportsDiscover) &&
        Objects.equals(this.supportsEcheck, transactionGateway.supportsEcheck) &&
        Objects.equals(this.supportsElectronicGiftCard, transactionGateway.supportsElectronicGiftCard) &&
        Objects.equals(this.supportsJcb, transactionGateway.supportsJcb) &&
        Objects.equals(this.supportsMastercard, transactionGateway.supportsMastercard) &&
        Objects.equals(this.supportsVisa, transactionGateway.supportsVisa) &&
        Objects.equals(this.thirdParty, transactionGateway.thirdParty);
  }

  @Override
  public int hashCode() {
    return Objects.hash(arbitraryHtml, comment, creditCardCapable, echeckCapable, echeckSupported, enabled, gatewayCertPem, gatewayCertPemLabel, gatewayEmail, gatewayEmailLabel, gatewayEnvironment, gatewayEnvironmentLabel, gatewayEnvironments, gatewayHeaderBackColor, gatewayHeaderBorderColor, gatewayHeaderImageUrl, gatewayKey, gatewayKeyLabel, gatewayKeyPem, gatewayKeyPemLabel, gatewayLandingPage, gatewayMerchantId, gatewayMerchantIdLabel, gatewayMode, gatewayModeLabel, gatewayModes, gatewayPageStyle, gatewayPageStyleLabel, gatewayPageStyles, gatewayPartner, gatewayPartnerLabel, gatewayPassword, gatewayPasswordLabel, gatewayPayflowColor, gatewayPrivateKeyPassword, gatewayPrivateKeyPasswordLabel, gatewaySolutionType, gatewaySolutionTypeLabel, gatewaySolutionTypes, gatewayUrl, gatewayUrlLabel, gatewayUsername, gatewayUsernameLabel, merchantAccountProfileAmex, merchantAccountProfileDinersClub, merchantAccountProfileDiscover, merchantAccountProfileJcb, merchantAccountProfileMastercard, merchantAccountProfileVisa, merchantId, multiCurrencyDetails, name, refundSupported, requireEcheckTaxIdOrDriversLicense, supportVbv3ds, supportsAmex, supportsDinersClub, supportsDiscover, supportsEcheck, supportsElectronicGiftCard, supportsJcb, supportsMastercard, supportsVisa, thirdParty);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransactionGateway {\n");
    
    sb.append("    arbitraryHtml: ").append(toIndentedString(arbitraryHtml)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    creditCardCapable: ").append(toIndentedString(creditCardCapable)).append("\n");
    sb.append("    echeckCapable: ").append(toIndentedString(echeckCapable)).append("\n");
    sb.append("    echeckSupported: ").append(toIndentedString(echeckSupported)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    gatewayCertPem: ").append(toIndentedString(gatewayCertPem)).append("\n");
    sb.append("    gatewayCertPemLabel: ").append(toIndentedString(gatewayCertPemLabel)).append("\n");
    sb.append("    gatewayEmail: ").append(toIndentedString(gatewayEmail)).append("\n");
    sb.append("    gatewayEmailLabel: ").append(toIndentedString(gatewayEmailLabel)).append("\n");
    sb.append("    gatewayEnvironment: ").append(toIndentedString(gatewayEnvironment)).append("\n");
    sb.append("    gatewayEnvironmentLabel: ").append(toIndentedString(gatewayEnvironmentLabel)).append("\n");
    sb.append("    gatewayEnvironments: ").append(toIndentedString(gatewayEnvironments)).append("\n");
    sb.append("    gatewayHeaderBackColor: ").append(toIndentedString(gatewayHeaderBackColor)).append("\n");
    sb.append("    gatewayHeaderBorderColor: ").append(toIndentedString(gatewayHeaderBorderColor)).append("\n");
    sb.append("    gatewayHeaderImageUrl: ").append(toIndentedString(gatewayHeaderImageUrl)).append("\n");
    sb.append("    gatewayKey: ").append(toIndentedString(gatewayKey)).append("\n");
    sb.append("    gatewayKeyLabel: ").append(toIndentedString(gatewayKeyLabel)).append("\n");
    sb.append("    gatewayKeyPem: ").append(toIndentedString(gatewayKeyPem)).append("\n");
    sb.append("    gatewayKeyPemLabel: ").append(toIndentedString(gatewayKeyPemLabel)).append("\n");
    sb.append("    gatewayLandingPage: ").append(toIndentedString(gatewayLandingPage)).append("\n");
    sb.append("    gatewayMerchantId: ").append(toIndentedString(gatewayMerchantId)).append("\n");
    sb.append("    gatewayMerchantIdLabel: ").append(toIndentedString(gatewayMerchantIdLabel)).append("\n");
    sb.append("    gatewayMode: ").append(toIndentedString(gatewayMode)).append("\n");
    sb.append("    gatewayModeLabel: ").append(toIndentedString(gatewayModeLabel)).append("\n");
    sb.append("    gatewayModes: ").append(toIndentedString(gatewayModes)).append("\n");
    sb.append("    gatewayPageStyle: ").append(toIndentedString(gatewayPageStyle)).append("\n");
    sb.append("    gatewayPageStyleLabel: ").append(toIndentedString(gatewayPageStyleLabel)).append("\n");
    sb.append("    gatewayPageStyles: ").append(toIndentedString(gatewayPageStyles)).append("\n");
    sb.append("    gatewayPartner: ").append(toIndentedString(gatewayPartner)).append("\n");
    sb.append("    gatewayPartnerLabel: ").append(toIndentedString(gatewayPartnerLabel)).append("\n");
    sb.append("    gatewayPassword: ").append(toIndentedString(gatewayPassword)).append("\n");
    sb.append("    gatewayPasswordLabel: ").append(toIndentedString(gatewayPasswordLabel)).append("\n");
    sb.append("    gatewayPayflowColor: ").append(toIndentedString(gatewayPayflowColor)).append("\n");
    sb.append("    gatewayPrivateKeyPassword: ").append(toIndentedString(gatewayPrivateKeyPassword)).append("\n");
    sb.append("    gatewayPrivateKeyPasswordLabel: ").append(toIndentedString(gatewayPrivateKeyPasswordLabel)).append("\n");
    sb.append("    gatewaySolutionType: ").append(toIndentedString(gatewaySolutionType)).append("\n");
    sb.append("    gatewaySolutionTypeLabel: ").append(toIndentedString(gatewaySolutionTypeLabel)).append("\n");
    sb.append("    gatewaySolutionTypes: ").append(toIndentedString(gatewaySolutionTypes)).append("\n");
    sb.append("    gatewayUrl: ").append(toIndentedString(gatewayUrl)).append("\n");
    sb.append("    gatewayUrlLabel: ").append(toIndentedString(gatewayUrlLabel)).append("\n");
    sb.append("    gatewayUsername: ").append(toIndentedString(gatewayUsername)).append("\n");
    sb.append("    gatewayUsernameLabel: ").append(toIndentedString(gatewayUsernameLabel)).append("\n");
    sb.append("    merchantAccountProfileAmex: ").append(toIndentedString(merchantAccountProfileAmex)).append("\n");
    sb.append("    merchantAccountProfileDinersClub: ").append(toIndentedString(merchantAccountProfileDinersClub)).append("\n");
    sb.append("    merchantAccountProfileDiscover: ").append(toIndentedString(merchantAccountProfileDiscover)).append("\n");
    sb.append("    merchantAccountProfileJcb: ").append(toIndentedString(merchantAccountProfileJcb)).append("\n");
    sb.append("    merchantAccountProfileMastercard: ").append(toIndentedString(merchantAccountProfileMastercard)).append("\n");
    sb.append("    merchantAccountProfileVisa: ").append(toIndentedString(merchantAccountProfileVisa)).append("\n");
    sb.append("    merchantId: ").append(toIndentedString(merchantId)).append("\n");
    sb.append("    multiCurrencyDetails: ").append(toIndentedString(multiCurrencyDetails)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    refundSupported: ").append(toIndentedString(refundSupported)).append("\n");
    sb.append("    requireEcheckTaxIdOrDriversLicense: ").append(toIndentedString(requireEcheckTaxIdOrDriversLicense)).append("\n");
    sb.append("    supportVbv3ds: ").append(toIndentedString(supportVbv3ds)).append("\n");
    sb.append("    supportsAmex: ").append(toIndentedString(supportsAmex)).append("\n");
    sb.append("    supportsDinersClub: ").append(toIndentedString(supportsDinersClub)).append("\n");
    sb.append("    supportsDiscover: ").append(toIndentedString(supportsDiscover)).append("\n");
    sb.append("    supportsEcheck: ").append(toIndentedString(supportsEcheck)).append("\n");
    sb.append("    supportsElectronicGiftCard: ").append(toIndentedString(supportsElectronicGiftCard)).append("\n");
    sb.append("    supportsJcb: ").append(toIndentedString(supportsJcb)).append("\n");
    sb.append("    supportsMastercard: ").append(toIndentedString(supportsMastercard)).append("\n");
    sb.append("    supportsVisa: ").append(toIndentedString(supportsVisa)).append("\n");
    sb.append("    thirdParty: ").append(toIndentedString(thirdParty)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

