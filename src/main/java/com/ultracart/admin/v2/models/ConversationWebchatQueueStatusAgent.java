/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * ConversationWebchatQueueStatusAgent
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-09T16:30:26.529-05:00[America/Indianapolis]")
public class ConversationWebchatQueueStatusAgent {
  /**
   * Status of the agent
   */
  @JsonAdapter(AgentStatusEnum.Adapter.class)
  public enum AgentStatusEnum {
    AVAILABLE("available"),
    
    BUSY("busy"),
    
    UNAVAILABLE("unavailable");

    private String value;

    AgentStatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AgentStatusEnum fromValue(String value) {
      for (AgentStatusEnum b : AgentStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<AgentStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AgentStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AgentStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return AgentStatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_AGENT_STATUS = "agent_status";
  @SerializedName(SERIALIZED_NAME_AGENT_STATUS)
  private AgentStatusEnum agentStatus;

  public static final String SERIALIZED_NAME_CONVERSATION_PARTICIPANT_ARN = "conversation_participant_arn";
  @SerializedName(SERIALIZED_NAME_CONVERSATION_PARTICIPANT_ARN)
  private String conversationParticipantArn;

  public static final String SERIALIZED_NAME_CONVERSATION_PARTICIPANT_NAME = "conversation_participant_name";
  @SerializedName(SERIALIZED_NAME_CONVERSATION_PARTICIPANT_NAME)
  private String conversationParticipantName;

  public static final String SERIALIZED_NAME_LAST_CHAT_DTS = "last_chat_dts";
  @SerializedName(SERIALIZED_NAME_LAST_CHAT_DTS)
  private String lastChatDts;

  public static final String SERIALIZED_NAME_NEXT_ROUND_ROBIN = "next_round_robin";
  @SerializedName(SERIALIZED_NAME_NEXT_ROUND_ROBIN)
  private Boolean nextRoundRobin;

  public static final String SERIALIZED_NAME_PROFILE_IMAGE_URL = "profile_image_url";
  @SerializedName(SERIALIZED_NAME_PROFILE_IMAGE_URL)
  private String profileImageUrl;

  public ConversationWebchatQueueStatusAgent() { 
  }

  public ConversationWebchatQueueStatusAgent agentStatus(AgentStatusEnum agentStatus) {
    
    this.agentStatus = agentStatus;
    return this;
  }

   /**
   * Status of the agent
   * @return agentStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Status of the agent")

  public AgentStatusEnum getAgentStatus() {
    return agentStatus;
  }


  public void setAgentStatus(AgentStatusEnum agentStatus) {
    this.agentStatus = agentStatus;
  }


  public ConversationWebchatQueueStatusAgent conversationParticipantArn(String conversationParticipantArn) {
    
    this.conversationParticipantArn = conversationParticipantArn;
    return this;
  }

   /**
   * Get conversationParticipantArn
   * @return conversationParticipantArn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getConversationParticipantArn() {
    return conversationParticipantArn;
  }


  public void setConversationParticipantArn(String conversationParticipantArn) {
    this.conversationParticipantArn = conversationParticipantArn;
  }


  public ConversationWebchatQueueStatusAgent conversationParticipantName(String conversationParticipantName) {
    
    this.conversationParticipantName = conversationParticipantName;
    return this;
  }

   /**
   * Get conversationParticipantName
   * @return conversationParticipantName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getConversationParticipantName() {
    return conversationParticipantName;
  }


  public void setConversationParticipantName(String conversationParticipantName) {
    this.conversationParticipantName = conversationParticipantName;
  }


  public ConversationWebchatQueueStatusAgent lastChatDts(String lastChatDts) {
    
    this.lastChatDts = lastChatDts;
    return this;
  }

   /**
   * Date/time that this agent took their last chat
   * @return lastChatDts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Date/time that this agent took their last chat")

  public String getLastChatDts() {
    return lastChatDts;
  }


  public void setLastChatDts(String lastChatDts) {
    this.lastChatDts = lastChatDts;
  }


  public ConversationWebchatQueueStatusAgent nextRoundRobin(Boolean nextRoundRobin) {
    
    this.nextRoundRobin = nextRoundRobin;
    return this;
  }

   /**
   * Get nextRoundRobin
   * @return nextRoundRobin
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getNextRoundRobin() {
    return nextRoundRobin;
  }


  public void setNextRoundRobin(Boolean nextRoundRobin) {
    this.nextRoundRobin = nextRoundRobin;
  }


  public ConversationWebchatQueueStatusAgent profileImageUrl(String profileImageUrl) {
    
    this.profileImageUrl = profileImageUrl;
    return this;
  }

   /**
   * Profile image URL
   * @return profileImageUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Profile image URL")

  public String getProfileImageUrl() {
    return profileImageUrl;
  }


  public void setProfileImageUrl(String profileImageUrl) {
    this.profileImageUrl = profileImageUrl;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConversationWebchatQueueStatusAgent conversationWebchatQueueStatusAgent = (ConversationWebchatQueueStatusAgent) o;
    return Objects.equals(this.agentStatus, conversationWebchatQueueStatusAgent.agentStatus) &&
        Objects.equals(this.conversationParticipantArn, conversationWebchatQueueStatusAgent.conversationParticipantArn) &&
        Objects.equals(this.conversationParticipantName, conversationWebchatQueueStatusAgent.conversationParticipantName) &&
        Objects.equals(this.lastChatDts, conversationWebchatQueueStatusAgent.lastChatDts) &&
        Objects.equals(this.nextRoundRobin, conversationWebchatQueueStatusAgent.nextRoundRobin) &&
        Objects.equals(this.profileImageUrl, conversationWebchatQueueStatusAgent.profileImageUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(agentStatus, conversationParticipantArn, conversationParticipantName, lastChatDts, nextRoundRobin, profileImageUrl);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConversationWebchatQueueStatusAgent {\n");
    sb.append("    agentStatus: ").append(toIndentedString(agentStatus)).append("\n");
    sb.append("    conversationParticipantArn: ").append(toIndentedString(conversationParticipantArn)).append("\n");
    sb.append("    conversationParticipantName: ").append(toIndentedString(conversationParticipantName)).append("\n");
    sb.append("    lastChatDts: ").append(toIndentedString(lastChatDts)).append("\n");
    sb.append("    nextRoundRobin: ").append(toIndentedString(nextRoundRobin)).append("\n");
    sb.append("    profileImageUrl: ").append(toIndentedString(profileImageUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("agent_status");
    openapiFields.add("conversation_participant_arn");
    openapiFields.add("conversation_participant_name");
    openapiFields.add("last_chat_dts");
    openapiFields.add("next_round_robin");
    openapiFields.add("profile_image_url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ConversationWebchatQueueStatusAgent
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (ConversationWebchatQueueStatusAgent.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in ConversationWebchatQueueStatusAgent is not found in the empty JSON string", ConversationWebchatQueueStatusAgent.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!ConversationWebchatQueueStatusAgent.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ConversationWebchatQueueStatusAgent` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("agent_status") != null && !jsonObj.get("agent_status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `agent_status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("agent_status").toString()));
      }
      if (jsonObj.get("conversation_participant_arn") != null && !jsonObj.get("conversation_participant_arn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `conversation_participant_arn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("conversation_participant_arn").toString()));
      }
      if (jsonObj.get("conversation_participant_name") != null && !jsonObj.get("conversation_participant_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `conversation_participant_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("conversation_participant_name").toString()));
      }
      if (jsonObj.get("last_chat_dts") != null && !jsonObj.get("last_chat_dts").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_chat_dts` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_chat_dts").toString()));
      }
      if (jsonObj.get("profile_image_url") != null && !jsonObj.get("profile_image_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `profile_image_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("profile_image_url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ConversationWebchatQueueStatusAgent.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ConversationWebchatQueueStatusAgent' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ConversationWebchatQueueStatusAgent> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ConversationWebchatQueueStatusAgent.class));

       return (TypeAdapter<T>) new TypeAdapter<ConversationWebchatQueueStatusAgent>() {
           @Override
           public void write(JsonWriter out, ConversationWebchatQueueStatusAgent value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ConversationWebchatQueueStatusAgent read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ConversationWebchatQueueStatusAgent given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ConversationWebchatQueueStatusAgent
  * @throws IOException if the JSON string is invalid with respect to ConversationWebchatQueueStatusAgent
  */
  public static ConversationWebchatQueueStatusAgent fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ConversationWebchatQueueStatusAgent.class);
  }

 /**
  * Convert an instance of ConversationWebchatQueueStatusAgent to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

