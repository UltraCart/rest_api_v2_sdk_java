/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * CustomDashboardSchedule
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2025-08-18T11:12:41.314-04:00")



public class CustomDashboardSchedule {
  @SerializedName("cron_trigger_expression")
  private String cronTriggerExpression = null;

  @SerializedName("data_warehouse_custom_dashboard_oid")
  private Integer dataWarehouseCustomDashboardOid = null;

  @SerializedName("data_warehouse_custom_dashboard_schedule_oid")
  private Integer dataWarehouseCustomDashboardScheduleOid = null;

  @SerializedName("emails")
  private List<String> emails = null;

  @SerializedName("next_send_dts")
  private String nextSendDts = null;

  public CustomDashboardSchedule cronTriggerExpression(String cronTriggerExpression) {
    this.cronTriggerExpression = cronTriggerExpression;
    return this;
  }

   /**
   * Get cronTriggerExpression
   * @return cronTriggerExpression
  **/
  @ApiModelProperty(value = "")
  public String getCronTriggerExpression() {
    return cronTriggerExpression;
  }

  public void setCronTriggerExpression(String cronTriggerExpression) {
    this.cronTriggerExpression = cronTriggerExpression;
  }

  public CustomDashboardSchedule dataWarehouseCustomDashboardOid(Integer dataWarehouseCustomDashboardOid) {
    this.dataWarehouseCustomDashboardOid = dataWarehouseCustomDashboardOid;
    return this;
  }

   /**
   * Get dataWarehouseCustomDashboardOid
   * @return dataWarehouseCustomDashboardOid
  **/
  @ApiModelProperty(value = "")
  public Integer getDataWarehouseCustomDashboardOid() {
    return dataWarehouseCustomDashboardOid;
  }

  public void setDataWarehouseCustomDashboardOid(Integer dataWarehouseCustomDashboardOid) {
    this.dataWarehouseCustomDashboardOid = dataWarehouseCustomDashboardOid;
  }

  public CustomDashboardSchedule dataWarehouseCustomDashboardScheduleOid(Integer dataWarehouseCustomDashboardScheduleOid) {
    this.dataWarehouseCustomDashboardScheduleOid = dataWarehouseCustomDashboardScheduleOid;
    return this;
  }

   /**
   * Get dataWarehouseCustomDashboardScheduleOid
   * @return dataWarehouseCustomDashboardScheduleOid
  **/
  @ApiModelProperty(value = "")
  public Integer getDataWarehouseCustomDashboardScheduleOid() {
    return dataWarehouseCustomDashboardScheduleOid;
  }

  public void setDataWarehouseCustomDashboardScheduleOid(Integer dataWarehouseCustomDashboardScheduleOid) {
    this.dataWarehouseCustomDashboardScheduleOid = dataWarehouseCustomDashboardScheduleOid;
  }

  public CustomDashboardSchedule emails(List<String> emails) {
    this.emails = emails;
    return this;
  }

  public CustomDashboardSchedule addEmailsItem(String emailsItem) {
    if (this.emails == null) {
      this.emails = new ArrayList<String>();
    }
    this.emails.add(emailsItem);
    return this;
  }

   /**
   * Get emails
   * @return emails
  **/
  @ApiModelProperty(value = "")
  public List<String> getEmails() {
    return emails;
  }

  public void setEmails(List<String> emails) {
    this.emails = emails;
  }

  public CustomDashboardSchedule nextSendDts(String nextSendDts) {
    this.nextSendDts = nextSendDts;
    return this;
  }

   /**
   * Date/time that the next send will occur.
   * @return nextSendDts
  **/
  @ApiModelProperty(value = "Date/time that the next send will occur.")
  public String getNextSendDts() {
    return nextSendDts;
  }

  public void setNextSendDts(String nextSendDts) {
    this.nextSendDts = nextSendDts;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomDashboardSchedule customDashboardSchedule = (CustomDashboardSchedule) o;
    return Objects.equals(this.cronTriggerExpression, customDashboardSchedule.cronTriggerExpression) &&
        Objects.equals(this.dataWarehouseCustomDashboardOid, customDashboardSchedule.dataWarehouseCustomDashboardOid) &&
        Objects.equals(this.dataWarehouseCustomDashboardScheduleOid, customDashboardSchedule.dataWarehouseCustomDashboardScheduleOid) &&
        Objects.equals(this.emails, customDashboardSchedule.emails) &&
        Objects.equals(this.nextSendDts, customDashboardSchedule.nextSendDts);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cronTriggerExpression, dataWarehouseCustomDashboardOid, dataWarehouseCustomDashboardScheduleOid, emails, nextSendDts);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomDashboardSchedule {\n");
    
    sb.append("    cronTriggerExpression: ").append(toIndentedString(cronTriggerExpression)).append("\n");
    sb.append("    dataWarehouseCustomDashboardOid: ").append(toIndentedString(dataWarehouseCustomDashboardOid)).append("\n");
    sb.append("    dataWarehouseCustomDashboardScheduleOid: ").append(toIndentedString(dataWarehouseCustomDashboardScheduleOid)).append("\n");
    sb.append("    emails: ").append(toIndentedString(emails)).append("\n");
    sb.append("    nextSendDts: ").append(toIndentedString(nextSendDts)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

