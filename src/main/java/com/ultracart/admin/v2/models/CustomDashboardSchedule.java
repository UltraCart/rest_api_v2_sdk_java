/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * CustomDashboardSchedule
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-18T11:26:02.311-04:00[America/Indianapolis]")
public class CustomDashboardSchedule {
  public static final String SERIALIZED_NAME_CRON_TRIGGER_EXPRESSION = "cron_trigger_expression";
  @SerializedName(SERIALIZED_NAME_CRON_TRIGGER_EXPRESSION)
  private String cronTriggerExpression;

  public static final String SERIALIZED_NAME_DATA_WAREHOUSE_CUSTOM_DASHBOARD_OID = "data_warehouse_custom_dashboard_oid";
  @SerializedName(SERIALIZED_NAME_DATA_WAREHOUSE_CUSTOM_DASHBOARD_OID)
  private Integer dataWarehouseCustomDashboardOid;

  public static final String SERIALIZED_NAME_DATA_WAREHOUSE_CUSTOM_DASHBOARD_SCHEDULE_OID = "data_warehouse_custom_dashboard_schedule_oid";
  @SerializedName(SERIALIZED_NAME_DATA_WAREHOUSE_CUSTOM_DASHBOARD_SCHEDULE_OID)
  private Integer dataWarehouseCustomDashboardScheduleOid;

  public static final String SERIALIZED_NAME_EMAILS = "emails";
  @SerializedName(SERIALIZED_NAME_EMAILS)
  private List<String> emails = null;

  public static final String SERIALIZED_NAME_NEXT_SEND_DTS = "next_send_dts";
  @SerializedName(SERIALIZED_NAME_NEXT_SEND_DTS)
  private String nextSendDts;

  public CustomDashboardSchedule() { 
  }

  public CustomDashboardSchedule cronTriggerExpression(String cronTriggerExpression) {
    
    this.cronTriggerExpression = cronTriggerExpression;
    return this;
  }

   /**
   * Get cronTriggerExpression
   * @return cronTriggerExpression
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCronTriggerExpression() {
    return cronTriggerExpression;
  }


  public void setCronTriggerExpression(String cronTriggerExpression) {
    this.cronTriggerExpression = cronTriggerExpression;
  }


  public CustomDashboardSchedule dataWarehouseCustomDashboardOid(Integer dataWarehouseCustomDashboardOid) {
    
    this.dataWarehouseCustomDashboardOid = dataWarehouseCustomDashboardOid;
    return this;
  }

   /**
   * Get dataWarehouseCustomDashboardOid
   * @return dataWarehouseCustomDashboardOid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getDataWarehouseCustomDashboardOid() {
    return dataWarehouseCustomDashboardOid;
  }


  public void setDataWarehouseCustomDashboardOid(Integer dataWarehouseCustomDashboardOid) {
    this.dataWarehouseCustomDashboardOid = dataWarehouseCustomDashboardOid;
  }


  public CustomDashboardSchedule dataWarehouseCustomDashboardScheduleOid(Integer dataWarehouseCustomDashboardScheduleOid) {
    
    this.dataWarehouseCustomDashboardScheduleOid = dataWarehouseCustomDashboardScheduleOid;
    return this;
  }

   /**
   * Get dataWarehouseCustomDashboardScheduleOid
   * @return dataWarehouseCustomDashboardScheduleOid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getDataWarehouseCustomDashboardScheduleOid() {
    return dataWarehouseCustomDashboardScheduleOid;
  }


  public void setDataWarehouseCustomDashboardScheduleOid(Integer dataWarehouseCustomDashboardScheduleOid) {
    this.dataWarehouseCustomDashboardScheduleOid = dataWarehouseCustomDashboardScheduleOid;
  }


  public CustomDashboardSchedule emails(List<String> emails) {
    
    this.emails = emails;
    return this;
  }

  public CustomDashboardSchedule addEmailsItem(String emailsItem) {
    if (this.emails == null) {
      this.emails = new ArrayList<>();
    }
    this.emails.add(emailsItem);
    return this;
  }

   /**
   * Get emails
   * @return emails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getEmails() {
    return emails;
  }


  public void setEmails(List<String> emails) {
    this.emails = emails;
  }


  public CustomDashboardSchedule nextSendDts(String nextSendDts) {
    
    this.nextSendDts = nextSendDts;
    return this;
  }

   /**
   * Date/time that the next send will occur.
   * @return nextSendDts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Date/time that the next send will occur.")

  public String getNextSendDts() {
    return nextSendDts;
  }


  public void setNextSendDts(String nextSendDts) {
    this.nextSendDts = nextSendDts;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomDashboardSchedule customDashboardSchedule = (CustomDashboardSchedule) o;
    return Objects.equals(this.cronTriggerExpression, customDashboardSchedule.cronTriggerExpression) &&
        Objects.equals(this.dataWarehouseCustomDashboardOid, customDashboardSchedule.dataWarehouseCustomDashboardOid) &&
        Objects.equals(this.dataWarehouseCustomDashboardScheduleOid, customDashboardSchedule.dataWarehouseCustomDashboardScheduleOid) &&
        Objects.equals(this.emails, customDashboardSchedule.emails) &&
        Objects.equals(this.nextSendDts, customDashboardSchedule.nextSendDts);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cronTriggerExpression, dataWarehouseCustomDashboardOid, dataWarehouseCustomDashboardScheduleOid, emails, nextSendDts);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomDashboardSchedule {\n");
    sb.append("    cronTriggerExpression: ").append(toIndentedString(cronTriggerExpression)).append("\n");
    sb.append("    dataWarehouseCustomDashboardOid: ").append(toIndentedString(dataWarehouseCustomDashboardOid)).append("\n");
    sb.append("    dataWarehouseCustomDashboardScheduleOid: ").append(toIndentedString(dataWarehouseCustomDashboardScheduleOid)).append("\n");
    sb.append("    emails: ").append(toIndentedString(emails)).append("\n");
    sb.append("    nextSendDts: ").append(toIndentedString(nextSendDts)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("cron_trigger_expression");
    openapiFields.add("data_warehouse_custom_dashboard_oid");
    openapiFields.add("data_warehouse_custom_dashboard_schedule_oid");
    openapiFields.add("emails");
    openapiFields.add("next_send_dts");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CustomDashboardSchedule
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (CustomDashboardSchedule.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in CustomDashboardSchedule is not found in the empty JSON string", CustomDashboardSchedule.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!CustomDashboardSchedule.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CustomDashboardSchedule` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("cron_trigger_expression") != null && !jsonObj.get("cron_trigger_expression").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cron_trigger_expression` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cron_trigger_expression").toString()));
      }
      // ensure the json data is an array
      if (jsonObj.get("emails") != null && !jsonObj.get("emails").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `emails` to be an array in the JSON string but got `%s`", jsonObj.get("emails").toString()));
      }
      if (jsonObj.get("next_send_dts") != null && !jsonObj.get("next_send_dts").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `next_send_dts` to be a primitive type in the JSON string but got `%s`", jsonObj.get("next_send_dts").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CustomDashboardSchedule.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CustomDashboardSchedule' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CustomDashboardSchedule> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CustomDashboardSchedule.class));

       return (TypeAdapter<T>) new TypeAdapter<CustomDashboardSchedule>() {
           @Override
           public void write(JsonWriter out, CustomDashboardSchedule value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CustomDashboardSchedule read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CustomDashboardSchedule given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CustomDashboardSchedule
  * @throws IOException if the JSON string is invalid with respect to CustomDashboardSchedule
  */
  public static CustomDashboardSchedule fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CustomDashboardSchedule.class);
  }

 /**
  * Convert an instance of CustomDashboardSchedule to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

