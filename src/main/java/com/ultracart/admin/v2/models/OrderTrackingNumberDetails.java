/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.OrderTrackingNumberDetail;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * OrderTrackingNumberDetails
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-08-10T16:36:11.743-04:00[America/Indianapolis]")
public class OrderTrackingNumberDetails {
  public static final String SERIALIZED_NAME_ACTUAL_DELIVERY_DATE = "actual_delivery_date";
  @SerializedName(SERIALIZED_NAME_ACTUAL_DELIVERY_DATE)
  private String actualDeliveryDate;

  public static final String SERIALIZED_NAME_ACTUAL_DELIVERY_DATE_FORMATTED = "actual_delivery_date_formatted";
  @SerializedName(SERIALIZED_NAME_ACTUAL_DELIVERY_DATE_FORMATTED)
  private String actualDeliveryDateFormatted;

  public static final String SERIALIZED_NAME_DETAILS = "details";
  @SerializedName(SERIALIZED_NAME_DETAILS)
  private List<OrderTrackingNumberDetail> details = null;

  public static final String SERIALIZED_NAME_EASYPOST_TRACKER_ID = "easypost_tracker_id";
  @SerializedName(SERIALIZED_NAME_EASYPOST_TRACKER_ID)
  private String easypostTrackerId;

  public static final String SERIALIZED_NAME_EXPECTED_DELIVERY_DATE = "expected_delivery_date";
  @SerializedName(SERIALIZED_NAME_EXPECTED_DELIVERY_DATE)
  private String expectedDeliveryDate;

  public static final String SERIALIZED_NAME_EXPECTED_DELIVERY_DATE_FORMATTED = "expected_delivery_date_formatted";
  @SerializedName(SERIALIZED_NAME_EXPECTED_DELIVERY_DATE_FORMATTED)
  private String expectedDeliveryDateFormatted;

  public static final String SERIALIZED_NAME_MAP_URL = "map_url";
  @SerializedName(SERIALIZED_NAME_MAP_URL)
  private String mapUrl;

  public static final String SERIALIZED_NAME_ORDER_PLACED_DATE = "order_placed_date";
  @SerializedName(SERIALIZED_NAME_ORDER_PLACED_DATE)
  private String orderPlacedDate;

  public static final String SERIALIZED_NAME_ORDER_PLACED_DATE_FORMATTED = "order_placed_date_formatted";
  @SerializedName(SERIALIZED_NAME_ORDER_PLACED_DATE_FORMATTED)
  private String orderPlacedDateFormatted;

  public static final String SERIALIZED_NAME_PAYMENT_PROCESSED_DATE = "payment_processed_date";
  @SerializedName(SERIALIZED_NAME_PAYMENT_PROCESSED_DATE)
  private String paymentProcessedDate;

  public static final String SERIALIZED_NAME_PAYMENT_PROCESSED_DATE_FORMATTED = "payment_processed_date_formatted";
  @SerializedName(SERIALIZED_NAME_PAYMENT_PROCESSED_DATE_FORMATTED)
  private String paymentProcessedDateFormatted;

  public static final String SERIALIZED_NAME_SHIPPED_DATE = "shipped_date";
  @SerializedName(SERIALIZED_NAME_SHIPPED_DATE)
  private String shippedDate;

  public static final String SERIALIZED_NAME_SHIPPED_DATE_FORMATTED = "shipped_date_formatted";
  @SerializedName(SERIALIZED_NAME_SHIPPED_DATE_FORMATTED)
  private String shippedDateFormatted;

  public static final String SERIALIZED_NAME_SHIPPING_METHOD = "shipping_method";
  @SerializedName(SERIALIZED_NAME_SHIPPING_METHOD)
  private String shippingMethod;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_STATUS_DESCRIPTION = "status_description";
  @SerializedName(SERIALIZED_NAME_STATUS_DESCRIPTION)
  private String statusDescription;

  public static final String SERIALIZED_NAME_TRACKING_NUMBER = "tracking_number";
  @SerializedName(SERIALIZED_NAME_TRACKING_NUMBER)
  private String trackingNumber;

  public static final String SERIALIZED_NAME_TRACKING_URL = "tracking_url";
  @SerializedName(SERIALIZED_NAME_TRACKING_URL)
  private String trackingUrl;

  public OrderTrackingNumberDetails() { 
  }

  public OrderTrackingNumberDetails actualDeliveryDate(String actualDeliveryDate) {
    
    this.actualDeliveryDate = actualDeliveryDate;
    return this;
  }

   /**
   * Get actualDeliveryDate
   * @return actualDeliveryDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getActualDeliveryDate() {
    return actualDeliveryDate;
  }


  public void setActualDeliveryDate(String actualDeliveryDate) {
    this.actualDeliveryDate = actualDeliveryDate;
  }


  public OrderTrackingNumberDetails actualDeliveryDateFormatted(String actualDeliveryDateFormatted) {
    
    this.actualDeliveryDateFormatted = actualDeliveryDateFormatted;
    return this;
  }

   /**
   * Get actualDeliveryDateFormatted
   * @return actualDeliveryDateFormatted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getActualDeliveryDateFormatted() {
    return actualDeliveryDateFormatted;
  }


  public void setActualDeliveryDateFormatted(String actualDeliveryDateFormatted) {
    this.actualDeliveryDateFormatted = actualDeliveryDateFormatted;
  }


  public OrderTrackingNumberDetails details(List<OrderTrackingNumberDetail> details) {
    
    this.details = details;
    return this;
  }

  public OrderTrackingNumberDetails addDetailsItem(OrderTrackingNumberDetail detailsItem) {
    if (this.details == null) {
      this.details = new ArrayList<>();
    }
    this.details.add(detailsItem);
    return this;
  }

   /**
   * Get details
   * @return details
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<OrderTrackingNumberDetail> getDetails() {
    return details;
  }


  public void setDetails(List<OrderTrackingNumberDetail> details) {
    this.details = details;
  }


  public OrderTrackingNumberDetails easypostTrackerId(String easypostTrackerId) {
    
    this.easypostTrackerId = easypostTrackerId;
    return this;
  }

   /**
   * Get easypostTrackerId
   * @return easypostTrackerId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEasypostTrackerId() {
    return easypostTrackerId;
  }


  public void setEasypostTrackerId(String easypostTrackerId) {
    this.easypostTrackerId = easypostTrackerId;
  }


  public OrderTrackingNumberDetails expectedDeliveryDate(String expectedDeliveryDate) {
    
    this.expectedDeliveryDate = expectedDeliveryDate;
    return this;
  }

   /**
   * Get expectedDeliveryDate
   * @return expectedDeliveryDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getExpectedDeliveryDate() {
    return expectedDeliveryDate;
  }


  public void setExpectedDeliveryDate(String expectedDeliveryDate) {
    this.expectedDeliveryDate = expectedDeliveryDate;
  }


  public OrderTrackingNumberDetails expectedDeliveryDateFormatted(String expectedDeliveryDateFormatted) {
    
    this.expectedDeliveryDateFormatted = expectedDeliveryDateFormatted;
    return this;
  }

   /**
   * Get expectedDeliveryDateFormatted
   * @return expectedDeliveryDateFormatted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getExpectedDeliveryDateFormatted() {
    return expectedDeliveryDateFormatted;
  }


  public void setExpectedDeliveryDateFormatted(String expectedDeliveryDateFormatted) {
    this.expectedDeliveryDateFormatted = expectedDeliveryDateFormatted;
  }


  public OrderTrackingNumberDetails mapUrl(String mapUrl) {
    
    this.mapUrl = mapUrl;
    return this;
  }

   /**
   * Get mapUrl
   * @return mapUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMapUrl() {
    return mapUrl;
  }


  public void setMapUrl(String mapUrl) {
    this.mapUrl = mapUrl;
  }


  public OrderTrackingNumberDetails orderPlacedDate(String orderPlacedDate) {
    
    this.orderPlacedDate = orderPlacedDate;
    return this;
  }

   /**
   * Get orderPlacedDate
   * @return orderPlacedDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOrderPlacedDate() {
    return orderPlacedDate;
  }


  public void setOrderPlacedDate(String orderPlacedDate) {
    this.orderPlacedDate = orderPlacedDate;
  }


  public OrderTrackingNumberDetails orderPlacedDateFormatted(String orderPlacedDateFormatted) {
    
    this.orderPlacedDateFormatted = orderPlacedDateFormatted;
    return this;
  }

   /**
   * Get orderPlacedDateFormatted
   * @return orderPlacedDateFormatted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOrderPlacedDateFormatted() {
    return orderPlacedDateFormatted;
  }


  public void setOrderPlacedDateFormatted(String orderPlacedDateFormatted) {
    this.orderPlacedDateFormatted = orderPlacedDateFormatted;
  }


  public OrderTrackingNumberDetails paymentProcessedDate(String paymentProcessedDate) {
    
    this.paymentProcessedDate = paymentProcessedDate;
    return this;
  }

   /**
   * Get paymentProcessedDate
   * @return paymentProcessedDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPaymentProcessedDate() {
    return paymentProcessedDate;
  }


  public void setPaymentProcessedDate(String paymentProcessedDate) {
    this.paymentProcessedDate = paymentProcessedDate;
  }


  public OrderTrackingNumberDetails paymentProcessedDateFormatted(String paymentProcessedDateFormatted) {
    
    this.paymentProcessedDateFormatted = paymentProcessedDateFormatted;
    return this;
  }

   /**
   * Get paymentProcessedDateFormatted
   * @return paymentProcessedDateFormatted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPaymentProcessedDateFormatted() {
    return paymentProcessedDateFormatted;
  }


  public void setPaymentProcessedDateFormatted(String paymentProcessedDateFormatted) {
    this.paymentProcessedDateFormatted = paymentProcessedDateFormatted;
  }


  public OrderTrackingNumberDetails shippedDate(String shippedDate) {
    
    this.shippedDate = shippedDate;
    return this;
  }

   /**
   * Get shippedDate
   * @return shippedDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getShippedDate() {
    return shippedDate;
  }


  public void setShippedDate(String shippedDate) {
    this.shippedDate = shippedDate;
  }


  public OrderTrackingNumberDetails shippedDateFormatted(String shippedDateFormatted) {
    
    this.shippedDateFormatted = shippedDateFormatted;
    return this;
  }

   /**
   * Get shippedDateFormatted
   * @return shippedDateFormatted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getShippedDateFormatted() {
    return shippedDateFormatted;
  }


  public void setShippedDateFormatted(String shippedDateFormatted) {
    this.shippedDateFormatted = shippedDateFormatted;
  }


  public OrderTrackingNumberDetails shippingMethod(String shippingMethod) {
    
    this.shippingMethod = shippingMethod;
    return this;
  }

   /**
   * Get shippingMethod
   * @return shippingMethod
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getShippingMethod() {
    return shippingMethod;
  }


  public void setShippingMethod(String shippingMethod) {
    this.shippingMethod = shippingMethod;
  }


  public OrderTrackingNumberDetails status(String status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    this.status = status;
  }


  public OrderTrackingNumberDetails statusDescription(String statusDescription) {
    
    this.statusDescription = statusDescription;
    return this;
  }

   /**
   * Get statusDescription
   * @return statusDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStatusDescription() {
    return statusDescription;
  }


  public void setStatusDescription(String statusDescription) {
    this.statusDescription = statusDescription;
  }


  public OrderTrackingNumberDetails trackingNumber(String trackingNumber) {
    
    this.trackingNumber = trackingNumber;
    return this;
  }

   /**
   * Get trackingNumber
   * @return trackingNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTrackingNumber() {
    return trackingNumber;
  }


  public void setTrackingNumber(String trackingNumber) {
    this.trackingNumber = trackingNumber;
  }


  public OrderTrackingNumberDetails trackingUrl(String trackingUrl) {
    
    this.trackingUrl = trackingUrl;
    return this;
  }

   /**
   * Get trackingUrl
   * @return trackingUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTrackingUrl() {
    return trackingUrl;
  }


  public void setTrackingUrl(String trackingUrl) {
    this.trackingUrl = trackingUrl;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderTrackingNumberDetails orderTrackingNumberDetails = (OrderTrackingNumberDetails) o;
    return Objects.equals(this.actualDeliveryDate, orderTrackingNumberDetails.actualDeliveryDate) &&
        Objects.equals(this.actualDeliveryDateFormatted, orderTrackingNumberDetails.actualDeliveryDateFormatted) &&
        Objects.equals(this.details, orderTrackingNumberDetails.details) &&
        Objects.equals(this.easypostTrackerId, orderTrackingNumberDetails.easypostTrackerId) &&
        Objects.equals(this.expectedDeliveryDate, orderTrackingNumberDetails.expectedDeliveryDate) &&
        Objects.equals(this.expectedDeliveryDateFormatted, orderTrackingNumberDetails.expectedDeliveryDateFormatted) &&
        Objects.equals(this.mapUrl, orderTrackingNumberDetails.mapUrl) &&
        Objects.equals(this.orderPlacedDate, orderTrackingNumberDetails.orderPlacedDate) &&
        Objects.equals(this.orderPlacedDateFormatted, orderTrackingNumberDetails.orderPlacedDateFormatted) &&
        Objects.equals(this.paymentProcessedDate, orderTrackingNumberDetails.paymentProcessedDate) &&
        Objects.equals(this.paymentProcessedDateFormatted, orderTrackingNumberDetails.paymentProcessedDateFormatted) &&
        Objects.equals(this.shippedDate, orderTrackingNumberDetails.shippedDate) &&
        Objects.equals(this.shippedDateFormatted, orderTrackingNumberDetails.shippedDateFormatted) &&
        Objects.equals(this.shippingMethod, orderTrackingNumberDetails.shippingMethod) &&
        Objects.equals(this.status, orderTrackingNumberDetails.status) &&
        Objects.equals(this.statusDescription, orderTrackingNumberDetails.statusDescription) &&
        Objects.equals(this.trackingNumber, orderTrackingNumberDetails.trackingNumber) &&
        Objects.equals(this.trackingUrl, orderTrackingNumberDetails.trackingUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(actualDeliveryDate, actualDeliveryDateFormatted, details, easypostTrackerId, expectedDeliveryDate, expectedDeliveryDateFormatted, mapUrl, orderPlacedDate, orderPlacedDateFormatted, paymentProcessedDate, paymentProcessedDateFormatted, shippedDate, shippedDateFormatted, shippingMethod, status, statusDescription, trackingNumber, trackingUrl);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderTrackingNumberDetails {\n");
    sb.append("    actualDeliveryDate: ").append(toIndentedString(actualDeliveryDate)).append("\n");
    sb.append("    actualDeliveryDateFormatted: ").append(toIndentedString(actualDeliveryDateFormatted)).append("\n");
    sb.append("    details: ").append(toIndentedString(details)).append("\n");
    sb.append("    easypostTrackerId: ").append(toIndentedString(easypostTrackerId)).append("\n");
    sb.append("    expectedDeliveryDate: ").append(toIndentedString(expectedDeliveryDate)).append("\n");
    sb.append("    expectedDeliveryDateFormatted: ").append(toIndentedString(expectedDeliveryDateFormatted)).append("\n");
    sb.append("    mapUrl: ").append(toIndentedString(mapUrl)).append("\n");
    sb.append("    orderPlacedDate: ").append(toIndentedString(orderPlacedDate)).append("\n");
    sb.append("    orderPlacedDateFormatted: ").append(toIndentedString(orderPlacedDateFormatted)).append("\n");
    sb.append("    paymentProcessedDate: ").append(toIndentedString(paymentProcessedDate)).append("\n");
    sb.append("    paymentProcessedDateFormatted: ").append(toIndentedString(paymentProcessedDateFormatted)).append("\n");
    sb.append("    shippedDate: ").append(toIndentedString(shippedDate)).append("\n");
    sb.append("    shippedDateFormatted: ").append(toIndentedString(shippedDateFormatted)).append("\n");
    sb.append("    shippingMethod: ").append(toIndentedString(shippingMethod)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusDescription: ").append(toIndentedString(statusDescription)).append("\n");
    sb.append("    trackingNumber: ").append(toIndentedString(trackingNumber)).append("\n");
    sb.append("    trackingUrl: ").append(toIndentedString(trackingUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("actual_delivery_date");
    openapiFields.add("actual_delivery_date_formatted");
    openapiFields.add("details");
    openapiFields.add("easypost_tracker_id");
    openapiFields.add("expected_delivery_date");
    openapiFields.add("expected_delivery_date_formatted");
    openapiFields.add("map_url");
    openapiFields.add("order_placed_date");
    openapiFields.add("order_placed_date_formatted");
    openapiFields.add("payment_processed_date");
    openapiFields.add("payment_processed_date_formatted");
    openapiFields.add("shipped_date");
    openapiFields.add("shipped_date_formatted");
    openapiFields.add("shipping_method");
    openapiFields.add("status");
    openapiFields.add("status_description");
    openapiFields.add("tracking_number");
    openapiFields.add("tracking_url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to OrderTrackingNumberDetails
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (OrderTrackingNumberDetails.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in OrderTrackingNumberDetails is not found in the empty JSON string", OrderTrackingNumberDetails.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!OrderTrackingNumberDetails.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OrderTrackingNumberDetails` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("actual_delivery_date") != null && !jsonObj.get("actual_delivery_date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `actual_delivery_date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("actual_delivery_date").toString()));
      }
      if (jsonObj.get("actual_delivery_date_formatted") != null && !jsonObj.get("actual_delivery_date_formatted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `actual_delivery_date_formatted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("actual_delivery_date_formatted").toString()));
      }
      JsonArray jsonArraydetails = jsonObj.getAsJsonArray("details");
      if (jsonArraydetails != null) {
        // ensure the json data is an array
        if (!jsonObj.get("details").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `details` to be an array in the JSON string but got `%s`", jsonObj.get("details").toString()));
        }

        // validate the optional field `details` (array)
        for (int i = 0; i < jsonArraydetails.size(); i++) {
          OrderTrackingNumberDetail.validateJsonObject(jsonArraydetails.get(i).getAsJsonObject());
        };
      }
      if (jsonObj.get("easypost_tracker_id") != null && !jsonObj.get("easypost_tracker_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `easypost_tracker_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("easypost_tracker_id").toString()));
      }
      if (jsonObj.get("expected_delivery_date") != null && !jsonObj.get("expected_delivery_date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `expected_delivery_date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("expected_delivery_date").toString()));
      }
      if (jsonObj.get("expected_delivery_date_formatted") != null && !jsonObj.get("expected_delivery_date_formatted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `expected_delivery_date_formatted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("expected_delivery_date_formatted").toString()));
      }
      if (jsonObj.get("map_url") != null && !jsonObj.get("map_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `map_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("map_url").toString()));
      }
      if (jsonObj.get("order_placed_date") != null && !jsonObj.get("order_placed_date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `order_placed_date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("order_placed_date").toString()));
      }
      if (jsonObj.get("order_placed_date_formatted") != null && !jsonObj.get("order_placed_date_formatted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `order_placed_date_formatted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("order_placed_date_formatted").toString()));
      }
      if (jsonObj.get("payment_processed_date") != null && !jsonObj.get("payment_processed_date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payment_processed_date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payment_processed_date").toString()));
      }
      if (jsonObj.get("payment_processed_date_formatted") != null && !jsonObj.get("payment_processed_date_formatted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payment_processed_date_formatted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payment_processed_date_formatted").toString()));
      }
      if (jsonObj.get("shipped_date") != null && !jsonObj.get("shipped_date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipped_date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipped_date").toString()));
      }
      if (jsonObj.get("shipped_date_formatted") != null && !jsonObj.get("shipped_date_formatted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipped_date_formatted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipped_date_formatted").toString()));
      }
      if (jsonObj.get("shipping_method") != null && !jsonObj.get("shipping_method").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipping_method` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipping_method").toString()));
      }
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if (jsonObj.get("status_description") != null && !jsonObj.get("status_description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status_description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status_description").toString()));
      }
      if (jsonObj.get("tracking_number") != null && !jsonObj.get("tracking_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tracking_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tracking_number").toString()));
      }
      if (jsonObj.get("tracking_url") != null && !jsonObj.get("tracking_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tracking_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tracking_url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OrderTrackingNumberDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OrderTrackingNumberDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OrderTrackingNumberDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OrderTrackingNumberDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<OrderTrackingNumberDetails>() {
           @Override
           public void write(JsonWriter out, OrderTrackingNumberDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OrderTrackingNumberDetails read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of OrderTrackingNumberDetails given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of OrderTrackingNumberDetails
  * @throws IOException if the JSON string is invalid with respect to OrderTrackingNumberDetails
  */
  public static OrderTrackingNumberDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OrderTrackingNumberDetails.class);
  }

 /**
  * Convert an instance of OrderTrackingNumberDetails to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

