/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * ItemInventorySnapshotDistributionCenter
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2025-08-04T13:55:37.247-04:00")



public class ItemInventorySnapshotDistributionCenter {
  @SerializedName("allocated_to_placed_orders")
  private Integer allocatedToPlacedOrders = null;

  @SerializedName("allocated_to_shopping_carts")
  private Integer allocatedToShoppingCarts = null;

  @SerializedName("available_to_allocate")
  private Integer availableToAllocate = null;

  @SerializedName("code")
  private String code = null;

  @SerializedName("quantity")
  private Integer quantity = null;

  public ItemInventorySnapshotDistributionCenter allocatedToPlacedOrders(Integer allocatedToPlacedOrders) {
    this.allocatedToPlacedOrders = allocatedToPlacedOrders;
    return this;
  }

   /**
   * Get allocatedToPlacedOrders
   * @return allocatedToPlacedOrders
  **/
  @ApiModelProperty(value = "")
  public Integer getAllocatedToPlacedOrders() {
    return allocatedToPlacedOrders;
  }

  public void setAllocatedToPlacedOrders(Integer allocatedToPlacedOrders) {
    this.allocatedToPlacedOrders = allocatedToPlacedOrders;
  }

  public ItemInventorySnapshotDistributionCenter allocatedToShoppingCarts(Integer allocatedToShoppingCarts) {
    this.allocatedToShoppingCarts = allocatedToShoppingCarts;
    return this;
  }

   /**
   * Get allocatedToShoppingCarts
   * @return allocatedToShoppingCarts
  **/
  @ApiModelProperty(value = "")
  public Integer getAllocatedToShoppingCarts() {
    return allocatedToShoppingCarts;
  }

  public void setAllocatedToShoppingCarts(Integer allocatedToShoppingCarts) {
    this.allocatedToShoppingCarts = allocatedToShoppingCarts;
  }

  public ItemInventorySnapshotDistributionCenter availableToAllocate(Integer availableToAllocate) {
    this.availableToAllocate = availableToAllocate;
    return this;
  }

   /**
   * Get availableToAllocate
   * @return availableToAllocate
  **/
  @ApiModelProperty(value = "")
  public Integer getAvailableToAllocate() {
    return availableToAllocate;
  }

  public void setAvailableToAllocate(Integer availableToAllocate) {
    this.availableToAllocate = availableToAllocate;
  }

  public ItemInventorySnapshotDistributionCenter code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Get code
   * @return code
  **/
  @ApiModelProperty(value = "")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public ItemInventorySnapshotDistributionCenter quantity(Integer quantity) {
    this.quantity = quantity;
    return this;
  }

   /**
   * Get quantity
   * @return quantity
  **/
  @ApiModelProperty(value = "")
  public Integer getQuantity() {
    return quantity;
  }

  public void setQuantity(Integer quantity) {
    this.quantity = quantity;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ItemInventorySnapshotDistributionCenter itemInventorySnapshotDistributionCenter = (ItemInventorySnapshotDistributionCenter) o;
    return Objects.equals(this.allocatedToPlacedOrders, itemInventorySnapshotDistributionCenter.allocatedToPlacedOrders) &&
        Objects.equals(this.allocatedToShoppingCarts, itemInventorySnapshotDistributionCenter.allocatedToShoppingCarts) &&
        Objects.equals(this.availableToAllocate, itemInventorySnapshotDistributionCenter.availableToAllocate) &&
        Objects.equals(this.code, itemInventorySnapshotDistributionCenter.code) &&
        Objects.equals(this.quantity, itemInventorySnapshotDistributionCenter.quantity);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allocatedToPlacedOrders, allocatedToShoppingCarts, availableToAllocate, code, quantity);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ItemInventorySnapshotDistributionCenter {\n");
    
    sb.append("    allocatedToPlacedOrders: ").append(toIndentedString(allocatedToPlacedOrders)).append("\n");
    sb.append("    allocatedToShoppingCarts: ").append(toIndentedString(allocatedToShoppingCarts)).append("\n");
    sb.append("    availableToAllocate: ").append(toIndentedString(availableToAllocate)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

