/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * ScreenRecordingFilterGeoDistance
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-10-26T09:34:51.532-04:00")



public class ScreenRecordingFilterGeoDistance {
  @SerializedName("distance")
  private Integer distance = null;

  @SerializedName("distance_uom")
  private String distanceUom = null;

  @SerializedName("from_address")
  private String fromAddress = null;

  @SerializedName("lat")
  private BigDecimal lat = null;

  @SerializedName("lon")
  private BigDecimal lon = null;

  public ScreenRecordingFilterGeoDistance distance(Integer distance) {
    this.distance = distance;
    return this;
  }

   /**
   * Get distance
   * @return distance
  **/
  @ApiModelProperty(value = "")
  public Integer getDistance() {
    return distance;
  }

  public void setDistance(Integer distance) {
    this.distance = distance;
  }

  public ScreenRecordingFilterGeoDistance distanceUom(String distanceUom) {
    this.distanceUom = distanceUom;
    return this;
  }

   /**
   * Get distanceUom
   * @return distanceUom
  **/
  @ApiModelProperty(value = "")
  public String getDistanceUom() {
    return distanceUom;
  }

  public void setDistanceUom(String distanceUom) {
    this.distanceUom = distanceUom;
  }

  public ScreenRecordingFilterGeoDistance fromAddress(String fromAddress) {
    this.fromAddress = fromAddress;
    return this;
  }

   /**
   * Get fromAddress
   * @return fromAddress
  **/
  @ApiModelProperty(value = "")
  public String getFromAddress() {
    return fromAddress;
  }

  public void setFromAddress(String fromAddress) {
    this.fromAddress = fromAddress;
  }

  public ScreenRecordingFilterGeoDistance lat(BigDecimal lat) {
    this.lat = lat;
    return this;
  }

   /**
   * Get lat
   * @return lat
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getLat() {
    return lat;
  }

  public void setLat(BigDecimal lat) {
    this.lat = lat;
  }

  public ScreenRecordingFilterGeoDistance lon(BigDecimal lon) {
    this.lon = lon;
    return this;
  }

   /**
   * Get lon
   * @return lon
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getLon() {
    return lon;
  }

  public void setLon(BigDecimal lon) {
    this.lon = lon;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ScreenRecordingFilterGeoDistance screenRecordingFilterGeoDistance = (ScreenRecordingFilterGeoDistance) o;
    return Objects.equals(this.distance, screenRecordingFilterGeoDistance.distance) &&
        Objects.equals(this.distanceUom, screenRecordingFilterGeoDistance.distanceUom) &&
        Objects.equals(this.fromAddress, screenRecordingFilterGeoDistance.fromAddress) &&
        Objects.equals(this.lat, screenRecordingFilterGeoDistance.lat) &&
        Objects.equals(this.lon, screenRecordingFilterGeoDistance.lon);
  }

  @Override
  public int hashCode() {
    return Objects.hash(distance, distanceUom, fromAddress, lat, lon);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ScreenRecordingFilterGeoDistance {\n");
    
    sb.append("    distance: ").append(toIndentedString(distance)).append("\n");
    sb.append("    distanceUom: ").append(toIndentedString(distanceUom)).append("\n");
    sb.append("    fromAddress: ").append(toIndentedString(fromAddress)).append("\n");
    sb.append("    lat: ").append(toIndentedString(lat)).append("\n");
    sb.append("    lon: ").append(toIndentedString(lon)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

