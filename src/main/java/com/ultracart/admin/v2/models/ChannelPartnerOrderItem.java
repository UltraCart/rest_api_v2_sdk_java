/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.ChannelPartnerOrderItemOption;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

/**
 * ChannelPartnerOrderItem
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-05-27T09:06:14.568-04:00")



public class ChannelPartnerOrderItem {
  @SerializedName("arbitrary_unit_cost")
  private BigDecimal arbitraryUnitCost = null;

  @SerializedName("auto_order_last_rebill_dts")
  private String autoOrderLastRebillDts = null;

  /**
   * The frequency schedule for this item if this item is part of an auto (recurring) order
   */
  @JsonAdapter(AutoOrderScheduleEnum.Adapter.class)
  public enum AutoOrderScheduleEnum {
    WEEKLY("Weekly"),
    
    EVERY_10_DAYS("Every 10 Days"),
    
    BIWEEKLY("Biweekly"),
    
    EVERY_24_DAYS("Every 24 Days"),
    
    EVERY_28_DAYS("Every 28 Days"),
    
    MONTHLY("Monthly"),
    
    EVERY_45_DAYS("Every 45 Days"),
    
    EVERY_2_MONTHS("Every 2 Months"),
    
    EVERY_3_MONTHS("Every 3 Months"),
    
    EVERY_4_MONTHS("Every 4 Months"),
    
    EVERY_6_MONTHS("Every 6 Months"),
    
    YEARLY("Yearly");

    private String value;

    AutoOrderScheduleEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AutoOrderScheduleEnum fromValue(String text) {
      for (AutoOrderScheduleEnum b : AutoOrderScheduleEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<AutoOrderScheduleEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AutoOrderScheduleEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AutoOrderScheduleEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return AutoOrderScheduleEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("auto_order_schedule")
  private AutoOrderScheduleEnum autoOrderSchedule = null;

  @SerializedName("merchant_item_id")
  private String merchantItemId = null;

  @SerializedName("options")
  private List<ChannelPartnerOrderItemOption> options = null;

  @SerializedName("quantity")
  private BigDecimal quantity = null;

  @SerializedName("upsell")
  private Boolean upsell = null;

  public ChannelPartnerOrderItem arbitraryUnitCost(BigDecimal arbitraryUnitCost) {
    this.arbitraryUnitCost = arbitraryUnitCost;
    return this;
  }

   /**
   * Arbitrary unit cost for this item that differs from the listed price
   * @return arbitraryUnitCost
  **/
  @ApiModelProperty(value = "Arbitrary unit cost for this item that differs from the listed price")
  public BigDecimal getArbitraryUnitCost() {
    return arbitraryUnitCost;
  }

  public void setArbitraryUnitCost(BigDecimal arbitraryUnitCost) {
    this.arbitraryUnitCost = arbitraryUnitCost;
  }

  public ChannelPartnerOrderItem autoOrderLastRebillDts(String autoOrderLastRebillDts) {
    this.autoOrderLastRebillDts = autoOrderLastRebillDts;
    return this;
  }

   /**
   * Optional date/time of the last rebill if this item is part of an auto (recurring) order
   * @return autoOrderLastRebillDts
  **/
  @ApiModelProperty(value = "Optional date/time of the last rebill if this item is part of an auto (recurring) order")
  public String getAutoOrderLastRebillDts() {
    return autoOrderLastRebillDts;
  }

  public void setAutoOrderLastRebillDts(String autoOrderLastRebillDts) {
    this.autoOrderLastRebillDts = autoOrderLastRebillDts;
  }

  public ChannelPartnerOrderItem autoOrderSchedule(AutoOrderScheduleEnum autoOrderSchedule) {
    this.autoOrderSchedule = autoOrderSchedule;
    return this;
  }

   /**
   * The frequency schedule for this item if this item is part of an auto (recurring) order
   * @return autoOrderSchedule
  **/
  @ApiModelProperty(value = "The frequency schedule for this item if this item is part of an auto (recurring) order")
  public AutoOrderScheduleEnum getAutoOrderSchedule() {
    return autoOrderSchedule;
  }

  public void setAutoOrderSchedule(AutoOrderScheduleEnum autoOrderSchedule) {
    this.autoOrderSchedule = autoOrderSchedule;
  }

  public ChannelPartnerOrderItem merchantItemId(String merchantItemId) {
    this.merchantItemId = merchantItemId;
    return this;
  }

   /**
   * Item ID
   * @return merchantItemId
  **/
  @ApiModelProperty(value = "Item ID")
  public String getMerchantItemId() {
    return merchantItemId;
  }

  public void setMerchantItemId(String merchantItemId) {
    this.merchantItemId = merchantItemId;
  }

  public ChannelPartnerOrderItem options(List<ChannelPartnerOrderItemOption> options) {
    this.options = options;
    return this;
  }

  public ChannelPartnerOrderItem addOptionsItem(ChannelPartnerOrderItemOption optionsItem) {
    if (this.options == null) {
      this.options = new ArrayList<ChannelPartnerOrderItemOption>();
    }
    this.options.add(optionsItem);
    return this;
  }

   /**
   * Item options
   * @return options
  **/
  @ApiModelProperty(value = "Item options")
  public List<ChannelPartnerOrderItemOption> getOptions() {
    return options;
  }

  public void setOptions(List<ChannelPartnerOrderItemOption> options) {
    this.options = options;
  }

  public ChannelPartnerOrderItem quantity(BigDecimal quantity) {
    this.quantity = quantity;
    return this;
  }

   /**
   * Quantity
   * @return quantity
  **/
  @ApiModelProperty(value = "Quantity")
  public BigDecimal getQuantity() {
    return quantity;
  }

  public void setQuantity(BigDecimal quantity) {
    this.quantity = quantity;
  }

  public ChannelPartnerOrderItem upsell(Boolean upsell) {
    this.upsell = upsell;
    return this;
  }

   /**
   * True if this item was an upsell item.
   * @return upsell
  **/
  @ApiModelProperty(value = "True if this item was an upsell item.")
  public Boolean isUpsell() {
    return upsell;
  }

  public void setUpsell(Boolean upsell) {
    this.upsell = upsell;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChannelPartnerOrderItem channelPartnerOrderItem = (ChannelPartnerOrderItem) o;
    return Objects.equals(this.arbitraryUnitCost, channelPartnerOrderItem.arbitraryUnitCost) &&
        Objects.equals(this.autoOrderLastRebillDts, channelPartnerOrderItem.autoOrderLastRebillDts) &&
        Objects.equals(this.autoOrderSchedule, channelPartnerOrderItem.autoOrderSchedule) &&
        Objects.equals(this.merchantItemId, channelPartnerOrderItem.merchantItemId) &&
        Objects.equals(this.options, channelPartnerOrderItem.options) &&
        Objects.equals(this.quantity, channelPartnerOrderItem.quantity) &&
        Objects.equals(this.upsell, channelPartnerOrderItem.upsell);
  }

  @Override
  public int hashCode() {
    return Objects.hash(arbitraryUnitCost, autoOrderLastRebillDts, autoOrderSchedule, merchantItemId, options, quantity, upsell);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChannelPartnerOrderItem {\n");
    
    sb.append("    arbitraryUnitCost: ").append(toIndentedString(arbitraryUnitCost)).append("\n");
    sb.append("    autoOrderLastRebillDts: ").append(toIndentedString(autoOrderLastRebillDts)).append("\n");
    sb.append("    autoOrderSchedule: ").append(toIndentedString(autoOrderSchedule)).append("\n");
    sb.append("    merchantItemId: ").append(toIndentedString(merchantItemId)).append("\n");
    sb.append("    options: ").append(toIndentedString(options)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    upsell: ").append(toIndentedString(upsell)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

