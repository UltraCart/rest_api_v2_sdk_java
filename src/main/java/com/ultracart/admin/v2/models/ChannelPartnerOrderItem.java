/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.ChannelPartnerOrderItemOption;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * ChannelPartnerOrderItem
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-08-12T11:41:22.949-04:00[America/Indianapolis]")
public class ChannelPartnerOrderItem {
  public static final String SERIALIZED_NAME_ARBITRARY_UNIT_COST = "arbitrary_unit_cost";
  @SerializedName(SERIALIZED_NAME_ARBITRARY_UNIT_COST)
  private BigDecimal arbitraryUnitCost;

  public static final String SERIALIZED_NAME_AUTO_ORDER_LAST_REBILL_DTS = "auto_order_last_rebill_dts";
  @SerializedName(SERIALIZED_NAME_AUTO_ORDER_LAST_REBILL_DTS)
  private String autoOrderLastRebillDts;

  /**
   * The frequency schedule for this item if this item is part of an auto (recurring) order
   */
  @JsonAdapter(AutoOrderScheduleEnum.Adapter.class)
  public enum AutoOrderScheduleEnum {
    WEEKLY("Weekly"),
    
    EVERY_10_DAYS("Every 10 Days"),
    
    BIWEEKLY("Biweekly"),
    
    EVERY_24_DAYS("Every 24 Days"),
    
    EVERY_28_DAYS("Every 28 Days"),
    
    MONTHLY("Monthly"),
    
    EVERY_45_DAYS("Every 45 Days"),
    
    EVERY_2_MONTHS("Every 2 Months"),
    
    EVERY_3_MONTHS("Every 3 Months"),
    
    EVERY_4_MONTHS("Every 4 Months"),
    
    EVERY_6_MONTHS("Every 6 Months"),
    
    YEARLY("Yearly");

    private String value;

    AutoOrderScheduleEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AutoOrderScheduleEnum fromValue(String value) {
      for (AutoOrderScheduleEnum b : AutoOrderScheduleEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<AutoOrderScheduleEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AutoOrderScheduleEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AutoOrderScheduleEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return AutoOrderScheduleEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_AUTO_ORDER_SCHEDULE = "auto_order_schedule";
  @SerializedName(SERIALIZED_NAME_AUTO_ORDER_SCHEDULE)
  private AutoOrderScheduleEnum autoOrderSchedule;

  public static final String SERIALIZED_NAME_MERCHANT_ITEM_ID = "merchant_item_id";
  @SerializedName(SERIALIZED_NAME_MERCHANT_ITEM_ID)
  private String merchantItemId;

  public static final String SERIALIZED_NAME_OPTIONS = "options";
  @SerializedName(SERIALIZED_NAME_OPTIONS)
  private List<ChannelPartnerOrderItemOption> options = null;

  public static final String SERIALIZED_NAME_QUANTITY = "quantity";
  @SerializedName(SERIALIZED_NAME_QUANTITY)
  private BigDecimal quantity;

  public static final String SERIALIZED_NAME_UPSELL = "upsell";
  @SerializedName(SERIALIZED_NAME_UPSELL)
  private Boolean upsell;

  public ChannelPartnerOrderItem() { 
  }

  public ChannelPartnerOrderItem arbitraryUnitCost(BigDecimal arbitraryUnitCost) {
    
    this.arbitraryUnitCost = arbitraryUnitCost;
    return this;
  }

   /**
   * Arbitrary unit cost for this item that differs from the listed price
   * @return arbitraryUnitCost
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Arbitrary unit cost for this item that differs from the listed price")

  public BigDecimal getArbitraryUnitCost() {
    return arbitraryUnitCost;
  }


  public void setArbitraryUnitCost(BigDecimal arbitraryUnitCost) {
    this.arbitraryUnitCost = arbitraryUnitCost;
  }


  public ChannelPartnerOrderItem autoOrderLastRebillDts(String autoOrderLastRebillDts) {
    
    this.autoOrderLastRebillDts = autoOrderLastRebillDts;
    return this;
  }

   /**
   * Optional date/time of the last rebill if this item is part of an auto (recurring) order
   * @return autoOrderLastRebillDts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Optional date/time of the last rebill if this item is part of an auto (recurring) order")

  public String getAutoOrderLastRebillDts() {
    return autoOrderLastRebillDts;
  }


  public void setAutoOrderLastRebillDts(String autoOrderLastRebillDts) {
    this.autoOrderLastRebillDts = autoOrderLastRebillDts;
  }


  public ChannelPartnerOrderItem autoOrderSchedule(AutoOrderScheduleEnum autoOrderSchedule) {
    
    this.autoOrderSchedule = autoOrderSchedule;
    return this;
  }

   /**
   * The frequency schedule for this item if this item is part of an auto (recurring) order
   * @return autoOrderSchedule
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The frequency schedule for this item if this item is part of an auto (recurring) order")

  public AutoOrderScheduleEnum getAutoOrderSchedule() {
    return autoOrderSchedule;
  }


  public void setAutoOrderSchedule(AutoOrderScheduleEnum autoOrderSchedule) {
    this.autoOrderSchedule = autoOrderSchedule;
  }


  public ChannelPartnerOrderItem merchantItemId(String merchantItemId) {
    
    this.merchantItemId = merchantItemId;
    return this;
  }

   /**
   * Item ID
   * @return merchantItemId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Item ID")

  public String getMerchantItemId() {
    return merchantItemId;
  }


  public void setMerchantItemId(String merchantItemId) {
    this.merchantItemId = merchantItemId;
  }


  public ChannelPartnerOrderItem options(List<ChannelPartnerOrderItemOption> options) {
    
    this.options = options;
    return this;
  }

  public ChannelPartnerOrderItem addOptionsItem(ChannelPartnerOrderItemOption optionsItem) {
    if (this.options == null) {
      this.options = new ArrayList<>();
    }
    this.options.add(optionsItem);
    return this;
  }

   /**
   * Item options
   * @return options
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Item options")

  public List<ChannelPartnerOrderItemOption> getOptions() {
    return options;
  }


  public void setOptions(List<ChannelPartnerOrderItemOption> options) {
    this.options = options;
  }


  public ChannelPartnerOrderItem quantity(BigDecimal quantity) {
    
    this.quantity = quantity;
    return this;
  }

   /**
   * Quantity
   * @return quantity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Quantity")

  public BigDecimal getQuantity() {
    return quantity;
  }


  public void setQuantity(BigDecimal quantity) {
    this.quantity = quantity;
  }


  public ChannelPartnerOrderItem upsell(Boolean upsell) {
    
    this.upsell = upsell;
    return this;
  }

   /**
   * True if this item was an upsell item.
   * @return upsell
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if this item was an upsell item.")

  public Boolean getUpsell() {
    return upsell;
  }


  public void setUpsell(Boolean upsell) {
    this.upsell = upsell;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChannelPartnerOrderItem channelPartnerOrderItem = (ChannelPartnerOrderItem) o;
    return Objects.equals(this.arbitraryUnitCost, channelPartnerOrderItem.arbitraryUnitCost) &&
        Objects.equals(this.autoOrderLastRebillDts, channelPartnerOrderItem.autoOrderLastRebillDts) &&
        Objects.equals(this.autoOrderSchedule, channelPartnerOrderItem.autoOrderSchedule) &&
        Objects.equals(this.merchantItemId, channelPartnerOrderItem.merchantItemId) &&
        Objects.equals(this.options, channelPartnerOrderItem.options) &&
        Objects.equals(this.quantity, channelPartnerOrderItem.quantity) &&
        Objects.equals(this.upsell, channelPartnerOrderItem.upsell);
  }

  @Override
  public int hashCode() {
    return Objects.hash(arbitraryUnitCost, autoOrderLastRebillDts, autoOrderSchedule, merchantItemId, options, quantity, upsell);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChannelPartnerOrderItem {\n");
    sb.append("    arbitraryUnitCost: ").append(toIndentedString(arbitraryUnitCost)).append("\n");
    sb.append("    autoOrderLastRebillDts: ").append(toIndentedString(autoOrderLastRebillDts)).append("\n");
    sb.append("    autoOrderSchedule: ").append(toIndentedString(autoOrderSchedule)).append("\n");
    sb.append("    merchantItemId: ").append(toIndentedString(merchantItemId)).append("\n");
    sb.append("    options: ").append(toIndentedString(options)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    upsell: ").append(toIndentedString(upsell)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("arbitrary_unit_cost");
    openapiFields.add("auto_order_last_rebill_dts");
    openapiFields.add("auto_order_schedule");
    openapiFields.add("merchant_item_id");
    openapiFields.add("options");
    openapiFields.add("quantity");
    openapiFields.add("upsell");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ChannelPartnerOrderItem
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (ChannelPartnerOrderItem.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in ChannelPartnerOrderItem is not found in the empty JSON string", ChannelPartnerOrderItem.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!ChannelPartnerOrderItem.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ChannelPartnerOrderItem` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("auto_order_last_rebill_dts") != null && !jsonObj.get("auto_order_last_rebill_dts").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `auto_order_last_rebill_dts` to be a primitive type in the JSON string but got `%s`", jsonObj.get("auto_order_last_rebill_dts").toString()));
      }
      if (jsonObj.get("auto_order_schedule") != null && !jsonObj.get("auto_order_schedule").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `auto_order_schedule` to be a primitive type in the JSON string but got `%s`", jsonObj.get("auto_order_schedule").toString()));
      }
      if (jsonObj.get("merchant_item_id") != null && !jsonObj.get("merchant_item_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `merchant_item_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("merchant_item_id").toString()));
      }
      JsonArray jsonArrayoptions = jsonObj.getAsJsonArray("options");
      if (jsonArrayoptions != null) {
        // ensure the json data is an array
        if (!jsonObj.get("options").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `options` to be an array in the JSON string but got `%s`", jsonObj.get("options").toString()));
        }

        // validate the optional field `options` (array)
        for (int i = 0; i < jsonArrayoptions.size(); i++) {
          ChannelPartnerOrderItemOption.validateJsonObject(jsonArrayoptions.get(i).getAsJsonObject());
        };
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ChannelPartnerOrderItem.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ChannelPartnerOrderItem' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ChannelPartnerOrderItem> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ChannelPartnerOrderItem.class));

       return (TypeAdapter<T>) new TypeAdapter<ChannelPartnerOrderItem>() {
           @Override
           public void write(JsonWriter out, ChannelPartnerOrderItem value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ChannelPartnerOrderItem read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ChannelPartnerOrderItem given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ChannelPartnerOrderItem
  * @throws IOException if the JSON string is invalid with respect to ChannelPartnerOrderItem
  */
  public static ChannelPartnerOrderItem fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ChannelPartnerOrderItem.class);
  }

 /**
  * Convert an instance of ChannelPartnerOrderItem to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

