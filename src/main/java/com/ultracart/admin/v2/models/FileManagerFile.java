/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * FileManagerFile
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-01-17T16:23:43.112-05:00[America/Indianapolis]")
public class FileManagerFile {
  public static final String SERIALIZED_NAME_FAVORITE = "favorite";
  @SerializedName(SERIALIZED_NAME_FAVORITE)
  private Boolean favorite;

  public static final String SERIALIZED_NAME_HOSTNAME = "hostname";
  @SerializedName(SERIALIZED_NAME_HOSTNAME)
  private String hostname;

  public static final String SERIALIZED_NAME_I18N_VIOLATION = "i18n_violation";
  @SerializedName(SERIALIZED_NAME_I18N_VIOLATION)
  private Boolean i18nViolation;

  public static final String SERIALIZED_NAME_ICON = "icon";
  @SerializedName(SERIALIZED_NAME_ICON)
  private String icon;

  public static final String SERIALIZED_NAME_INTERNAL_VERSION = "internal_version";
  @SerializedName(SERIALIZED_NAME_INTERNAL_VERSION)
  private Integer internalVersion;

  public static final String SERIALIZED_NAME_LAST_MODIFIED = "last_modified";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED)
  private String lastModified;

  public static final String SERIALIZED_NAME_MERGE_CONFLICT = "merge_conflict";
  @SerializedName(SERIALIZED_NAME_MERGE_CONFLICT)
  private Boolean mergeConflict;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PARENT_STOREFRONT_FS_DIRECTORY_OID = "parent_storefront_fs_directory_oid";
  @SerializedName(SERIALIZED_NAME_PARENT_STOREFRONT_FS_DIRECTORY_OID)
  private Integer parentStorefrontFsDirectoryOid;

  public static final String SERIALIZED_NAME_PART_OF_ACTIVE_THEME = "part_of_active_theme";
  @SerializedName(SERIALIZED_NAME_PART_OF_ACTIVE_THEME)
  private Boolean partOfActiveTheme;

  public static final String SERIALIZED_NAME_PATH = "path";
  @SerializedName(SERIALIZED_NAME_PATH)
  private String path;

  public static final String SERIALIZED_NAME_RAW_SIZE = "raw_size";
  @SerializedName(SERIALIZED_NAME_RAW_SIZE)
  private Integer rawSize;

  public static final String SERIALIZED_NAME_SELECTED = "selected";
  @SerializedName(SERIALIZED_NAME_SELECTED)
  private Boolean selected;

  public static final String SERIALIZED_NAME_SIZE = "size";
  @SerializedName(SERIALIZED_NAME_SIZE)
  private String size;

  public static final String SERIALIZED_NAME_STOREFRONT_FS_DIRECTORY_OID = "storefront_fs_directory_oid";
  @SerializedName(SERIALIZED_NAME_STOREFRONT_FS_DIRECTORY_OID)
  private Integer storefrontFsDirectoryOid;

  public static final String SERIALIZED_NAME_STOREFRONT_FS_FILE_OID = "storefront_fs_file_oid";
  @SerializedName(SERIALIZED_NAME_STOREFRONT_FS_FILE_OID)
  private Integer storefrontFsFileOid;

  public static final String SERIALIZED_NAME_STOREFRONT_OID = "storefront_oid";
  @SerializedName(SERIALIZED_NAME_STOREFRONT_OID)
  private Integer storefrontOid;

  public static final String SERIALIZED_NAME_THUMBNAIL16_URL = "thumbnail_16_url";
  @SerializedName(SERIALIZED_NAME_THUMBNAIL16_URL)
  private String thumbnail16Url;

  public static final String SERIALIZED_NAME_THUMBNAIL32_URL = "thumbnail_32_url";
  @SerializedName(SERIALIZED_NAME_THUMBNAIL32_URL)
  private String thumbnail32Url;

  public static final String SERIALIZED_NAME_THUMBNAIL64_URL = "thumbnail_64_url";
  @SerializedName(SERIALIZED_NAME_THUMBNAIL64_URL)
  private String thumbnail64Url;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_VALID_VELOCITY = "valid_velocity";
  @SerializedName(SERIALIZED_NAME_VALID_VELOCITY)
  private String validVelocity;

  public FileManagerFile() { 
  }

  public FileManagerFile favorite(Boolean favorite) {
    
    this.favorite = favorite;
    return this;
  }

   /**
   * Get favorite
   * @return favorite
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getFavorite() {
    return favorite;
  }


  public void setFavorite(Boolean favorite) {
    this.favorite = favorite;
  }


  public FileManagerFile hostname(String hostname) {
    
    this.hostname = hostname;
    return this;
  }

   /**
   * Get hostname
   * @return hostname
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getHostname() {
    return hostname;
  }


  public void setHostname(String hostname) {
    this.hostname = hostname;
  }


  public FileManagerFile i18nViolation(Boolean i18nViolation) {
    
    this.i18nViolation = i18nViolation;
    return this;
  }

   /**
   * Get i18nViolation
   * @return i18nViolation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getI18nViolation() {
    return i18nViolation;
  }


  public void setI18nViolation(Boolean i18nViolation) {
    this.i18nViolation = i18nViolation;
  }


  public FileManagerFile icon(String icon) {
    
    this.icon = icon;
    return this;
  }

   /**
   * Get icon
   * @return icon
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIcon() {
    return icon;
  }


  public void setIcon(String icon) {
    this.icon = icon;
  }


  public FileManagerFile internalVersion(Integer internalVersion) {
    
    this.internalVersion = internalVersion;
    return this;
  }

   /**
   * Get internalVersion
   * @return internalVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getInternalVersion() {
    return internalVersion;
  }


  public void setInternalVersion(Integer internalVersion) {
    this.internalVersion = internalVersion;
  }


  public FileManagerFile lastModified(String lastModified) {
    
    this.lastModified = lastModified;
    return this;
  }

   /**
   * Get lastModified
   * @return lastModified
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLastModified() {
    return lastModified;
  }


  public void setLastModified(String lastModified) {
    this.lastModified = lastModified;
  }


  public FileManagerFile mergeConflict(Boolean mergeConflict) {
    
    this.mergeConflict = mergeConflict;
    return this;
  }

   /**
   * Get mergeConflict
   * @return mergeConflict
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getMergeConflict() {
    return mergeConflict;
  }


  public void setMergeConflict(Boolean mergeConflict) {
    this.mergeConflict = mergeConflict;
  }


  public FileManagerFile name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public FileManagerFile parentStorefrontFsDirectoryOid(Integer parentStorefrontFsDirectoryOid) {
    
    this.parentStorefrontFsDirectoryOid = parentStorefrontFsDirectoryOid;
    return this;
  }

   /**
   * Get parentStorefrontFsDirectoryOid
   * @return parentStorefrontFsDirectoryOid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getParentStorefrontFsDirectoryOid() {
    return parentStorefrontFsDirectoryOid;
  }


  public void setParentStorefrontFsDirectoryOid(Integer parentStorefrontFsDirectoryOid) {
    this.parentStorefrontFsDirectoryOid = parentStorefrontFsDirectoryOid;
  }


  public FileManagerFile partOfActiveTheme(Boolean partOfActiveTheme) {
    
    this.partOfActiveTheme = partOfActiveTheme;
    return this;
  }

   /**
   * Get partOfActiveTheme
   * @return partOfActiveTheme
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getPartOfActiveTheme() {
    return partOfActiveTheme;
  }


  public void setPartOfActiveTheme(Boolean partOfActiveTheme) {
    this.partOfActiveTheme = partOfActiveTheme;
  }


  public FileManagerFile path(String path) {
    
    this.path = path;
    return this;
  }

   /**
   * Get path
   * @return path
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPath() {
    return path;
  }


  public void setPath(String path) {
    this.path = path;
  }


  public FileManagerFile rawSize(Integer rawSize) {
    
    this.rawSize = rawSize;
    return this;
  }

   /**
   * Get rawSize
   * @return rawSize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getRawSize() {
    return rawSize;
  }


  public void setRawSize(Integer rawSize) {
    this.rawSize = rawSize;
  }


  public FileManagerFile selected(Boolean selected) {
    
    this.selected = selected;
    return this;
  }

   /**
   * Get selected
   * @return selected
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getSelected() {
    return selected;
  }


  public void setSelected(Boolean selected) {
    this.selected = selected;
  }


  public FileManagerFile size(String size) {
    
    this.size = size;
    return this;
  }

   /**
   * Get size
   * @return size
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSize() {
    return size;
  }


  public void setSize(String size) {
    this.size = size;
  }


  public FileManagerFile storefrontFsDirectoryOid(Integer storefrontFsDirectoryOid) {
    
    this.storefrontFsDirectoryOid = storefrontFsDirectoryOid;
    return this;
  }

   /**
   * Get storefrontFsDirectoryOid
   * @return storefrontFsDirectoryOid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getStorefrontFsDirectoryOid() {
    return storefrontFsDirectoryOid;
  }


  public void setStorefrontFsDirectoryOid(Integer storefrontFsDirectoryOid) {
    this.storefrontFsDirectoryOid = storefrontFsDirectoryOid;
  }


  public FileManagerFile storefrontFsFileOid(Integer storefrontFsFileOid) {
    
    this.storefrontFsFileOid = storefrontFsFileOid;
    return this;
  }

   /**
   * Get storefrontFsFileOid
   * @return storefrontFsFileOid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getStorefrontFsFileOid() {
    return storefrontFsFileOid;
  }


  public void setStorefrontFsFileOid(Integer storefrontFsFileOid) {
    this.storefrontFsFileOid = storefrontFsFileOid;
  }


  public FileManagerFile storefrontOid(Integer storefrontOid) {
    
    this.storefrontOid = storefrontOid;
    return this;
  }

   /**
   * Get storefrontOid
   * @return storefrontOid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getStorefrontOid() {
    return storefrontOid;
  }


  public void setStorefrontOid(Integer storefrontOid) {
    this.storefrontOid = storefrontOid;
  }


  public FileManagerFile thumbnail16Url(String thumbnail16Url) {
    
    this.thumbnail16Url = thumbnail16Url;
    return this;
  }

   /**
   * CDN thumbnail 16x16 size
   * @return thumbnail16Url
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "CDN thumbnail 16x16 size")

  public String getThumbnail16Url() {
    return thumbnail16Url;
  }


  public void setThumbnail16Url(String thumbnail16Url) {
    this.thumbnail16Url = thumbnail16Url;
  }


  public FileManagerFile thumbnail32Url(String thumbnail32Url) {
    
    this.thumbnail32Url = thumbnail32Url;
    return this;
  }

   /**
   * CDN thumbnail 32x32 size
   * @return thumbnail32Url
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "CDN thumbnail 32x32 size")

  public String getThumbnail32Url() {
    return thumbnail32Url;
  }


  public void setThumbnail32Url(String thumbnail32Url) {
    this.thumbnail32Url = thumbnail32Url;
  }


  public FileManagerFile thumbnail64Url(String thumbnail64Url) {
    
    this.thumbnail64Url = thumbnail64Url;
    return this;
  }

   /**
   * CDN thumbnail 64x64 size
   * @return thumbnail64Url
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "CDN thumbnail 64x64 size")

  public String getThumbnail64Url() {
    return thumbnail64Url;
  }


  public void setThumbnail64Url(String thumbnail64Url) {
    this.thumbnail64Url = thumbnail64Url;
  }


  public FileManagerFile type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getType() {
    return type;
  }


  public void setType(String type) {
    this.type = type;
  }


  public FileManagerFile validVelocity(String validVelocity) {
    
    this.validVelocity = validVelocity;
    return this;
  }

   /**
   * Get validVelocity
   * @return validVelocity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getValidVelocity() {
    return validVelocity;
  }


  public void setValidVelocity(String validVelocity) {
    this.validVelocity = validVelocity;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FileManagerFile fileManagerFile = (FileManagerFile) o;
    return Objects.equals(this.favorite, fileManagerFile.favorite) &&
        Objects.equals(this.hostname, fileManagerFile.hostname) &&
        Objects.equals(this.i18nViolation, fileManagerFile.i18nViolation) &&
        Objects.equals(this.icon, fileManagerFile.icon) &&
        Objects.equals(this.internalVersion, fileManagerFile.internalVersion) &&
        Objects.equals(this.lastModified, fileManagerFile.lastModified) &&
        Objects.equals(this.mergeConflict, fileManagerFile.mergeConflict) &&
        Objects.equals(this.name, fileManagerFile.name) &&
        Objects.equals(this.parentStorefrontFsDirectoryOid, fileManagerFile.parentStorefrontFsDirectoryOid) &&
        Objects.equals(this.partOfActiveTheme, fileManagerFile.partOfActiveTheme) &&
        Objects.equals(this.path, fileManagerFile.path) &&
        Objects.equals(this.rawSize, fileManagerFile.rawSize) &&
        Objects.equals(this.selected, fileManagerFile.selected) &&
        Objects.equals(this.size, fileManagerFile.size) &&
        Objects.equals(this.storefrontFsDirectoryOid, fileManagerFile.storefrontFsDirectoryOid) &&
        Objects.equals(this.storefrontFsFileOid, fileManagerFile.storefrontFsFileOid) &&
        Objects.equals(this.storefrontOid, fileManagerFile.storefrontOid) &&
        Objects.equals(this.thumbnail16Url, fileManagerFile.thumbnail16Url) &&
        Objects.equals(this.thumbnail32Url, fileManagerFile.thumbnail32Url) &&
        Objects.equals(this.thumbnail64Url, fileManagerFile.thumbnail64Url) &&
        Objects.equals(this.type, fileManagerFile.type) &&
        Objects.equals(this.validVelocity, fileManagerFile.validVelocity);
  }

  @Override
  public int hashCode() {
    return Objects.hash(favorite, hostname, i18nViolation, icon, internalVersion, lastModified, mergeConflict, name, parentStorefrontFsDirectoryOid, partOfActiveTheme, path, rawSize, selected, size, storefrontFsDirectoryOid, storefrontFsFileOid, storefrontOid, thumbnail16Url, thumbnail32Url, thumbnail64Url, type, validVelocity);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FileManagerFile {\n");
    sb.append("    favorite: ").append(toIndentedString(favorite)).append("\n");
    sb.append("    hostname: ").append(toIndentedString(hostname)).append("\n");
    sb.append("    i18nViolation: ").append(toIndentedString(i18nViolation)).append("\n");
    sb.append("    icon: ").append(toIndentedString(icon)).append("\n");
    sb.append("    internalVersion: ").append(toIndentedString(internalVersion)).append("\n");
    sb.append("    lastModified: ").append(toIndentedString(lastModified)).append("\n");
    sb.append("    mergeConflict: ").append(toIndentedString(mergeConflict)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    parentStorefrontFsDirectoryOid: ").append(toIndentedString(parentStorefrontFsDirectoryOid)).append("\n");
    sb.append("    partOfActiveTheme: ").append(toIndentedString(partOfActiveTheme)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    rawSize: ").append(toIndentedString(rawSize)).append("\n");
    sb.append("    selected: ").append(toIndentedString(selected)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    storefrontFsDirectoryOid: ").append(toIndentedString(storefrontFsDirectoryOid)).append("\n");
    sb.append("    storefrontFsFileOid: ").append(toIndentedString(storefrontFsFileOid)).append("\n");
    sb.append("    storefrontOid: ").append(toIndentedString(storefrontOid)).append("\n");
    sb.append("    thumbnail16Url: ").append(toIndentedString(thumbnail16Url)).append("\n");
    sb.append("    thumbnail32Url: ").append(toIndentedString(thumbnail32Url)).append("\n");
    sb.append("    thumbnail64Url: ").append(toIndentedString(thumbnail64Url)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    validVelocity: ").append(toIndentedString(validVelocity)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("favorite");
    openapiFields.add("hostname");
    openapiFields.add("i18n_violation");
    openapiFields.add("icon");
    openapiFields.add("internal_version");
    openapiFields.add("last_modified");
    openapiFields.add("merge_conflict");
    openapiFields.add("name");
    openapiFields.add("parent_storefront_fs_directory_oid");
    openapiFields.add("part_of_active_theme");
    openapiFields.add("path");
    openapiFields.add("raw_size");
    openapiFields.add("selected");
    openapiFields.add("size");
    openapiFields.add("storefront_fs_directory_oid");
    openapiFields.add("storefront_fs_file_oid");
    openapiFields.add("storefront_oid");
    openapiFields.add("thumbnail_16_url");
    openapiFields.add("thumbnail_32_url");
    openapiFields.add("thumbnail_64_url");
    openapiFields.add("type");
    openapiFields.add("valid_velocity");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to FileManagerFile
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (FileManagerFile.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in FileManagerFile is not found in the empty JSON string", FileManagerFile.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!FileManagerFile.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `FileManagerFile` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("hostname") != null && !jsonObj.get("hostname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `hostname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("hostname").toString()));
      }
      if (jsonObj.get("icon") != null && !jsonObj.get("icon").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `icon` to be a primitive type in the JSON string but got `%s`", jsonObj.get("icon").toString()));
      }
      if (jsonObj.get("last_modified") != null && !jsonObj.get("last_modified").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_modified` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_modified").toString()));
      }
      if (jsonObj.get("name") != null && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (jsonObj.get("path") != null && !jsonObj.get("path").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `path` to be a primitive type in the JSON string but got `%s`", jsonObj.get("path").toString()));
      }
      if (jsonObj.get("size") != null && !jsonObj.get("size").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `size` to be a primitive type in the JSON string but got `%s`", jsonObj.get("size").toString()));
      }
      if (jsonObj.get("thumbnail_16_url") != null && !jsonObj.get("thumbnail_16_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `thumbnail_16_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("thumbnail_16_url").toString()));
      }
      if (jsonObj.get("thumbnail_32_url") != null && !jsonObj.get("thumbnail_32_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `thumbnail_32_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("thumbnail_32_url").toString()));
      }
      if (jsonObj.get("thumbnail_64_url") != null && !jsonObj.get("thumbnail_64_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `thumbnail_64_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("thumbnail_64_url").toString()));
      }
      if (jsonObj.get("type") != null && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      if (jsonObj.get("valid_velocity") != null && !jsonObj.get("valid_velocity").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `valid_velocity` to be a primitive type in the JSON string but got `%s`", jsonObj.get("valid_velocity").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!FileManagerFile.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'FileManagerFile' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<FileManagerFile> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(FileManagerFile.class));

       return (TypeAdapter<T>) new TypeAdapter<FileManagerFile>() {
           @Override
           public void write(JsonWriter out, FileManagerFile value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public FileManagerFile read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of FileManagerFile given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of FileManagerFile
  * @throws IOException if the JSON string is invalid with respect to FileManagerFile
  */
  public static FileManagerFile fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, FileManagerFile.class);
  }

 /**
  * Convert an instance of FileManagerFile to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

