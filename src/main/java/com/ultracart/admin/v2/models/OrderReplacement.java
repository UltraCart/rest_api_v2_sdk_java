/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.OrderReplacementItem;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * OrderReplacement
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-01-26T11:21:51.055-05:00[America/Indianapolis]")
public class OrderReplacement {
  public static final String SERIALIZED_NAME_ADDITIONAL_MERCHANT_NOTES_NEW_ORDER = "additional_merchant_notes_new_order";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_MERCHANT_NOTES_NEW_ORDER)
  private String additionalMerchantNotesNewOrder;

  public static final String SERIALIZED_NAME_ADDITIONAL_MERCHANT_NOTES_ORIGINAL_ORDER = "additional_merchant_notes_original_order";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_MERCHANT_NOTES_ORIGINAL_ORDER)
  private String additionalMerchantNotesOriginalOrder;

  public static final String SERIALIZED_NAME_CUSTOM_FIELD1 = "custom_field1";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELD1)
  private String customField1;

  public static final String SERIALIZED_NAME_CUSTOM_FIELD2 = "custom_field2";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELD2)
  private String customField2;

  public static final String SERIALIZED_NAME_CUSTOM_FIELD3 = "custom_field3";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELD3)
  private String customField3;

  public static final String SERIALIZED_NAME_CUSTOM_FIELD4 = "custom_field4";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELD4)
  private String customField4;

  public static final String SERIALIZED_NAME_CUSTOM_FIELD5 = "custom_field5";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELD5)
  private String customField5;

  public static final String SERIALIZED_NAME_CUSTOM_FIELD6 = "custom_field6";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELD6)
  private String customField6;

  public static final String SERIALIZED_NAME_CUSTOM_FIELD7 = "custom_field7";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELD7)
  private String customField7;

  public static final String SERIALIZED_NAME_FREE = "free";
  @SerializedName(SERIALIZED_NAME_FREE)
  private Boolean free;

  public static final String SERIALIZED_NAME_IMMEDIATE_CHARGE = "immediate_charge";
  @SerializedName(SERIALIZED_NAME_IMMEDIATE_CHARGE)
  private Boolean immediateCharge;

  public static final String SERIALIZED_NAME_ITEMS = "items";
  @SerializedName(SERIALIZED_NAME_ITEMS)
  private List<OrderReplacementItem> items = null;

  public static final String SERIALIZED_NAME_ORIGINAL_ORDER_ID = "original_order_id";
  @SerializedName(SERIALIZED_NAME_ORIGINAL_ORDER_ID)
  private String originalOrderId;

  public static final String SERIALIZED_NAME_SHIPPING_METHOD = "shipping_method";
  @SerializedName(SERIALIZED_NAME_SHIPPING_METHOD)
  private String shippingMethod;

  public static final String SERIALIZED_NAME_SKIP_PAYMENT = "skip_payment";
  @SerializedName(SERIALIZED_NAME_SKIP_PAYMENT)
  private Boolean skipPayment;

  public OrderReplacement() { 
  }

  public OrderReplacement additionalMerchantNotesNewOrder(String additionalMerchantNotesNewOrder) {
    
    this.additionalMerchantNotesNewOrder = additionalMerchantNotesNewOrder;
    return this;
  }

   /**
   * Additional merchant notes to append to the new order
   * @return additionalMerchantNotesNewOrder
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Additional merchant notes to append to the new order")

  public String getAdditionalMerchantNotesNewOrder() {
    return additionalMerchantNotesNewOrder;
  }


  public void setAdditionalMerchantNotesNewOrder(String additionalMerchantNotesNewOrder) {
    this.additionalMerchantNotesNewOrder = additionalMerchantNotesNewOrder;
  }


  public OrderReplacement additionalMerchantNotesOriginalOrder(String additionalMerchantNotesOriginalOrder) {
    
    this.additionalMerchantNotesOriginalOrder = additionalMerchantNotesOriginalOrder;
    return this;
  }

   /**
   * Additional merchant notes to append to the original order
   * @return additionalMerchantNotesOriginalOrder
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Additional merchant notes to append to the original order")

  public String getAdditionalMerchantNotesOriginalOrder() {
    return additionalMerchantNotesOriginalOrder;
  }


  public void setAdditionalMerchantNotesOriginalOrder(String additionalMerchantNotesOriginalOrder) {
    this.additionalMerchantNotesOriginalOrder = additionalMerchantNotesOriginalOrder;
  }


  public OrderReplacement customField1(String customField1) {
    
    this.customField1 = customField1;
    return this;
  }

   /**
   * Custom field 1
   * @return customField1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Custom field 1")

  public String getCustomField1() {
    return customField1;
  }


  public void setCustomField1(String customField1) {
    this.customField1 = customField1;
  }


  public OrderReplacement customField2(String customField2) {
    
    this.customField2 = customField2;
    return this;
  }

   /**
   * Custom field 2
   * @return customField2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Custom field 2")

  public String getCustomField2() {
    return customField2;
  }


  public void setCustomField2(String customField2) {
    this.customField2 = customField2;
  }


  public OrderReplacement customField3(String customField3) {
    
    this.customField3 = customField3;
    return this;
  }

   /**
   * Custom field 3
   * @return customField3
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Custom field 3")

  public String getCustomField3() {
    return customField3;
  }


  public void setCustomField3(String customField3) {
    this.customField3 = customField3;
  }


  public OrderReplacement customField4(String customField4) {
    
    this.customField4 = customField4;
    return this;
  }

   /**
   * Custom field 4
   * @return customField4
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Custom field 4")

  public String getCustomField4() {
    return customField4;
  }


  public void setCustomField4(String customField4) {
    this.customField4 = customField4;
  }


  public OrderReplacement customField5(String customField5) {
    
    this.customField5 = customField5;
    return this;
  }

   /**
   * Custom field 5
   * @return customField5
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Custom field 5")

  public String getCustomField5() {
    return customField5;
  }


  public void setCustomField5(String customField5) {
    this.customField5 = customField5;
  }


  public OrderReplacement customField6(String customField6) {
    
    this.customField6 = customField6;
    return this;
  }

   /**
   * Custom field 6
   * @return customField6
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Custom field 6")

  public String getCustomField6() {
    return customField6;
  }


  public void setCustomField6(String customField6) {
    this.customField6 = customField6;
  }


  public OrderReplacement customField7(String customField7) {
    
    this.customField7 = customField7;
    return this;
  }

   /**
   * Custom field 7
   * @return customField7
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Custom field 7")

  public String getCustomField7() {
    return customField7;
  }


  public void setCustomField7(String customField7) {
    this.customField7 = customField7;
  }


  public OrderReplacement free(Boolean free) {
    
    this.free = free;
    return this;
  }

   /**
   * Set to true if this replacement shipment should be free for the customer.
   * @return free
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Set to true if this replacement shipment should be free for the customer.")

  public Boolean getFree() {
    return free;
  }


  public void setFree(Boolean free) {
    this.free = free;
  }


  public OrderReplacement immediateCharge(Boolean immediateCharge) {
    
    this.immediateCharge = immediateCharge;
    return this;
  }

   /**
   * Set to true if you want to immediately charge the payment on this order, otherwise it will go to Accounts Receivable.
   * @return immediateCharge
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Set to true if you want to immediately charge the payment on this order, otherwise it will go to Accounts Receivable.")

  public Boolean getImmediateCharge() {
    return immediateCharge;
  }


  public void setImmediateCharge(Boolean immediateCharge) {
    this.immediateCharge = immediateCharge;
  }


  public OrderReplacement items(List<OrderReplacementItem> items) {
    
    this.items = items;
    return this;
  }

  public OrderReplacement addItemsItem(OrderReplacementItem itemsItem) {
    if (this.items == null) {
      this.items = new ArrayList<>();
    }
    this.items.add(itemsItem);
    return this;
  }

   /**
   * Items to include in the replacement order
   * @return items
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Items to include in the replacement order")

  public List<OrderReplacementItem> getItems() {
    return items;
  }


  public void setItems(List<OrderReplacementItem> items) {
    this.items = items;
  }


  public OrderReplacement originalOrderId(String originalOrderId) {
    
    this.originalOrderId = originalOrderId;
    return this;
  }

   /**
   * Original order id
   * @return originalOrderId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Original order id")

  public String getOriginalOrderId() {
    return originalOrderId;
  }


  public void setOriginalOrderId(String originalOrderId) {
    this.originalOrderId = originalOrderId;
  }


  public OrderReplacement shippingMethod(String shippingMethod) {
    
    this.shippingMethod = shippingMethod;
    return this;
  }

   /**
   * Shipping method to use.  If not specified or invalid then least cost shipping will take place.
   * @return shippingMethod
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Shipping method to use.  If not specified or invalid then least cost shipping will take place.")

  public String getShippingMethod() {
    return shippingMethod;
  }


  public void setShippingMethod(String shippingMethod) {
    this.shippingMethod = shippingMethod;
  }


  public OrderReplacement skipPayment(Boolean skipPayment) {
    
    this.skipPayment = skipPayment;
    return this;
  }

   /**
   * Set to true if you want to skip the payment as if it was successful.
   * @return skipPayment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Set to true if you want to skip the payment as if it was successful.")

  public Boolean getSkipPayment() {
    return skipPayment;
  }


  public void setSkipPayment(Boolean skipPayment) {
    this.skipPayment = skipPayment;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderReplacement orderReplacement = (OrderReplacement) o;
    return Objects.equals(this.additionalMerchantNotesNewOrder, orderReplacement.additionalMerchantNotesNewOrder) &&
        Objects.equals(this.additionalMerchantNotesOriginalOrder, orderReplacement.additionalMerchantNotesOriginalOrder) &&
        Objects.equals(this.customField1, orderReplacement.customField1) &&
        Objects.equals(this.customField2, orderReplacement.customField2) &&
        Objects.equals(this.customField3, orderReplacement.customField3) &&
        Objects.equals(this.customField4, orderReplacement.customField4) &&
        Objects.equals(this.customField5, orderReplacement.customField5) &&
        Objects.equals(this.customField6, orderReplacement.customField6) &&
        Objects.equals(this.customField7, orderReplacement.customField7) &&
        Objects.equals(this.free, orderReplacement.free) &&
        Objects.equals(this.immediateCharge, orderReplacement.immediateCharge) &&
        Objects.equals(this.items, orderReplacement.items) &&
        Objects.equals(this.originalOrderId, orderReplacement.originalOrderId) &&
        Objects.equals(this.shippingMethod, orderReplacement.shippingMethod) &&
        Objects.equals(this.skipPayment, orderReplacement.skipPayment);
  }

  @Override
  public int hashCode() {
    return Objects.hash(additionalMerchantNotesNewOrder, additionalMerchantNotesOriginalOrder, customField1, customField2, customField3, customField4, customField5, customField6, customField7, free, immediateCharge, items, originalOrderId, shippingMethod, skipPayment);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderReplacement {\n");
    sb.append("    additionalMerchantNotesNewOrder: ").append(toIndentedString(additionalMerchantNotesNewOrder)).append("\n");
    sb.append("    additionalMerchantNotesOriginalOrder: ").append(toIndentedString(additionalMerchantNotesOriginalOrder)).append("\n");
    sb.append("    customField1: ").append(toIndentedString(customField1)).append("\n");
    sb.append("    customField2: ").append(toIndentedString(customField2)).append("\n");
    sb.append("    customField3: ").append(toIndentedString(customField3)).append("\n");
    sb.append("    customField4: ").append(toIndentedString(customField4)).append("\n");
    sb.append("    customField5: ").append(toIndentedString(customField5)).append("\n");
    sb.append("    customField6: ").append(toIndentedString(customField6)).append("\n");
    sb.append("    customField7: ").append(toIndentedString(customField7)).append("\n");
    sb.append("    free: ").append(toIndentedString(free)).append("\n");
    sb.append("    immediateCharge: ").append(toIndentedString(immediateCharge)).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("    originalOrderId: ").append(toIndentedString(originalOrderId)).append("\n");
    sb.append("    shippingMethod: ").append(toIndentedString(shippingMethod)).append("\n");
    sb.append("    skipPayment: ").append(toIndentedString(skipPayment)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("additional_merchant_notes_new_order");
    openapiFields.add("additional_merchant_notes_original_order");
    openapiFields.add("custom_field1");
    openapiFields.add("custom_field2");
    openapiFields.add("custom_field3");
    openapiFields.add("custom_field4");
    openapiFields.add("custom_field5");
    openapiFields.add("custom_field6");
    openapiFields.add("custom_field7");
    openapiFields.add("free");
    openapiFields.add("immediate_charge");
    openapiFields.add("items");
    openapiFields.add("original_order_id");
    openapiFields.add("shipping_method");
    openapiFields.add("skip_payment");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to OrderReplacement
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (OrderReplacement.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in OrderReplacement is not found in the empty JSON string", OrderReplacement.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!OrderReplacement.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OrderReplacement` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("additional_merchant_notes_new_order") != null && !jsonObj.get("additional_merchant_notes_new_order").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `additional_merchant_notes_new_order` to be a primitive type in the JSON string but got `%s`", jsonObj.get("additional_merchant_notes_new_order").toString()));
      }
      if (jsonObj.get("additional_merchant_notes_original_order") != null && !jsonObj.get("additional_merchant_notes_original_order").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `additional_merchant_notes_original_order` to be a primitive type in the JSON string but got `%s`", jsonObj.get("additional_merchant_notes_original_order").toString()));
      }
      if (jsonObj.get("custom_field1") != null && !jsonObj.get("custom_field1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `custom_field1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("custom_field1").toString()));
      }
      if (jsonObj.get("custom_field2") != null && !jsonObj.get("custom_field2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `custom_field2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("custom_field2").toString()));
      }
      if (jsonObj.get("custom_field3") != null && !jsonObj.get("custom_field3").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `custom_field3` to be a primitive type in the JSON string but got `%s`", jsonObj.get("custom_field3").toString()));
      }
      if (jsonObj.get("custom_field4") != null && !jsonObj.get("custom_field4").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `custom_field4` to be a primitive type in the JSON string but got `%s`", jsonObj.get("custom_field4").toString()));
      }
      if (jsonObj.get("custom_field5") != null && !jsonObj.get("custom_field5").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `custom_field5` to be a primitive type in the JSON string but got `%s`", jsonObj.get("custom_field5").toString()));
      }
      if (jsonObj.get("custom_field6") != null && !jsonObj.get("custom_field6").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `custom_field6` to be a primitive type in the JSON string but got `%s`", jsonObj.get("custom_field6").toString()));
      }
      if (jsonObj.get("custom_field7") != null && !jsonObj.get("custom_field7").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `custom_field7` to be a primitive type in the JSON string but got `%s`", jsonObj.get("custom_field7").toString()));
      }
      JsonArray jsonArrayitems = jsonObj.getAsJsonArray("items");
      if (jsonArrayitems != null) {
        // ensure the json data is an array
        if (!jsonObj.get("items").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `items` to be an array in the JSON string but got `%s`", jsonObj.get("items").toString()));
        }

        // validate the optional field `items` (array)
        for (int i = 0; i < jsonArrayitems.size(); i++) {
          OrderReplacementItem.validateJsonObject(jsonArrayitems.get(i).getAsJsonObject());
        };
      }
      if (jsonObj.get("original_order_id") != null && !jsonObj.get("original_order_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `original_order_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("original_order_id").toString()));
      }
      if (jsonObj.get("shipping_method") != null && !jsonObj.get("shipping_method").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipping_method` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipping_method").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OrderReplacement.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OrderReplacement' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OrderReplacement> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OrderReplacement.class));

       return (TypeAdapter<T>) new TypeAdapter<OrderReplacement>() {
           @Override
           public void write(JsonWriter out, OrderReplacement value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OrderReplacement read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of OrderReplacement given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of OrderReplacement
  * @throws IOException if the JSON string is invalid with respect to OrderReplacement
  */
  public static OrderReplacement fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OrderReplacement.class);
  }

 /**
  * Convert an instance of OrderReplacement to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

