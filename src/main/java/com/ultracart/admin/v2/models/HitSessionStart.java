/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * HitSessionStart
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-01-10T10:43:53.313-05:00[America/Indianapolis]")
public class HitSessionStart {
  public static final String SERIALIZED_NAME_BOT = "bot";
  @SerializedName(SERIALIZED_NAME_BOT)
  private Boolean bot;

  public static final String SERIALIZED_NAME_BOUNCE = "bounce";
  @SerializedName(SERIALIZED_NAME_BOUNCE)
  private Boolean bounce;

  public static final String SERIALIZED_NAME_CHANNEL = "channel";
  @SerializedName(SERIALIZED_NAME_CHANNEL)
  private String channel;

  public static final String SERIALIZED_NAME_DEVICE_SWITCH_DETECTED = "device_switch_detected";
  @SerializedName(SERIALIZED_NAME_DEVICE_SWITCH_DETECTED)
  private Boolean deviceSwitchDetected;

  public static final String SERIALIZED_NAME_FAKE_BOT = "fake_bot";
  @SerializedName(SERIALIZED_NAME_FAKE_BOT)
  private Boolean fakeBot;

  public static final String SERIALIZED_NAME_GEOLOCATION_COUNTRY = "geolocation_country";
  @SerializedName(SERIALIZED_NAME_GEOLOCATION_COUNTRY)
  private String geolocationCountry;

  public static final String SERIALIZED_NAME_GEOLOCATION_LATITUDE = "geolocation_latitude";
  @SerializedName(SERIALIZED_NAME_GEOLOCATION_LATITUDE)
  private BigDecimal geolocationLatitude;

  public static final String SERIALIZED_NAME_GEOLOCATION_LONGITUDE = "geolocation_longitude";
  @SerializedName(SERIALIZED_NAME_GEOLOCATION_LONGITUDE)
  private BigDecimal geolocationLongitude;

  public static final String SERIALIZED_NAME_GEOLOCATION_PROVINCE = "geolocation_province";
  @SerializedName(SERIALIZED_NAME_GEOLOCATION_PROVINCE)
  private String geolocationProvince;

  public static final String SERIALIZED_NAME_NO_COOKIE_SUPPORT = "no_cookie_support";
  @SerializedName(SERIALIZED_NAME_NO_COOKIE_SUPPORT)
  private Boolean noCookieSupport;

  public static final String SERIALIZED_NAME_PREFETCH = "prefetch";
  @SerializedName(SERIALIZED_NAME_PREFETCH)
  private Boolean prefetch;

  public static final String SERIALIZED_NAME_REFERRER = "referrer";
  @SerializedName(SERIALIZED_NAME_REFERRER)
  private String referrer;

  public static final String SERIALIZED_NAME_SCREEN_HEIGHT = "screen_height";
  @SerializedName(SERIALIZED_NAME_SCREEN_HEIGHT)
  private Integer screenHeight;

  public static final String SERIALIZED_NAME_SCREEN_WIDTH = "screen_width";
  @SerializedName(SERIALIZED_NAME_SCREEN_WIDTH)
  private Integer screenWidth;

  public static final String SERIALIZED_NAME_TIME_ON_SITE = "time_on_Site";
  @SerializedName(SERIALIZED_NAME_TIME_ON_SITE)
  private BigDecimal timeOnSite;

  public static final String SERIALIZED_NAME_USER_AGENT = "user_agent";
  @SerializedName(SERIALIZED_NAME_USER_AGENT)
  private String userAgent;

  public static final String SERIALIZED_NAME_USER_IP = "user_ip";
  @SerializedName(SERIALIZED_NAME_USER_IP)
  private String userIp;

  public HitSessionStart() { 
  }

  public HitSessionStart bot(Boolean bot) {
    
    this.bot = bot;
    return this;
  }

   /**
   * Get bot
   * @return bot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getBot() {
    return bot;
  }


  public void setBot(Boolean bot) {
    this.bot = bot;
  }


  public HitSessionStart bounce(Boolean bounce) {
    
    this.bounce = bounce;
    return this;
  }

   /**
   * Get bounce
   * @return bounce
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getBounce() {
    return bounce;
  }


  public void setBounce(Boolean bounce) {
    this.bounce = bounce;
  }


  public HitSessionStart channel(String channel) {
    
    this.channel = channel;
    return this;
  }

   /**
   * Get channel
   * @return channel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getChannel() {
    return channel;
  }


  public void setChannel(String channel) {
    this.channel = channel;
  }


  public HitSessionStart deviceSwitchDetected(Boolean deviceSwitchDetected) {
    
    this.deviceSwitchDetected = deviceSwitchDetected;
    return this;
  }

   /**
   * Get deviceSwitchDetected
   * @return deviceSwitchDetected
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getDeviceSwitchDetected() {
    return deviceSwitchDetected;
  }


  public void setDeviceSwitchDetected(Boolean deviceSwitchDetected) {
    this.deviceSwitchDetected = deviceSwitchDetected;
  }


  public HitSessionStart fakeBot(Boolean fakeBot) {
    
    this.fakeBot = fakeBot;
    return this;
  }

   /**
   * Get fakeBot
   * @return fakeBot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getFakeBot() {
    return fakeBot;
  }


  public void setFakeBot(Boolean fakeBot) {
    this.fakeBot = fakeBot;
  }


  public HitSessionStart geolocationCountry(String geolocationCountry) {
    
    this.geolocationCountry = geolocationCountry;
    return this;
  }

   /**
   * Get geolocationCountry
   * @return geolocationCountry
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getGeolocationCountry() {
    return geolocationCountry;
  }


  public void setGeolocationCountry(String geolocationCountry) {
    this.geolocationCountry = geolocationCountry;
  }


  public HitSessionStart geolocationLatitude(BigDecimal geolocationLatitude) {
    
    this.geolocationLatitude = geolocationLatitude;
    return this;
  }

   /**
   * Get geolocationLatitude
   * @return geolocationLatitude
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getGeolocationLatitude() {
    return geolocationLatitude;
  }


  public void setGeolocationLatitude(BigDecimal geolocationLatitude) {
    this.geolocationLatitude = geolocationLatitude;
  }


  public HitSessionStart geolocationLongitude(BigDecimal geolocationLongitude) {
    
    this.geolocationLongitude = geolocationLongitude;
    return this;
  }

   /**
   * Get geolocationLongitude
   * @return geolocationLongitude
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getGeolocationLongitude() {
    return geolocationLongitude;
  }


  public void setGeolocationLongitude(BigDecimal geolocationLongitude) {
    this.geolocationLongitude = geolocationLongitude;
  }


  public HitSessionStart geolocationProvince(String geolocationProvince) {
    
    this.geolocationProvince = geolocationProvince;
    return this;
  }

   /**
   * Get geolocationProvince
   * @return geolocationProvince
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getGeolocationProvince() {
    return geolocationProvince;
  }


  public void setGeolocationProvince(String geolocationProvince) {
    this.geolocationProvince = geolocationProvince;
  }


  public HitSessionStart noCookieSupport(Boolean noCookieSupport) {
    
    this.noCookieSupport = noCookieSupport;
    return this;
  }

   /**
   * Get noCookieSupport
   * @return noCookieSupport
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getNoCookieSupport() {
    return noCookieSupport;
  }


  public void setNoCookieSupport(Boolean noCookieSupport) {
    this.noCookieSupport = noCookieSupport;
  }


  public HitSessionStart prefetch(Boolean prefetch) {
    
    this.prefetch = prefetch;
    return this;
  }

   /**
   * Get prefetch
   * @return prefetch
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getPrefetch() {
    return prefetch;
  }


  public void setPrefetch(Boolean prefetch) {
    this.prefetch = prefetch;
  }


  public HitSessionStart referrer(String referrer) {
    
    this.referrer = referrer;
    return this;
  }

   /**
   * Get referrer
   * @return referrer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getReferrer() {
    return referrer;
  }


  public void setReferrer(String referrer) {
    this.referrer = referrer;
  }


  public HitSessionStart screenHeight(Integer screenHeight) {
    
    this.screenHeight = screenHeight;
    return this;
  }

   /**
   * Get screenHeight
   * @return screenHeight
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getScreenHeight() {
    return screenHeight;
  }


  public void setScreenHeight(Integer screenHeight) {
    this.screenHeight = screenHeight;
  }


  public HitSessionStart screenWidth(Integer screenWidth) {
    
    this.screenWidth = screenWidth;
    return this;
  }

   /**
   * Get screenWidth
   * @return screenWidth
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getScreenWidth() {
    return screenWidth;
  }


  public void setScreenWidth(Integer screenWidth) {
    this.screenWidth = screenWidth;
  }


  public HitSessionStart timeOnSite(BigDecimal timeOnSite) {
    
    this.timeOnSite = timeOnSite;
    return this;
  }

   /**
   * Get timeOnSite
   * @return timeOnSite
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getTimeOnSite() {
    return timeOnSite;
  }


  public void setTimeOnSite(BigDecimal timeOnSite) {
    this.timeOnSite = timeOnSite;
  }


  public HitSessionStart userAgent(String userAgent) {
    
    this.userAgent = userAgent;
    return this;
  }

   /**
   * Get userAgent
   * @return userAgent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUserAgent() {
    return userAgent;
  }


  public void setUserAgent(String userAgent) {
    this.userAgent = userAgent;
  }


  public HitSessionStart userIp(String userIp) {
    
    this.userIp = userIp;
    return this;
  }

   /**
   * Get userIp
   * @return userIp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUserIp() {
    return userIp;
  }


  public void setUserIp(String userIp) {
    this.userIp = userIp;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HitSessionStart hitSessionStart = (HitSessionStart) o;
    return Objects.equals(this.bot, hitSessionStart.bot) &&
        Objects.equals(this.bounce, hitSessionStart.bounce) &&
        Objects.equals(this.channel, hitSessionStart.channel) &&
        Objects.equals(this.deviceSwitchDetected, hitSessionStart.deviceSwitchDetected) &&
        Objects.equals(this.fakeBot, hitSessionStart.fakeBot) &&
        Objects.equals(this.geolocationCountry, hitSessionStart.geolocationCountry) &&
        Objects.equals(this.geolocationLatitude, hitSessionStart.geolocationLatitude) &&
        Objects.equals(this.geolocationLongitude, hitSessionStart.geolocationLongitude) &&
        Objects.equals(this.geolocationProvince, hitSessionStart.geolocationProvince) &&
        Objects.equals(this.noCookieSupport, hitSessionStart.noCookieSupport) &&
        Objects.equals(this.prefetch, hitSessionStart.prefetch) &&
        Objects.equals(this.referrer, hitSessionStart.referrer) &&
        Objects.equals(this.screenHeight, hitSessionStart.screenHeight) &&
        Objects.equals(this.screenWidth, hitSessionStart.screenWidth) &&
        Objects.equals(this.timeOnSite, hitSessionStart.timeOnSite) &&
        Objects.equals(this.userAgent, hitSessionStart.userAgent) &&
        Objects.equals(this.userIp, hitSessionStart.userIp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bot, bounce, channel, deviceSwitchDetected, fakeBot, geolocationCountry, geolocationLatitude, geolocationLongitude, geolocationProvince, noCookieSupport, prefetch, referrer, screenHeight, screenWidth, timeOnSite, userAgent, userIp);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HitSessionStart {\n");
    sb.append("    bot: ").append(toIndentedString(bot)).append("\n");
    sb.append("    bounce: ").append(toIndentedString(bounce)).append("\n");
    sb.append("    channel: ").append(toIndentedString(channel)).append("\n");
    sb.append("    deviceSwitchDetected: ").append(toIndentedString(deviceSwitchDetected)).append("\n");
    sb.append("    fakeBot: ").append(toIndentedString(fakeBot)).append("\n");
    sb.append("    geolocationCountry: ").append(toIndentedString(geolocationCountry)).append("\n");
    sb.append("    geolocationLatitude: ").append(toIndentedString(geolocationLatitude)).append("\n");
    sb.append("    geolocationLongitude: ").append(toIndentedString(geolocationLongitude)).append("\n");
    sb.append("    geolocationProvince: ").append(toIndentedString(geolocationProvince)).append("\n");
    sb.append("    noCookieSupport: ").append(toIndentedString(noCookieSupport)).append("\n");
    sb.append("    prefetch: ").append(toIndentedString(prefetch)).append("\n");
    sb.append("    referrer: ").append(toIndentedString(referrer)).append("\n");
    sb.append("    screenHeight: ").append(toIndentedString(screenHeight)).append("\n");
    sb.append("    screenWidth: ").append(toIndentedString(screenWidth)).append("\n");
    sb.append("    timeOnSite: ").append(toIndentedString(timeOnSite)).append("\n");
    sb.append("    userAgent: ").append(toIndentedString(userAgent)).append("\n");
    sb.append("    userIp: ").append(toIndentedString(userIp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("bot");
    openapiFields.add("bounce");
    openapiFields.add("channel");
    openapiFields.add("device_switch_detected");
    openapiFields.add("fake_bot");
    openapiFields.add("geolocation_country");
    openapiFields.add("geolocation_latitude");
    openapiFields.add("geolocation_longitude");
    openapiFields.add("geolocation_province");
    openapiFields.add("no_cookie_support");
    openapiFields.add("prefetch");
    openapiFields.add("referrer");
    openapiFields.add("screen_height");
    openapiFields.add("screen_width");
    openapiFields.add("time_on_Site");
    openapiFields.add("user_agent");
    openapiFields.add("user_ip");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to HitSessionStart
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (HitSessionStart.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in HitSessionStart is not found in the empty JSON string", HitSessionStart.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!HitSessionStart.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `HitSessionStart` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("channel") != null && !jsonObj.get("channel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `channel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("channel").toString()));
      }
      if (jsonObj.get("geolocation_country") != null && !jsonObj.get("geolocation_country").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `geolocation_country` to be a primitive type in the JSON string but got `%s`", jsonObj.get("geolocation_country").toString()));
      }
      if (jsonObj.get("geolocation_province") != null && !jsonObj.get("geolocation_province").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `geolocation_province` to be a primitive type in the JSON string but got `%s`", jsonObj.get("geolocation_province").toString()));
      }
      if (jsonObj.get("referrer") != null && !jsonObj.get("referrer").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `referrer` to be a primitive type in the JSON string but got `%s`", jsonObj.get("referrer").toString()));
      }
      if (jsonObj.get("user_agent") != null && !jsonObj.get("user_agent").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `user_agent` to be a primitive type in the JSON string but got `%s`", jsonObj.get("user_agent").toString()));
      }
      if (jsonObj.get("user_ip") != null && !jsonObj.get("user_ip").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `user_ip` to be a primitive type in the JSON string but got `%s`", jsonObj.get("user_ip").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!HitSessionStart.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'HitSessionStart' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<HitSessionStart> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(HitSessionStart.class));

       return (TypeAdapter<T>) new TypeAdapter<HitSessionStart>() {
           @Override
           public void write(JsonWriter out, HitSessionStart value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public HitSessionStart read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of HitSessionStart given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of HitSessionStart
  * @throws IOException if the JSON string is invalid with respect to HitSessionStart
  */
  public static HitSessionStart fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, HitSessionStart.class);
  }

 /**
  * Convert an instance of HitSessionStart to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

