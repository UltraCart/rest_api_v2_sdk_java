/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * ScreenRecordingHeatmap
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-06-01T16:02:35.046-04:00")



public class ScreenRecordingHeatmap {
  @SerializedName("large_click_url")
  private String largeClickUrl = null;

  @SerializedName("large_movement_url")
  private String largeMovementUrl = null;

  @SerializedName("large_regular_url")
  private String largeRegularUrl = null;

  @SerializedName("large_scroll_url")
  private String largeScrollUrl = null;

  @SerializedName("medium_click_url")
  private String mediumClickUrl = null;

  @SerializedName("medium_movement_url")
  private String mediumMovementUrl = null;

  @SerializedName("medium_regular_url")
  private String mediumRegularUrl = null;

  @SerializedName("medium_scroll_url")
  private String mediumScrollUrl = null;

  @SerializedName("small_click_url")
  private String smallClickUrl = null;

  @SerializedName("small_movement_url")
  private String smallMovementUrl = null;

  @SerializedName("small_regular_url")
  private String smallRegularUrl = null;

  @SerializedName("small_scroll_url")
  private String smallScrollUrl = null;

  public ScreenRecordingHeatmap largeClickUrl(String largeClickUrl) {
    this.largeClickUrl = largeClickUrl;
    return this;
  }

   /**
   * Get largeClickUrl
   * @return largeClickUrl
  **/
  @ApiModelProperty(value = "")
  public String getLargeClickUrl() {
    return largeClickUrl;
  }

  public void setLargeClickUrl(String largeClickUrl) {
    this.largeClickUrl = largeClickUrl;
  }

  public ScreenRecordingHeatmap largeMovementUrl(String largeMovementUrl) {
    this.largeMovementUrl = largeMovementUrl;
    return this;
  }

   /**
   * Get largeMovementUrl
   * @return largeMovementUrl
  **/
  @ApiModelProperty(value = "")
  public String getLargeMovementUrl() {
    return largeMovementUrl;
  }

  public void setLargeMovementUrl(String largeMovementUrl) {
    this.largeMovementUrl = largeMovementUrl;
  }

  public ScreenRecordingHeatmap largeRegularUrl(String largeRegularUrl) {
    this.largeRegularUrl = largeRegularUrl;
    return this;
  }

   /**
   * Get largeRegularUrl
   * @return largeRegularUrl
  **/
  @ApiModelProperty(value = "")
  public String getLargeRegularUrl() {
    return largeRegularUrl;
  }

  public void setLargeRegularUrl(String largeRegularUrl) {
    this.largeRegularUrl = largeRegularUrl;
  }

  public ScreenRecordingHeatmap largeScrollUrl(String largeScrollUrl) {
    this.largeScrollUrl = largeScrollUrl;
    return this;
  }

   /**
   * Get largeScrollUrl
   * @return largeScrollUrl
  **/
  @ApiModelProperty(value = "")
  public String getLargeScrollUrl() {
    return largeScrollUrl;
  }

  public void setLargeScrollUrl(String largeScrollUrl) {
    this.largeScrollUrl = largeScrollUrl;
  }

  public ScreenRecordingHeatmap mediumClickUrl(String mediumClickUrl) {
    this.mediumClickUrl = mediumClickUrl;
    return this;
  }

   /**
   * Get mediumClickUrl
   * @return mediumClickUrl
  **/
  @ApiModelProperty(value = "")
  public String getMediumClickUrl() {
    return mediumClickUrl;
  }

  public void setMediumClickUrl(String mediumClickUrl) {
    this.mediumClickUrl = mediumClickUrl;
  }

  public ScreenRecordingHeatmap mediumMovementUrl(String mediumMovementUrl) {
    this.mediumMovementUrl = mediumMovementUrl;
    return this;
  }

   /**
   * Get mediumMovementUrl
   * @return mediumMovementUrl
  **/
  @ApiModelProperty(value = "")
  public String getMediumMovementUrl() {
    return mediumMovementUrl;
  }

  public void setMediumMovementUrl(String mediumMovementUrl) {
    this.mediumMovementUrl = mediumMovementUrl;
  }

  public ScreenRecordingHeatmap mediumRegularUrl(String mediumRegularUrl) {
    this.mediumRegularUrl = mediumRegularUrl;
    return this;
  }

   /**
   * Get mediumRegularUrl
   * @return mediumRegularUrl
  **/
  @ApiModelProperty(value = "")
  public String getMediumRegularUrl() {
    return mediumRegularUrl;
  }

  public void setMediumRegularUrl(String mediumRegularUrl) {
    this.mediumRegularUrl = mediumRegularUrl;
  }

  public ScreenRecordingHeatmap mediumScrollUrl(String mediumScrollUrl) {
    this.mediumScrollUrl = mediumScrollUrl;
    return this;
  }

   /**
   * Get mediumScrollUrl
   * @return mediumScrollUrl
  **/
  @ApiModelProperty(value = "")
  public String getMediumScrollUrl() {
    return mediumScrollUrl;
  }

  public void setMediumScrollUrl(String mediumScrollUrl) {
    this.mediumScrollUrl = mediumScrollUrl;
  }

  public ScreenRecordingHeatmap smallClickUrl(String smallClickUrl) {
    this.smallClickUrl = smallClickUrl;
    return this;
  }

   /**
   * Get smallClickUrl
   * @return smallClickUrl
  **/
  @ApiModelProperty(value = "")
  public String getSmallClickUrl() {
    return smallClickUrl;
  }

  public void setSmallClickUrl(String smallClickUrl) {
    this.smallClickUrl = smallClickUrl;
  }

  public ScreenRecordingHeatmap smallMovementUrl(String smallMovementUrl) {
    this.smallMovementUrl = smallMovementUrl;
    return this;
  }

   /**
   * Get smallMovementUrl
   * @return smallMovementUrl
  **/
  @ApiModelProperty(value = "")
  public String getSmallMovementUrl() {
    return smallMovementUrl;
  }

  public void setSmallMovementUrl(String smallMovementUrl) {
    this.smallMovementUrl = smallMovementUrl;
  }

  public ScreenRecordingHeatmap smallRegularUrl(String smallRegularUrl) {
    this.smallRegularUrl = smallRegularUrl;
    return this;
  }

   /**
   * Get smallRegularUrl
   * @return smallRegularUrl
  **/
  @ApiModelProperty(value = "")
  public String getSmallRegularUrl() {
    return smallRegularUrl;
  }

  public void setSmallRegularUrl(String smallRegularUrl) {
    this.smallRegularUrl = smallRegularUrl;
  }

  public ScreenRecordingHeatmap smallScrollUrl(String smallScrollUrl) {
    this.smallScrollUrl = smallScrollUrl;
    return this;
  }

   /**
   * Get smallScrollUrl
   * @return smallScrollUrl
  **/
  @ApiModelProperty(value = "")
  public String getSmallScrollUrl() {
    return smallScrollUrl;
  }

  public void setSmallScrollUrl(String smallScrollUrl) {
    this.smallScrollUrl = smallScrollUrl;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ScreenRecordingHeatmap screenRecordingHeatmap = (ScreenRecordingHeatmap) o;
    return Objects.equals(this.largeClickUrl, screenRecordingHeatmap.largeClickUrl) &&
        Objects.equals(this.largeMovementUrl, screenRecordingHeatmap.largeMovementUrl) &&
        Objects.equals(this.largeRegularUrl, screenRecordingHeatmap.largeRegularUrl) &&
        Objects.equals(this.largeScrollUrl, screenRecordingHeatmap.largeScrollUrl) &&
        Objects.equals(this.mediumClickUrl, screenRecordingHeatmap.mediumClickUrl) &&
        Objects.equals(this.mediumMovementUrl, screenRecordingHeatmap.mediumMovementUrl) &&
        Objects.equals(this.mediumRegularUrl, screenRecordingHeatmap.mediumRegularUrl) &&
        Objects.equals(this.mediumScrollUrl, screenRecordingHeatmap.mediumScrollUrl) &&
        Objects.equals(this.smallClickUrl, screenRecordingHeatmap.smallClickUrl) &&
        Objects.equals(this.smallMovementUrl, screenRecordingHeatmap.smallMovementUrl) &&
        Objects.equals(this.smallRegularUrl, screenRecordingHeatmap.smallRegularUrl) &&
        Objects.equals(this.smallScrollUrl, screenRecordingHeatmap.smallScrollUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(largeClickUrl, largeMovementUrl, largeRegularUrl, largeScrollUrl, mediumClickUrl, mediumMovementUrl, mediumRegularUrl, mediumScrollUrl, smallClickUrl, smallMovementUrl, smallRegularUrl, smallScrollUrl);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ScreenRecordingHeatmap {\n");
    
    sb.append("    largeClickUrl: ").append(toIndentedString(largeClickUrl)).append("\n");
    sb.append("    largeMovementUrl: ").append(toIndentedString(largeMovementUrl)).append("\n");
    sb.append("    largeRegularUrl: ").append(toIndentedString(largeRegularUrl)).append("\n");
    sb.append("    largeScrollUrl: ").append(toIndentedString(largeScrollUrl)).append("\n");
    sb.append("    mediumClickUrl: ").append(toIndentedString(mediumClickUrl)).append("\n");
    sb.append("    mediumMovementUrl: ").append(toIndentedString(mediumMovementUrl)).append("\n");
    sb.append("    mediumRegularUrl: ").append(toIndentedString(mediumRegularUrl)).append("\n");
    sb.append("    mediumScrollUrl: ").append(toIndentedString(mediumScrollUrl)).append("\n");
    sb.append("    smallClickUrl: ").append(toIndentedString(smallClickUrl)).append("\n");
    sb.append("    smallMovementUrl: ").append(toIndentedString(smallMovementUrl)).append("\n");
    sb.append("    smallRegularUrl: ").append(toIndentedString(smallRegularUrl)).append("\n");
    sb.append("    smallScrollUrl: ").append(toIndentedString(smallScrollUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

