/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.Currency;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * OrderGift
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-07-18T13:33:29.229-04:00[America/Indianapolis]")
public class OrderGift {
  public static final String SERIALIZED_NAME_GIFT = "gift";
  @SerializedName(SERIALIZED_NAME_GIFT)
  private Boolean gift;

  public static final String SERIALIZED_NAME_GIFT_CHARGE = "gift_charge";
  @SerializedName(SERIALIZED_NAME_GIFT_CHARGE)
  private Currency giftCharge;

  public static final String SERIALIZED_NAME_GIFT_CHARGE_ACCOUNTING_CODE = "gift_charge_accounting_code";
  @SerializedName(SERIALIZED_NAME_GIFT_CHARGE_ACCOUNTING_CODE)
  private String giftChargeAccountingCode;

  public static final String SERIALIZED_NAME_GIFT_CHARGE_REFUNDED = "gift_charge_refunded";
  @SerializedName(SERIALIZED_NAME_GIFT_CHARGE_REFUNDED)
  private Currency giftChargeRefunded;

  public static final String SERIALIZED_NAME_GIFT_EMAIL = "gift_email";
  @SerializedName(SERIALIZED_NAME_GIFT_EMAIL)
  private String giftEmail;

  public static final String SERIALIZED_NAME_GIFT_MESSAGE = "gift_message";
  @SerializedName(SERIALIZED_NAME_GIFT_MESSAGE)
  private String giftMessage;

  public static final String SERIALIZED_NAME_GIFT_WRAP_ACCOUNTING_CODE = "gift_wrap_accounting_code";
  @SerializedName(SERIALIZED_NAME_GIFT_WRAP_ACCOUNTING_CODE)
  private String giftWrapAccountingCode;

  public static final String SERIALIZED_NAME_GIFT_WRAP_COST = "gift_wrap_cost";
  @SerializedName(SERIALIZED_NAME_GIFT_WRAP_COST)
  private Currency giftWrapCost;

  public static final String SERIALIZED_NAME_GIFT_WRAP_REFUNDED = "gift_wrap_refunded";
  @SerializedName(SERIALIZED_NAME_GIFT_WRAP_REFUNDED)
  private Currency giftWrapRefunded;

  public static final String SERIALIZED_NAME_GIFT_WRAP_TITLE = "gift_wrap_title";
  @SerializedName(SERIALIZED_NAME_GIFT_WRAP_TITLE)
  private String giftWrapTitle;

  public OrderGift() { 
  }

  public OrderGift gift(Boolean gift) {
    
    this.gift = gift;
    return this;
  }

   /**
   * True if the order is a gift
   * @return gift
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if the order is a gift")

  public Boolean getGift() {
    return gift;
  }


  public void setGift(Boolean gift) {
    this.gift = gift;
  }


  public OrderGift giftCharge(Currency giftCharge) {
    
    this.giftCharge = giftCharge;
    return this;
  }

   /**
   * Get giftCharge
   * @return giftCharge
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Currency getGiftCharge() {
    return giftCharge;
  }


  public void setGiftCharge(Currency giftCharge) {
    this.giftCharge = giftCharge;
  }


  public OrderGift giftChargeAccountingCode(String giftChargeAccountingCode) {
    
    this.giftChargeAccountingCode = giftChargeAccountingCode;
    return this;
  }

   /**
   * QuickBooks code for the gift charge
   * @return giftChargeAccountingCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "QuickBooks code for the gift charge")

  public String getGiftChargeAccountingCode() {
    return giftChargeAccountingCode;
  }


  public void setGiftChargeAccountingCode(String giftChargeAccountingCode) {
    this.giftChargeAccountingCode = giftChargeAccountingCode;
  }


  public OrderGift giftChargeRefunded(Currency giftChargeRefunded) {
    
    this.giftChargeRefunded = giftChargeRefunded;
    return this;
  }

   /**
   * Get giftChargeRefunded
   * @return giftChargeRefunded
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Currency getGiftChargeRefunded() {
    return giftChargeRefunded;
  }


  public void setGiftChargeRefunded(Currency giftChargeRefunded) {
    this.giftChargeRefunded = giftChargeRefunded;
  }


  public OrderGift giftEmail(String giftEmail) {
    
    this.giftEmail = giftEmail;
    return this;
  }

   /**
   * Email address of the gift recipient
   * @return giftEmail
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Email address of the gift recipient")

  public String getGiftEmail() {
    return giftEmail;
  }


  public void setGiftEmail(String giftEmail) {
    this.giftEmail = giftEmail;
  }


  public OrderGift giftMessage(String giftMessage) {
    
    this.giftMessage = giftMessage;
    return this;
  }

   /**
   * Message to the gift recipient
   * @return giftMessage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Message to the gift recipient")

  public String getGiftMessage() {
    return giftMessage;
  }


  public void setGiftMessage(String giftMessage) {
    this.giftMessage = giftMessage;
  }


  public OrderGift giftWrapAccountingCode(String giftWrapAccountingCode) {
    
    this.giftWrapAccountingCode = giftWrapAccountingCode;
    return this;
  }

   /**
   * QuickBooks code for the gift wrap charge
   * @return giftWrapAccountingCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "QuickBooks code for the gift wrap charge")

  public String getGiftWrapAccountingCode() {
    return giftWrapAccountingCode;
  }


  public void setGiftWrapAccountingCode(String giftWrapAccountingCode) {
    this.giftWrapAccountingCode = giftWrapAccountingCode;
  }


  public OrderGift giftWrapCost(Currency giftWrapCost) {
    
    this.giftWrapCost = giftWrapCost;
    return this;
  }

   /**
   * Get giftWrapCost
   * @return giftWrapCost
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Currency getGiftWrapCost() {
    return giftWrapCost;
  }


  public void setGiftWrapCost(Currency giftWrapCost) {
    this.giftWrapCost = giftWrapCost;
  }


  public OrderGift giftWrapRefunded(Currency giftWrapRefunded) {
    
    this.giftWrapRefunded = giftWrapRefunded;
    return this;
  }

   /**
   * Get giftWrapRefunded
   * @return giftWrapRefunded
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Currency getGiftWrapRefunded() {
    return giftWrapRefunded;
  }


  public void setGiftWrapRefunded(Currency giftWrapRefunded) {
    this.giftWrapRefunded = giftWrapRefunded;
  }


  public OrderGift giftWrapTitle(String giftWrapTitle) {
    
    this.giftWrapTitle = giftWrapTitle;
    return this;
  }

   /**
   * Title of the gift wrap that the customer wants used
   * @return giftWrapTitle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Title of the gift wrap that the customer wants used")

  public String getGiftWrapTitle() {
    return giftWrapTitle;
  }


  public void setGiftWrapTitle(String giftWrapTitle) {
    this.giftWrapTitle = giftWrapTitle;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderGift orderGift = (OrderGift) o;
    return Objects.equals(this.gift, orderGift.gift) &&
        Objects.equals(this.giftCharge, orderGift.giftCharge) &&
        Objects.equals(this.giftChargeAccountingCode, orderGift.giftChargeAccountingCode) &&
        Objects.equals(this.giftChargeRefunded, orderGift.giftChargeRefunded) &&
        Objects.equals(this.giftEmail, orderGift.giftEmail) &&
        Objects.equals(this.giftMessage, orderGift.giftMessage) &&
        Objects.equals(this.giftWrapAccountingCode, orderGift.giftWrapAccountingCode) &&
        Objects.equals(this.giftWrapCost, orderGift.giftWrapCost) &&
        Objects.equals(this.giftWrapRefunded, orderGift.giftWrapRefunded) &&
        Objects.equals(this.giftWrapTitle, orderGift.giftWrapTitle);
  }

  @Override
  public int hashCode() {
    return Objects.hash(gift, giftCharge, giftChargeAccountingCode, giftChargeRefunded, giftEmail, giftMessage, giftWrapAccountingCode, giftWrapCost, giftWrapRefunded, giftWrapTitle);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderGift {\n");
    sb.append("    gift: ").append(toIndentedString(gift)).append("\n");
    sb.append("    giftCharge: ").append(toIndentedString(giftCharge)).append("\n");
    sb.append("    giftChargeAccountingCode: ").append(toIndentedString(giftChargeAccountingCode)).append("\n");
    sb.append("    giftChargeRefunded: ").append(toIndentedString(giftChargeRefunded)).append("\n");
    sb.append("    giftEmail: ").append(toIndentedString(giftEmail)).append("\n");
    sb.append("    giftMessage: ").append(toIndentedString(giftMessage)).append("\n");
    sb.append("    giftWrapAccountingCode: ").append(toIndentedString(giftWrapAccountingCode)).append("\n");
    sb.append("    giftWrapCost: ").append(toIndentedString(giftWrapCost)).append("\n");
    sb.append("    giftWrapRefunded: ").append(toIndentedString(giftWrapRefunded)).append("\n");
    sb.append("    giftWrapTitle: ").append(toIndentedString(giftWrapTitle)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("gift");
    openapiFields.add("gift_charge");
    openapiFields.add("gift_charge_accounting_code");
    openapiFields.add("gift_charge_refunded");
    openapiFields.add("gift_email");
    openapiFields.add("gift_message");
    openapiFields.add("gift_wrap_accounting_code");
    openapiFields.add("gift_wrap_cost");
    openapiFields.add("gift_wrap_refunded");
    openapiFields.add("gift_wrap_title");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to OrderGift
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (OrderGift.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in OrderGift is not found in the empty JSON string", OrderGift.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!OrderGift.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OrderGift` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      // validate the optional field `gift_charge`
      if (jsonObj.getAsJsonObject("gift_charge") != null) {
        Currency.validateJsonObject(jsonObj.getAsJsonObject("gift_charge"));
      }
      if (jsonObj.get("gift_charge_accounting_code") != null && !jsonObj.get("gift_charge_accounting_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gift_charge_accounting_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gift_charge_accounting_code").toString()));
      }
      // validate the optional field `gift_charge_refunded`
      if (jsonObj.getAsJsonObject("gift_charge_refunded") != null) {
        Currency.validateJsonObject(jsonObj.getAsJsonObject("gift_charge_refunded"));
      }
      if (jsonObj.get("gift_email") != null && !jsonObj.get("gift_email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gift_email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gift_email").toString()));
      }
      if (jsonObj.get("gift_message") != null && !jsonObj.get("gift_message").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gift_message` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gift_message").toString()));
      }
      if (jsonObj.get("gift_wrap_accounting_code") != null && !jsonObj.get("gift_wrap_accounting_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gift_wrap_accounting_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gift_wrap_accounting_code").toString()));
      }
      // validate the optional field `gift_wrap_cost`
      if (jsonObj.getAsJsonObject("gift_wrap_cost") != null) {
        Currency.validateJsonObject(jsonObj.getAsJsonObject("gift_wrap_cost"));
      }
      // validate the optional field `gift_wrap_refunded`
      if (jsonObj.getAsJsonObject("gift_wrap_refunded") != null) {
        Currency.validateJsonObject(jsonObj.getAsJsonObject("gift_wrap_refunded"));
      }
      if (jsonObj.get("gift_wrap_title") != null && !jsonObj.get("gift_wrap_title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gift_wrap_title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gift_wrap_title").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OrderGift.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OrderGift' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OrderGift> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OrderGift.class));

       return (TypeAdapter<T>) new TypeAdapter<OrderGift>() {
           @Override
           public void write(JsonWriter out, OrderGift value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OrderGift read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of OrderGift given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of OrderGift
  * @throws IOException if the JSON string is invalid with respect to OrderGift
  */
  public static OrderGift fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OrderGift.class);
  }

 /**
  * Convert an instance of OrderGift to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

