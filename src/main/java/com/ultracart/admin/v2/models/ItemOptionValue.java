/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.Distance;
import com.ultracart.admin.v2.models.ItemOptionValueAdditionalItem;
import com.ultracart.admin.v2.models.ItemOptionValueDigitalItem;
import com.ultracart.admin.v2.models.Weight;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * ItemOptionValue
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-12-15T16:45:07.795-05:00[America/Indianapolis]")
public class ItemOptionValue {
  /**
   * Additional dimensions application
   */
  @JsonAdapter(AdditionalDimensionApplicationEnum.Adapter.class)
  public enum AdditionalDimensionApplicationEnum {
    NONE("none"),
    
    SET_ITEM_TO("set item to"),
    
    ADD_ITEM("add item");

    private String value;

    AdditionalDimensionApplicationEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AdditionalDimensionApplicationEnum fromValue(String value) {
      for (AdditionalDimensionApplicationEnum b : AdditionalDimensionApplicationEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<AdditionalDimensionApplicationEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AdditionalDimensionApplicationEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AdditionalDimensionApplicationEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return AdditionalDimensionApplicationEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_ADDITIONAL_DIMENSION_APPLICATION = "additional_dimension_application";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_DIMENSION_APPLICATION)
  private AdditionalDimensionApplicationEnum additionalDimensionApplication;

  public static final String SERIALIZED_NAME_ADDITIONAL_ITEMS = "additional_items";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_ITEMS)
  private List<ItemOptionValueAdditionalItem> additionalItems = null;

  public static final String SERIALIZED_NAME_COST_CHANGE = "cost_change";
  @SerializedName(SERIALIZED_NAME_COST_CHANGE)
  private BigDecimal costChange;

  public static final String SERIALIZED_NAME_DEFAULT_VALUE = "default_value";
  @SerializedName(SERIALIZED_NAME_DEFAULT_VALUE)
  private Boolean defaultValue;

  public static final String SERIALIZED_NAME_DIGITAL_ITEMS = "digital_items";
  @SerializedName(SERIALIZED_NAME_DIGITAL_ITEMS)
  private List<ItemOptionValueDigitalItem> digitalItems = null;

  public static final String SERIALIZED_NAME_HEIGHT = "height";
  @SerializedName(SERIALIZED_NAME_HEIGHT)
  private Distance height;

  public static final String SERIALIZED_NAME_LENGTH = "length";
  @SerializedName(SERIALIZED_NAME_LENGTH)
  private Distance length;

  public static final String SERIALIZED_NAME_MERCHANT_ITEM_MULTIMEDIA_OID = "merchant_item_multimedia_oid";
  @SerializedName(SERIALIZED_NAME_MERCHANT_ITEM_MULTIMEDIA_OID)
  private Integer merchantItemMultimediaOid;

  public static final String SERIALIZED_NAME_OPTION_VALUE_OID = "option_value_oid";
  @SerializedName(SERIALIZED_NAME_OPTION_VALUE_OID)
  private Integer optionValueOid;

  public static final String SERIALIZED_NAME_PERCENT_COST_CHANGE = "percent_cost_change";
  @SerializedName(SERIALIZED_NAME_PERCENT_COST_CHANGE)
  private BigDecimal percentCostChange;

  public static final String SERIALIZED_NAME_TRANSLATED_TEXT_INSTANCE_OID = "translated_text_instance_oid";
  @SerializedName(SERIALIZED_NAME_TRANSLATED_TEXT_INSTANCE_OID)
  private Integer translatedTextInstanceOid;

  public static final String SERIALIZED_NAME_VALUE = "value";
  @SerializedName(SERIALIZED_NAME_VALUE)
  private String value;

  public static final String SERIALIZED_NAME_WEIGHT_CHANGE = "weight_change";
  @SerializedName(SERIALIZED_NAME_WEIGHT_CHANGE)
  private Weight weightChange;

  public static final String SERIALIZED_NAME_WEIGHT_CHANGE_PERCENT = "weight_change_percent";
  @SerializedName(SERIALIZED_NAME_WEIGHT_CHANGE_PERCENT)
  private BigDecimal weightChangePercent;

  public static final String SERIALIZED_NAME_WIDTH = "width";
  @SerializedName(SERIALIZED_NAME_WIDTH)
  private Distance width;

  public ItemOptionValue() { 
  }

  public ItemOptionValue additionalDimensionApplication(AdditionalDimensionApplicationEnum additionalDimensionApplication) {
    
    this.additionalDimensionApplication = additionalDimensionApplication;
    return this;
  }

   /**
   * Additional dimensions application
   * @return additionalDimensionApplication
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Additional dimensions application")

  public AdditionalDimensionApplicationEnum getAdditionalDimensionApplication() {
    return additionalDimensionApplication;
  }


  public void setAdditionalDimensionApplication(AdditionalDimensionApplicationEnum additionalDimensionApplication) {
    this.additionalDimensionApplication = additionalDimensionApplication;
  }


  public ItemOptionValue additionalItems(List<ItemOptionValueAdditionalItem> additionalItems) {
    
    this.additionalItems = additionalItems;
    return this;
  }

  public ItemOptionValue addAdditionalItemsItem(ItemOptionValueAdditionalItem additionalItemsItem) {
    if (this.additionalItems == null) {
      this.additionalItems = new ArrayList<>();
    }
    this.additionalItems.add(additionalItemsItem);
    return this;
  }

   /**
   * Additional items to add to the order if this value is selected
   * @return additionalItems
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Additional items to add to the order if this value is selected")

  public List<ItemOptionValueAdditionalItem> getAdditionalItems() {
    return additionalItems;
  }


  public void setAdditionalItems(List<ItemOptionValueAdditionalItem> additionalItems) {
    this.additionalItems = additionalItems;
  }


  public ItemOptionValue costChange(BigDecimal costChange) {
    
    this.costChange = costChange;
    return this;
  }

   /**
   * Cost change
   * @return costChange
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Cost change")

  public BigDecimal getCostChange() {
    return costChange;
  }


  public void setCostChange(BigDecimal costChange) {
    this.costChange = costChange;
  }


  public ItemOptionValue defaultValue(Boolean defaultValue) {
    
    this.defaultValue = defaultValue;
    return this;
  }

   /**
   * True if default value
   * @return defaultValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if default value")

  public Boolean getDefaultValue() {
    return defaultValue;
  }


  public void setDefaultValue(Boolean defaultValue) {
    this.defaultValue = defaultValue;
  }


  public ItemOptionValue digitalItems(List<ItemOptionValueDigitalItem> digitalItems) {
    
    this.digitalItems = digitalItems;
    return this;
  }

  public ItemOptionValue addDigitalItemsItem(ItemOptionValueDigitalItem digitalItemsItem) {
    if (this.digitalItems == null) {
      this.digitalItems = new ArrayList<>();
    }
    this.digitalItems.add(digitalItemsItem);
    return this;
  }

   /**
   * Digital items to allow the customer to download if this option value is selected
   * @return digitalItems
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Digital items to allow the customer to download if this option value is selected")

  public List<ItemOptionValueDigitalItem> getDigitalItems() {
    return digitalItems;
  }


  public void setDigitalItems(List<ItemOptionValueDigitalItem> digitalItems) {
    this.digitalItems = digitalItems;
  }


  public ItemOptionValue height(Distance height) {
    
    this.height = height;
    return this;
  }

   /**
   * Get height
   * @return height
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Distance getHeight() {
    return height;
  }


  public void setHeight(Distance height) {
    this.height = height;
  }


  public ItemOptionValue length(Distance length) {
    
    this.length = length;
    return this;
  }

   /**
   * Get length
   * @return length
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Distance getLength() {
    return length;
  }


  public void setLength(Distance length) {
    this.length = length;
  }


  public ItemOptionValue merchantItemMultimediaOid(Integer merchantItemMultimediaOid) {
    
    this.merchantItemMultimediaOid = merchantItemMultimediaOid;
    return this;
  }

   /**
   * Multimedia object identifier associated with this option value
   * @return merchantItemMultimediaOid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Multimedia object identifier associated with this option value")

  public Integer getMerchantItemMultimediaOid() {
    return merchantItemMultimediaOid;
  }


  public void setMerchantItemMultimediaOid(Integer merchantItemMultimediaOid) {
    this.merchantItemMultimediaOid = merchantItemMultimediaOid;
  }


  public ItemOptionValue optionValueOid(Integer optionValueOid) {
    
    this.optionValueOid = optionValueOid;
    return this;
  }

   /**
   * Option value object identifier
   * @return optionValueOid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Option value object identifier")

  public Integer getOptionValueOid() {
    return optionValueOid;
  }


  public void setOptionValueOid(Integer optionValueOid) {
    this.optionValueOid = optionValueOid;
  }


  public ItemOptionValue percentCostChange(BigDecimal percentCostChange) {
    
    this.percentCostChange = percentCostChange;
    return this;
  }

   /**
   * Percentage cost change
   * @return percentCostChange
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Percentage cost change")

  public BigDecimal getPercentCostChange() {
    return percentCostChange;
  }


  public void setPercentCostChange(BigDecimal percentCostChange) {
    this.percentCostChange = percentCostChange;
  }


  public ItemOptionValue translatedTextInstanceOid(Integer translatedTextInstanceOid) {
    
    this.translatedTextInstanceOid = translatedTextInstanceOid;
    return this;
  }

   /**
   * Translated text instance id
   * @return translatedTextInstanceOid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Translated text instance id")

  public Integer getTranslatedTextInstanceOid() {
    return translatedTextInstanceOid;
  }


  public void setTranslatedTextInstanceOid(Integer translatedTextInstanceOid) {
    this.translatedTextInstanceOid = translatedTextInstanceOid;
  }


  public ItemOptionValue value(String value) {
    
    this.value = value;
    return this;
  }

   /**
   * Value
   * @return value
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Value")

  public String getValue() {
    return value;
  }


  public void setValue(String value) {
    this.value = value;
  }


  public ItemOptionValue weightChange(Weight weightChange) {
    
    this.weightChange = weightChange;
    return this;
  }

   /**
   * Get weightChange
   * @return weightChange
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Weight getWeightChange() {
    return weightChange;
  }


  public void setWeightChange(Weight weightChange) {
    this.weightChange = weightChange;
  }


  public ItemOptionValue weightChangePercent(BigDecimal weightChangePercent) {
    
    this.weightChangePercent = weightChangePercent;
    return this;
  }

   /**
   * Percentage weight change
   * @return weightChangePercent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Percentage weight change")

  public BigDecimal getWeightChangePercent() {
    return weightChangePercent;
  }


  public void setWeightChangePercent(BigDecimal weightChangePercent) {
    this.weightChangePercent = weightChangePercent;
  }


  public ItemOptionValue width(Distance width) {
    
    this.width = width;
    return this;
  }

   /**
   * Get width
   * @return width
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Distance getWidth() {
    return width;
  }


  public void setWidth(Distance width) {
    this.width = width;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ItemOptionValue itemOptionValue = (ItemOptionValue) o;
    return Objects.equals(this.additionalDimensionApplication, itemOptionValue.additionalDimensionApplication) &&
        Objects.equals(this.additionalItems, itemOptionValue.additionalItems) &&
        Objects.equals(this.costChange, itemOptionValue.costChange) &&
        Objects.equals(this.defaultValue, itemOptionValue.defaultValue) &&
        Objects.equals(this.digitalItems, itemOptionValue.digitalItems) &&
        Objects.equals(this.height, itemOptionValue.height) &&
        Objects.equals(this.length, itemOptionValue.length) &&
        Objects.equals(this.merchantItemMultimediaOid, itemOptionValue.merchantItemMultimediaOid) &&
        Objects.equals(this.optionValueOid, itemOptionValue.optionValueOid) &&
        Objects.equals(this.percentCostChange, itemOptionValue.percentCostChange) &&
        Objects.equals(this.translatedTextInstanceOid, itemOptionValue.translatedTextInstanceOid) &&
        Objects.equals(this.value, itemOptionValue.value) &&
        Objects.equals(this.weightChange, itemOptionValue.weightChange) &&
        Objects.equals(this.weightChangePercent, itemOptionValue.weightChangePercent) &&
        Objects.equals(this.width, itemOptionValue.width);
  }

  @Override
  public int hashCode() {
    return Objects.hash(additionalDimensionApplication, additionalItems, costChange, defaultValue, digitalItems, height, length, merchantItemMultimediaOid, optionValueOid, percentCostChange, translatedTextInstanceOid, value, weightChange, weightChangePercent, width);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ItemOptionValue {\n");
    sb.append("    additionalDimensionApplication: ").append(toIndentedString(additionalDimensionApplication)).append("\n");
    sb.append("    additionalItems: ").append(toIndentedString(additionalItems)).append("\n");
    sb.append("    costChange: ").append(toIndentedString(costChange)).append("\n");
    sb.append("    defaultValue: ").append(toIndentedString(defaultValue)).append("\n");
    sb.append("    digitalItems: ").append(toIndentedString(digitalItems)).append("\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("    length: ").append(toIndentedString(length)).append("\n");
    sb.append("    merchantItemMultimediaOid: ").append(toIndentedString(merchantItemMultimediaOid)).append("\n");
    sb.append("    optionValueOid: ").append(toIndentedString(optionValueOid)).append("\n");
    sb.append("    percentCostChange: ").append(toIndentedString(percentCostChange)).append("\n");
    sb.append("    translatedTextInstanceOid: ").append(toIndentedString(translatedTextInstanceOid)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    weightChange: ").append(toIndentedString(weightChange)).append("\n");
    sb.append("    weightChangePercent: ").append(toIndentedString(weightChangePercent)).append("\n");
    sb.append("    width: ").append(toIndentedString(width)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("additional_dimension_application");
    openapiFields.add("additional_items");
    openapiFields.add("cost_change");
    openapiFields.add("default_value");
    openapiFields.add("digital_items");
    openapiFields.add("height");
    openapiFields.add("length");
    openapiFields.add("merchant_item_multimedia_oid");
    openapiFields.add("option_value_oid");
    openapiFields.add("percent_cost_change");
    openapiFields.add("translated_text_instance_oid");
    openapiFields.add("value");
    openapiFields.add("weight_change");
    openapiFields.add("weight_change_percent");
    openapiFields.add("width");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ItemOptionValue
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (ItemOptionValue.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in ItemOptionValue is not found in the empty JSON string", ItemOptionValue.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!ItemOptionValue.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ItemOptionValue` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("additional_dimension_application") != null && !jsonObj.get("additional_dimension_application").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `additional_dimension_application` to be a primitive type in the JSON string but got `%s`", jsonObj.get("additional_dimension_application").toString()));
      }
      JsonArray jsonArrayadditionalItems = jsonObj.getAsJsonArray("additional_items");
      if (jsonArrayadditionalItems != null) {
        // ensure the json data is an array
        if (!jsonObj.get("additional_items").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `additional_items` to be an array in the JSON string but got `%s`", jsonObj.get("additional_items").toString()));
        }

        // validate the optional field `additional_items` (array)
        for (int i = 0; i < jsonArrayadditionalItems.size(); i++) {
          ItemOptionValueAdditionalItem.validateJsonObject(jsonArrayadditionalItems.get(i).getAsJsonObject());
        };
      }
      JsonArray jsonArraydigitalItems = jsonObj.getAsJsonArray("digital_items");
      if (jsonArraydigitalItems != null) {
        // ensure the json data is an array
        if (!jsonObj.get("digital_items").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `digital_items` to be an array in the JSON string but got `%s`", jsonObj.get("digital_items").toString()));
        }

        // validate the optional field `digital_items` (array)
        for (int i = 0; i < jsonArraydigitalItems.size(); i++) {
          ItemOptionValueDigitalItem.validateJsonObject(jsonArraydigitalItems.get(i).getAsJsonObject());
        };
      }
      // validate the optional field `height`
      if (jsonObj.getAsJsonObject("height") != null) {
        Distance.validateJsonObject(jsonObj.getAsJsonObject("height"));
      }
      // validate the optional field `length`
      if (jsonObj.getAsJsonObject("length") != null) {
        Distance.validateJsonObject(jsonObj.getAsJsonObject("length"));
      }
      if (jsonObj.get("value") != null && !jsonObj.get("value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("value").toString()));
      }
      // validate the optional field `weight_change`
      if (jsonObj.getAsJsonObject("weight_change") != null) {
        Weight.validateJsonObject(jsonObj.getAsJsonObject("weight_change"));
      }
      // validate the optional field `width`
      if (jsonObj.getAsJsonObject("width") != null) {
        Distance.validateJsonObject(jsonObj.getAsJsonObject("width"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ItemOptionValue.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ItemOptionValue' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ItemOptionValue> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ItemOptionValue.class));

       return (TypeAdapter<T>) new TypeAdapter<ItemOptionValue>() {
           @Override
           public void write(JsonWriter out, ItemOptionValue value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ItemOptionValue read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ItemOptionValue given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ItemOptionValue
  * @throws IOException if the JSON string is invalid with respect to ItemOptionValue
  */
  public static ItemOptionValue fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ItemOptionValue.class);
  }

 /**
  * Convert an instance of ItemOptionValue to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

