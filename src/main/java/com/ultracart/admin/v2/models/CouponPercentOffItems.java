/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * CouponPercentOffItems
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-10-20T17:21:52.957-04:00[America/Indianapolis]")
public class CouponPercentOffItems {
  public static final String SERIALIZED_NAME_DISCOUNT_PERCENT = "discount_percent";
  @SerializedName(SERIALIZED_NAME_DISCOUNT_PERCENT)
  private BigDecimal discountPercent;

  public static final String SERIALIZED_NAME_EXCLUDED_ITEM_TAGS = "excluded_item_tags";
  @SerializedName(SERIALIZED_NAME_EXCLUDED_ITEM_TAGS)
  private List<String> excludedItemTags = null;

  public static final String SERIALIZED_NAME_EXCLUDED_ITEMS = "excluded_items";
  @SerializedName(SERIALIZED_NAME_EXCLUDED_ITEMS)
  private List<String> excludedItems = null;

  public static final String SERIALIZED_NAME_ITEM_TAGS = "item_tags";
  @SerializedName(SERIALIZED_NAME_ITEM_TAGS)
  private List<String> itemTags = null;

  public static final String SERIALIZED_NAME_ITEMS = "items";
  @SerializedName(SERIALIZED_NAME_ITEMS)
  private List<String> items = null;

  public static final String SERIALIZED_NAME_LIMIT = "limit";
  @SerializedName(SERIALIZED_NAME_LIMIT)
  private Integer limit;

  public CouponPercentOffItems() { 
  }

  public CouponPercentOffItems discountPercent(BigDecimal discountPercent) {
    
    this.discountPercent = discountPercent;
    return this;
  }

   /**
   * The percentage of subtotal discount
   * @return discountPercent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The percentage of subtotal discount")

  public BigDecimal getDiscountPercent() {
    return discountPercent;
  }


  public void setDiscountPercent(BigDecimal discountPercent) {
    this.discountPercent = discountPercent;
  }


  public CouponPercentOffItems excludedItemTags(List<String> excludedItemTags) {
    
    this.excludedItemTags = excludedItemTags;
    return this;
  }

  public CouponPercentOffItems addExcludedItemTagsItem(String excludedItemTagsItem) {
    if (this.excludedItemTags == null) {
      this.excludedItemTags = new ArrayList<>();
    }
    this.excludedItemTags.add(excludedItemTagsItem);
    return this;
  }

   /**
   * A list of item tags which cannot be discounted.
   * @return excludedItemTags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of item tags which cannot be discounted.")

  public List<String> getExcludedItemTags() {
    return excludedItemTags;
  }


  public void setExcludedItemTags(List<String> excludedItemTags) {
    this.excludedItemTags = excludedItemTags;
  }


  public CouponPercentOffItems excludedItems(List<String> excludedItems) {
    
    this.excludedItems = excludedItems;
    return this;
  }

  public CouponPercentOffItems addExcludedItemsItem(String excludedItemsItem) {
    if (this.excludedItems == null) {
      this.excludedItems = new ArrayList<>();
    }
    this.excludedItems.add(excludedItemsItem);
    return this;
  }

   /**
   * A list of items which cannot be discounted.
   * @return excludedItems
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of items which cannot be discounted.")

  public List<String> getExcludedItems() {
    return excludedItems;
  }


  public void setExcludedItems(List<String> excludedItems) {
    this.excludedItems = excludedItems;
  }


  public CouponPercentOffItems itemTags(List<String> itemTags) {
    
    this.itemTags = itemTags;
    return this;
  }

  public CouponPercentOffItems addItemTagsItem(String itemTagsItem) {
    if (this.itemTags == null) {
      this.itemTags = new ArrayList<>();
    }
    this.itemTags.add(itemTagsItem);
    return this;
  }

   /**
   * An optional list of item tags which will receive a discount.  If blank, discount applies to all items except excluded items.
   * @return itemTags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An optional list of item tags which will receive a discount.  If blank, discount applies to all items except excluded items.")

  public List<String> getItemTags() {
    return itemTags;
  }


  public void setItemTags(List<String> itemTags) {
    this.itemTags = itemTags;
  }


  public CouponPercentOffItems items(List<String> items) {
    
    this.items = items;
    return this;
  }

  public CouponPercentOffItems addItemsItem(String itemsItem) {
    if (this.items == null) {
      this.items = new ArrayList<>();
    }
    this.items.add(itemsItem);
    return this;
  }

   /**
   * An optional list of items which will receive a discount.  If blank, discount applies to all items except excluded items.
   * @return items
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An optional list of items which will receive a discount.  If blank, discount applies to all items except excluded items.")

  public List<String> getItems() {
    return items;
  }


  public void setItems(List<String> items) {
    this.items = items;
  }


  public CouponPercentOffItems limit(Integer limit) {
    
    this.limit = limit;
    return this;
  }

   /**
   * The (optional) maximum quantity of discounted items.
   * @return limit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The (optional) maximum quantity of discounted items.")

  public Integer getLimit() {
    return limit;
  }


  public void setLimit(Integer limit) {
    this.limit = limit;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CouponPercentOffItems couponPercentOffItems = (CouponPercentOffItems) o;
    return Objects.equals(this.discountPercent, couponPercentOffItems.discountPercent) &&
        Objects.equals(this.excludedItemTags, couponPercentOffItems.excludedItemTags) &&
        Objects.equals(this.excludedItems, couponPercentOffItems.excludedItems) &&
        Objects.equals(this.itemTags, couponPercentOffItems.itemTags) &&
        Objects.equals(this.items, couponPercentOffItems.items) &&
        Objects.equals(this.limit, couponPercentOffItems.limit);
  }

  @Override
  public int hashCode() {
    return Objects.hash(discountPercent, excludedItemTags, excludedItems, itemTags, items, limit);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CouponPercentOffItems {\n");
    sb.append("    discountPercent: ").append(toIndentedString(discountPercent)).append("\n");
    sb.append("    excludedItemTags: ").append(toIndentedString(excludedItemTags)).append("\n");
    sb.append("    excludedItems: ").append(toIndentedString(excludedItems)).append("\n");
    sb.append("    itemTags: ").append(toIndentedString(itemTags)).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("discount_percent");
    openapiFields.add("excluded_item_tags");
    openapiFields.add("excluded_items");
    openapiFields.add("item_tags");
    openapiFields.add("items");
    openapiFields.add("limit");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CouponPercentOffItems
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (CouponPercentOffItems.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in CouponPercentOffItems is not found in the empty JSON string", CouponPercentOffItems.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!CouponPercentOffItems.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CouponPercentOffItems` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      // ensure the json data is an array
      if (jsonObj.get("excluded_item_tags") != null && !jsonObj.get("excluded_item_tags").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `excluded_item_tags` to be an array in the JSON string but got `%s`", jsonObj.get("excluded_item_tags").toString()));
      }
      // ensure the json data is an array
      if (jsonObj.get("excluded_items") != null && !jsonObj.get("excluded_items").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `excluded_items` to be an array in the JSON string but got `%s`", jsonObj.get("excluded_items").toString()));
      }
      // ensure the json data is an array
      if (jsonObj.get("item_tags") != null && !jsonObj.get("item_tags").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `item_tags` to be an array in the JSON string but got `%s`", jsonObj.get("item_tags").toString()));
      }
      // ensure the json data is an array
      if (jsonObj.get("items") != null && !jsonObj.get("items").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `items` to be an array in the JSON string but got `%s`", jsonObj.get("items").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CouponPercentOffItems.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CouponPercentOffItems' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CouponPercentOffItems> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CouponPercentOffItems.class));

       return (TypeAdapter<T>) new TypeAdapter<CouponPercentOffItems>() {
           @Override
           public void write(JsonWriter out, CouponPercentOffItems value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CouponPercentOffItems read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CouponPercentOffItems given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CouponPercentOffItems
  * @throws IOException if the JSON string is invalid with respect to CouponPercentOffItems
  */
  public static CouponPercentOffItems fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CouponPercentOffItems.class);
  }

 /**
  * Convert an instance of CouponPercentOffItems to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

