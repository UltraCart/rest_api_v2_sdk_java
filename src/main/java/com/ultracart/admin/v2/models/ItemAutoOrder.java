/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.ItemAutoOrderStep;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

/**
 * ItemAutoOrder
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-01-19T09:42:08.156-05:00")



public class ItemAutoOrder {
  @SerializedName("auth_future_amount")
  private BigDecimal authFutureAmount = null;

  @SerializedName("auth_test_amount")
  private BigDecimal authTestAmount = null;

  @SerializedName("auto_order_cancel_item_id")
  private String autoOrderCancelItemId = null;

  @SerializedName("auto_order_cancel_item_oid")
  private Integer autoOrderCancelItemOid = null;

  @SerializedName("auto_order_downgrade_items")
  private List<String> autoOrderDowngradeItems = null;

  @SerializedName("auto_order_paused")
  private Boolean autoOrderPaused = null;

  @SerializedName("auto_order_prohibit_expiring_cards")
  private Integer autoOrderProhibitExpiringCards = null;

  @SerializedName("auto_order_schedules")
  private List<String> autoOrderSchedules = null;

  @SerializedName("auto_order_upgrade_items")
  private List<String> autoOrderUpgradeItems = null;

  @SerializedName("auto_order_upsell")
  private Boolean autoOrderUpsell = null;

  @SerializedName("auto_order_upsell_no_easy_cancel")
  private Boolean autoOrderUpsellNoEasyCancel = null;

  @SerializedName("auto_order_upsell_one_per_customer")
  private Boolean autoOrderUpsellOnePerCustomer = null;

  @SerializedName("auto_orderable")
  private Boolean autoOrderable = null;

  @SerializedName("cancel_other_auto_orders")
  private Boolean cancelOtherAutoOrders = null;

  @SerializedName("free_shipping_auto_order")
  private Boolean freeShippingAutoOrder = null;

  @SerializedName("refund_other_auto_orders")
  private Boolean refundOtherAutoOrders = null;

  @SerializedName("steps")
  private List<ItemAutoOrderStep> steps = null;

  public ItemAutoOrder authFutureAmount(BigDecimal authFutureAmount) {
    this.authFutureAmount = authFutureAmount;
    return this;
  }

   /**
   * Amount to try and authorize for the future rebill
   * @return authFutureAmount
  **/
  @ApiModelProperty(value = "Amount to try and authorize for the future rebill")
  public BigDecimal getAuthFutureAmount() {
    return authFutureAmount;
  }

  public void setAuthFutureAmount(BigDecimal authFutureAmount) {
    this.authFutureAmount = authFutureAmount;
  }

  public ItemAutoOrder authTestAmount(BigDecimal authTestAmount) {
    this.authTestAmount = authTestAmount;
    return this;
  }

   /**
   * Amount to try and test authorize
   * @return authTestAmount
  **/
  @ApiModelProperty(value = "Amount to try and test authorize")
  public BigDecimal getAuthTestAmount() {
    return authTestAmount;
  }

  public void setAuthTestAmount(BigDecimal authTestAmount) {
    this.authTestAmount = authTestAmount;
  }

  public ItemAutoOrder autoOrderCancelItemId(String autoOrderCancelItemId) {
    this.autoOrderCancelItemId = autoOrderCancelItemId;
    return this;
  }

   /**
   * Item id to attempt charging the customer for if they cancel
   * @return autoOrderCancelItemId
  **/
  @ApiModelProperty(value = "Item id to attempt charging the customer for if they cancel")
  public String getAutoOrderCancelItemId() {
    return autoOrderCancelItemId;
  }

  public void setAutoOrderCancelItemId(String autoOrderCancelItemId) {
    this.autoOrderCancelItemId = autoOrderCancelItemId;
  }

  public ItemAutoOrder autoOrderCancelItemOid(Integer autoOrderCancelItemOid) {
    this.autoOrderCancelItemOid = autoOrderCancelItemOid;
    return this;
  }

   /**
   * Item object identifier to attempt charging the customer for if they cancel
   * @return autoOrderCancelItemOid
  **/
  @ApiModelProperty(value = "Item object identifier to attempt charging the customer for if they cancel")
  public Integer getAutoOrderCancelItemOid() {
    return autoOrderCancelItemOid;
  }

  public void setAutoOrderCancelItemOid(Integer autoOrderCancelItemOid) {
    this.autoOrderCancelItemOid = autoOrderCancelItemOid;
  }

  public ItemAutoOrder autoOrderDowngradeItems(List<String> autoOrderDowngradeItems) {
    this.autoOrderDowngradeItems = autoOrderDowngradeItems;
    return this;
  }

  public ItemAutoOrder addAutoOrderDowngradeItemsItem(String autoOrderDowngradeItemsItem) {
    if (this.autoOrderDowngradeItems == null) {
      this.autoOrderDowngradeItems = new ArrayList<String>();
    }
    this.autoOrderDowngradeItems.add(autoOrderDowngradeItemsItem);
    return this;
  }

   /**
   * List of downgrade items presented to customer service representatives
   * @return autoOrderDowngradeItems
  **/
  @ApiModelProperty(value = "List of downgrade items presented to customer service representatives")
  public List<String> getAutoOrderDowngradeItems() {
    return autoOrderDowngradeItems;
  }

  public void setAutoOrderDowngradeItems(List<String> autoOrderDowngradeItems) {
    this.autoOrderDowngradeItems = autoOrderDowngradeItems;
  }

  public ItemAutoOrder autoOrderPaused(Boolean autoOrderPaused) {
    this.autoOrderPaused = autoOrderPaused;
    return this;
  }

   /**
   * True if the rebill processing of this item is paused
   * @return autoOrderPaused
  **/
  @ApiModelProperty(value = "True if the rebill processing of this item is paused")
  public Boolean isAutoOrderPaused() {
    return autoOrderPaused;
  }

  public void setAutoOrderPaused(Boolean autoOrderPaused) {
    this.autoOrderPaused = autoOrderPaused;
  }

  public ItemAutoOrder autoOrderProhibitExpiringCards(Integer autoOrderProhibitExpiringCards) {
    this.autoOrderProhibitExpiringCards = autoOrderProhibitExpiringCards;
    return this;
  }

   /**
   * Minimum number of months before expiration for the card.  Overrides the account level setting if higher.  Set to zero to disable.
   * @return autoOrderProhibitExpiringCards
  **/
  @ApiModelProperty(value = "Minimum number of months before expiration for the card.  Overrides the account level setting if higher.  Set to zero to disable.")
  public Integer getAutoOrderProhibitExpiringCards() {
    return autoOrderProhibitExpiringCards;
  }

  public void setAutoOrderProhibitExpiringCards(Integer autoOrderProhibitExpiringCards) {
    this.autoOrderProhibitExpiringCards = autoOrderProhibitExpiringCards;
  }

  public ItemAutoOrder autoOrderSchedules(List<String> autoOrderSchedules) {
    this.autoOrderSchedules = autoOrderSchedules;
    return this;
  }

  public ItemAutoOrder addAutoOrderSchedulesItem(String autoOrderSchedulesItem) {
    if (this.autoOrderSchedules == null) {
      this.autoOrderSchedules = new ArrayList<String>();
    }
    this.autoOrderSchedules.add(autoOrderSchedulesItem);
    return this;
  }

   /**
   * The user selectable schedules that are available
   * @return autoOrderSchedules
  **/
  @ApiModelProperty(value = "The user selectable schedules that are available")
  public List<String> getAutoOrderSchedules() {
    return autoOrderSchedules;
  }

  public void setAutoOrderSchedules(List<String> autoOrderSchedules) {
    this.autoOrderSchedules = autoOrderSchedules;
  }

  public ItemAutoOrder autoOrderUpgradeItems(List<String> autoOrderUpgradeItems) {
    this.autoOrderUpgradeItems = autoOrderUpgradeItems;
    return this;
  }

  public ItemAutoOrder addAutoOrderUpgradeItemsItem(String autoOrderUpgradeItemsItem) {
    if (this.autoOrderUpgradeItems == null) {
      this.autoOrderUpgradeItems = new ArrayList<String>();
    }
    this.autoOrderUpgradeItems.add(autoOrderUpgradeItemsItem);
    return this;
  }

   /**
   * List of upgrade items presented to customer service representatives
   * @return autoOrderUpgradeItems
  **/
  @ApiModelProperty(value = "List of upgrade items presented to customer service representatives")
  public List<String> getAutoOrderUpgradeItems() {
    return autoOrderUpgradeItems;
  }

  public void setAutoOrderUpgradeItems(List<String> autoOrderUpgradeItems) {
    this.autoOrderUpgradeItems = autoOrderUpgradeItems;
  }

  public ItemAutoOrder autoOrderUpsell(Boolean autoOrderUpsell) {
    this.autoOrderUpsell = autoOrderUpsell;
    return this;
  }

   /**
   * True if this item uses a fixed upsell step schedule
   * @return autoOrderUpsell
  **/
  @ApiModelProperty(value = "True if this item uses a fixed upsell step schedule")
  public Boolean isAutoOrderUpsell() {
    return autoOrderUpsell;
  }

  public void setAutoOrderUpsell(Boolean autoOrderUpsell) {
    this.autoOrderUpsell = autoOrderUpsell;
  }

  public ItemAutoOrder autoOrderUpsellNoEasyCancel(Boolean autoOrderUpsellNoEasyCancel) {
    this.autoOrderUpsellNoEasyCancel = autoOrderUpsellNoEasyCancel;
    return this;
  }

   /**
   * Do not send the easy cancel email to the customer
   * @return autoOrderUpsellNoEasyCancel
  **/
  @ApiModelProperty(value = "Do not send the easy cancel email to the customer")
  public Boolean isAutoOrderUpsellNoEasyCancel() {
    return autoOrderUpsellNoEasyCancel;
  }

  public void setAutoOrderUpsellNoEasyCancel(Boolean autoOrderUpsellNoEasyCancel) {
    this.autoOrderUpsellNoEasyCancel = autoOrderUpsellNoEasyCancel;
  }

  public ItemAutoOrder autoOrderUpsellOnePerCustomer(Boolean autoOrderUpsellOnePerCustomer) {
    this.autoOrderUpsellOnePerCustomer = autoOrderUpsellOnePerCustomer;
    return this;
  }

   /**
   * Limit the purchase of this item to one per customer
   * @return autoOrderUpsellOnePerCustomer
  **/
  @ApiModelProperty(value = "Limit the purchase of this item to one per customer")
  public Boolean isAutoOrderUpsellOnePerCustomer() {
    return autoOrderUpsellOnePerCustomer;
  }

  public void setAutoOrderUpsellOnePerCustomer(Boolean autoOrderUpsellOnePerCustomer) {
    this.autoOrderUpsellOnePerCustomer = autoOrderUpsellOnePerCustomer;
  }

  public ItemAutoOrder autoOrderable(Boolean autoOrderable) {
    this.autoOrderable = autoOrderable;
    return this;
  }

   /**
   * True if this item can be automatically ordered by the customer
   * @return autoOrderable
  **/
  @ApiModelProperty(value = "True if this item can be automatically ordered by the customer")
  public Boolean isAutoOrderable() {
    return autoOrderable;
  }

  public void setAutoOrderable(Boolean autoOrderable) {
    this.autoOrderable = autoOrderable;
  }

  public ItemAutoOrder cancelOtherAutoOrders(Boolean cancelOtherAutoOrders) {
    this.cancelOtherAutoOrders = cancelOtherAutoOrders;
    return this;
  }

   /**
   * True if other auto orders for this customer should be canceled when this item is ordered
   * @return cancelOtherAutoOrders
  **/
  @ApiModelProperty(value = "True if other auto orders for this customer should be canceled when this item is ordered")
  public Boolean isCancelOtherAutoOrders() {
    return cancelOtherAutoOrders;
  }

  public void setCancelOtherAutoOrders(Boolean cancelOtherAutoOrders) {
    this.cancelOtherAutoOrders = cancelOtherAutoOrders;
  }

  public ItemAutoOrder freeShippingAutoOrder(Boolean freeShippingAutoOrder) {
    this.freeShippingAutoOrder = freeShippingAutoOrder;
    return this;
  }

   /**
   * True if the customer should be given free shipping
   * @return freeShippingAutoOrder
  **/
  @ApiModelProperty(value = "True if the customer should be given free shipping")
  public Boolean isFreeShippingAutoOrder() {
    return freeShippingAutoOrder;
  }

  public void setFreeShippingAutoOrder(Boolean freeShippingAutoOrder) {
    this.freeShippingAutoOrder = freeShippingAutoOrder;
  }

  public ItemAutoOrder refundOtherAutoOrders(Boolean refundOtherAutoOrders) {
    this.refundOtherAutoOrders = refundOtherAutoOrders;
    return this;
  }

   /**
   * True if other auto orders for this customer should refunded if this item is refunded.
   * @return refundOtherAutoOrders
  **/
  @ApiModelProperty(value = "True if other auto orders for this customer should refunded if this item is refunded.")
  public Boolean isRefundOtherAutoOrders() {
    return refundOtherAutoOrders;
  }

  public void setRefundOtherAutoOrders(Boolean refundOtherAutoOrders) {
    this.refundOtherAutoOrders = refundOtherAutoOrders;
  }

  public ItemAutoOrder steps(List<ItemAutoOrderStep> steps) {
    this.steps = steps;
    return this;
  }

  public ItemAutoOrder addStepsItem(ItemAutoOrderStep stepsItem) {
    if (this.steps == null) {
      this.steps = new ArrayList<ItemAutoOrderStep>();
    }
    this.steps.add(stepsItem);
    return this;
  }

   /**
   * The rebill steps if this auto order is an upsell
   * @return steps
  **/
  @ApiModelProperty(value = "The rebill steps if this auto order is an upsell")
  public List<ItemAutoOrderStep> getSteps() {
    return steps;
  }

  public void setSteps(List<ItemAutoOrderStep> steps) {
    this.steps = steps;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ItemAutoOrder itemAutoOrder = (ItemAutoOrder) o;
    return Objects.equals(this.authFutureAmount, itemAutoOrder.authFutureAmount) &&
        Objects.equals(this.authTestAmount, itemAutoOrder.authTestAmount) &&
        Objects.equals(this.autoOrderCancelItemId, itemAutoOrder.autoOrderCancelItemId) &&
        Objects.equals(this.autoOrderCancelItemOid, itemAutoOrder.autoOrderCancelItemOid) &&
        Objects.equals(this.autoOrderDowngradeItems, itemAutoOrder.autoOrderDowngradeItems) &&
        Objects.equals(this.autoOrderPaused, itemAutoOrder.autoOrderPaused) &&
        Objects.equals(this.autoOrderProhibitExpiringCards, itemAutoOrder.autoOrderProhibitExpiringCards) &&
        Objects.equals(this.autoOrderSchedules, itemAutoOrder.autoOrderSchedules) &&
        Objects.equals(this.autoOrderUpgradeItems, itemAutoOrder.autoOrderUpgradeItems) &&
        Objects.equals(this.autoOrderUpsell, itemAutoOrder.autoOrderUpsell) &&
        Objects.equals(this.autoOrderUpsellNoEasyCancel, itemAutoOrder.autoOrderUpsellNoEasyCancel) &&
        Objects.equals(this.autoOrderUpsellOnePerCustomer, itemAutoOrder.autoOrderUpsellOnePerCustomer) &&
        Objects.equals(this.autoOrderable, itemAutoOrder.autoOrderable) &&
        Objects.equals(this.cancelOtherAutoOrders, itemAutoOrder.cancelOtherAutoOrders) &&
        Objects.equals(this.freeShippingAutoOrder, itemAutoOrder.freeShippingAutoOrder) &&
        Objects.equals(this.refundOtherAutoOrders, itemAutoOrder.refundOtherAutoOrders) &&
        Objects.equals(this.steps, itemAutoOrder.steps);
  }

  @Override
  public int hashCode() {
    return Objects.hash(authFutureAmount, authTestAmount, autoOrderCancelItemId, autoOrderCancelItemOid, autoOrderDowngradeItems, autoOrderPaused, autoOrderProhibitExpiringCards, autoOrderSchedules, autoOrderUpgradeItems, autoOrderUpsell, autoOrderUpsellNoEasyCancel, autoOrderUpsellOnePerCustomer, autoOrderable, cancelOtherAutoOrders, freeShippingAutoOrder, refundOtherAutoOrders, steps);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ItemAutoOrder {\n");
    
    sb.append("    authFutureAmount: ").append(toIndentedString(authFutureAmount)).append("\n");
    sb.append("    authTestAmount: ").append(toIndentedString(authTestAmount)).append("\n");
    sb.append("    autoOrderCancelItemId: ").append(toIndentedString(autoOrderCancelItemId)).append("\n");
    sb.append("    autoOrderCancelItemOid: ").append(toIndentedString(autoOrderCancelItemOid)).append("\n");
    sb.append("    autoOrderDowngradeItems: ").append(toIndentedString(autoOrderDowngradeItems)).append("\n");
    sb.append("    autoOrderPaused: ").append(toIndentedString(autoOrderPaused)).append("\n");
    sb.append("    autoOrderProhibitExpiringCards: ").append(toIndentedString(autoOrderProhibitExpiringCards)).append("\n");
    sb.append("    autoOrderSchedules: ").append(toIndentedString(autoOrderSchedules)).append("\n");
    sb.append("    autoOrderUpgradeItems: ").append(toIndentedString(autoOrderUpgradeItems)).append("\n");
    sb.append("    autoOrderUpsell: ").append(toIndentedString(autoOrderUpsell)).append("\n");
    sb.append("    autoOrderUpsellNoEasyCancel: ").append(toIndentedString(autoOrderUpsellNoEasyCancel)).append("\n");
    sb.append("    autoOrderUpsellOnePerCustomer: ").append(toIndentedString(autoOrderUpsellOnePerCustomer)).append("\n");
    sb.append("    autoOrderable: ").append(toIndentedString(autoOrderable)).append("\n");
    sb.append("    cancelOtherAutoOrders: ").append(toIndentedString(cancelOtherAutoOrders)).append("\n");
    sb.append("    freeShippingAutoOrder: ").append(toIndentedString(freeShippingAutoOrder)).append("\n");
    sb.append("    refundOtherAutoOrders: ").append(toIndentedString(refundOtherAutoOrders)).append("\n");
    sb.append("    steps: ").append(toIndentedString(steps)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

