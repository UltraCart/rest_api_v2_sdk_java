/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.ItemAutoOrderStep;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * ItemAutoOrder
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-23T09:20:07.999-04:00[America/Indianapolis]")
public class ItemAutoOrder {
  public static final String SERIALIZED_NAME_AUTH_FUTURE_AMOUNT = "auth_future_amount";
  @SerializedName(SERIALIZED_NAME_AUTH_FUTURE_AMOUNT)
  private BigDecimal authFutureAmount;

  public static final String SERIALIZED_NAME_AUTH_TEST_AMOUNT = "auth_test_amount";
  @SerializedName(SERIALIZED_NAME_AUTH_TEST_AMOUNT)
  private BigDecimal authTestAmount;

  public static final String SERIALIZED_NAME_AUTO_ORDER_CANCEL_ITEM_ID = "auto_order_cancel_item_id";
  @SerializedName(SERIALIZED_NAME_AUTO_ORDER_CANCEL_ITEM_ID)
  private String autoOrderCancelItemId;

  public static final String SERIALIZED_NAME_AUTO_ORDER_CANCEL_ITEM_OID = "auto_order_cancel_item_oid";
  @SerializedName(SERIALIZED_NAME_AUTO_ORDER_CANCEL_ITEM_OID)
  private Integer autoOrderCancelItemOid;

  public static final String SERIALIZED_NAME_AUTO_ORDER_DOWNGRADE_ITEMS = "auto_order_downgrade_items";
  @SerializedName(SERIALIZED_NAME_AUTO_ORDER_DOWNGRADE_ITEMS)
  private List<String> autoOrderDowngradeItems = null;

  public static final String SERIALIZED_NAME_AUTO_ORDER_PAUSED = "auto_order_paused";
  @SerializedName(SERIALIZED_NAME_AUTO_ORDER_PAUSED)
  private Boolean autoOrderPaused;

  public static final String SERIALIZED_NAME_AUTO_ORDER_PROHIBIT_EXPIRING_CARDS = "auto_order_prohibit_expiring_cards";
  @SerializedName(SERIALIZED_NAME_AUTO_ORDER_PROHIBIT_EXPIRING_CARDS)
  private Integer autoOrderProhibitExpiringCards;

  public static final String SERIALIZED_NAME_AUTO_ORDER_SCHEDULES = "auto_order_schedules";
  @SerializedName(SERIALIZED_NAME_AUTO_ORDER_SCHEDULES)
  private List<String> autoOrderSchedules = null;

  public static final String SERIALIZED_NAME_AUTO_ORDER_UPGRADE_ITEMS = "auto_order_upgrade_items";
  @SerializedName(SERIALIZED_NAME_AUTO_ORDER_UPGRADE_ITEMS)
  private List<String> autoOrderUpgradeItems = null;

  public static final String SERIALIZED_NAME_AUTO_ORDER_UPSELL = "auto_order_upsell";
  @SerializedName(SERIALIZED_NAME_AUTO_ORDER_UPSELL)
  private Boolean autoOrderUpsell;

  public static final String SERIALIZED_NAME_AUTO_ORDER_UPSELL_NO_EASY_CANCEL = "auto_order_upsell_no_easy_cancel";
  @SerializedName(SERIALIZED_NAME_AUTO_ORDER_UPSELL_NO_EASY_CANCEL)
  private Boolean autoOrderUpsellNoEasyCancel;

  public static final String SERIALIZED_NAME_AUTO_ORDER_UPSELL_ONE_PER_CUSTOMER = "auto_order_upsell_one_per_customer";
  @SerializedName(SERIALIZED_NAME_AUTO_ORDER_UPSELL_ONE_PER_CUSTOMER)
  private Boolean autoOrderUpsellOnePerCustomer;

  public static final String SERIALIZED_NAME_AUTO_ORDERABLE = "auto_orderable";
  @SerializedName(SERIALIZED_NAME_AUTO_ORDERABLE)
  private Boolean autoOrderable;

  public static final String SERIALIZED_NAME_CANCEL_OTHER_AUTO_ORDERS = "cancel_other_auto_orders";
  @SerializedName(SERIALIZED_NAME_CANCEL_OTHER_AUTO_ORDERS)
  private Boolean cancelOtherAutoOrders;

  public static final String SERIALIZED_NAME_FREE_SHIPPING_AUTO_ORDER = "free_shipping_auto_order";
  @SerializedName(SERIALIZED_NAME_FREE_SHIPPING_AUTO_ORDER)
  private Boolean freeShippingAutoOrder;

  public static final String SERIALIZED_NAME_REFUND_OTHER_AUTO_ORDERS = "refund_other_auto_orders";
  @SerializedName(SERIALIZED_NAME_REFUND_OTHER_AUTO_ORDERS)
  private Boolean refundOtherAutoOrders;

  public static final String SERIALIZED_NAME_STEPS = "steps";
  @SerializedName(SERIALIZED_NAME_STEPS)
  private List<ItemAutoOrderStep> steps = null;

  public ItemAutoOrder() { 
  }

  public ItemAutoOrder authFutureAmount(BigDecimal authFutureAmount) {
    
    this.authFutureAmount = authFutureAmount;
    return this;
  }

   /**
   * Amount to try and authorize for the future rebill
   * @return authFutureAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Amount to try and authorize for the future rebill")

  public BigDecimal getAuthFutureAmount() {
    return authFutureAmount;
  }


  public void setAuthFutureAmount(BigDecimal authFutureAmount) {
    this.authFutureAmount = authFutureAmount;
  }


  public ItemAutoOrder authTestAmount(BigDecimal authTestAmount) {
    
    this.authTestAmount = authTestAmount;
    return this;
  }

   /**
   * Amount to try and test authorize
   * @return authTestAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Amount to try and test authorize")

  public BigDecimal getAuthTestAmount() {
    return authTestAmount;
  }


  public void setAuthTestAmount(BigDecimal authTestAmount) {
    this.authTestAmount = authTestAmount;
  }


  public ItemAutoOrder autoOrderCancelItemId(String autoOrderCancelItemId) {
    
    this.autoOrderCancelItemId = autoOrderCancelItemId;
    return this;
  }

   /**
   * Item id to attempt charging the customer for if they cancel
   * @return autoOrderCancelItemId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Item id to attempt charging the customer for if they cancel")

  public String getAutoOrderCancelItemId() {
    return autoOrderCancelItemId;
  }


  public void setAutoOrderCancelItemId(String autoOrderCancelItemId) {
    this.autoOrderCancelItemId = autoOrderCancelItemId;
  }


  public ItemAutoOrder autoOrderCancelItemOid(Integer autoOrderCancelItemOid) {
    
    this.autoOrderCancelItemOid = autoOrderCancelItemOid;
    return this;
  }

   /**
   * Item object identifier to attempt charging the customer for if they cancel
   * @return autoOrderCancelItemOid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Item object identifier to attempt charging the customer for if they cancel")

  public Integer getAutoOrderCancelItemOid() {
    return autoOrderCancelItemOid;
  }


  public void setAutoOrderCancelItemOid(Integer autoOrderCancelItemOid) {
    this.autoOrderCancelItemOid = autoOrderCancelItemOid;
  }


  public ItemAutoOrder autoOrderDowngradeItems(List<String> autoOrderDowngradeItems) {
    
    this.autoOrderDowngradeItems = autoOrderDowngradeItems;
    return this;
  }

  public ItemAutoOrder addAutoOrderDowngradeItemsItem(String autoOrderDowngradeItemsItem) {
    if (this.autoOrderDowngradeItems == null) {
      this.autoOrderDowngradeItems = new ArrayList<>();
    }
    this.autoOrderDowngradeItems.add(autoOrderDowngradeItemsItem);
    return this;
  }

   /**
   * List of downgrade items presented to customer service representatives
   * @return autoOrderDowngradeItems
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of downgrade items presented to customer service representatives")

  public List<String> getAutoOrderDowngradeItems() {
    return autoOrderDowngradeItems;
  }


  public void setAutoOrderDowngradeItems(List<String> autoOrderDowngradeItems) {
    this.autoOrderDowngradeItems = autoOrderDowngradeItems;
  }


  public ItemAutoOrder autoOrderPaused(Boolean autoOrderPaused) {
    
    this.autoOrderPaused = autoOrderPaused;
    return this;
  }

   /**
   * True if the rebill processing of this item is paused
   * @return autoOrderPaused
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if the rebill processing of this item is paused")

  public Boolean getAutoOrderPaused() {
    return autoOrderPaused;
  }


  public void setAutoOrderPaused(Boolean autoOrderPaused) {
    this.autoOrderPaused = autoOrderPaused;
  }


  public ItemAutoOrder autoOrderProhibitExpiringCards(Integer autoOrderProhibitExpiringCards) {
    
    this.autoOrderProhibitExpiringCards = autoOrderProhibitExpiringCards;
    return this;
  }

   /**
   * Minimum number of months before expiration for the card.  Overrides the account level setting if higher.  Set to zero to disable.
   * @return autoOrderProhibitExpiringCards
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Minimum number of months before expiration for the card.  Overrides the account level setting if higher.  Set to zero to disable.")

  public Integer getAutoOrderProhibitExpiringCards() {
    return autoOrderProhibitExpiringCards;
  }


  public void setAutoOrderProhibitExpiringCards(Integer autoOrderProhibitExpiringCards) {
    this.autoOrderProhibitExpiringCards = autoOrderProhibitExpiringCards;
  }


  public ItemAutoOrder autoOrderSchedules(List<String> autoOrderSchedules) {
    
    this.autoOrderSchedules = autoOrderSchedules;
    return this;
  }

  public ItemAutoOrder addAutoOrderSchedulesItem(String autoOrderSchedulesItem) {
    if (this.autoOrderSchedules == null) {
      this.autoOrderSchedules = new ArrayList<>();
    }
    this.autoOrderSchedules.add(autoOrderSchedulesItem);
    return this;
  }

   /**
   * The user selectable schedules that are available
   * @return autoOrderSchedules
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The user selectable schedules that are available")

  public List<String> getAutoOrderSchedules() {
    return autoOrderSchedules;
  }


  public void setAutoOrderSchedules(List<String> autoOrderSchedules) {
    this.autoOrderSchedules = autoOrderSchedules;
  }


  public ItemAutoOrder autoOrderUpgradeItems(List<String> autoOrderUpgradeItems) {
    
    this.autoOrderUpgradeItems = autoOrderUpgradeItems;
    return this;
  }

  public ItemAutoOrder addAutoOrderUpgradeItemsItem(String autoOrderUpgradeItemsItem) {
    if (this.autoOrderUpgradeItems == null) {
      this.autoOrderUpgradeItems = new ArrayList<>();
    }
    this.autoOrderUpgradeItems.add(autoOrderUpgradeItemsItem);
    return this;
  }

   /**
   * List of upgrade items presented to customer service representatives
   * @return autoOrderUpgradeItems
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of upgrade items presented to customer service representatives")

  public List<String> getAutoOrderUpgradeItems() {
    return autoOrderUpgradeItems;
  }


  public void setAutoOrderUpgradeItems(List<String> autoOrderUpgradeItems) {
    this.autoOrderUpgradeItems = autoOrderUpgradeItems;
  }


  public ItemAutoOrder autoOrderUpsell(Boolean autoOrderUpsell) {
    
    this.autoOrderUpsell = autoOrderUpsell;
    return this;
  }

   /**
   * True if this item uses a fixed upsell step schedule
   * @return autoOrderUpsell
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if this item uses a fixed upsell step schedule")

  public Boolean getAutoOrderUpsell() {
    return autoOrderUpsell;
  }


  public void setAutoOrderUpsell(Boolean autoOrderUpsell) {
    this.autoOrderUpsell = autoOrderUpsell;
  }


  public ItemAutoOrder autoOrderUpsellNoEasyCancel(Boolean autoOrderUpsellNoEasyCancel) {
    
    this.autoOrderUpsellNoEasyCancel = autoOrderUpsellNoEasyCancel;
    return this;
  }

   /**
   * Do not send the easy cancel email to the customer
   * @return autoOrderUpsellNoEasyCancel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Do not send the easy cancel email to the customer")

  public Boolean getAutoOrderUpsellNoEasyCancel() {
    return autoOrderUpsellNoEasyCancel;
  }


  public void setAutoOrderUpsellNoEasyCancel(Boolean autoOrderUpsellNoEasyCancel) {
    this.autoOrderUpsellNoEasyCancel = autoOrderUpsellNoEasyCancel;
  }


  public ItemAutoOrder autoOrderUpsellOnePerCustomer(Boolean autoOrderUpsellOnePerCustomer) {
    
    this.autoOrderUpsellOnePerCustomer = autoOrderUpsellOnePerCustomer;
    return this;
  }

   /**
   * Limit the purchase of this item to one per customer
   * @return autoOrderUpsellOnePerCustomer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Limit the purchase of this item to one per customer")

  public Boolean getAutoOrderUpsellOnePerCustomer() {
    return autoOrderUpsellOnePerCustomer;
  }


  public void setAutoOrderUpsellOnePerCustomer(Boolean autoOrderUpsellOnePerCustomer) {
    this.autoOrderUpsellOnePerCustomer = autoOrderUpsellOnePerCustomer;
  }


  public ItemAutoOrder autoOrderable(Boolean autoOrderable) {
    
    this.autoOrderable = autoOrderable;
    return this;
  }

   /**
   * True if this item can be automatically ordered by the customer
   * @return autoOrderable
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if this item can be automatically ordered by the customer")

  public Boolean getAutoOrderable() {
    return autoOrderable;
  }


  public void setAutoOrderable(Boolean autoOrderable) {
    this.autoOrderable = autoOrderable;
  }


  public ItemAutoOrder cancelOtherAutoOrders(Boolean cancelOtherAutoOrders) {
    
    this.cancelOtherAutoOrders = cancelOtherAutoOrders;
    return this;
  }

   /**
   * True if other auto orders for this customer should be canceled when this item is ordered
   * @return cancelOtherAutoOrders
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if other auto orders for this customer should be canceled when this item is ordered")

  public Boolean getCancelOtherAutoOrders() {
    return cancelOtherAutoOrders;
  }


  public void setCancelOtherAutoOrders(Boolean cancelOtherAutoOrders) {
    this.cancelOtherAutoOrders = cancelOtherAutoOrders;
  }


  public ItemAutoOrder freeShippingAutoOrder(Boolean freeShippingAutoOrder) {
    
    this.freeShippingAutoOrder = freeShippingAutoOrder;
    return this;
  }

   /**
   * True if the customer should be given free shipping
   * @return freeShippingAutoOrder
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if the customer should be given free shipping")

  public Boolean getFreeShippingAutoOrder() {
    return freeShippingAutoOrder;
  }


  public void setFreeShippingAutoOrder(Boolean freeShippingAutoOrder) {
    this.freeShippingAutoOrder = freeShippingAutoOrder;
  }


  public ItemAutoOrder refundOtherAutoOrders(Boolean refundOtherAutoOrders) {
    
    this.refundOtherAutoOrders = refundOtherAutoOrders;
    return this;
  }

   /**
   * True if other auto orders for this customer should refunded if this item is refunded.
   * @return refundOtherAutoOrders
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if other auto orders for this customer should refunded if this item is refunded.")

  public Boolean getRefundOtherAutoOrders() {
    return refundOtherAutoOrders;
  }


  public void setRefundOtherAutoOrders(Boolean refundOtherAutoOrders) {
    this.refundOtherAutoOrders = refundOtherAutoOrders;
  }


  public ItemAutoOrder steps(List<ItemAutoOrderStep> steps) {
    
    this.steps = steps;
    return this;
  }

  public ItemAutoOrder addStepsItem(ItemAutoOrderStep stepsItem) {
    if (this.steps == null) {
      this.steps = new ArrayList<>();
    }
    this.steps.add(stepsItem);
    return this;
  }

   /**
   * The rebill steps if this auto order is an upsell
   * @return steps
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The rebill steps if this auto order is an upsell")

  public List<ItemAutoOrderStep> getSteps() {
    return steps;
  }


  public void setSteps(List<ItemAutoOrderStep> steps) {
    this.steps = steps;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ItemAutoOrder itemAutoOrder = (ItemAutoOrder) o;
    return Objects.equals(this.authFutureAmount, itemAutoOrder.authFutureAmount) &&
        Objects.equals(this.authTestAmount, itemAutoOrder.authTestAmount) &&
        Objects.equals(this.autoOrderCancelItemId, itemAutoOrder.autoOrderCancelItemId) &&
        Objects.equals(this.autoOrderCancelItemOid, itemAutoOrder.autoOrderCancelItemOid) &&
        Objects.equals(this.autoOrderDowngradeItems, itemAutoOrder.autoOrderDowngradeItems) &&
        Objects.equals(this.autoOrderPaused, itemAutoOrder.autoOrderPaused) &&
        Objects.equals(this.autoOrderProhibitExpiringCards, itemAutoOrder.autoOrderProhibitExpiringCards) &&
        Objects.equals(this.autoOrderSchedules, itemAutoOrder.autoOrderSchedules) &&
        Objects.equals(this.autoOrderUpgradeItems, itemAutoOrder.autoOrderUpgradeItems) &&
        Objects.equals(this.autoOrderUpsell, itemAutoOrder.autoOrderUpsell) &&
        Objects.equals(this.autoOrderUpsellNoEasyCancel, itemAutoOrder.autoOrderUpsellNoEasyCancel) &&
        Objects.equals(this.autoOrderUpsellOnePerCustomer, itemAutoOrder.autoOrderUpsellOnePerCustomer) &&
        Objects.equals(this.autoOrderable, itemAutoOrder.autoOrderable) &&
        Objects.equals(this.cancelOtherAutoOrders, itemAutoOrder.cancelOtherAutoOrders) &&
        Objects.equals(this.freeShippingAutoOrder, itemAutoOrder.freeShippingAutoOrder) &&
        Objects.equals(this.refundOtherAutoOrders, itemAutoOrder.refundOtherAutoOrders) &&
        Objects.equals(this.steps, itemAutoOrder.steps);
  }

  @Override
  public int hashCode() {
    return Objects.hash(authFutureAmount, authTestAmount, autoOrderCancelItemId, autoOrderCancelItemOid, autoOrderDowngradeItems, autoOrderPaused, autoOrderProhibitExpiringCards, autoOrderSchedules, autoOrderUpgradeItems, autoOrderUpsell, autoOrderUpsellNoEasyCancel, autoOrderUpsellOnePerCustomer, autoOrderable, cancelOtherAutoOrders, freeShippingAutoOrder, refundOtherAutoOrders, steps);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ItemAutoOrder {\n");
    sb.append("    authFutureAmount: ").append(toIndentedString(authFutureAmount)).append("\n");
    sb.append("    authTestAmount: ").append(toIndentedString(authTestAmount)).append("\n");
    sb.append("    autoOrderCancelItemId: ").append(toIndentedString(autoOrderCancelItemId)).append("\n");
    sb.append("    autoOrderCancelItemOid: ").append(toIndentedString(autoOrderCancelItemOid)).append("\n");
    sb.append("    autoOrderDowngradeItems: ").append(toIndentedString(autoOrderDowngradeItems)).append("\n");
    sb.append("    autoOrderPaused: ").append(toIndentedString(autoOrderPaused)).append("\n");
    sb.append("    autoOrderProhibitExpiringCards: ").append(toIndentedString(autoOrderProhibitExpiringCards)).append("\n");
    sb.append("    autoOrderSchedules: ").append(toIndentedString(autoOrderSchedules)).append("\n");
    sb.append("    autoOrderUpgradeItems: ").append(toIndentedString(autoOrderUpgradeItems)).append("\n");
    sb.append("    autoOrderUpsell: ").append(toIndentedString(autoOrderUpsell)).append("\n");
    sb.append("    autoOrderUpsellNoEasyCancel: ").append(toIndentedString(autoOrderUpsellNoEasyCancel)).append("\n");
    sb.append("    autoOrderUpsellOnePerCustomer: ").append(toIndentedString(autoOrderUpsellOnePerCustomer)).append("\n");
    sb.append("    autoOrderable: ").append(toIndentedString(autoOrderable)).append("\n");
    sb.append("    cancelOtherAutoOrders: ").append(toIndentedString(cancelOtherAutoOrders)).append("\n");
    sb.append("    freeShippingAutoOrder: ").append(toIndentedString(freeShippingAutoOrder)).append("\n");
    sb.append("    refundOtherAutoOrders: ").append(toIndentedString(refundOtherAutoOrders)).append("\n");
    sb.append("    steps: ").append(toIndentedString(steps)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("auth_future_amount");
    openapiFields.add("auth_test_amount");
    openapiFields.add("auto_order_cancel_item_id");
    openapiFields.add("auto_order_cancel_item_oid");
    openapiFields.add("auto_order_downgrade_items");
    openapiFields.add("auto_order_paused");
    openapiFields.add("auto_order_prohibit_expiring_cards");
    openapiFields.add("auto_order_schedules");
    openapiFields.add("auto_order_upgrade_items");
    openapiFields.add("auto_order_upsell");
    openapiFields.add("auto_order_upsell_no_easy_cancel");
    openapiFields.add("auto_order_upsell_one_per_customer");
    openapiFields.add("auto_orderable");
    openapiFields.add("cancel_other_auto_orders");
    openapiFields.add("free_shipping_auto_order");
    openapiFields.add("refund_other_auto_orders");
    openapiFields.add("steps");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ItemAutoOrder
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (ItemAutoOrder.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in ItemAutoOrder is not found in the empty JSON string", ItemAutoOrder.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!ItemAutoOrder.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ItemAutoOrder` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("auto_order_cancel_item_id") != null && !jsonObj.get("auto_order_cancel_item_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `auto_order_cancel_item_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("auto_order_cancel_item_id").toString()));
      }
      // ensure the json data is an array
      if (jsonObj.get("auto_order_downgrade_items") != null && !jsonObj.get("auto_order_downgrade_items").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `auto_order_downgrade_items` to be an array in the JSON string but got `%s`", jsonObj.get("auto_order_downgrade_items").toString()));
      }
      // ensure the json data is an array
      if (jsonObj.get("auto_order_schedules") != null && !jsonObj.get("auto_order_schedules").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `auto_order_schedules` to be an array in the JSON string but got `%s`", jsonObj.get("auto_order_schedules").toString()));
      }
      // ensure the json data is an array
      if (jsonObj.get("auto_order_upgrade_items") != null && !jsonObj.get("auto_order_upgrade_items").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `auto_order_upgrade_items` to be an array in the JSON string but got `%s`", jsonObj.get("auto_order_upgrade_items").toString()));
      }
      JsonArray jsonArraysteps = jsonObj.getAsJsonArray("steps");
      if (jsonArraysteps != null) {
        // ensure the json data is an array
        if (!jsonObj.get("steps").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `steps` to be an array in the JSON string but got `%s`", jsonObj.get("steps").toString()));
        }

        // validate the optional field `steps` (array)
        for (int i = 0; i < jsonArraysteps.size(); i++) {
          ItemAutoOrderStep.validateJsonObject(jsonArraysteps.get(i).getAsJsonObject());
        };
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ItemAutoOrder.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ItemAutoOrder' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ItemAutoOrder> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ItemAutoOrder.class));

       return (TypeAdapter<T>) new TypeAdapter<ItemAutoOrder>() {
           @Override
           public void write(JsonWriter out, ItemAutoOrder value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ItemAutoOrder read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ItemAutoOrder given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ItemAutoOrder
  * @throws IOException if the JSON string is invalid with respect to ItemAutoOrder
  */
  public static ItemAutoOrder fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ItemAutoOrder.class);
  }

 /**
  * Convert an instance of ItemAutoOrder to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

