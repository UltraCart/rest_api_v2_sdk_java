/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * RtgThemeRestriction
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-12-10T15:21:34.452-05:00")



public class RtgThemeRestriction {
  /**
   * Any restriction for this theme
   */
  @JsonAdapter(RestrictionEnum.Adapter.class)
  public enum RestrictionEnum {
    INVALID("invalid"),
    
    VALID("valid"),
    
    VALIDONLY("validOnly");

    private String value;

    RestrictionEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static RestrictionEnum fromValue(String text) {
      for (RestrictionEnum b : RestrictionEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<RestrictionEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RestrictionEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public RestrictionEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return RestrictionEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("restriction")
  private RestrictionEnum restriction = null;

  @SerializedName("storefront_host_name")
  private String storefrontHostName = null;

  @SerializedName("theme_code")
  private String themeCode = null;

  public RtgThemeRestriction restriction(RestrictionEnum restriction) {
    this.restriction = restriction;
    return this;
  }

   /**
   * Any restriction for this theme
   * @return restriction
  **/
  @ApiModelProperty(value = "Any restriction for this theme")
  public RestrictionEnum getRestriction() {
    return restriction;
  }

  public void setRestriction(RestrictionEnum restriction) {
    this.restriction = restriction;
  }

  public RtgThemeRestriction storefrontHostName(String storefrontHostName) {
    this.storefrontHostName = storefrontHostName;
    return this;
  }

   /**
   * The server name for this theme.  This will not be populated for legacy (ancient) themes
   * @return storefrontHostName
  **/
  @ApiModelProperty(value = "The server name for this theme.  This will not be populated for legacy (ancient) themes")
  public String getStorefrontHostName() {
    return storefrontHostName;
  }

  public void setStorefrontHostName(String storefrontHostName) {
    this.storefrontHostName = storefrontHostName;
  }

  public RtgThemeRestriction themeCode(String themeCode) {
    this.themeCode = themeCode;
    return this;
  }

   /**
   * Human friendly short code for this theme
   * @return themeCode
  **/
  @ApiModelProperty(value = "Human friendly short code for this theme")
  public String getThemeCode() {
    return themeCode;
  }

  public void setThemeCode(String themeCode) {
    this.themeCode = themeCode;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RtgThemeRestriction rtgThemeRestriction = (RtgThemeRestriction) o;
    return Objects.equals(this.restriction, rtgThemeRestriction.restriction) &&
        Objects.equals(this.storefrontHostName, rtgThemeRestriction.storefrontHostName) &&
        Objects.equals(this.themeCode, rtgThemeRestriction.themeCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(restriction, storefrontHostName, themeCode);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RtgThemeRestriction {\n");
    
    sb.append("    restriction: ").append(toIndentedString(restriction)).append("\n");
    sb.append("    storefrontHostName: ").append(toIndentedString(storefrontHostName)).append("\n");
    sb.append("    themeCode: ").append(toIndentedString(themeCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

