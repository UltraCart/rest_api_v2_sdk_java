/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * ScreenRecordingSettings
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-10-07T11:20:57.348-04:00[America/Indianapolis]")
public class ScreenRecordingSettings {
  public static final String SERIALIZED_NAME_COST_PER_THOUSAND = "cost_per_thousand";
  @SerializedName(SERIALIZED_NAME_COST_PER_THOUSAND)
  private BigDecimal costPerThousand;

  public static final String SERIALIZED_NAME_ENABLED = "enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  private Boolean enabled;

  public static final String SERIALIZED_NAME_RETENTION_INTERVAL = "retention_interval";
  @SerializedName(SERIALIZED_NAME_RETENTION_INTERVAL)
  private String retentionInterval;

  public static final String SERIALIZED_NAME_SESSIONS_CURRENT_BILLING_PERIOD = "sessions_current_billing_period";
  @SerializedName(SERIALIZED_NAME_SESSIONS_CURRENT_BILLING_PERIOD)
  private Integer sessionsCurrentBillingPeriod;

  public static final String SERIALIZED_NAME_SESSIONS_LAST_BILLING_PERIOD = "sessions_last_billing_period";
  @SerializedName(SERIALIZED_NAME_SESSIONS_LAST_BILLING_PERIOD)
  private Integer sessionsLastBillingPeriod;

  public static final String SERIALIZED_NAME_SESSIONS_TRIAL_BILLING_PERIOD = "sessions_trial_billing_period";
  @SerializedName(SERIALIZED_NAME_SESSIONS_TRIAL_BILLING_PERIOD)
  private Integer sessionsTrialBillingPeriod;

  public static final String SERIALIZED_NAME_TRIAL_EXPIRATION = "trial_expiration";
  @SerializedName(SERIALIZED_NAME_TRIAL_EXPIRATION)
  private String trialExpiration;

  public static final String SERIALIZED_NAME_TRIAL_EXPIRED = "trial_expired";
  @SerializedName(SERIALIZED_NAME_TRIAL_EXPIRED)
  private Boolean trialExpired;

  public ScreenRecordingSettings() { 
  }

  public ScreenRecordingSettings costPerThousand(BigDecimal costPerThousand) {
    
    this.costPerThousand = costPerThousand;
    return this;
  }

   /**
   * Cost per one thousand sessions
   * @return costPerThousand
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Cost per one thousand sessions")

  public BigDecimal getCostPerThousand() {
    return costPerThousand;
  }


  public void setCostPerThousand(BigDecimal costPerThousand) {
    this.costPerThousand = costPerThousand;
  }


  public ScreenRecordingSettings enabled(Boolean enabled) {
    
    this.enabled = enabled;
    return this;
  }

   /**
   * Get enabled
   * @return enabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getEnabled() {
    return enabled;
  }


  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public ScreenRecordingSettings retentionInterval(String retentionInterval) {
    
    this.retentionInterval = retentionInterval;
    return this;
  }

   /**
   * How long screen recording data is retained
   * @return retentionInterval
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "How long screen recording data is retained")

  public String getRetentionInterval() {
    return retentionInterval;
  }


  public void setRetentionInterval(String retentionInterval) {
    this.retentionInterval = retentionInterval;
  }


  public ScreenRecordingSettings sessionsCurrentBillingPeriod(Integer sessionsCurrentBillingPeriod) {
    
    this.sessionsCurrentBillingPeriod = sessionsCurrentBillingPeriod;
    return this;
  }

   /**
   * Get sessionsCurrentBillingPeriod
   * @return sessionsCurrentBillingPeriod
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getSessionsCurrentBillingPeriod() {
    return sessionsCurrentBillingPeriod;
  }


  public void setSessionsCurrentBillingPeriod(Integer sessionsCurrentBillingPeriod) {
    this.sessionsCurrentBillingPeriod = sessionsCurrentBillingPeriod;
  }


  public ScreenRecordingSettings sessionsLastBillingPeriod(Integer sessionsLastBillingPeriod) {
    
    this.sessionsLastBillingPeriod = sessionsLastBillingPeriod;
    return this;
  }

   /**
   * Get sessionsLastBillingPeriod
   * @return sessionsLastBillingPeriod
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getSessionsLastBillingPeriod() {
    return sessionsLastBillingPeriod;
  }


  public void setSessionsLastBillingPeriod(Integer sessionsLastBillingPeriod) {
    this.sessionsLastBillingPeriod = sessionsLastBillingPeriod;
  }


  public ScreenRecordingSettings sessionsTrialBillingPeriod(Integer sessionsTrialBillingPeriod) {
    
    this.sessionsTrialBillingPeriod = sessionsTrialBillingPeriod;
    return this;
  }

   /**
   * Get sessionsTrialBillingPeriod
   * @return sessionsTrialBillingPeriod
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getSessionsTrialBillingPeriod() {
    return sessionsTrialBillingPeriod;
  }


  public void setSessionsTrialBillingPeriod(Integer sessionsTrialBillingPeriod) {
    this.sessionsTrialBillingPeriod = sessionsTrialBillingPeriod;
  }


  public ScreenRecordingSettings trialExpiration(String trialExpiration) {
    
    this.trialExpiration = trialExpiration;
    return this;
  }

   /**
   * Get trialExpiration
   * @return trialExpiration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTrialExpiration() {
    return trialExpiration;
  }


  public void setTrialExpiration(String trialExpiration) {
    this.trialExpiration = trialExpiration;
  }


  public ScreenRecordingSettings trialExpired(Boolean trialExpired) {
    
    this.trialExpired = trialExpired;
    return this;
  }

   /**
   * Get trialExpired
   * @return trialExpired
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getTrialExpired() {
    return trialExpired;
  }


  public void setTrialExpired(Boolean trialExpired) {
    this.trialExpired = trialExpired;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ScreenRecordingSettings screenRecordingSettings = (ScreenRecordingSettings) o;
    return Objects.equals(this.costPerThousand, screenRecordingSettings.costPerThousand) &&
        Objects.equals(this.enabled, screenRecordingSettings.enabled) &&
        Objects.equals(this.retentionInterval, screenRecordingSettings.retentionInterval) &&
        Objects.equals(this.sessionsCurrentBillingPeriod, screenRecordingSettings.sessionsCurrentBillingPeriod) &&
        Objects.equals(this.sessionsLastBillingPeriod, screenRecordingSettings.sessionsLastBillingPeriod) &&
        Objects.equals(this.sessionsTrialBillingPeriod, screenRecordingSettings.sessionsTrialBillingPeriod) &&
        Objects.equals(this.trialExpiration, screenRecordingSettings.trialExpiration) &&
        Objects.equals(this.trialExpired, screenRecordingSettings.trialExpired);
  }

  @Override
  public int hashCode() {
    return Objects.hash(costPerThousand, enabled, retentionInterval, sessionsCurrentBillingPeriod, sessionsLastBillingPeriod, sessionsTrialBillingPeriod, trialExpiration, trialExpired);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ScreenRecordingSettings {\n");
    sb.append("    costPerThousand: ").append(toIndentedString(costPerThousand)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    retentionInterval: ").append(toIndentedString(retentionInterval)).append("\n");
    sb.append("    sessionsCurrentBillingPeriod: ").append(toIndentedString(sessionsCurrentBillingPeriod)).append("\n");
    sb.append("    sessionsLastBillingPeriod: ").append(toIndentedString(sessionsLastBillingPeriod)).append("\n");
    sb.append("    sessionsTrialBillingPeriod: ").append(toIndentedString(sessionsTrialBillingPeriod)).append("\n");
    sb.append("    trialExpiration: ").append(toIndentedString(trialExpiration)).append("\n");
    sb.append("    trialExpired: ").append(toIndentedString(trialExpired)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("cost_per_thousand");
    openapiFields.add("enabled");
    openapiFields.add("retention_interval");
    openapiFields.add("sessions_current_billing_period");
    openapiFields.add("sessions_last_billing_period");
    openapiFields.add("sessions_trial_billing_period");
    openapiFields.add("trial_expiration");
    openapiFields.add("trial_expired");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ScreenRecordingSettings
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (ScreenRecordingSettings.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in ScreenRecordingSettings is not found in the empty JSON string", ScreenRecordingSettings.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!ScreenRecordingSettings.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ScreenRecordingSettings` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("retention_interval") != null && !jsonObj.get("retention_interval").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `retention_interval` to be a primitive type in the JSON string but got `%s`", jsonObj.get("retention_interval").toString()));
      }
      if (jsonObj.get("trial_expiration") != null && !jsonObj.get("trial_expiration").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `trial_expiration` to be a primitive type in the JSON string but got `%s`", jsonObj.get("trial_expiration").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ScreenRecordingSettings.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ScreenRecordingSettings' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ScreenRecordingSettings> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ScreenRecordingSettings.class));

       return (TypeAdapter<T>) new TypeAdapter<ScreenRecordingSettings>() {
           @Override
           public void write(JsonWriter out, ScreenRecordingSettings value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ScreenRecordingSettings read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ScreenRecordingSettings given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ScreenRecordingSettings
  * @throws IOException if the JSON string is invalid with respect to ScreenRecordingSettings
  */
  public static ScreenRecordingSettings fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ScreenRecordingSettings.class);
  }

 /**
  * Convert an instance of ScreenRecordingSettings to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

