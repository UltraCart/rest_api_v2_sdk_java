/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.CustomerActivity;
import com.ultracart.admin.v2.models.CustomerAttachment;
import com.ultracart.admin.v2.models.CustomerBilling;
import com.ultracart.admin.v2.models.CustomerCard;
import com.ultracart.admin.v2.models.CustomerEmail;
import com.ultracart.admin.v2.models.CustomerLoyalty;
import com.ultracart.admin.v2.models.CustomerOrdersSummary;
import com.ultracart.admin.v2.models.CustomerPricingTier;
import com.ultracart.admin.v2.models.CustomerPrivacy;
import com.ultracart.admin.v2.models.CustomerQuotesSummary;
import com.ultracart.admin.v2.models.CustomerReviewer;
import com.ultracart.admin.v2.models.CustomerShipping;
import com.ultracart.admin.v2.models.CustomerSoftwareEntitlement;
import com.ultracart.admin.v2.models.CustomerTag;
import com.ultracart.admin.v2.models.CustomerTaxCodes;
import com.ultracart.admin.v2.models.Order;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * Customer
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-22T23:37:17.283-04:00[America/Indianapolis]")
public class Customer {
  public static final String SERIALIZED_NAME_ACTIVITY = "activity";
  @SerializedName(SERIALIZED_NAME_ACTIVITY)
  private CustomerActivity activity;

  public static final String SERIALIZED_NAME_AFFILIATE_OID = "affiliate_oid";
  @SerializedName(SERIALIZED_NAME_AFFILIATE_OID)
  private Integer affiliateOid;

  public static final String SERIALIZED_NAME_ALLOW3RD_PARTY_BILLING = "allow_3rd_party_billing";
  @SerializedName(SERIALIZED_NAME_ALLOW3RD_PARTY_BILLING)
  private Boolean allow3rdPartyBilling;

  public static final String SERIALIZED_NAME_ALLOW_COD = "allow_cod";
  @SerializedName(SERIALIZED_NAME_ALLOW_COD)
  private Boolean allowCod;

  public static final String SERIALIZED_NAME_ALLOW_DROP_SHIPPING = "allow_drop_shipping";
  @SerializedName(SERIALIZED_NAME_ALLOW_DROP_SHIPPING)
  private Boolean allowDropShipping;

  public static final String SERIALIZED_NAME_ALLOW_PURCHASE_ORDER = "allow_purchase_order";
  @SerializedName(SERIALIZED_NAME_ALLOW_PURCHASE_ORDER)
  private Boolean allowPurchaseOrder;

  public static final String SERIALIZED_NAME_ALLOW_QUOTE_REQUEST = "allow_quote_request";
  @SerializedName(SERIALIZED_NAME_ALLOW_QUOTE_REQUEST)
  private Boolean allowQuoteRequest;

  public static final String SERIALIZED_NAME_ALLOW_SELECTION_OF_ADDRESS_TYPE = "allow_selection_of_address_type";
  @SerializedName(SERIALIZED_NAME_ALLOW_SELECTION_OF_ADDRESS_TYPE)
  private Boolean allowSelectionOfAddressType;

  public static final String SERIALIZED_NAME_ATTACHMENTS = "attachments";
  @SerializedName(SERIALIZED_NAME_ATTACHMENTS)
  private List<CustomerAttachment> attachments = null;

  public static final String SERIALIZED_NAME_AUTO_APPROVE_COD = "auto_approve_cod";
  @SerializedName(SERIALIZED_NAME_AUTO_APPROVE_COD)
  private Boolean autoApproveCod;

  public static final String SERIALIZED_NAME_AUTO_APPROVE_PURCHASE_ORDER = "auto_approve_purchase_order";
  @SerializedName(SERIALIZED_NAME_AUTO_APPROVE_PURCHASE_ORDER)
  private Boolean autoApprovePurchaseOrder;

  public static final String SERIALIZED_NAME_AUTOMATIC_MERCHANT_NOTES = "automatic_merchant_notes";
  @SerializedName(SERIALIZED_NAME_AUTOMATIC_MERCHANT_NOTES)
  private String automaticMerchantNotes;

  public static final String SERIALIZED_NAME_BILLING = "billing";
  @SerializedName(SERIALIZED_NAME_BILLING)
  private List<CustomerBilling> billing = null;

  public static final String SERIALIZED_NAME_BUSINESS_NOTES = "business_notes";
  @SerializedName(SERIALIZED_NAME_BUSINESS_NOTES)
  private String businessNotes;

  public static final String SERIALIZED_NAME_CARDS = "cards";
  @SerializedName(SERIALIZED_NAME_CARDS)
  private List<CustomerCard> cards = null;

  public static final String SERIALIZED_NAME_CC_EMAILS = "cc_emails";
  @SerializedName(SERIALIZED_NAME_CC_EMAILS)
  private List<CustomerEmail> ccEmails = null;

  public static final String SERIALIZED_NAME_CUSTOMER_PROFILE_OID = "customer_profile_oid";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_PROFILE_OID)
  private Integer customerProfileOid;

  public static final String SERIALIZED_NAME_DHL_ACCOUNT_NUMBER = "dhl_account_number";
  @SerializedName(SERIALIZED_NAME_DHL_ACCOUNT_NUMBER)
  private String dhlAccountNumber;

  public static final String SERIALIZED_NAME_DHL_DUTY_ACCOUNT_NUMBER = "dhl_duty_account_number";
  @SerializedName(SERIALIZED_NAME_DHL_DUTY_ACCOUNT_NUMBER)
  private String dhlDutyAccountNumber;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_EXEMPT_SHIPPING_HANDLING_CHARGE = "exempt_shipping_handling_charge";
  @SerializedName(SERIALIZED_NAME_EXEMPT_SHIPPING_HANDLING_CHARGE)
  private Boolean exemptShippingHandlingCharge;

  public static final String SERIALIZED_NAME_FEDEX_ACCOUNT_NUMBER = "fedex_account_number";
  @SerializedName(SERIALIZED_NAME_FEDEX_ACCOUNT_NUMBER)
  private String fedexAccountNumber;

  public static final String SERIALIZED_NAME_FREE_SHIPPING = "free_shipping";
  @SerializedName(SERIALIZED_NAME_FREE_SHIPPING)
  private Boolean freeShipping;

  public static final String SERIALIZED_NAME_FREE_SHIPPING_MINIMUM = "free_shipping_minimum";
  @SerializedName(SERIALIZED_NAME_FREE_SHIPPING_MINIMUM)
  private BigDecimal freeShippingMinimum;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_BY = "last_modified_by";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_BY)
  private String lastModifiedBy;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_DTS = "last_modified_dts";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_DTS)
  private String lastModifiedDts;

  public static final String SERIALIZED_NAME_LOYALTY = "loyalty";
  @SerializedName(SERIALIZED_NAME_LOYALTY)
  private CustomerLoyalty loyalty;

  public static final String SERIALIZED_NAME_MAXIMUM_ITEM_COUNT = "maximum_item_count";
  @SerializedName(SERIALIZED_NAME_MAXIMUM_ITEM_COUNT)
  private Integer maximumItemCount;

  public static final String SERIALIZED_NAME_MINIMUM_ITEM_COUNT = "minimum_item_count";
  @SerializedName(SERIALIZED_NAME_MINIMUM_ITEM_COUNT)
  private Integer minimumItemCount;

  public static final String SERIALIZED_NAME_MINIMUM_SUBTOTAL = "minimum_subtotal";
  @SerializedName(SERIALIZED_NAME_MINIMUM_SUBTOTAL)
  private BigDecimal minimumSubtotal;

  public static final String SERIALIZED_NAME_NO_COUPONS = "no_coupons";
  @SerializedName(SERIALIZED_NAME_NO_COUPONS)
  private Boolean noCoupons;

  public static final String SERIALIZED_NAME_NO_FREE_SHIPPING = "no_free_shipping";
  @SerializedName(SERIALIZED_NAME_NO_FREE_SHIPPING)
  private Boolean noFreeShipping;

  public static final String SERIALIZED_NAME_NO_REALTIME_CHARGE = "no_realtime_charge";
  @SerializedName(SERIALIZED_NAME_NO_REALTIME_CHARGE)
  private Boolean noRealtimeCharge;

  public static final String SERIALIZED_NAME_ORDERS = "orders";
  @SerializedName(SERIALIZED_NAME_ORDERS)
  private List<Order> orders = null;

  public static final String SERIALIZED_NAME_ORDERS_SUMMARY = "orders_summary";
  @SerializedName(SERIALIZED_NAME_ORDERS_SUMMARY)
  private CustomerOrdersSummary ordersSummary;

  public static final String SERIALIZED_NAME_PASSWORD = "password";
  @SerializedName(SERIALIZED_NAME_PASSWORD)
  private String password;

  public static final String SERIALIZED_NAME_PRICING_TIERS = "pricing_tiers";
  @SerializedName(SERIALIZED_NAME_PRICING_TIERS)
  private List<CustomerPricingTier> pricingTiers = null;

  public static final String SERIALIZED_NAME_PRIVACY = "privacy";
  @SerializedName(SERIALIZED_NAME_PRIVACY)
  private CustomerPrivacy privacy;

  public static final String SERIALIZED_NAME_QB_CLASS = "qb_class";
  @SerializedName(SERIALIZED_NAME_QB_CLASS)
  private String qbClass;

  public static final String SERIALIZED_NAME_QB_CODE = "qb_code";
  @SerializedName(SERIALIZED_NAME_QB_CODE)
  private String qbCode;

  public static final String SERIALIZED_NAME_QUOTES = "quotes";
  @SerializedName(SERIALIZED_NAME_QUOTES)
  private List<Order> quotes = null;

  public static final String SERIALIZED_NAME_QUOTES_SUMMARY = "quotes_summary";
  @SerializedName(SERIALIZED_NAME_QUOTES_SUMMARY)
  private CustomerQuotesSummary quotesSummary;

  public static final String SERIALIZED_NAME_REFERRAL_SOURCE = "referral_source";
  @SerializedName(SERIALIZED_NAME_REFERRAL_SOURCE)
  private String referralSource;

  public static final String SERIALIZED_NAME_REVIEWER = "reviewer";
  @SerializedName(SERIALIZED_NAME_REVIEWER)
  private CustomerReviewer reviewer;

  public static final String SERIALIZED_NAME_SALES_REP_CODE = "sales_rep_code";
  @SerializedName(SERIALIZED_NAME_SALES_REP_CODE)
  private String salesRepCode;

  public static final String SERIALIZED_NAME_SEND_SIGNUP_NOTIFICATION = "send_signup_notification";
  @SerializedName(SERIALIZED_NAME_SEND_SIGNUP_NOTIFICATION)
  private Boolean sendSignupNotification;

  public static final String SERIALIZED_NAME_SHIPPING = "shipping";
  @SerializedName(SERIALIZED_NAME_SHIPPING)
  private List<CustomerShipping> shipping = null;

  public static final String SERIALIZED_NAME_SIGNUP_DTS = "signup_dts";
  @SerializedName(SERIALIZED_NAME_SIGNUP_DTS)
  private String signupDts;

  public static final String SERIALIZED_NAME_SOFTWARE_ENTITLEMENTS = "software_entitlements";
  @SerializedName(SERIALIZED_NAME_SOFTWARE_ENTITLEMENTS)
  private List<CustomerSoftwareEntitlement> softwareEntitlements = null;

  public static final String SERIALIZED_NAME_SUPPRESS_BUYSAFE = "suppress_buysafe";
  @SerializedName(SERIALIZED_NAME_SUPPRESS_BUYSAFE)
  private Boolean suppressBuysafe;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<CustomerTag> tags = null;

  public static final String SERIALIZED_NAME_TAX_CODES = "tax_codes";
  @SerializedName(SERIALIZED_NAME_TAX_CODES)
  private CustomerTaxCodes taxCodes;

  public static final String SERIALIZED_NAME_TAX_EXEMPT = "tax_exempt";
  @SerializedName(SERIALIZED_NAME_TAX_EXEMPT)
  private Boolean taxExempt;

  public static final String SERIALIZED_NAME_TAX_ID = "tax_id";
  @SerializedName(SERIALIZED_NAME_TAX_ID)
  private String taxId;

  public static final String SERIALIZED_NAME_TERMS = "terms";
  @SerializedName(SERIALIZED_NAME_TERMS)
  private String terms;

  public static final String SERIALIZED_NAME_TRACK_SEPARATELY = "track_separately";
  @SerializedName(SERIALIZED_NAME_TRACK_SEPARATELY)
  private Boolean trackSeparately;

  public static final String SERIALIZED_NAME_UNAPPROVED = "unapproved";
  @SerializedName(SERIALIZED_NAME_UNAPPROVED)
  private Boolean unapproved;

  public static final String SERIALIZED_NAME_UPS_ACCOUNT_NUMBER = "ups_account_number";
  @SerializedName(SERIALIZED_NAME_UPS_ACCOUNT_NUMBER)
  private String upsAccountNumber;

  public static final String SERIALIZED_NAME_WEBSITE_URL = "website_url";
  @SerializedName(SERIALIZED_NAME_WEBSITE_URL)
  private String websiteUrl;

  public Customer() { 
  }

  public Customer activity(CustomerActivity activity) {
    
    this.activity = activity;
    return this;
  }

   /**
   * Get activity
   * @return activity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CustomerActivity getActivity() {
    return activity;
  }


  public void setActivity(CustomerActivity activity) {
    this.activity = activity;
  }


  public Customer affiliateOid(Integer affiliateOid) {
    
    this.affiliateOid = affiliateOid;
    return this;
  }

   /**
   * Affiliate oid
   * @return affiliateOid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Affiliate oid")

  public Integer getAffiliateOid() {
    return affiliateOid;
  }


  public void setAffiliateOid(Integer affiliateOid) {
    this.affiliateOid = affiliateOid;
  }


  public Customer allow3rdPartyBilling(Boolean allow3rdPartyBilling) {
    
    this.allow3rdPartyBilling = allow3rdPartyBilling;
    return this;
  }

   /**
   * Allow 3rd party billing
   * @return allow3rdPartyBilling
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Allow 3rd party billing")

  public Boolean getAllow3rdPartyBilling() {
    return allow3rdPartyBilling;
  }


  public void setAllow3rdPartyBilling(Boolean allow3rdPartyBilling) {
    this.allow3rdPartyBilling = allow3rdPartyBilling;
  }


  public Customer allowCod(Boolean allowCod) {
    
    this.allowCod = allowCod;
    return this;
  }

   /**
   * Allow COD
   * @return allowCod
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Allow COD")

  public Boolean getAllowCod() {
    return allowCod;
  }


  public void setAllowCod(Boolean allowCod) {
    this.allowCod = allowCod;
  }


  public Customer allowDropShipping(Boolean allowDropShipping) {
    
    this.allowDropShipping = allowDropShipping;
    return this;
  }

   /**
   * Allow Drop Shipping
   * @return allowDropShipping
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Allow Drop Shipping")

  public Boolean getAllowDropShipping() {
    return allowDropShipping;
  }


  public void setAllowDropShipping(Boolean allowDropShipping) {
    this.allowDropShipping = allowDropShipping;
  }


  public Customer allowPurchaseOrder(Boolean allowPurchaseOrder) {
    
    this.allowPurchaseOrder = allowPurchaseOrder;
    return this;
  }

   /**
   * Allow purchase orders by this customer
   * @return allowPurchaseOrder
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Allow purchase orders by this customer")

  public Boolean getAllowPurchaseOrder() {
    return allowPurchaseOrder;
  }


  public void setAllowPurchaseOrder(Boolean allowPurchaseOrder) {
    this.allowPurchaseOrder = allowPurchaseOrder;
  }


  public Customer allowQuoteRequest(Boolean allowQuoteRequest) {
    
    this.allowQuoteRequest = allowQuoteRequest;
    return this;
  }

   /**
   * Allow quote request
   * @return allowQuoteRequest
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Allow quote request")

  public Boolean getAllowQuoteRequest() {
    return allowQuoteRequest;
  }


  public void setAllowQuoteRequest(Boolean allowQuoteRequest) {
    this.allowQuoteRequest = allowQuoteRequest;
  }


  public Customer allowSelectionOfAddressType(Boolean allowSelectionOfAddressType) {
    
    this.allowSelectionOfAddressType = allowSelectionOfAddressType;
    return this;
  }

   /**
   * Allow selection of residential or business address type
   * @return allowSelectionOfAddressType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Allow selection of residential or business address type")

  public Boolean getAllowSelectionOfAddressType() {
    return allowSelectionOfAddressType;
  }


  public void setAllowSelectionOfAddressType(Boolean allowSelectionOfAddressType) {
    this.allowSelectionOfAddressType = allowSelectionOfAddressType;
  }


  public Customer attachments(List<CustomerAttachment> attachments) {
    
    this.attachments = attachments;
    return this;
  }

  public Customer addAttachmentsItem(CustomerAttachment attachmentsItem) {
    if (this.attachments == null) {
      this.attachments = new ArrayList<>();
    }
    this.attachments.add(attachmentsItem);
    return this;
  }

   /**
   * Attachments
   * @return attachments
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Attachments")

  public List<CustomerAttachment> getAttachments() {
    return attachments;
  }


  public void setAttachments(List<CustomerAttachment> attachments) {
    this.attachments = attachments;
  }


  public Customer autoApproveCod(Boolean autoApproveCod) {
    
    this.autoApproveCod = autoApproveCod;
    return this;
  }

   /**
   * Auto approve COD
   * @return autoApproveCod
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Auto approve COD")

  public Boolean getAutoApproveCod() {
    return autoApproveCod;
  }


  public void setAutoApproveCod(Boolean autoApproveCod) {
    this.autoApproveCod = autoApproveCod;
  }


  public Customer autoApprovePurchaseOrder(Boolean autoApprovePurchaseOrder) {
    
    this.autoApprovePurchaseOrder = autoApprovePurchaseOrder;
    return this;
  }

   /**
   * Auto approve purchase orders by this customer
   * @return autoApprovePurchaseOrder
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Auto approve purchase orders by this customer")

  public Boolean getAutoApprovePurchaseOrder() {
    return autoApprovePurchaseOrder;
  }


  public void setAutoApprovePurchaseOrder(Boolean autoApprovePurchaseOrder) {
    this.autoApprovePurchaseOrder = autoApprovePurchaseOrder;
  }


  public Customer automaticMerchantNotes(String automaticMerchantNotes) {
    
    this.automaticMerchantNotes = automaticMerchantNotes;
    return this;
  }

   /**
   * Automatic merchant notes are added to every order placed
   * @return automaticMerchantNotes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Automatic merchant notes are added to every order placed")

  public String getAutomaticMerchantNotes() {
    return automaticMerchantNotes;
  }


  public void setAutomaticMerchantNotes(String automaticMerchantNotes) {
    this.automaticMerchantNotes = automaticMerchantNotes;
  }


  public Customer billing(List<CustomerBilling> billing) {
    
    this.billing = billing;
    return this;
  }

  public Customer addBillingItem(CustomerBilling billingItem) {
    if (this.billing == null) {
      this.billing = new ArrayList<>();
    }
    this.billing.add(billingItem);
    return this;
  }

   /**
   * Billing addresses for this customer
   * @return billing
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Billing addresses for this customer")

  public List<CustomerBilling> getBilling() {
    return billing;
  }


  public void setBilling(List<CustomerBilling> billing) {
    this.billing = billing;
  }


  public Customer businessNotes(String businessNotes) {
    
    this.businessNotes = businessNotes;
    return this;
  }

   /**
   * Business notes (internally visible only)
   * @return businessNotes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Business notes (internally visible only)")

  public String getBusinessNotes() {
    return businessNotes;
  }


  public void setBusinessNotes(String businessNotes) {
    this.businessNotes = businessNotes;
  }


  public Customer cards(List<CustomerCard> cards) {
    
    this.cards = cards;
    return this;
  }

  public Customer addCardsItem(CustomerCard cardsItem) {
    if (this.cards == null) {
      this.cards = new ArrayList<>();
    }
    this.cards.add(cardsItem);
    return this;
  }

   /**
   * Credit Cards for this customer
   * @return cards
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Credit Cards for this customer")

  public List<CustomerCard> getCards() {
    return cards;
  }


  public void setCards(List<CustomerCard> cards) {
    this.cards = cards;
  }


  public Customer ccEmails(List<CustomerEmail> ccEmails) {
    
    this.ccEmails = ccEmails;
    return this;
  }

  public Customer addCcEmailsItem(CustomerEmail ccEmailsItem) {
    if (this.ccEmails == null) {
      this.ccEmails = new ArrayList<>();
    }
    this.ccEmails.add(ccEmailsItem);
    return this;
  }

   /**
   * Additional emails to CC notification
   * @return ccEmails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Additional emails to CC notification")

  public List<CustomerEmail> getCcEmails() {
    return ccEmails;
  }


  public void setCcEmails(List<CustomerEmail> ccEmails) {
    this.ccEmails = ccEmails;
  }


  public Customer customerProfileOid(Integer customerProfileOid) {
    
    this.customerProfileOid = customerProfileOid;
    return this;
  }

   /**
   * Customer profile object identifier
   * @return customerProfileOid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Customer profile object identifier")

  public Integer getCustomerProfileOid() {
    return customerProfileOid;
  }


  public void setCustomerProfileOid(Integer customerProfileOid) {
    this.customerProfileOid = customerProfileOid;
  }


  public Customer dhlAccountNumber(String dhlAccountNumber) {
    
    this.dhlAccountNumber = dhlAccountNumber;
    return this;
  }

   /**
   * DHL account number
   * @return dhlAccountNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "DHL account number")

  public String getDhlAccountNumber() {
    return dhlAccountNumber;
  }


  public void setDhlAccountNumber(String dhlAccountNumber) {
    this.dhlAccountNumber = dhlAccountNumber;
  }


  public Customer dhlDutyAccountNumber(String dhlDutyAccountNumber) {
    
    this.dhlDutyAccountNumber = dhlDutyAccountNumber;
    return this;
  }

   /**
   * DHL duty account number
   * @return dhlDutyAccountNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "DHL duty account number")

  public String getDhlDutyAccountNumber() {
    return dhlDutyAccountNumber;
  }


  public void setDhlDutyAccountNumber(String dhlDutyAccountNumber) {
    this.dhlDutyAccountNumber = dhlDutyAccountNumber;
  }


  public Customer email(String email) {
    
    this.email = email;
    return this;
  }

   /**
   * Email address of this customer profile
   * @return email
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Email address of this customer profile")

  public String getEmail() {
    return email;
  }


  public void setEmail(String email) {
    this.email = email;
  }


  public Customer exemptShippingHandlingCharge(Boolean exemptShippingHandlingCharge) {
    
    this.exemptShippingHandlingCharge = exemptShippingHandlingCharge;
    return this;
  }

   /**
   * Exempt shipping handling charge
   * @return exemptShippingHandlingCharge
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Exempt shipping handling charge")

  public Boolean getExemptShippingHandlingCharge() {
    return exemptShippingHandlingCharge;
  }


  public void setExemptShippingHandlingCharge(Boolean exemptShippingHandlingCharge) {
    this.exemptShippingHandlingCharge = exemptShippingHandlingCharge;
  }


  public Customer fedexAccountNumber(String fedexAccountNumber) {
    
    this.fedexAccountNumber = fedexAccountNumber;
    return this;
  }

   /**
   * FedEx account number
   * @return fedexAccountNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "FedEx account number")

  public String getFedexAccountNumber() {
    return fedexAccountNumber;
  }


  public void setFedexAccountNumber(String fedexAccountNumber) {
    this.fedexAccountNumber = fedexAccountNumber;
  }


  public Customer freeShipping(Boolean freeShipping) {
    
    this.freeShipping = freeShipping;
    return this;
  }

   /**
   * This customer always receives free shipping
   * @return freeShipping
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This customer always receives free shipping")

  public Boolean getFreeShipping() {
    return freeShipping;
  }


  public void setFreeShipping(Boolean freeShipping) {
    this.freeShipping = freeShipping;
  }


  public Customer freeShippingMinimum(BigDecimal freeShippingMinimum) {
    
    this.freeShippingMinimum = freeShippingMinimum;
    return this;
  }

   /**
   * If free_shipping is true, this is the minimum subtotal required for free shipping
   * @return freeShippingMinimum
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If free_shipping is true, this is the minimum subtotal required for free shipping")

  public BigDecimal getFreeShippingMinimum() {
    return freeShippingMinimum;
  }


  public void setFreeShippingMinimum(BigDecimal freeShippingMinimum) {
    this.freeShippingMinimum = freeShippingMinimum;
  }


  public Customer lastModifiedBy(String lastModifiedBy) {
    
    this.lastModifiedBy = lastModifiedBy;
    return this;
  }

   /**
   * Last modified by
   * @return lastModifiedBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Last modified by")

  public String getLastModifiedBy() {
    return lastModifiedBy;
  }


  public void setLastModifiedBy(String lastModifiedBy) {
    this.lastModifiedBy = lastModifiedBy;
  }


  public Customer lastModifiedDts(String lastModifiedDts) {
    
    this.lastModifiedDts = lastModifiedDts;
    return this;
  }

   /**
   * Last modified date
   * @return lastModifiedDts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Last modified date")

  public String getLastModifiedDts() {
    return lastModifiedDts;
  }


  public void setLastModifiedDts(String lastModifiedDts) {
    this.lastModifiedDts = lastModifiedDts;
  }


  public Customer loyalty(CustomerLoyalty loyalty) {
    
    this.loyalty = loyalty;
    return this;
  }

   /**
   * Get loyalty
   * @return loyalty
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CustomerLoyalty getLoyalty() {
    return loyalty;
  }


  public void setLoyalty(CustomerLoyalty loyalty) {
    this.loyalty = loyalty;
  }


  public Customer maximumItemCount(Integer maximumItemCount) {
    
    this.maximumItemCount = maximumItemCount;
    return this;
  }

   /**
   * Maximum item count
   * @return maximumItemCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Maximum item count")

  public Integer getMaximumItemCount() {
    return maximumItemCount;
  }


  public void setMaximumItemCount(Integer maximumItemCount) {
    this.maximumItemCount = maximumItemCount;
  }


  public Customer minimumItemCount(Integer minimumItemCount) {
    
    this.minimumItemCount = minimumItemCount;
    return this;
  }

   /**
   * Minimum item count
   * @return minimumItemCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Minimum item count")

  public Integer getMinimumItemCount() {
    return minimumItemCount;
  }


  public void setMinimumItemCount(Integer minimumItemCount) {
    this.minimumItemCount = minimumItemCount;
  }


  public Customer minimumSubtotal(BigDecimal minimumSubtotal) {
    
    this.minimumSubtotal = minimumSubtotal;
    return this;
  }

   /**
   * Minimum subtotal
   * @return minimumSubtotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Minimum subtotal")

  public BigDecimal getMinimumSubtotal() {
    return minimumSubtotal;
  }


  public void setMinimumSubtotal(BigDecimal minimumSubtotal) {
    this.minimumSubtotal = minimumSubtotal;
  }


  public Customer noCoupons(Boolean noCoupons) {
    
    this.noCoupons = noCoupons;
    return this;
  }

   /**
   * No coupons
   * @return noCoupons
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "No coupons")

  public Boolean getNoCoupons() {
    return noCoupons;
  }


  public void setNoCoupons(Boolean noCoupons) {
    this.noCoupons = noCoupons;
  }


  public Customer noFreeShipping(Boolean noFreeShipping) {
    
    this.noFreeShipping = noFreeShipping;
    return this;
  }

   /**
   * No free shipping regardless of coupons or item level settings
   * @return noFreeShipping
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "No free shipping regardless of coupons or item level settings")

  public Boolean getNoFreeShipping() {
    return noFreeShipping;
  }


  public void setNoFreeShipping(Boolean noFreeShipping) {
    this.noFreeShipping = noFreeShipping;
  }


  public Customer noRealtimeCharge(Boolean noRealtimeCharge) {
    
    this.noRealtimeCharge = noRealtimeCharge;
    return this;
  }

   /**
   * No realtime charge
   * @return noRealtimeCharge
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "No realtime charge")

  public Boolean getNoRealtimeCharge() {
    return noRealtimeCharge;
  }


  public void setNoRealtimeCharge(Boolean noRealtimeCharge) {
    this.noRealtimeCharge = noRealtimeCharge;
  }


  public Customer orders(List<Order> orders) {
    
    this.orders = orders;
    return this;
  }

  public Customer addOrdersItem(Order ordersItem) {
    if (this.orders == null) {
      this.orders = new ArrayList<>();
    }
    this.orders.add(ordersItem);
    return this;
  }

   /**
   * Orders associated with this customer profile
   * @return orders
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Orders associated with this customer profile")

  public List<Order> getOrders() {
    return orders;
  }


  public void setOrders(List<Order> orders) {
    this.orders = orders;
  }


  public Customer ordersSummary(CustomerOrdersSummary ordersSummary) {
    
    this.ordersSummary = ordersSummary;
    return this;
  }

   /**
   * Get ordersSummary
   * @return ordersSummary
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CustomerOrdersSummary getOrdersSummary() {
    return ordersSummary;
  }


  public void setOrdersSummary(CustomerOrdersSummary ordersSummary) {
    this.ordersSummary = ordersSummary;
  }


  public Customer password(String password) {
    
    this.password = password;
    return this;
  }

   /**
   * Password (may only be set, never read)
   * @return password
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Password (may only be set, never read)")

  public String getPassword() {
    return password;
  }


  public void setPassword(String password) {
    this.password = password;
  }


  public Customer pricingTiers(List<CustomerPricingTier> pricingTiers) {
    
    this.pricingTiers = pricingTiers;
    return this;
  }

  public Customer addPricingTiersItem(CustomerPricingTier pricingTiersItem) {
    if (this.pricingTiers == null) {
      this.pricingTiers = new ArrayList<>();
    }
    this.pricingTiers.add(pricingTiersItem);
    return this;
  }

   /**
   * Pricing tiers for this customer
   * @return pricingTiers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Pricing tiers for this customer")

  public List<CustomerPricingTier> getPricingTiers() {
    return pricingTiers;
  }


  public void setPricingTiers(List<CustomerPricingTier> pricingTiers) {
    this.pricingTiers = pricingTiers;
  }


  public Customer privacy(CustomerPrivacy privacy) {
    
    this.privacy = privacy;
    return this;
  }

   /**
   * Get privacy
   * @return privacy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CustomerPrivacy getPrivacy() {
    return privacy;
  }


  public void setPrivacy(CustomerPrivacy privacy) {
    this.privacy = privacy;
  }


  public Customer qbClass(String qbClass) {
    
    this.qbClass = qbClass;
    return this;
  }

   /**
   * QuickBooks class to import this customer as
   * @return qbClass
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "QuickBooks class to import this customer as")

  public String getQbClass() {
    return qbClass;
  }


  public void setQbClass(String qbClass) {
    this.qbClass = qbClass;
  }


  public Customer qbCode(String qbCode) {
    
    this.qbCode = qbCode;
    return this;
  }

   /**
   * QuickBooks name to import this customer as
   * @return qbCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "QuickBooks name to import this customer as")

  public String getQbCode() {
    return qbCode;
  }


  public void setQbCode(String qbCode) {
    this.qbCode = qbCode;
  }


  public Customer quotes(List<Order> quotes) {
    
    this.quotes = quotes;
    return this;
  }

  public Customer addQuotesItem(Order quotesItem) {
    if (this.quotes == null) {
      this.quotes = new ArrayList<>();
    }
    this.quotes.add(quotesItem);
    return this;
  }

   /**
   * Quotes associated with this customer profile
   * @return quotes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Quotes associated with this customer profile")

  public List<Order> getQuotes() {
    return quotes;
  }


  public void setQuotes(List<Order> quotes) {
    this.quotes = quotes;
  }


  public Customer quotesSummary(CustomerQuotesSummary quotesSummary) {
    
    this.quotesSummary = quotesSummary;
    return this;
  }

   /**
   * Get quotesSummary
   * @return quotesSummary
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CustomerQuotesSummary getQuotesSummary() {
    return quotesSummary;
  }


  public void setQuotesSummary(CustomerQuotesSummary quotesSummary) {
    this.quotesSummary = quotesSummary;
  }


  public Customer referralSource(String referralSource) {
    
    this.referralSource = referralSource;
    return this;
  }

   /**
   * Referral Source
   * @return referralSource
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Referral Source")

  public String getReferralSource() {
    return referralSource;
  }


  public void setReferralSource(String referralSource) {
    this.referralSource = referralSource;
  }


  public Customer reviewer(CustomerReviewer reviewer) {
    
    this.reviewer = reviewer;
    return this;
  }

   /**
   * Get reviewer
   * @return reviewer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CustomerReviewer getReviewer() {
    return reviewer;
  }


  public void setReviewer(CustomerReviewer reviewer) {
    this.reviewer = reviewer;
  }


  public Customer salesRepCode(String salesRepCode) {
    
    this.salesRepCode = salesRepCode;
    return this;
  }

   /**
   * Sales rep code
   * @return salesRepCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Sales rep code")

  public String getSalesRepCode() {
    return salesRepCode;
  }


  public void setSalesRepCode(String salesRepCode) {
    this.salesRepCode = salesRepCode;
  }


  public Customer sendSignupNotification(Boolean sendSignupNotification) {
    
    this.sendSignupNotification = sendSignupNotification;
    return this;
  }

   /**
   * Send signup notification, if true during customer creation, will send a notification.
   * @return sendSignupNotification
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Send signup notification, if true during customer creation, will send a notification.")

  public Boolean getSendSignupNotification() {
    return sendSignupNotification;
  }


  public void setSendSignupNotification(Boolean sendSignupNotification) {
    this.sendSignupNotification = sendSignupNotification;
  }


  public Customer shipping(List<CustomerShipping> shipping) {
    
    this.shipping = shipping;
    return this;
  }

  public Customer addShippingItem(CustomerShipping shippingItem) {
    if (this.shipping == null) {
      this.shipping = new ArrayList<>();
    }
    this.shipping.add(shippingItem);
    return this;
  }

   /**
   * Shipping addresses for this customer
   * @return shipping
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Shipping addresses for this customer")

  public List<CustomerShipping> getShipping() {
    return shipping;
  }


  public void setShipping(List<CustomerShipping> shipping) {
    this.shipping = shipping;
  }


  public Customer signupDts(String signupDts) {
    
    this.signupDts = signupDts;
    return this;
  }

   /**
   * Signup date
   * @return signupDts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Signup date")

  public String getSignupDts() {
    return signupDts;
  }


  public void setSignupDts(String signupDts) {
    this.signupDts = signupDts;
  }


  public Customer softwareEntitlements(List<CustomerSoftwareEntitlement> softwareEntitlements) {
    
    this.softwareEntitlements = softwareEntitlements;
    return this;
  }

  public Customer addSoftwareEntitlementsItem(CustomerSoftwareEntitlement softwareEntitlementsItem) {
    if (this.softwareEntitlements == null) {
      this.softwareEntitlements = new ArrayList<>();
    }
    this.softwareEntitlements.add(softwareEntitlementsItem);
    return this;
  }

   /**
   * Software entitlements owned by this customer
   * @return softwareEntitlements
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Software entitlements owned by this customer")

  public List<CustomerSoftwareEntitlement> getSoftwareEntitlements() {
    return softwareEntitlements;
  }


  public void setSoftwareEntitlements(List<CustomerSoftwareEntitlement> softwareEntitlements) {
    this.softwareEntitlements = softwareEntitlements;
  }


  public Customer suppressBuysafe(Boolean suppressBuysafe) {
    
    this.suppressBuysafe = suppressBuysafe;
    return this;
  }

   /**
   * Suppress buySAFE (deprecated)
   * @return suppressBuysafe
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Suppress buySAFE (deprecated)")

  public Boolean getSuppressBuysafe() {
    return suppressBuysafe;
  }


  public void setSuppressBuysafe(Boolean suppressBuysafe) {
    this.suppressBuysafe = suppressBuysafe;
  }


  public Customer tags(List<CustomerTag> tags) {
    
    this.tags = tags;
    return this;
  }

  public Customer addTagsItem(CustomerTag tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Tags for this customer
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Tags for this customer")

  public List<CustomerTag> getTags() {
    return tags;
  }


  public void setTags(List<CustomerTag> tags) {
    this.tags = tags;
  }


  public Customer taxCodes(CustomerTaxCodes taxCodes) {
    
    this.taxCodes = taxCodes;
    return this;
  }

   /**
   * Get taxCodes
   * @return taxCodes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CustomerTaxCodes getTaxCodes() {
    return taxCodes;
  }


  public void setTaxCodes(CustomerTaxCodes taxCodes) {
    this.taxCodes = taxCodes;
  }


  public Customer taxExempt(Boolean taxExempt) {
    
    this.taxExempt = taxExempt;
    return this;
  }

   /**
   * True if the customer is tax exempt
   * @return taxExempt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if the customer is tax exempt")

  public Boolean getTaxExempt() {
    return taxExempt;
  }


  public void setTaxExempt(Boolean taxExempt) {
    this.taxExempt = taxExempt;
  }


  public Customer taxId(String taxId) {
    
    this.taxId = taxId;
    return this;
  }

   /**
   * Tax ID
   * @return taxId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Tax ID")

  public String getTaxId() {
    return taxId;
  }


  public void setTaxId(String taxId) {
    this.taxId = taxId;
  }


  public Customer terms(String terms) {
    
    this.terms = terms;
    return this;
  }

   /**
   * Terms for this customer
   * @return terms
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Terms for this customer")

  public String getTerms() {
    return terms;
  }


  public void setTerms(String terms) {
    this.terms = terms;
  }


  public Customer trackSeparately(Boolean trackSeparately) {
    
    this.trackSeparately = trackSeparately;
    return this;
  }

   /**
   * True if the customer should be tracked separately in QuickBooks
   * @return trackSeparately
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if the customer should be tracked separately in QuickBooks")

  public Boolean getTrackSeparately() {
    return trackSeparately;
  }


  public void setTrackSeparately(Boolean trackSeparately) {
    this.trackSeparately = trackSeparately;
  }


  public Customer unapproved(Boolean unapproved) {
    
    this.unapproved = unapproved;
    return this;
  }

   /**
   * Unapproved
   * @return unapproved
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unapproved")

  public Boolean getUnapproved() {
    return unapproved;
  }


  public void setUnapproved(Boolean unapproved) {
    this.unapproved = unapproved;
  }


  public Customer upsAccountNumber(String upsAccountNumber) {
    
    this.upsAccountNumber = upsAccountNumber;
    return this;
  }

   /**
   * UPS account number
   * @return upsAccountNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "UPS account number")

  public String getUpsAccountNumber() {
    return upsAccountNumber;
  }


  public void setUpsAccountNumber(String upsAccountNumber) {
    this.upsAccountNumber = upsAccountNumber;
  }


  public Customer websiteUrl(String websiteUrl) {
    
    this.websiteUrl = websiteUrl;
    return this;
  }

   /**
   * Website url
   * @return websiteUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Website url")

  public String getWebsiteUrl() {
    return websiteUrl;
  }


  public void setWebsiteUrl(String websiteUrl) {
    this.websiteUrl = websiteUrl;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Customer customer = (Customer) o;
    return Objects.equals(this.activity, customer.activity) &&
        Objects.equals(this.affiliateOid, customer.affiliateOid) &&
        Objects.equals(this.allow3rdPartyBilling, customer.allow3rdPartyBilling) &&
        Objects.equals(this.allowCod, customer.allowCod) &&
        Objects.equals(this.allowDropShipping, customer.allowDropShipping) &&
        Objects.equals(this.allowPurchaseOrder, customer.allowPurchaseOrder) &&
        Objects.equals(this.allowQuoteRequest, customer.allowQuoteRequest) &&
        Objects.equals(this.allowSelectionOfAddressType, customer.allowSelectionOfAddressType) &&
        Objects.equals(this.attachments, customer.attachments) &&
        Objects.equals(this.autoApproveCod, customer.autoApproveCod) &&
        Objects.equals(this.autoApprovePurchaseOrder, customer.autoApprovePurchaseOrder) &&
        Objects.equals(this.automaticMerchantNotes, customer.automaticMerchantNotes) &&
        Objects.equals(this.billing, customer.billing) &&
        Objects.equals(this.businessNotes, customer.businessNotes) &&
        Objects.equals(this.cards, customer.cards) &&
        Objects.equals(this.ccEmails, customer.ccEmails) &&
        Objects.equals(this.customerProfileOid, customer.customerProfileOid) &&
        Objects.equals(this.dhlAccountNumber, customer.dhlAccountNumber) &&
        Objects.equals(this.dhlDutyAccountNumber, customer.dhlDutyAccountNumber) &&
        Objects.equals(this.email, customer.email) &&
        Objects.equals(this.exemptShippingHandlingCharge, customer.exemptShippingHandlingCharge) &&
        Objects.equals(this.fedexAccountNumber, customer.fedexAccountNumber) &&
        Objects.equals(this.freeShipping, customer.freeShipping) &&
        Objects.equals(this.freeShippingMinimum, customer.freeShippingMinimum) &&
        Objects.equals(this.lastModifiedBy, customer.lastModifiedBy) &&
        Objects.equals(this.lastModifiedDts, customer.lastModifiedDts) &&
        Objects.equals(this.loyalty, customer.loyalty) &&
        Objects.equals(this.maximumItemCount, customer.maximumItemCount) &&
        Objects.equals(this.minimumItemCount, customer.minimumItemCount) &&
        Objects.equals(this.minimumSubtotal, customer.minimumSubtotal) &&
        Objects.equals(this.noCoupons, customer.noCoupons) &&
        Objects.equals(this.noFreeShipping, customer.noFreeShipping) &&
        Objects.equals(this.noRealtimeCharge, customer.noRealtimeCharge) &&
        Objects.equals(this.orders, customer.orders) &&
        Objects.equals(this.ordersSummary, customer.ordersSummary) &&
        Objects.equals(this.password, customer.password) &&
        Objects.equals(this.pricingTiers, customer.pricingTiers) &&
        Objects.equals(this.privacy, customer.privacy) &&
        Objects.equals(this.qbClass, customer.qbClass) &&
        Objects.equals(this.qbCode, customer.qbCode) &&
        Objects.equals(this.quotes, customer.quotes) &&
        Objects.equals(this.quotesSummary, customer.quotesSummary) &&
        Objects.equals(this.referralSource, customer.referralSource) &&
        Objects.equals(this.reviewer, customer.reviewer) &&
        Objects.equals(this.salesRepCode, customer.salesRepCode) &&
        Objects.equals(this.sendSignupNotification, customer.sendSignupNotification) &&
        Objects.equals(this.shipping, customer.shipping) &&
        Objects.equals(this.signupDts, customer.signupDts) &&
        Objects.equals(this.softwareEntitlements, customer.softwareEntitlements) &&
        Objects.equals(this.suppressBuysafe, customer.suppressBuysafe) &&
        Objects.equals(this.tags, customer.tags) &&
        Objects.equals(this.taxCodes, customer.taxCodes) &&
        Objects.equals(this.taxExempt, customer.taxExempt) &&
        Objects.equals(this.taxId, customer.taxId) &&
        Objects.equals(this.terms, customer.terms) &&
        Objects.equals(this.trackSeparately, customer.trackSeparately) &&
        Objects.equals(this.unapproved, customer.unapproved) &&
        Objects.equals(this.upsAccountNumber, customer.upsAccountNumber) &&
        Objects.equals(this.websiteUrl, customer.websiteUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(activity, affiliateOid, allow3rdPartyBilling, allowCod, allowDropShipping, allowPurchaseOrder, allowQuoteRequest, allowSelectionOfAddressType, attachments, autoApproveCod, autoApprovePurchaseOrder, automaticMerchantNotes, billing, businessNotes, cards, ccEmails, customerProfileOid, dhlAccountNumber, dhlDutyAccountNumber, email, exemptShippingHandlingCharge, fedexAccountNumber, freeShipping, freeShippingMinimum, lastModifiedBy, lastModifiedDts, loyalty, maximumItemCount, minimumItemCount, minimumSubtotal, noCoupons, noFreeShipping, noRealtimeCharge, orders, ordersSummary, password, pricingTiers, privacy, qbClass, qbCode, quotes, quotesSummary, referralSource, reviewer, salesRepCode, sendSignupNotification, shipping, signupDts, softwareEntitlements, suppressBuysafe, tags, taxCodes, taxExempt, taxId, terms, trackSeparately, unapproved, upsAccountNumber, websiteUrl);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Customer {\n");
    sb.append("    activity: ").append(toIndentedString(activity)).append("\n");
    sb.append("    affiliateOid: ").append(toIndentedString(affiliateOid)).append("\n");
    sb.append("    allow3rdPartyBilling: ").append(toIndentedString(allow3rdPartyBilling)).append("\n");
    sb.append("    allowCod: ").append(toIndentedString(allowCod)).append("\n");
    sb.append("    allowDropShipping: ").append(toIndentedString(allowDropShipping)).append("\n");
    sb.append("    allowPurchaseOrder: ").append(toIndentedString(allowPurchaseOrder)).append("\n");
    sb.append("    allowQuoteRequest: ").append(toIndentedString(allowQuoteRequest)).append("\n");
    sb.append("    allowSelectionOfAddressType: ").append(toIndentedString(allowSelectionOfAddressType)).append("\n");
    sb.append("    attachments: ").append(toIndentedString(attachments)).append("\n");
    sb.append("    autoApproveCod: ").append(toIndentedString(autoApproveCod)).append("\n");
    sb.append("    autoApprovePurchaseOrder: ").append(toIndentedString(autoApprovePurchaseOrder)).append("\n");
    sb.append("    automaticMerchantNotes: ").append(toIndentedString(automaticMerchantNotes)).append("\n");
    sb.append("    billing: ").append(toIndentedString(billing)).append("\n");
    sb.append("    businessNotes: ").append(toIndentedString(businessNotes)).append("\n");
    sb.append("    cards: ").append(toIndentedString(cards)).append("\n");
    sb.append("    ccEmails: ").append(toIndentedString(ccEmails)).append("\n");
    sb.append("    customerProfileOid: ").append(toIndentedString(customerProfileOid)).append("\n");
    sb.append("    dhlAccountNumber: ").append(toIndentedString(dhlAccountNumber)).append("\n");
    sb.append("    dhlDutyAccountNumber: ").append(toIndentedString(dhlDutyAccountNumber)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    exemptShippingHandlingCharge: ").append(toIndentedString(exemptShippingHandlingCharge)).append("\n");
    sb.append("    fedexAccountNumber: ").append(toIndentedString(fedexAccountNumber)).append("\n");
    sb.append("    freeShipping: ").append(toIndentedString(freeShipping)).append("\n");
    sb.append("    freeShippingMinimum: ").append(toIndentedString(freeShippingMinimum)).append("\n");
    sb.append("    lastModifiedBy: ").append(toIndentedString(lastModifiedBy)).append("\n");
    sb.append("    lastModifiedDts: ").append(toIndentedString(lastModifiedDts)).append("\n");
    sb.append("    loyalty: ").append(toIndentedString(loyalty)).append("\n");
    sb.append("    maximumItemCount: ").append(toIndentedString(maximumItemCount)).append("\n");
    sb.append("    minimumItemCount: ").append(toIndentedString(minimumItemCount)).append("\n");
    sb.append("    minimumSubtotal: ").append(toIndentedString(minimumSubtotal)).append("\n");
    sb.append("    noCoupons: ").append(toIndentedString(noCoupons)).append("\n");
    sb.append("    noFreeShipping: ").append(toIndentedString(noFreeShipping)).append("\n");
    sb.append("    noRealtimeCharge: ").append(toIndentedString(noRealtimeCharge)).append("\n");
    sb.append("    orders: ").append(toIndentedString(orders)).append("\n");
    sb.append("    ordersSummary: ").append(toIndentedString(ordersSummary)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    pricingTiers: ").append(toIndentedString(pricingTiers)).append("\n");
    sb.append("    privacy: ").append(toIndentedString(privacy)).append("\n");
    sb.append("    qbClass: ").append(toIndentedString(qbClass)).append("\n");
    sb.append("    qbCode: ").append(toIndentedString(qbCode)).append("\n");
    sb.append("    quotes: ").append(toIndentedString(quotes)).append("\n");
    sb.append("    quotesSummary: ").append(toIndentedString(quotesSummary)).append("\n");
    sb.append("    referralSource: ").append(toIndentedString(referralSource)).append("\n");
    sb.append("    reviewer: ").append(toIndentedString(reviewer)).append("\n");
    sb.append("    salesRepCode: ").append(toIndentedString(salesRepCode)).append("\n");
    sb.append("    sendSignupNotification: ").append(toIndentedString(sendSignupNotification)).append("\n");
    sb.append("    shipping: ").append(toIndentedString(shipping)).append("\n");
    sb.append("    signupDts: ").append(toIndentedString(signupDts)).append("\n");
    sb.append("    softwareEntitlements: ").append(toIndentedString(softwareEntitlements)).append("\n");
    sb.append("    suppressBuysafe: ").append(toIndentedString(suppressBuysafe)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    taxCodes: ").append(toIndentedString(taxCodes)).append("\n");
    sb.append("    taxExempt: ").append(toIndentedString(taxExempt)).append("\n");
    sb.append("    taxId: ").append(toIndentedString(taxId)).append("\n");
    sb.append("    terms: ").append(toIndentedString(terms)).append("\n");
    sb.append("    trackSeparately: ").append(toIndentedString(trackSeparately)).append("\n");
    sb.append("    unapproved: ").append(toIndentedString(unapproved)).append("\n");
    sb.append("    upsAccountNumber: ").append(toIndentedString(upsAccountNumber)).append("\n");
    sb.append("    websiteUrl: ").append(toIndentedString(websiteUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("activity");
    openapiFields.add("affiliate_oid");
    openapiFields.add("allow_3rd_party_billing");
    openapiFields.add("allow_cod");
    openapiFields.add("allow_drop_shipping");
    openapiFields.add("allow_purchase_order");
    openapiFields.add("allow_quote_request");
    openapiFields.add("allow_selection_of_address_type");
    openapiFields.add("attachments");
    openapiFields.add("auto_approve_cod");
    openapiFields.add("auto_approve_purchase_order");
    openapiFields.add("automatic_merchant_notes");
    openapiFields.add("billing");
    openapiFields.add("business_notes");
    openapiFields.add("cards");
    openapiFields.add("cc_emails");
    openapiFields.add("customer_profile_oid");
    openapiFields.add("dhl_account_number");
    openapiFields.add("dhl_duty_account_number");
    openapiFields.add("email");
    openapiFields.add("exempt_shipping_handling_charge");
    openapiFields.add("fedex_account_number");
    openapiFields.add("free_shipping");
    openapiFields.add("free_shipping_minimum");
    openapiFields.add("last_modified_by");
    openapiFields.add("last_modified_dts");
    openapiFields.add("loyalty");
    openapiFields.add("maximum_item_count");
    openapiFields.add("minimum_item_count");
    openapiFields.add("minimum_subtotal");
    openapiFields.add("no_coupons");
    openapiFields.add("no_free_shipping");
    openapiFields.add("no_realtime_charge");
    openapiFields.add("orders");
    openapiFields.add("orders_summary");
    openapiFields.add("password");
    openapiFields.add("pricing_tiers");
    openapiFields.add("privacy");
    openapiFields.add("qb_class");
    openapiFields.add("qb_code");
    openapiFields.add("quotes");
    openapiFields.add("quotes_summary");
    openapiFields.add("referral_source");
    openapiFields.add("reviewer");
    openapiFields.add("sales_rep_code");
    openapiFields.add("send_signup_notification");
    openapiFields.add("shipping");
    openapiFields.add("signup_dts");
    openapiFields.add("software_entitlements");
    openapiFields.add("suppress_buysafe");
    openapiFields.add("tags");
    openapiFields.add("tax_codes");
    openapiFields.add("tax_exempt");
    openapiFields.add("tax_id");
    openapiFields.add("terms");
    openapiFields.add("track_separately");
    openapiFields.add("unapproved");
    openapiFields.add("ups_account_number");
    openapiFields.add("website_url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to Customer
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (Customer.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in Customer is not found in the empty JSON string", Customer.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!Customer.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Customer` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      // validate the optional field `activity`
      if (jsonObj.getAsJsonObject("activity") != null) {
        CustomerActivity.validateJsonObject(jsonObj.getAsJsonObject("activity"));
      }
      JsonArray jsonArrayattachments = jsonObj.getAsJsonArray("attachments");
      if (jsonArrayattachments != null) {
        // ensure the json data is an array
        if (!jsonObj.get("attachments").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `attachments` to be an array in the JSON string but got `%s`", jsonObj.get("attachments").toString()));
        }

        // validate the optional field `attachments` (array)
        for (int i = 0; i < jsonArrayattachments.size(); i++) {
          CustomerAttachment.validateJsonObject(jsonArrayattachments.get(i).getAsJsonObject());
        };
      }
      if (jsonObj.get("automatic_merchant_notes") != null && !jsonObj.get("automatic_merchant_notes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `automatic_merchant_notes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("automatic_merchant_notes").toString()));
      }
      JsonArray jsonArraybilling = jsonObj.getAsJsonArray("billing");
      if (jsonArraybilling != null) {
        // ensure the json data is an array
        if (!jsonObj.get("billing").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `billing` to be an array in the JSON string but got `%s`", jsonObj.get("billing").toString()));
        }

        // validate the optional field `billing` (array)
        for (int i = 0; i < jsonArraybilling.size(); i++) {
          CustomerBilling.validateJsonObject(jsonArraybilling.get(i).getAsJsonObject());
        };
      }
      if (jsonObj.get("business_notes") != null && !jsonObj.get("business_notes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `business_notes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("business_notes").toString()));
      }
      JsonArray jsonArraycards = jsonObj.getAsJsonArray("cards");
      if (jsonArraycards != null) {
        // ensure the json data is an array
        if (!jsonObj.get("cards").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `cards` to be an array in the JSON string but got `%s`", jsonObj.get("cards").toString()));
        }

        // validate the optional field `cards` (array)
        for (int i = 0; i < jsonArraycards.size(); i++) {
          CustomerCard.validateJsonObject(jsonArraycards.get(i).getAsJsonObject());
        };
      }
      JsonArray jsonArrayccEmails = jsonObj.getAsJsonArray("cc_emails");
      if (jsonArrayccEmails != null) {
        // ensure the json data is an array
        if (!jsonObj.get("cc_emails").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `cc_emails` to be an array in the JSON string but got `%s`", jsonObj.get("cc_emails").toString()));
        }

        // validate the optional field `cc_emails` (array)
        for (int i = 0; i < jsonArrayccEmails.size(); i++) {
          CustomerEmail.validateJsonObject(jsonArrayccEmails.get(i).getAsJsonObject());
        };
      }
      if (jsonObj.get("dhl_account_number") != null && !jsonObj.get("dhl_account_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dhl_account_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dhl_account_number").toString()));
      }
      if (jsonObj.get("dhl_duty_account_number") != null && !jsonObj.get("dhl_duty_account_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dhl_duty_account_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dhl_duty_account_number").toString()));
      }
      if (jsonObj.get("email") != null && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if (jsonObj.get("fedex_account_number") != null && !jsonObj.get("fedex_account_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fedex_account_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fedex_account_number").toString()));
      }
      if (jsonObj.get("last_modified_by") != null && !jsonObj.get("last_modified_by").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_modified_by` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_modified_by").toString()));
      }
      if (jsonObj.get("last_modified_dts") != null && !jsonObj.get("last_modified_dts").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_modified_dts` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_modified_dts").toString()));
      }
      // validate the optional field `loyalty`
      if (jsonObj.getAsJsonObject("loyalty") != null) {
        CustomerLoyalty.validateJsonObject(jsonObj.getAsJsonObject("loyalty"));
      }
      JsonArray jsonArrayorders = jsonObj.getAsJsonArray("orders");
      if (jsonArrayorders != null) {
        // ensure the json data is an array
        if (!jsonObj.get("orders").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `orders` to be an array in the JSON string but got `%s`", jsonObj.get("orders").toString()));
        }

        // validate the optional field `orders` (array)
        for (int i = 0; i < jsonArrayorders.size(); i++) {
          Order.validateJsonObject(jsonArrayorders.get(i).getAsJsonObject());
        };
      }
      // validate the optional field `orders_summary`
      if (jsonObj.getAsJsonObject("orders_summary") != null) {
        CustomerOrdersSummary.validateJsonObject(jsonObj.getAsJsonObject("orders_summary"));
      }
      if (jsonObj.get("password") != null && !jsonObj.get("password").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `password` to be a primitive type in the JSON string but got `%s`", jsonObj.get("password").toString()));
      }
      JsonArray jsonArraypricingTiers = jsonObj.getAsJsonArray("pricing_tiers");
      if (jsonArraypricingTiers != null) {
        // ensure the json data is an array
        if (!jsonObj.get("pricing_tiers").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `pricing_tiers` to be an array in the JSON string but got `%s`", jsonObj.get("pricing_tiers").toString()));
        }

        // validate the optional field `pricing_tiers` (array)
        for (int i = 0; i < jsonArraypricingTiers.size(); i++) {
          CustomerPricingTier.validateJsonObject(jsonArraypricingTiers.get(i).getAsJsonObject());
        };
      }
      // validate the optional field `privacy`
      if (jsonObj.getAsJsonObject("privacy") != null) {
        CustomerPrivacy.validateJsonObject(jsonObj.getAsJsonObject("privacy"));
      }
      if (jsonObj.get("qb_class") != null && !jsonObj.get("qb_class").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `qb_class` to be a primitive type in the JSON string but got `%s`", jsonObj.get("qb_class").toString()));
      }
      if (jsonObj.get("qb_code") != null && !jsonObj.get("qb_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `qb_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("qb_code").toString()));
      }
      JsonArray jsonArrayquotes = jsonObj.getAsJsonArray("quotes");
      if (jsonArrayquotes != null) {
        // ensure the json data is an array
        if (!jsonObj.get("quotes").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `quotes` to be an array in the JSON string but got `%s`", jsonObj.get("quotes").toString()));
        }

        // validate the optional field `quotes` (array)
        for (int i = 0; i < jsonArrayquotes.size(); i++) {
          Order.validateJsonObject(jsonArrayquotes.get(i).getAsJsonObject());
        };
      }
      // validate the optional field `quotes_summary`
      if (jsonObj.getAsJsonObject("quotes_summary") != null) {
        CustomerQuotesSummary.validateJsonObject(jsonObj.getAsJsonObject("quotes_summary"));
      }
      if (jsonObj.get("referral_source") != null && !jsonObj.get("referral_source").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `referral_source` to be a primitive type in the JSON string but got `%s`", jsonObj.get("referral_source").toString()));
      }
      // validate the optional field `reviewer`
      if (jsonObj.getAsJsonObject("reviewer") != null) {
        CustomerReviewer.validateJsonObject(jsonObj.getAsJsonObject("reviewer"));
      }
      if (jsonObj.get("sales_rep_code") != null && !jsonObj.get("sales_rep_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sales_rep_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sales_rep_code").toString()));
      }
      JsonArray jsonArrayshipping = jsonObj.getAsJsonArray("shipping");
      if (jsonArrayshipping != null) {
        // ensure the json data is an array
        if (!jsonObj.get("shipping").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `shipping` to be an array in the JSON string but got `%s`", jsonObj.get("shipping").toString()));
        }

        // validate the optional field `shipping` (array)
        for (int i = 0; i < jsonArrayshipping.size(); i++) {
          CustomerShipping.validateJsonObject(jsonArrayshipping.get(i).getAsJsonObject());
        };
      }
      if (jsonObj.get("signup_dts") != null && !jsonObj.get("signup_dts").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `signup_dts` to be a primitive type in the JSON string but got `%s`", jsonObj.get("signup_dts").toString()));
      }
      JsonArray jsonArraysoftwareEntitlements = jsonObj.getAsJsonArray("software_entitlements");
      if (jsonArraysoftwareEntitlements != null) {
        // ensure the json data is an array
        if (!jsonObj.get("software_entitlements").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `software_entitlements` to be an array in the JSON string but got `%s`", jsonObj.get("software_entitlements").toString()));
        }

        // validate the optional field `software_entitlements` (array)
        for (int i = 0; i < jsonArraysoftwareEntitlements.size(); i++) {
          CustomerSoftwareEntitlement.validateJsonObject(jsonArraysoftwareEntitlements.get(i).getAsJsonObject());
        };
      }
      JsonArray jsonArraytags = jsonObj.getAsJsonArray("tags");
      if (jsonArraytags != null) {
        // ensure the json data is an array
        if (!jsonObj.get("tags").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `tags` to be an array in the JSON string but got `%s`", jsonObj.get("tags").toString()));
        }

        // validate the optional field `tags` (array)
        for (int i = 0; i < jsonArraytags.size(); i++) {
          CustomerTag.validateJsonObject(jsonArraytags.get(i).getAsJsonObject());
        };
      }
      // validate the optional field `tax_codes`
      if (jsonObj.getAsJsonObject("tax_codes") != null) {
        CustomerTaxCodes.validateJsonObject(jsonObj.getAsJsonObject("tax_codes"));
      }
      if (jsonObj.get("tax_id") != null && !jsonObj.get("tax_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tax_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tax_id").toString()));
      }
      if (jsonObj.get("terms") != null && !jsonObj.get("terms").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `terms` to be a primitive type in the JSON string but got `%s`", jsonObj.get("terms").toString()));
      }
      if (jsonObj.get("ups_account_number") != null && !jsonObj.get("ups_account_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ups_account_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ups_account_number").toString()));
      }
      if (jsonObj.get("website_url") != null && !jsonObj.get("website_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `website_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("website_url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Customer.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Customer' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Customer> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Customer.class));

       return (TypeAdapter<T>) new TypeAdapter<Customer>() {
           @Override
           public void write(JsonWriter out, Customer value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Customer read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of Customer given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of Customer
  * @throws IOException if the JSON string is invalid with respect to Customer
  */
  public static Customer fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Customer.class);
  }

 /**
  * Convert an instance of Customer to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

