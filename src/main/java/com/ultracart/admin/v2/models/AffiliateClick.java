/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.AffiliateLink;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * AffiliateClick
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-21T12:08:57.583-05:00[America/Indianapolis]")
public class AffiliateClick {
  public static final String SERIALIZED_NAME_AFFILIATE_CLICK_OID = "affiliate_click_oid";
  @SerializedName(SERIALIZED_NAME_AFFILIATE_CLICK_OID)
  private Integer affiliateClickOid;

  public static final String SERIALIZED_NAME_AFFILIATE_LINK_OID = "affiliate_link_oid";
  @SerializedName(SERIALIZED_NAME_AFFILIATE_LINK_OID)
  private Integer affiliateLinkOid;

  public static final String SERIALIZED_NAME_AFFILIATE_OID = "affiliate_oid";
  @SerializedName(SERIALIZED_NAME_AFFILIATE_OID)
  private Integer affiliateOid;

  public static final String SERIALIZED_NAME_CLICK_DTS = "click_dts";
  @SerializedName(SERIALIZED_NAME_CLICK_DTS)
  private String clickDts;

  public static final String SERIALIZED_NAME_IP_ADDRESS = "ip_address";
  @SerializedName(SERIALIZED_NAME_IP_ADDRESS)
  private String ipAddress;

  public static final String SERIALIZED_NAME_LANDING_PAGE = "landing_page";
  @SerializedName(SERIALIZED_NAME_LANDING_PAGE)
  private String landingPage;

  public static final String SERIALIZED_NAME_LANDING_PAGE_QUERY_STRING = "landing_page_query_string";
  @SerializedName(SERIALIZED_NAME_LANDING_PAGE_QUERY_STRING)
  private String landingPageQueryString;

  public static final String SERIALIZED_NAME_LINK = "link";
  @SerializedName(SERIALIZED_NAME_LINK)
  private AffiliateLink link;

  public static final String SERIALIZED_NAME_REFERRER = "referrer";
  @SerializedName(SERIALIZED_NAME_REFERRER)
  private String referrer;

  public static final String SERIALIZED_NAME_REFERRER_QUERY_STRING = "referrer_query_string";
  @SerializedName(SERIALIZED_NAME_REFERRER_QUERY_STRING)
  private String referrerQueryString;

  public static final String SERIALIZED_NAME_SCREEN_RECORDING_UUID = "screen_recording_uuid";
  @SerializedName(SERIALIZED_NAME_SCREEN_RECORDING_UUID)
  private String screenRecordingUuid;

  public static final String SERIALIZED_NAME_SUB_ID = "sub_id";
  @SerializedName(SERIALIZED_NAME_SUB_ID)
  private String subId;

  public static final String SERIALIZED_NAME_UCACID = "ucacid";
  @SerializedName(SERIALIZED_NAME_UCACID)
  private String ucacid;

  public AffiliateClick() { 
  }

  public AffiliateClick affiliateClickOid(Integer affiliateClickOid) {
    
    this.affiliateClickOid = affiliateClickOid;
    return this;
  }

   /**
   * Unique object identifier for this click
   * @return affiliateClickOid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unique object identifier for this click")

  public Integer getAffiliateClickOid() {
    return affiliateClickOid;
  }


  public void setAffiliateClickOid(Integer affiliateClickOid) {
    this.affiliateClickOid = affiliateClickOid;
  }


  public AffiliateClick affiliateLinkOid(Integer affiliateLinkOid) {
    
    this.affiliateLinkOid = affiliateLinkOid;
    return this;
  }

   /**
   * Unique object identifier for for the link that this click is associated with
   * @return affiliateLinkOid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unique object identifier for for the link that this click is associated with")

  public Integer getAffiliateLinkOid() {
    return affiliateLinkOid;
  }


  public void setAffiliateLinkOid(Integer affiliateLinkOid) {
    this.affiliateLinkOid = affiliateLinkOid;
  }


  public AffiliateClick affiliateOid(Integer affiliateOid) {
    
    this.affiliateOid = affiliateOid;
    return this;
  }

   /**
   * Affiliate object ID associated with this click
   * @return affiliateOid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Affiliate object ID associated with this click")

  public Integer getAffiliateOid() {
    return affiliateOid;
  }


  public void setAffiliateOid(Integer affiliateOid) {
    this.affiliateOid = affiliateOid;
  }


  public AffiliateClick clickDts(String clickDts) {
    
    this.clickDts = clickDts;
    return this;
  }

   /**
   * Date/time that the click was made
   * @return clickDts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Date/time that the click was made")

  public String getClickDts() {
    return clickDts;
  }


  public void setClickDts(String clickDts) {
    this.clickDts = clickDts;
  }


  public AffiliateClick ipAddress(String ipAddress) {
    
    this.ipAddress = ipAddress;
    return this;
  }

   /**
   * IP address that generated the click
   * @return ipAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "IP address that generated the click")

  public String getIpAddress() {
    return ipAddress;
  }


  public void setIpAddress(String ipAddress) {
    this.ipAddress = ipAddress;
  }


  public AffiliateClick landingPage(String landingPage) {
    
    this.landingPage = landingPage;
    return this;
  }

   /**
   * URL of the landing page the customer was sent to.
   * @return landingPage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "URL of the landing page the customer was sent to.")

  public String getLandingPage() {
    return landingPage;
  }


  public void setLandingPage(String landingPage) {
    this.landingPage = landingPage;
  }


  public AffiliateClick landingPageQueryString(String landingPageQueryString) {
    
    this.landingPageQueryString = landingPageQueryString;
    return this;
  }

   /**
   * Query string on the landing page URL the customer was sent to.
   * @return landingPageQueryString
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Query string on the landing page URL the customer was sent to.")

  public String getLandingPageQueryString() {
    return landingPageQueryString;
  }


  public void setLandingPageQueryString(String landingPageQueryString) {
    this.landingPageQueryString = landingPageQueryString;
  }


  public AffiliateClick link(AffiliateLink link) {
    
    this.link = link;
    return this;
  }

   /**
   * Get link
   * @return link
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AffiliateLink getLink() {
    return link;
  }


  public void setLink(AffiliateLink link) {
    this.link = link;
  }


  public AffiliateClick referrer(String referrer) {
    
    this.referrer = referrer;
    return this;
  }

   /**
   * URL that referred the click (Browser Header Referer)
   * @return referrer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "URL that referred the click (Browser Header Referer)")

  public String getReferrer() {
    return referrer;
  }


  public void setReferrer(String referrer) {
    this.referrer = referrer;
  }


  public AffiliateClick referrerQueryString(String referrerQueryString) {
    
    this.referrerQueryString = referrerQueryString;
    return this;
  }

   /**
   * Query string that was on the referrer URL.
   * @return referrerQueryString
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Query string that was on the referrer URL.")

  public String getReferrerQueryString() {
    return referrerQueryString;
  }


  public void setReferrerQueryString(String referrerQueryString) {
    this.referrerQueryString = referrerQueryString;
  }


  public AffiliateClick screenRecordingUuid(String screenRecordingUuid) {
    
    this.screenRecordingUuid = screenRecordingUuid;
    return this;
  }

   /**
   * Screen recording UUID
   * @return screenRecordingUuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Screen recording UUID")

  public String getScreenRecordingUuid() {
    return screenRecordingUuid;
  }


  public void setScreenRecordingUuid(String screenRecordingUuid) {
    this.screenRecordingUuid = screenRecordingUuid;
  }


  public AffiliateClick subId(String subId) {
    
    this.subId = subId;
    return this;
  }

   /**
   * Sub ID value passed on the click
   * @return subId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Sub ID value passed on the click")

  public String getSubId() {
    return subId;
  }


  public void setSubId(String subId) {
    this.subId = subId;
  }


  public AffiliateClick ucacid(String ucacid) {
    
    this.ucacid = ucacid;
    return this;
  }

   /**
   * UC Analytics Identifier
   * @return ucacid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "UC Analytics Identifier")

  public String getUcacid() {
    return ucacid;
  }


  public void setUcacid(String ucacid) {
    this.ucacid = ucacid;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AffiliateClick affiliateClick = (AffiliateClick) o;
    return Objects.equals(this.affiliateClickOid, affiliateClick.affiliateClickOid) &&
        Objects.equals(this.affiliateLinkOid, affiliateClick.affiliateLinkOid) &&
        Objects.equals(this.affiliateOid, affiliateClick.affiliateOid) &&
        Objects.equals(this.clickDts, affiliateClick.clickDts) &&
        Objects.equals(this.ipAddress, affiliateClick.ipAddress) &&
        Objects.equals(this.landingPage, affiliateClick.landingPage) &&
        Objects.equals(this.landingPageQueryString, affiliateClick.landingPageQueryString) &&
        Objects.equals(this.link, affiliateClick.link) &&
        Objects.equals(this.referrer, affiliateClick.referrer) &&
        Objects.equals(this.referrerQueryString, affiliateClick.referrerQueryString) &&
        Objects.equals(this.screenRecordingUuid, affiliateClick.screenRecordingUuid) &&
        Objects.equals(this.subId, affiliateClick.subId) &&
        Objects.equals(this.ucacid, affiliateClick.ucacid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(affiliateClickOid, affiliateLinkOid, affiliateOid, clickDts, ipAddress, landingPage, landingPageQueryString, link, referrer, referrerQueryString, screenRecordingUuid, subId, ucacid);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AffiliateClick {\n");
    sb.append("    affiliateClickOid: ").append(toIndentedString(affiliateClickOid)).append("\n");
    sb.append("    affiliateLinkOid: ").append(toIndentedString(affiliateLinkOid)).append("\n");
    sb.append("    affiliateOid: ").append(toIndentedString(affiliateOid)).append("\n");
    sb.append("    clickDts: ").append(toIndentedString(clickDts)).append("\n");
    sb.append("    ipAddress: ").append(toIndentedString(ipAddress)).append("\n");
    sb.append("    landingPage: ").append(toIndentedString(landingPage)).append("\n");
    sb.append("    landingPageQueryString: ").append(toIndentedString(landingPageQueryString)).append("\n");
    sb.append("    link: ").append(toIndentedString(link)).append("\n");
    sb.append("    referrer: ").append(toIndentedString(referrer)).append("\n");
    sb.append("    referrerQueryString: ").append(toIndentedString(referrerQueryString)).append("\n");
    sb.append("    screenRecordingUuid: ").append(toIndentedString(screenRecordingUuid)).append("\n");
    sb.append("    subId: ").append(toIndentedString(subId)).append("\n");
    sb.append("    ucacid: ").append(toIndentedString(ucacid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("affiliate_click_oid");
    openapiFields.add("affiliate_link_oid");
    openapiFields.add("affiliate_oid");
    openapiFields.add("click_dts");
    openapiFields.add("ip_address");
    openapiFields.add("landing_page");
    openapiFields.add("landing_page_query_string");
    openapiFields.add("link");
    openapiFields.add("referrer");
    openapiFields.add("referrer_query_string");
    openapiFields.add("screen_recording_uuid");
    openapiFields.add("sub_id");
    openapiFields.add("ucacid");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to AffiliateClick
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (AffiliateClick.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in AffiliateClick is not found in the empty JSON string", AffiliateClick.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!AffiliateClick.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AffiliateClick` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("click_dts") != null && !jsonObj.get("click_dts").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `click_dts` to be a primitive type in the JSON string but got `%s`", jsonObj.get("click_dts").toString()));
      }
      if (jsonObj.get("ip_address") != null && !jsonObj.get("ip_address").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ip_address` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ip_address").toString()));
      }
      if (jsonObj.get("landing_page") != null && !jsonObj.get("landing_page").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `landing_page` to be a primitive type in the JSON string but got `%s`", jsonObj.get("landing_page").toString()));
      }
      if (jsonObj.get("landing_page_query_string") != null && !jsonObj.get("landing_page_query_string").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `landing_page_query_string` to be a primitive type in the JSON string but got `%s`", jsonObj.get("landing_page_query_string").toString()));
      }
      // validate the optional field `link`
      if (jsonObj.getAsJsonObject("link") != null) {
        AffiliateLink.validateJsonObject(jsonObj.getAsJsonObject("link"));
      }
      if (jsonObj.get("referrer") != null && !jsonObj.get("referrer").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `referrer` to be a primitive type in the JSON string but got `%s`", jsonObj.get("referrer").toString()));
      }
      if (jsonObj.get("referrer_query_string") != null && !jsonObj.get("referrer_query_string").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `referrer_query_string` to be a primitive type in the JSON string but got `%s`", jsonObj.get("referrer_query_string").toString()));
      }
      if (jsonObj.get("screen_recording_uuid") != null && !jsonObj.get("screen_recording_uuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `screen_recording_uuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("screen_recording_uuid").toString()));
      }
      if (jsonObj.get("sub_id") != null && !jsonObj.get("sub_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sub_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sub_id").toString()));
      }
      if (jsonObj.get("ucacid") != null && !jsonObj.get("ucacid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ucacid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ucacid").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AffiliateClick.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AffiliateClick' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AffiliateClick> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AffiliateClick.class));

       return (TypeAdapter<T>) new TypeAdapter<AffiliateClick>() {
           @Override
           public void write(JsonWriter out, AffiliateClick value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AffiliateClick read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AffiliateClick given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AffiliateClick
  * @throws IOException if the JSON string is invalid with respect to AffiliateClick
  */
  public static AffiliateClick fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AffiliateClick.class);
  }

 /**
  * Convert an instance of AffiliateClick to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

