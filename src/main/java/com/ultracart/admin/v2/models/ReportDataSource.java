/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.ReportDataSourceSchema;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * ReportDataSource
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2025-05-19T13:07:33.024-04:00")



public class ReportDataSource {
  @SerializedName("data_source_uuid")
  private String dataSourceUuid = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("partition_date_column")
  private String partitionDateColumn = null;

  @SerializedName("partition_date_safety_days")
  private Integer partitionDateSafetyDays = null;

  @SerializedName("partition_date_strategy")
  private String partitionDateStrategy = null;

  @SerializedName("schema")
  private List<ReportDataSourceSchema> schema = null;

  @SerializedName("sql")
  private String sql = null;

  public ReportDataSource dataSourceUuid(String dataSourceUuid) {
    this.dataSourceUuid = dataSourceUuid;
    return this;
  }

   /**
   * A unique identifier assigned to the data source.
   * @return dataSourceUuid
  **/
  @ApiModelProperty(value = "A unique identifier assigned to the data source.")
  public String getDataSourceUuid() {
    return dataSourceUuid;
  }

  public void setDataSourceUuid(String dataSourceUuid) {
    this.dataSourceUuid = dataSourceUuid;
  }

  public ReportDataSource name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ReportDataSource partitionDateColumn(String partitionDateColumn) {
    this.partitionDateColumn = partitionDateColumn;
    return this;
  }

   /**
   * Get partitionDateColumn
   * @return partitionDateColumn
  **/
  @ApiModelProperty(value = "")
  public String getPartitionDateColumn() {
    return partitionDateColumn;
  }

  public void setPartitionDateColumn(String partitionDateColumn) {
    this.partitionDateColumn = partitionDateColumn;
  }

  public ReportDataSource partitionDateSafetyDays(Integer partitionDateSafetyDays) {
    this.partitionDateSafetyDays = partitionDateSafetyDays;
    return this;
  }

   /**
   * Get partitionDateSafetyDays
   * @return partitionDateSafetyDays
  **/
  @ApiModelProperty(value = "")
  public Integer getPartitionDateSafetyDays() {
    return partitionDateSafetyDays;
  }

  public void setPartitionDateSafetyDays(Integer partitionDateSafetyDays) {
    this.partitionDateSafetyDays = partitionDateSafetyDays;
  }

  public ReportDataSource partitionDateStrategy(String partitionDateStrategy) {
    this.partitionDateStrategy = partitionDateStrategy;
    return this;
  }

   /**
   * The partition date strategy, defaults to weekly sunday
   * @return partitionDateStrategy
  **/
  @ApiModelProperty(value = "The partition date strategy, defaults to weekly sunday")
  public String getPartitionDateStrategy() {
    return partitionDateStrategy;
  }

  public void setPartitionDateStrategy(String partitionDateStrategy) {
    this.partitionDateStrategy = partitionDateStrategy;
  }

  public ReportDataSource schema(List<ReportDataSourceSchema> schema) {
    this.schema = schema;
    return this;
  }

  public ReportDataSource addSchemaItem(ReportDataSourceSchema schemaItem) {
    if (this.schema == null) {
      this.schema = new ArrayList<ReportDataSourceSchema>();
    }
    this.schema.add(schemaItem);
    return this;
  }

   /**
   * Get schema
   * @return schema
  **/
  @ApiModelProperty(value = "")
  public List<ReportDataSourceSchema> getSchema() {
    return schema;
  }

  public void setSchema(List<ReportDataSourceSchema> schema) {
    this.schema = schema;
  }

  public ReportDataSource sql(String sql) {
    this.sql = sql;
    return this;
  }

   /**
   * Get sql
   * @return sql
  **/
  @ApiModelProperty(value = "")
  public String getSql() {
    return sql;
  }

  public void setSql(String sql) {
    this.sql = sql;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReportDataSource reportDataSource = (ReportDataSource) o;
    return Objects.equals(this.dataSourceUuid, reportDataSource.dataSourceUuid) &&
        Objects.equals(this.name, reportDataSource.name) &&
        Objects.equals(this.partitionDateColumn, reportDataSource.partitionDateColumn) &&
        Objects.equals(this.partitionDateSafetyDays, reportDataSource.partitionDateSafetyDays) &&
        Objects.equals(this.partitionDateStrategy, reportDataSource.partitionDateStrategy) &&
        Objects.equals(this.schema, reportDataSource.schema) &&
        Objects.equals(this.sql, reportDataSource.sql);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dataSourceUuid, name, partitionDateColumn, partitionDateSafetyDays, partitionDateStrategy, schema, sql);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReportDataSource {\n");
    
    sb.append("    dataSourceUuid: ").append(toIndentedString(dataSourceUuid)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    partitionDateColumn: ").append(toIndentedString(partitionDateColumn)).append("\n");
    sb.append("    partitionDateSafetyDays: ").append(toIndentedString(partitionDateSafetyDays)).append("\n");
    sb.append("    partitionDateStrategy: ").append(toIndentedString(partitionDateStrategy)).append("\n");
    sb.append("    schema: ").append(toIndentedString(schema)).append("\n");
    sb.append("    sql: ").append(toIndentedString(sql)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

