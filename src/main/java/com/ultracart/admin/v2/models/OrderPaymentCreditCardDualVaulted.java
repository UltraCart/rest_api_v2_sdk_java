/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.OrderPaymentCreditCardDualVaultedProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * OrderPaymentCreditCardDualVaulted
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2025-02-20T10:21:58.649-05:00")



public class OrderPaymentCreditCardDualVaulted {
  @SerializedName("gateway_name")
  private String gatewayName = null;

  @SerializedName("properties")
  private List<OrderPaymentCreditCardDualVaultedProperty> properties = null;

  @SerializedName("rotating_transaction_gateway_code")
  private String rotatingTransactionGatewayCode = null;

  public OrderPaymentCreditCardDualVaulted gatewayName(String gatewayName) {
    this.gatewayName = gatewayName;
    return this;
  }

   /**
   * Get gatewayName
   * @return gatewayName
  **/
  @ApiModelProperty(value = "")
  public String getGatewayName() {
    return gatewayName;
  }

  public void setGatewayName(String gatewayName) {
    this.gatewayName = gatewayName;
  }

  public OrderPaymentCreditCardDualVaulted properties(List<OrderPaymentCreditCardDualVaultedProperty> properties) {
    this.properties = properties;
    return this;
  }

  public OrderPaymentCreditCardDualVaulted addPropertiesItem(OrderPaymentCreditCardDualVaultedProperty propertiesItem) {
    if (this.properties == null) {
      this.properties = new ArrayList<OrderPaymentCreditCardDualVaultedProperty>();
    }
    this.properties.add(propertiesItem);
    return this;
  }

   /**
   * Get properties
   * @return properties
  **/
  @ApiModelProperty(value = "")
  public List<OrderPaymentCreditCardDualVaultedProperty> getProperties() {
    return properties;
  }

  public void setProperties(List<OrderPaymentCreditCardDualVaultedProperty> properties) {
    this.properties = properties;
  }

  public OrderPaymentCreditCardDualVaulted rotatingTransactionGatewayCode(String rotatingTransactionGatewayCode) {
    this.rotatingTransactionGatewayCode = rotatingTransactionGatewayCode;
    return this;
  }

   /**
   * Get rotatingTransactionGatewayCode
   * @return rotatingTransactionGatewayCode
  **/
  @ApiModelProperty(value = "")
  public String getRotatingTransactionGatewayCode() {
    return rotatingTransactionGatewayCode;
  }

  public void setRotatingTransactionGatewayCode(String rotatingTransactionGatewayCode) {
    this.rotatingTransactionGatewayCode = rotatingTransactionGatewayCode;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderPaymentCreditCardDualVaulted orderPaymentCreditCardDualVaulted = (OrderPaymentCreditCardDualVaulted) o;
    return Objects.equals(this.gatewayName, orderPaymentCreditCardDualVaulted.gatewayName) &&
        Objects.equals(this.properties, orderPaymentCreditCardDualVaulted.properties) &&
        Objects.equals(this.rotatingTransactionGatewayCode, orderPaymentCreditCardDualVaulted.rotatingTransactionGatewayCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(gatewayName, properties, rotatingTransactionGatewayCode);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderPaymentCreditCardDualVaulted {\n");
    
    sb.append("    gatewayName: ").append(toIndentedString(gatewayName)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("    rotatingTransactionGatewayCode: ").append(toIndentedString(rotatingTransactionGatewayCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

