/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * CustomerStoreCreditLedgerEntry
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-10-31T14:14:26.056-04:00[America/Indianapolis]")
public class CustomerStoreCreditLedgerEntry {
  public static final String SERIALIZED_NAME_ACTION = "action";
  @SerializedName(SERIALIZED_NAME_ACTION)
  private String action;

  public static final String SERIALIZED_NAME_AMOUNT = "amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  private BigDecimal amount;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_ENTRY_DTS = "entry_dts";
  @SerializedName(SERIALIZED_NAME_ENTRY_DTS)
  private String entryDts;

  public static final String SERIALIZED_NAME_GIFT_CERTIFICATE_LEDGER_OID = "gift_certificate_ledger_oid";
  @SerializedName(SERIALIZED_NAME_GIFT_CERTIFICATE_LEDGER_OID)
  private Integer giftCertificateLedgerOid;

  public static final String SERIALIZED_NAME_GIFT_CERTIFICATE_OID = "gift_certificate_oid";
  @SerializedName(SERIALIZED_NAME_GIFT_CERTIFICATE_OID)
  private Integer giftCertificateOid;

  public static final String SERIALIZED_NAME_REFERENCE_ORDER_ID = "reference_order_id";
  @SerializedName(SERIALIZED_NAME_REFERENCE_ORDER_ID)
  private String referenceOrderId;

  public CustomerStoreCreditLedgerEntry() { 
  }

  public CustomerStoreCreditLedgerEntry action(String action) {
    
    this.action = action;
    return this;
  }

   /**
   * Identifies the state of this ledger entry whether the entry is Vesting or Expiring
   * @return action
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Identifies the state of this ledger entry whether the entry is Vesting or Expiring")

  public String getAction() {
    return action;
  }


  public void setAction(String action) {
    this.action = action;
  }


  public CustomerStoreCreditLedgerEntry amount(BigDecimal amount) {
    
    this.amount = amount;
    return this;
  }

   /**
   * The amount of the activity.
   * @return amount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The amount of the activity.")

  public BigDecimal getAmount() {
    return amount;
  }


  public void setAmount(BigDecimal amount) {
    this.amount = amount;
  }


  public CustomerStoreCreditLedgerEntry description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Description of what this ledger entry is used.
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Description of what this ledger entry is used.")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public CustomerStoreCreditLedgerEntry entryDts(String entryDts) {
    
    this.entryDts = entryDts;
    return this;
  }

   /**
   * Date time of this ledger activity.
   * @return entryDts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Date time of this ledger activity.")

  public String getEntryDts() {
    return entryDts;
  }


  public void setEntryDts(String entryDts) {
    this.entryDts = entryDts;
  }


  public CustomerStoreCreditLedgerEntry giftCertificateLedgerOid(Integer giftCertificateLedgerOid) {
    
    this.giftCertificateLedgerOid = giftCertificateLedgerOid;
    return this;
  }

   /**
   * Gift certificate ledger oid is a primary key for this object, used internally.
   * @return giftCertificateLedgerOid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Gift certificate ledger oid is a primary key for this object, used internally.")

  public Integer getGiftCertificateLedgerOid() {
    return giftCertificateLedgerOid;
  }


  public void setGiftCertificateLedgerOid(Integer giftCertificateLedgerOid) {
    this.giftCertificateLedgerOid = giftCertificateLedgerOid;
  }


  public CustomerStoreCreditLedgerEntry giftCertificateOid(Integer giftCertificateOid) {
    
    this.giftCertificateOid = giftCertificateOid;
    return this;
  }

   /**
   * Gift certificate oid.
   * @return giftCertificateOid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Gift certificate oid.")

  public Integer getGiftCertificateOid() {
    return giftCertificateOid;
  }


  public void setGiftCertificateOid(Integer giftCertificateOid) {
    this.giftCertificateOid = giftCertificateOid;
  }


  public CustomerStoreCreditLedgerEntry referenceOrderId(String referenceOrderId) {
    
    this.referenceOrderId = referenceOrderId;
    return this;
  }

   /**
   * The order id if this gift certificate was used as part of the payment.
   * @return referenceOrderId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The order id if this gift certificate was used as part of the payment.")

  public String getReferenceOrderId() {
    return referenceOrderId;
  }


  public void setReferenceOrderId(String referenceOrderId) {
    this.referenceOrderId = referenceOrderId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomerStoreCreditLedgerEntry customerStoreCreditLedgerEntry = (CustomerStoreCreditLedgerEntry) o;
    return Objects.equals(this.action, customerStoreCreditLedgerEntry.action) &&
        Objects.equals(this.amount, customerStoreCreditLedgerEntry.amount) &&
        Objects.equals(this.description, customerStoreCreditLedgerEntry.description) &&
        Objects.equals(this.entryDts, customerStoreCreditLedgerEntry.entryDts) &&
        Objects.equals(this.giftCertificateLedgerOid, customerStoreCreditLedgerEntry.giftCertificateLedgerOid) &&
        Objects.equals(this.giftCertificateOid, customerStoreCreditLedgerEntry.giftCertificateOid) &&
        Objects.equals(this.referenceOrderId, customerStoreCreditLedgerEntry.referenceOrderId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(action, amount, description, entryDts, giftCertificateLedgerOid, giftCertificateOid, referenceOrderId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomerStoreCreditLedgerEntry {\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    entryDts: ").append(toIndentedString(entryDts)).append("\n");
    sb.append("    giftCertificateLedgerOid: ").append(toIndentedString(giftCertificateLedgerOid)).append("\n");
    sb.append("    giftCertificateOid: ").append(toIndentedString(giftCertificateOid)).append("\n");
    sb.append("    referenceOrderId: ").append(toIndentedString(referenceOrderId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("action");
    openapiFields.add("amount");
    openapiFields.add("description");
    openapiFields.add("entry_dts");
    openapiFields.add("gift_certificate_ledger_oid");
    openapiFields.add("gift_certificate_oid");
    openapiFields.add("reference_order_id");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CustomerStoreCreditLedgerEntry
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (CustomerStoreCreditLedgerEntry.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in CustomerStoreCreditLedgerEntry is not found in the empty JSON string", CustomerStoreCreditLedgerEntry.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!CustomerStoreCreditLedgerEntry.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CustomerStoreCreditLedgerEntry` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("action") != null && !jsonObj.get("action").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `action` to be a primitive type in the JSON string but got `%s`", jsonObj.get("action").toString()));
      }
      if (jsonObj.get("description") != null && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if (jsonObj.get("entry_dts") != null && !jsonObj.get("entry_dts").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `entry_dts` to be a primitive type in the JSON string but got `%s`", jsonObj.get("entry_dts").toString()));
      }
      if (jsonObj.get("reference_order_id") != null && !jsonObj.get("reference_order_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reference_order_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reference_order_id").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CustomerStoreCreditLedgerEntry.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CustomerStoreCreditLedgerEntry' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CustomerStoreCreditLedgerEntry> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CustomerStoreCreditLedgerEntry.class));

       return (TypeAdapter<T>) new TypeAdapter<CustomerStoreCreditLedgerEntry>() {
           @Override
           public void write(JsonWriter out, CustomerStoreCreditLedgerEntry value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CustomerStoreCreditLedgerEntry read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CustomerStoreCreditLedgerEntry given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CustomerStoreCreditLedgerEntry
  * @throws IOException if the JSON string is invalid with respect to CustomerStoreCreditLedgerEntry
  */
  public static CustomerStoreCreditLedgerEntry fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CustomerStoreCreditLedgerEntry.class);
  }

 /**
  * Convert an instance of CustomerStoreCreditLedgerEntry to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

