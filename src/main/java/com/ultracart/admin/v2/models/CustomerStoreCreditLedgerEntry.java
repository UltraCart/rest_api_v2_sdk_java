/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * CustomerStoreCreditLedgerEntry
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-08-05T15:18:55.977-04:00")



public class CustomerStoreCreditLedgerEntry {
  @SerializedName("action")
  private String action = null;

  @SerializedName("amount")
  private BigDecimal amount = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("entry_dts")
  private String entryDts = null;

  @SerializedName("gift_certificate_ledger_oid")
  private Integer giftCertificateLedgerOid = null;

  @SerializedName("gift_certificate_oid")
  private Integer giftCertificateOid = null;

  @SerializedName("reference_order_id")
  private String referenceOrderId = null;

  public CustomerStoreCreditLedgerEntry action(String action) {
    this.action = action;
    return this;
  }

   /**
   * Identifies the state of this ledger entry whether the entry is Vesting or Expiring
   * @return action
  **/
  @ApiModelProperty(value = "Identifies the state of this ledger entry whether the entry is Vesting or Expiring")
  public String getAction() {
    return action;
  }

  public void setAction(String action) {
    this.action = action;
  }

  public CustomerStoreCreditLedgerEntry amount(BigDecimal amount) {
    this.amount = amount;
    return this;
  }

   /**
   * The amount of the activity.
   * @return amount
  **/
  @ApiModelProperty(value = "The amount of the activity.")
  public BigDecimal getAmount() {
    return amount;
  }

  public void setAmount(BigDecimal amount) {
    this.amount = amount;
  }

  public CustomerStoreCreditLedgerEntry description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Description of what this ledger entry is used.
   * @return description
  **/
  @ApiModelProperty(value = "Description of what this ledger entry is used.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public CustomerStoreCreditLedgerEntry entryDts(String entryDts) {
    this.entryDts = entryDts;
    return this;
  }

   /**
   * Date time of this ledger activity.
   * @return entryDts
  **/
  @ApiModelProperty(value = "Date time of this ledger activity.")
  public String getEntryDts() {
    return entryDts;
  }

  public void setEntryDts(String entryDts) {
    this.entryDts = entryDts;
  }

  public CustomerStoreCreditLedgerEntry giftCertificateLedgerOid(Integer giftCertificateLedgerOid) {
    this.giftCertificateLedgerOid = giftCertificateLedgerOid;
    return this;
  }

   /**
   * Gift certificate ledger oid is a primary key for this object, used internally.
   * @return giftCertificateLedgerOid
  **/
  @ApiModelProperty(value = "Gift certificate ledger oid is a primary key for this object, used internally.")
  public Integer getGiftCertificateLedgerOid() {
    return giftCertificateLedgerOid;
  }

  public void setGiftCertificateLedgerOid(Integer giftCertificateLedgerOid) {
    this.giftCertificateLedgerOid = giftCertificateLedgerOid;
  }

  public CustomerStoreCreditLedgerEntry giftCertificateOid(Integer giftCertificateOid) {
    this.giftCertificateOid = giftCertificateOid;
    return this;
  }

   /**
   * Gift certificate oid.
   * @return giftCertificateOid
  **/
  @ApiModelProperty(value = "Gift certificate oid.")
  public Integer getGiftCertificateOid() {
    return giftCertificateOid;
  }

  public void setGiftCertificateOid(Integer giftCertificateOid) {
    this.giftCertificateOid = giftCertificateOid;
  }

  public CustomerStoreCreditLedgerEntry referenceOrderId(String referenceOrderId) {
    this.referenceOrderId = referenceOrderId;
    return this;
  }

   /**
   * The order id if this gift certificate was used as part of the payment.
   * @return referenceOrderId
  **/
  @ApiModelProperty(value = "The order id if this gift certificate was used as part of the payment.")
  public String getReferenceOrderId() {
    return referenceOrderId;
  }

  public void setReferenceOrderId(String referenceOrderId) {
    this.referenceOrderId = referenceOrderId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomerStoreCreditLedgerEntry customerStoreCreditLedgerEntry = (CustomerStoreCreditLedgerEntry) o;
    return Objects.equals(this.action, customerStoreCreditLedgerEntry.action) &&
        Objects.equals(this.amount, customerStoreCreditLedgerEntry.amount) &&
        Objects.equals(this.description, customerStoreCreditLedgerEntry.description) &&
        Objects.equals(this.entryDts, customerStoreCreditLedgerEntry.entryDts) &&
        Objects.equals(this.giftCertificateLedgerOid, customerStoreCreditLedgerEntry.giftCertificateLedgerOid) &&
        Objects.equals(this.giftCertificateOid, customerStoreCreditLedgerEntry.giftCertificateOid) &&
        Objects.equals(this.referenceOrderId, customerStoreCreditLedgerEntry.referenceOrderId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(action, amount, description, entryDts, giftCertificateLedgerOid, giftCertificateOid, referenceOrderId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomerStoreCreditLedgerEntry {\n");
    
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    entryDts: ").append(toIndentedString(entryDts)).append("\n");
    sb.append("    giftCertificateLedgerOid: ").append(toIndentedString(giftCertificateLedgerOid)).append("\n");
    sb.append("    giftCertificateOid: ").append(toIndentedString(giftCertificateOid)).append("\n");
    sb.append("    referenceOrderId: ").append(toIndentedString(referenceOrderId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

