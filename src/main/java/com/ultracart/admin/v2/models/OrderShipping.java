/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.OrderTrackingNumberDetails;
import com.ultracart.admin.v2.models.Weight;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * OrderShipping
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-30T16:03:10.019-05:00[America/Indianapolis]")
public class OrderShipping {
  public static final String SERIALIZED_NAME_ADDRESS1 = "address1";
  @SerializedName(SERIALIZED_NAME_ADDRESS1)
  private String address1;

  public static final String SERIALIZED_NAME_ADDRESS2 = "address2";
  @SerializedName(SERIALIZED_NAME_ADDRESS2)
  private String address2;

  public static final String SERIALIZED_NAME_CITY = "city";
  @SerializedName(SERIALIZED_NAME_CITY)
  private String city;

  public static final String SERIALIZED_NAME_COMPANY = "company";
  @SerializedName(SERIALIZED_NAME_COMPANY)
  private String company;

  public static final String SERIALIZED_NAME_COUNTRY_CODE = "country_code";
  @SerializedName(SERIALIZED_NAME_COUNTRY_CODE)
  private String countryCode;

  public static final String SERIALIZED_NAME_DAY_PHONE = "day_phone";
  @SerializedName(SERIALIZED_NAME_DAY_PHONE)
  private String dayPhone;

  public static final String SERIALIZED_NAME_DAY_PHONE_E164 = "day_phone_e164";
  @SerializedName(SERIALIZED_NAME_DAY_PHONE_E164)
  private String dayPhoneE164;

  public static final String SERIALIZED_NAME_DELIVERY_DATE = "delivery_date";
  @SerializedName(SERIALIZED_NAME_DELIVERY_DATE)
  private String deliveryDate;

  public static final String SERIALIZED_NAME_EVENING_PHONE = "evening_phone";
  @SerializedName(SERIALIZED_NAME_EVENING_PHONE)
  private String eveningPhone;

  public static final String SERIALIZED_NAME_EVENING_PHONE_E164 = "evening_phone_e164";
  @SerializedName(SERIALIZED_NAME_EVENING_PHONE_E164)
  private String eveningPhoneE164;

  public static final String SERIALIZED_NAME_FIRST_NAME = "first_name";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  private String firstName;

  public static final String SERIALIZED_NAME_LAST_NAME = "last_name";
  @SerializedName(SERIALIZED_NAME_LAST_NAME)
  private String lastName;

  public static final String SERIALIZED_NAME_LEAST_COST_ROUTE = "least_cost_route";
  @SerializedName(SERIALIZED_NAME_LEAST_COST_ROUTE)
  private Boolean leastCostRoute;

  public static final String SERIALIZED_NAME_LEAST_COST_ROUTE_SHIPPING_METHODS = "least_cost_route_shipping_methods";
  @SerializedName(SERIALIZED_NAME_LEAST_COST_ROUTE_SHIPPING_METHODS)
  private List<String> leastCostRouteShippingMethods = null;

  public static final String SERIALIZED_NAME_LIFT_GATE = "lift_gate";
  @SerializedName(SERIALIZED_NAME_LIFT_GATE)
  private Boolean liftGate;

  public static final String SERIALIZED_NAME_POSTAL_CODE = "postal_code";
  @SerializedName(SERIALIZED_NAME_POSTAL_CODE)
  private String postalCode;

  public static final String SERIALIZED_NAME_RMA = "rma";
  @SerializedName(SERIALIZED_NAME_RMA)
  private String rma;

  public static final String SERIALIZED_NAME_SHIP_ON_DATE = "ship_on_date";
  @SerializedName(SERIALIZED_NAME_SHIP_ON_DATE)
  private String shipOnDate;

  public static final String SERIALIZED_NAME_SHIP_TO_RESIDENTIAL = "ship_to_residential";
  @SerializedName(SERIALIZED_NAME_SHIP_TO_RESIDENTIAL)
  private Boolean shipToResidential;

  public static final String SERIALIZED_NAME_SHIPPING3RD_PARTY_ACCOUNT_NUMBER = "shipping_3rd_party_account_number";
  @SerializedName(SERIALIZED_NAME_SHIPPING3RD_PARTY_ACCOUNT_NUMBER)
  private String shipping3rdPartyAccountNumber;

  public static final String SERIALIZED_NAME_SHIPPING_DATE = "shipping_date";
  @SerializedName(SERIALIZED_NAME_SHIPPING_DATE)
  private String shippingDate;

  public static final String SERIALIZED_NAME_SHIPPING_DEPARTMENT_STATUS = "shipping_department_status";
  @SerializedName(SERIALIZED_NAME_SHIPPING_DEPARTMENT_STATUS)
  private String shippingDepartmentStatus;

  public static final String SERIALIZED_NAME_SHIPPING_METHOD = "shipping_method";
  @SerializedName(SERIALIZED_NAME_SHIPPING_METHOD)
  private String shippingMethod;

  public static final String SERIALIZED_NAME_SHIPPING_METHOD_ACCOUNTING_CODE = "shipping_method_accounting_code";
  @SerializedName(SERIALIZED_NAME_SHIPPING_METHOD_ACCOUNTING_CODE)
  private String shippingMethodAccountingCode;

  public static final String SERIALIZED_NAME_SPECIAL_INSTRUCTIONS = "special_instructions";
  @SerializedName(SERIALIZED_NAME_SPECIAL_INSTRUCTIONS)
  private String specialInstructions;

  public static final String SERIALIZED_NAME_STATE_REGION = "state_region";
  @SerializedName(SERIALIZED_NAME_STATE_REGION)
  private String stateRegion;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_TRACKING_NUMBER_DETAILS = "tracking_number_details";
  @SerializedName(SERIALIZED_NAME_TRACKING_NUMBER_DETAILS)
  private List<OrderTrackingNumberDetails> trackingNumberDetails = null;

  public static final String SERIALIZED_NAME_TRACKING_NUMBERS = "tracking_numbers";
  @SerializedName(SERIALIZED_NAME_TRACKING_NUMBERS)
  private List<String> trackingNumbers = null;

  public static final String SERIALIZED_NAME_WEIGHT = "weight";
  @SerializedName(SERIALIZED_NAME_WEIGHT)
  private Weight weight;

  public OrderShipping() { 
  }

  public OrderShipping address1(String address1) {
    
    this.address1 = address1;
    return this;
  }

   /**
   * Address line 1
   * @return address1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Address line 1")

  public String getAddress1() {
    return address1;
  }


  public void setAddress1(String address1) {
    this.address1 = address1;
  }


  public OrderShipping address2(String address2) {
    
    this.address2 = address2;
    return this;
  }

   /**
   * Address line 2
   * @return address2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Address line 2")

  public String getAddress2() {
    return address2;
  }


  public void setAddress2(String address2) {
    this.address2 = address2;
  }


  public OrderShipping city(String city) {
    
    this.city = city;
    return this;
  }

   /**
   * City
   * @return city
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "City")

  public String getCity() {
    return city;
  }


  public void setCity(String city) {
    this.city = city;
  }


  public OrderShipping company(String company) {
    
    this.company = company;
    return this;
  }

   /**
   * Company
   * @return company
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Company")

  public String getCompany() {
    return company;
  }


  public void setCompany(String company) {
    this.company = company;
  }


  public OrderShipping countryCode(String countryCode) {
    
    this.countryCode = countryCode;
    return this;
  }

   /**
   * ISO-3166 two letter country code
   * @return countryCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ISO-3166 two letter country code")

  public String getCountryCode() {
    return countryCode;
  }


  public void setCountryCode(String countryCode) {
    this.countryCode = countryCode;
  }


  public OrderShipping dayPhone(String dayPhone) {
    
    this.dayPhone = dayPhone;
    return this;
  }

   /**
   * Day time phone
   * @return dayPhone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Day time phone")

  public String getDayPhone() {
    return dayPhone;
  }


  public void setDayPhone(String dayPhone) {
    this.dayPhone = dayPhone;
  }


  public OrderShipping dayPhoneE164(String dayPhoneE164) {
    
    this.dayPhoneE164 = dayPhoneE164;
    return this;
  }

   /**
   * Day time phone (E164 format)
   * @return dayPhoneE164
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Day time phone (E164 format)")

  public String getDayPhoneE164() {
    return dayPhoneE164;
  }


  public void setDayPhoneE164(String dayPhoneE164) {
    this.dayPhoneE164 = dayPhoneE164;
  }


  public OrderShipping deliveryDate(String deliveryDate) {
    
    this.deliveryDate = deliveryDate;
    return this;
  }

   /**
   * Date the customer is requesting delivery on.  Typically used for perishable product delivery.
   * @return deliveryDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Date the customer is requesting delivery on.  Typically used for perishable product delivery.")

  public String getDeliveryDate() {
    return deliveryDate;
  }


  public void setDeliveryDate(String deliveryDate) {
    this.deliveryDate = deliveryDate;
  }


  public OrderShipping eveningPhone(String eveningPhone) {
    
    this.eveningPhone = eveningPhone;
    return this;
  }

   /**
   * Evening phone
   * @return eveningPhone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Evening phone")

  public String getEveningPhone() {
    return eveningPhone;
  }


  public void setEveningPhone(String eveningPhone) {
    this.eveningPhone = eveningPhone;
  }


  public OrderShipping eveningPhoneE164(String eveningPhoneE164) {
    
    this.eveningPhoneE164 = eveningPhoneE164;
    return this;
  }

   /**
   * Evening phone (E164 format)
   * @return eveningPhoneE164
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Evening phone (E164 format)")

  public String getEveningPhoneE164() {
    return eveningPhoneE164;
  }


  public void setEveningPhoneE164(String eveningPhoneE164) {
    this.eveningPhoneE164 = eveningPhoneE164;
  }


  public OrderShipping firstName(String firstName) {
    
    this.firstName = firstName;
    return this;
  }

   /**
   * First name
   * @return firstName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "First name")

  public String getFirstName() {
    return firstName;
  }


  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }


  public OrderShipping lastName(String lastName) {
    
    this.lastName = lastName;
    return this;
  }

   /**
   * Last name
   * @return lastName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Last name")

  public String getLastName() {
    return lastName;
  }


  public void setLastName(String lastName) {
    this.lastName = lastName;
  }


  public OrderShipping leastCostRoute(Boolean leastCostRoute) {
    
    this.leastCostRoute = leastCostRoute;
    return this;
  }

   /**
   * If true, instructs UltraCart to apply the cheapest shipping method to this order.  Used only for channel partner order inserts.
   * @return leastCostRoute
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If true, instructs UltraCart to apply the cheapest shipping method to this order.  Used only for channel partner order inserts.")

  public Boolean getLeastCostRoute() {
    return leastCostRoute;
  }


  public void setLeastCostRoute(Boolean leastCostRoute) {
    this.leastCostRoute = leastCostRoute;
  }


  public OrderShipping leastCostRouteShippingMethods(List<String> leastCostRouteShippingMethods) {
    
    this.leastCostRouteShippingMethods = leastCostRouteShippingMethods;
    return this;
  }

  public OrderShipping addLeastCostRouteShippingMethodsItem(String leastCostRouteShippingMethodsItem) {
    if (this.leastCostRouteShippingMethods == null) {
      this.leastCostRouteShippingMethods = new ArrayList<>();
    }
    this.leastCostRouteShippingMethods.add(leastCostRouteShippingMethodsItem);
    return this;
  }

   /**
   * List of shipping methods to consider if least_code_route is true. Used only for channel parter order inserts.
   * @return leastCostRouteShippingMethods
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of shipping methods to consider if least_code_route is true. Used only for channel parter order inserts.")

  public List<String> getLeastCostRouteShippingMethods() {
    return leastCostRouteShippingMethods;
  }


  public void setLeastCostRouteShippingMethods(List<String> leastCostRouteShippingMethods) {
    this.leastCostRouteShippingMethods = leastCostRouteShippingMethods;
  }


  public OrderShipping liftGate(Boolean liftGate) {
    
    this.liftGate = liftGate;
    return this;
  }

   /**
   * Lift gate requested (LTL shipping methods only)
   * @return liftGate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Lift gate requested (LTL shipping methods only)")

  public Boolean getLiftGate() {
    return liftGate;
  }


  public void setLiftGate(Boolean liftGate) {
    this.liftGate = liftGate;
  }


  public OrderShipping postalCode(String postalCode) {
    
    this.postalCode = postalCode;
    return this;
  }

   /**
   * Postal code
   * @return postalCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Postal code")

  public String getPostalCode() {
    return postalCode;
  }


  public void setPostalCode(String postalCode) {
    this.postalCode = postalCode;
  }


  public OrderShipping rma(String rma) {
    
    this.rma = rma;
    return this;
  }

   /**
   * RMA number
   * @return rma
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "RMA number")

  public String getRma() {
    return rma;
  }


  public void setRma(String rma) {
    this.rma = rma;
  }


  public OrderShipping shipOnDate(String shipOnDate) {
    
    this.shipOnDate = shipOnDate;
    return this;
  }

   /**
   * Date the customer is requesting that the order ship on.  Typically used for perishable product delivery.
   * @return shipOnDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Date the customer is requesting that the order ship on.  Typically used for perishable product delivery.")

  public String getShipOnDate() {
    return shipOnDate;
  }


  public void setShipOnDate(String shipOnDate) {
    this.shipOnDate = shipOnDate;
  }


  public OrderShipping shipToResidential(Boolean shipToResidential) {
    
    this.shipToResidential = shipToResidential;
    return this;
  }

   /**
   * True if the shipping address is residential.  Effects the methods that are available to the customer as well as the price of the shipping method.
   * @return shipToResidential
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if the shipping address is residential.  Effects the methods that are available to the customer as well as the price of the shipping method.")

  public Boolean getShipToResidential() {
    return shipToResidential;
  }


  public void setShipToResidential(Boolean shipToResidential) {
    this.shipToResidential = shipToResidential;
  }


  public OrderShipping shipping3rdPartyAccountNumber(String shipping3rdPartyAccountNumber) {
    
    this.shipping3rdPartyAccountNumber = shipping3rdPartyAccountNumber;
    return this;
  }

   /**
   * Shipping 3rd party account number
   * @return shipping3rdPartyAccountNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Shipping 3rd party account number")

  public String getShipping3rdPartyAccountNumber() {
    return shipping3rdPartyAccountNumber;
  }


  public void setShipping3rdPartyAccountNumber(String shipping3rdPartyAccountNumber) {
    this.shipping3rdPartyAccountNumber = shipping3rdPartyAccountNumber;
  }


  public OrderShipping shippingDate(String shippingDate) {
    
    this.shippingDate = shippingDate;
    return this;
  }

   /**
   * Date/time the order shipped on.  This date is set once the first shipment is sent to the customer.
   * @return shippingDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Date/time the order shipped on.  This date is set once the first shipment is sent to the customer.")

  public String getShippingDate() {
    return shippingDate;
  }


  public void setShippingDate(String shippingDate) {
    this.shippingDate = shippingDate;
  }


  public OrderShipping shippingDepartmentStatus(String shippingDepartmentStatus) {
    
    this.shippingDepartmentStatus = shippingDepartmentStatus;
    return this;
  }

   /**
   * Shipping department status
   * @return shippingDepartmentStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Shipping department status")

  public String getShippingDepartmentStatus() {
    return shippingDepartmentStatus;
  }


  public void setShippingDepartmentStatus(String shippingDepartmentStatus) {
    this.shippingDepartmentStatus = shippingDepartmentStatus;
  }


  public OrderShipping shippingMethod(String shippingMethod) {
    
    this.shippingMethod = shippingMethod;
    return this;
  }

   /**
   * Shipping method
   * @return shippingMethod
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Shipping method")

  public String getShippingMethod() {
    return shippingMethod;
  }


  public void setShippingMethod(String shippingMethod) {
    this.shippingMethod = shippingMethod;
  }


  public OrderShipping shippingMethodAccountingCode(String shippingMethodAccountingCode) {
    
    this.shippingMethodAccountingCode = shippingMethodAccountingCode;
    return this;
  }

   /**
   * Shipping method accounting code
   * @return shippingMethodAccountingCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Shipping method accounting code")

  public String getShippingMethodAccountingCode() {
    return shippingMethodAccountingCode;
  }


  public void setShippingMethodAccountingCode(String shippingMethodAccountingCode) {
    this.shippingMethodAccountingCode = shippingMethodAccountingCode;
  }


  public OrderShipping specialInstructions(String specialInstructions) {
    
    this.specialInstructions = specialInstructions;
    return this;
  }

   /**
   * Special instructions from the customer regarding shipping
   * @return specialInstructions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Special instructions from the customer regarding shipping")

  public String getSpecialInstructions() {
    return specialInstructions;
  }


  public void setSpecialInstructions(String specialInstructions) {
    this.specialInstructions = specialInstructions;
  }


  public OrderShipping stateRegion(String stateRegion) {
    
    this.stateRegion = stateRegion;
    return this;
  }

   /**
   * State
   * @return stateRegion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "State")

  public String getStateRegion() {
    return stateRegion;
  }


  public void setStateRegion(String stateRegion) {
    this.stateRegion = stateRegion;
  }


  public OrderShipping title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * Title
   * @return title
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Title")

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    this.title = title;
  }


  public OrderShipping trackingNumberDetails(List<OrderTrackingNumberDetails> trackingNumberDetails) {
    
    this.trackingNumberDetails = trackingNumberDetails;
    return this;
  }

  public OrderShipping addTrackingNumberDetailsItem(OrderTrackingNumberDetails trackingNumberDetailsItem) {
    if (this.trackingNumberDetails == null) {
      this.trackingNumberDetails = new ArrayList<>();
    }
    this.trackingNumberDetails.add(trackingNumberDetailsItem);
    return this;
  }

   /**
   * Tracking number details
   * @return trackingNumberDetails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Tracking number details")

  public List<OrderTrackingNumberDetails> getTrackingNumberDetails() {
    return trackingNumberDetails;
  }


  public void setTrackingNumberDetails(List<OrderTrackingNumberDetails> trackingNumberDetails) {
    this.trackingNumberDetails = trackingNumberDetails;
  }


  public OrderShipping trackingNumbers(List<String> trackingNumbers) {
    
    this.trackingNumbers = trackingNumbers;
    return this;
  }

  public OrderShipping addTrackingNumbersItem(String trackingNumbersItem) {
    if (this.trackingNumbers == null) {
      this.trackingNumbers = new ArrayList<>();
    }
    this.trackingNumbers.add(trackingNumbersItem);
    return this;
  }

   /**
   * Tracking numbers
   * @return trackingNumbers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Tracking numbers")

  public List<String> getTrackingNumbers() {
    return trackingNumbers;
  }


  public void setTrackingNumbers(List<String> trackingNumbers) {
    this.trackingNumbers = trackingNumbers;
  }


  public OrderShipping weight(Weight weight) {
    
    this.weight = weight;
    return this;
  }

   /**
   * Get weight
   * @return weight
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Weight getWeight() {
    return weight;
  }


  public void setWeight(Weight weight) {
    this.weight = weight;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderShipping orderShipping = (OrderShipping) o;
    return Objects.equals(this.address1, orderShipping.address1) &&
        Objects.equals(this.address2, orderShipping.address2) &&
        Objects.equals(this.city, orderShipping.city) &&
        Objects.equals(this.company, orderShipping.company) &&
        Objects.equals(this.countryCode, orderShipping.countryCode) &&
        Objects.equals(this.dayPhone, orderShipping.dayPhone) &&
        Objects.equals(this.dayPhoneE164, orderShipping.dayPhoneE164) &&
        Objects.equals(this.deliveryDate, orderShipping.deliveryDate) &&
        Objects.equals(this.eveningPhone, orderShipping.eveningPhone) &&
        Objects.equals(this.eveningPhoneE164, orderShipping.eveningPhoneE164) &&
        Objects.equals(this.firstName, orderShipping.firstName) &&
        Objects.equals(this.lastName, orderShipping.lastName) &&
        Objects.equals(this.leastCostRoute, orderShipping.leastCostRoute) &&
        Objects.equals(this.leastCostRouteShippingMethods, orderShipping.leastCostRouteShippingMethods) &&
        Objects.equals(this.liftGate, orderShipping.liftGate) &&
        Objects.equals(this.postalCode, orderShipping.postalCode) &&
        Objects.equals(this.rma, orderShipping.rma) &&
        Objects.equals(this.shipOnDate, orderShipping.shipOnDate) &&
        Objects.equals(this.shipToResidential, orderShipping.shipToResidential) &&
        Objects.equals(this.shipping3rdPartyAccountNumber, orderShipping.shipping3rdPartyAccountNumber) &&
        Objects.equals(this.shippingDate, orderShipping.shippingDate) &&
        Objects.equals(this.shippingDepartmentStatus, orderShipping.shippingDepartmentStatus) &&
        Objects.equals(this.shippingMethod, orderShipping.shippingMethod) &&
        Objects.equals(this.shippingMethodAccountingCode, orderShipping.shippingMethodAccountingCode) &&
        Objects.equals(this.specialInstructions, orderShipping.specialInstructions) &&
        Objects.equals(this.stateRegion, orderShipping.stateRegion) &&
        Objects.equals(this.title, orderShipping.title) &&
        Objects.equals(this.trackingNumberDetails, orderShipping.trackingNumberDetails) &&
        Objects.equals(this.trackingNumbers, orderShipping.trackingNumbers) &&
        Objects.equals(this.weight, orderShipping.weight);
  }

  @Override
  public int hashCode() {
    return Objects.hash(address1, address2, city, company, countryCode, dayPhone, dayPhoneE164, deliveryDate, eveningPhone, eveningPhoneE164, firstName, lastName, leastCostRoute, leastCostRouteShippingMethods, liftGate, postalCode, rma, shipOnDate, shipToResidential, shipping3rdPartyAccountNumber, shippingDate, shippingDepartmentStatus, shippingMethod, shippingMethodAccountingCode, specialInstructions, stateRegion, title, trackingNumberDetails, trackingNumbers, weight);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderShipping {\n");
    sb.append("    address1: ").append(toIndentedString(address1)).append("\n");
    sb.append("    address2: ").append(toIndentedString(address2)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    company: ").append(toIndentedString(company)).append("\n");
    sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
    sb.append("    dayPhone: ").append(toIndentedString(dayPhone)).append("\n");
    sb.append("    dayPhoneE164: ").append(toIndentedString(dayPhoneE164)).append("\n");
    sb.append("    deliveryDate: ").append(toIndentedString(deliveryDate)).append("\n");
    sb.append("    eveningPhone: ").append(toIndentedString(eveningPhone)).append("\n");
    sb.append("    eveningPhoneE164: ").append(toIndentedString(eveningPhoneE164)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    leastCostRoute: ").append(toIndentedString(leastCostRoute)).append("\n");
    sb.append("    leastCostRouteShippingMethods: ").append(toIndentedString(leastCostRouteShippingMethods)).append("\n");
    sb.append("    liftGate: ").append(toIndentedString(liftGate)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("    rma: ").append(toIndentedString(rma)).append("\n");
    sb.append("    shipOnDate: ").append(toIndentedString(shipOnDate)).append("\n");
    sb.append("    shipToResidential: ").append(toIndentedString(shipToResidential)).append("\n");
    sb.append("    shipping3rdPartyAccountNumber: ").append(toIndentedString(shipping3rdPartyAccountNumber)).append("\n");
    sb.append("    shippingDate: ").append(toIndentedString(shippingDate)).append("\n");
    sb.append("    shippingDepartmentStatus: ").append(toIndentedString(shippingDepartmentStatus)).append("\n");
    sb.append("    shippingMethod: ").append(toIndentedString(shippingMethod)).append("\n");
    sb.append("    shippingMethodAccountingCode: ").append(toIndentedString(shippingMethodAccountingCode)).append("\n");
    sb.append("    specialInstructions: ").append(toIndentedString(specialInstructions)).append("\n");
    sb.append("    stateRegion: ").append(toIndentedString(stateRegion)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    trackingNumberDetails: ").append(toIndentedString(trackingNumberDetails)).append("\n");
    sb.append("    trackingNumbers: ").append(toIndentedString(trackingNumbers)).append("\n");
    sb.append("    weight: ").append(toIndentedString(weight)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("address1");
    openapiFields.add("address2");
    openapiFields.add("city");
    openapiFields.add("company");
    openapiFields.add("country_code");
    openapiFields.add("day_phone");
    openapiFields.add("day_phone_e164");
    openapiFields.add("delivery_date");
    openapiFields.add("evening_phone");
    openapiFields.add("evening_phone_e164");
    openapiFields.add("first_name");
    openapiFields.add("last_name");
    openapiFields.add("least_cost_route");
    openapiFields.add("least_cost_route_shipping_methods");
    openapiFields.add("lift_gate");
    openapiFields.add("postal_code");
    openapiFields.add("rma");
    openapiFields.add("ship_on_date");
    openapiFields.add("ship_to_residential");
    openapiFields.add("shipping_3rd_party_account_number");
    openapiFields.add("shipping_date");
    openapiFields.add("shipping_department_status");
    openapiFields.add("shipping_method");
    openapiFields.add("shipping_method_accounting_code");
    openapiFields.add("special_instructions");
    openapiFields.add("state_region");
    openapiFields.add("title");
    openapiFields.add("tracking_number_details");
    openapiFields.add("tracking_numbers");
    openapiFields.add("weight");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to OrderShipping
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (OrderShipping.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in OrderShipping is not found in the empty JSON string", OrderShipping.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!OrderShipping.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OrderShipping` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("address1") != null && !jsonObj.get("address1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `address1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("address1").toString()));
      }
      if (jsonObj.get("address2") != null && !jsonObj.get("address2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `address2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("address2").toString()));
      }
      if (jsonObj.get("city") != null && !jsonObj.get("city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("city").toString()));
      }
      if (jsonObj.get("company") != null && !jsonObj.get("company").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `company` to be a primitive type in the JSON string but got `%s`", jsonObj.get("company").toString()));
      }
      if (jsonObj.get("country_code") != null && !jsonObj.get("country_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `country_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("country_code").toString()));
      }
      if (jsonObj.get("day_phone") != null && !jsonObj.get("day_phone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `day_phone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("day_phone").toString()));
      }
      if (jsonObj.get("day_phone_e164") != null && !jsonObj.get("day_phone_e164").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `day_phone_e164` to be a primitive type in the JSON string but got `%s`", jsonObj.get("day_phone_e164").toString()));
      }
      if (jsonObj.get("delivery_date") != null && !jsonObj.get("delivery_date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `delivery_date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("delivery_date").toString()));
      }
      if (jsonObj.get("evening_phone") != null && !jsonObj.get("evening_phone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `evening_phone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("evening_phone").toString()));
      }
      if (jsonObj.get("evening_phone_e164") != null && !jsonObj.get("evening_phone_e164").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `evening_phone_e164` to be a primitive type in the JSON string but got `%s`", jsonObj.get("evening_phone_e164").toString()));
      }
      if (jsonObj.get("first_name") != null && !jsonObj.get("first_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `first_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("first_name").toString()));
      }
      if (jsonObj.get("last_name") != null && !jsonObj.get("last_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_name").toString()));
      }
      // ensure the json data is an array
      if (jsonObj.get("least_cost_route_shipping_methods") != null && !jsonObj.get("least_cost_route_shipping_methods").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `least_cost_route_shipping_methods` to be an array in the JSON string but got `%s`", jsonObj.get("least_cost_route_shipping_methods").toString()));
      }
      if (jsonObj.get("postal_code") != null && !jsonObj.get("postal_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `postal_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("postal_code").toString()));
      }
      if (jsonObj.get("rma") != null && !jsonObj.get("rma").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `rma` to be a primitive type in the JSON string but got `%s`", jsonObj.get("rma").toString()));
      }
      if (jsonObj.get("ship_on_date") != null && !jsonObj.get("ship_on_date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ship_on_date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ship_on_date").toString()));
      }
      if (jsonObj.get("shipping_3rd_party_account_number") != null && !jsonObj.get("shipping_3rd_party_account_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipping_3rd_party_account_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipping_3rd_party_account_number").toString()));
      }
      if (jsonObj.get("shipping_date") != null && !jsonObj.get("shipping_date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipping_date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipping_date").toString()));
      }
      if (jsonObj.get("shipping_department_status") != null && !jsonObj.get("shipping_department_status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipping_department_status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipping_department_status").toString()));
      }
      if (jsonObj.get("shipping_method") != null && !jsonObj.get("shipping_method").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipping_method` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipping_method").toString()));
      }
      if (jsonObj.get("shipping_method_accounting_code") != null && !jsonObj.get("shipping_method_accounting_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipping_method_accounting_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipping_method_accounting_code").toString()));
      }
      if (jsonObj.get("special_instructions") != null && !jsonObj.get("special_instructions").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `special_instructions` to be a primitive type in the JSON string but got `%s`", jsonObj.get("special_instructions").toString()));
      }
      if (jsonObj.get("state_region") != null && !jsonObj.get("state_region").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state_region` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state_region").toString()));
      }
      if (jsonObj.get("title") != null && !jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
      JsonArray jsonArraytrackingNumberDetails = jsonObj.getAsJsonArray("tracking_number_details");
      if (jsonArraytrackingNumberDetails != null) {
        // ensure the json data is an array
        if (!jsonObj.get("tracking_number_details").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `tracking_number_details` to be an array in the JSON string but got `%s`", jsonObj.get("tracking_number_details").toString()));
        }

        // validate the optional field `tracking_number_details` (array)
        for (int i = 0; i < jsonArraytrackingNumberDetails.size(); i++) {
          OrderTrackingNumberDetails.validateJsonObject(jsonArraytrackingNumberDetails.get(i).getAsJsonObject());
        };
      }
      // ensure the json data is an array
      if (jsonObj.get("tracking_numbers") != null && !jsonObj.get("tracking_numbers").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `tracking_numbers` to be an array in the JSON string but got `%s`", jsonObj.get("tracking_numbers").toString()));
      }
      // validate the optional field `weight`
      if (jsonObj.getAsJsonObject("weight") != null) {
        Weight.validateJsonObject(jsonObj.getAsJsonObject("weight"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OrderShipping.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OrderShipping' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OrderShipping> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OrderShipping.class));

       return (TypeAdapter<T>) new TypeAdapter<OrderShipping>() {
           @Override
           public void write(JsonWriter out, OrderShipping value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OrderShipping read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of OrderShipping given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of OrderShipping
  * @throws IOException if the JSON string is invalid with respect to OrderShipping
  */
  public static OrderShipping fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OrderShipping.class);
  }

 /**
  * Convert an instance of OrderShipping to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

