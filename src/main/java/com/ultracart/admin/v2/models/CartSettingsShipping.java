/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.CartSettingsProvince;
import com.ultracart.admin.v2.models.CartSettingsShippingCalendar;
import com.ultracart.admin.v2.models.CartSettingsShippingEstimate;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * CartSettingsShipping
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-02-12T12:57:19.250-05:00")



public class CartSettingsShipping {
  @SerializedName("deliver_on_date")
  private CartSettingsShippingCalendar deliverOnDate = null;

  @SerializedName("estimates")
  private List<CartSettingsShippingEstimate> estimates = null;

  @SerializedName("need_shipping")
  private Boolean needShipping = null;

  @SerializedName("provinces")
  private List<CartSettingsProvince> provinces = null;

  @SerializedName("ship_on_date")
  private CartSettingsShippingCalendar shipOnDate = null;

  public CartSettingsShipping deliverOnDate(CartSettingsShippingCalendar deliverOnDate) {
    this.deliverOnDate = deliverOnDate;
    return this;
  }

   /**
   * Get deliverOnDate
   * @return deliverOnDate
  **/
  @ApiModelProperty(value = "")
  public CartSettingsShippingCalendar getDeliverOnDate() {
    return deliverOnDate;
  }

  public void setDeliverOnDate(CartSettingsShippingCalendar deliverOnDate) {
    this.deliverOnDate = deliverOnDate;
  }

  public CartSettingsShipping estimates(List<CartSettingsShippingEstimate> estimates) {
    this.estimates = estimates;
    return this;
  }

  public CartSettingsShipping addEstimatesItem(CartSettingsShippingEstimate estimatesItem) {
    if (this.estimates == null) {
      this.estimates = new ArrayList<CartSettingsShippingEstimate>();
    }
    this.estimates.add(estimatesItem);
    return this;
  }

   /**
   * Estimates for this cart
   * @return estimates
  **/
  @ApiModelProperty(value = "Estimates for this cart")
  public List<CartSettingsShippingEstimate> getEstimates() {
    return estimates;
  }

  public void setEstimates(List<CartSettingsShippingEstimate> estimates) {
    this.estimates = estimates;
  }

  public CartSettingsShipping needShipping(Boolean needShipping) {
    this.needShipping = needShipping;
    return this;
  }

   /**
   * True if this order needs shipping
   * @return needShipping
  **/
  @ApiModelProperty(value = "True if this order needs shipping")
  public Boolean isNeedShipping() {
    return needShipping;
  }

  public void setNeedShipping(Boolean needShipping) {
    this.needShipping = needShipping;
  }

  public CartSettingsShipping provinces(List<CartSettingsProvince> provinces) {
    this.provinces = provinces;
    return this;
  }

  public CartSettingsShipping addProvincesItem(CartSettingsProvince provincesItem) {
    if (this.provinces == null) {
      this.provinces = new ArrayList<CartSettingsProvince>();
    }
    this.provinces.add(provincesItem);
    return this;
  }

   /**
   * Provinces
   * @return provinces
  **/
  @ApiModelProperty(value = "Provinces")
  public List<CartSettingsProvince> getProvinces() {
    return provinces;
  }

  public void setProvinces(List<CartSettingsProvince> provinces) {
    this.provinces = provinces;
  }

  public CartSettingsShipping shipOnDate(CartSettingsShippingCalendar shipOnDate) {
    this.shipOnDate = shipOnDate;
    return this;
  }

   /**
   * Get shipOnDate
   * @return shipOnDate
  **/
  @ApiModelProperty(value = "")
  public CartSettingsShippingCalendar getShipOnDate() {
    return shipOnDate;
  }

  public void setShipOnDate(CartSettingsShippingCalendar shipOnDate) {
    this.shipOnDate = shipOnDate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CartSettingsShipping cartSettingsShipping = (CartSettingsShipping) o;
    return Objects.equals(this.deliverOnDate, cartSettingsShipping.deliverOnDate) &&
        Objects.equals(this.estimates, cartSettingsShipping.estimates) &&
        Objects.equals(this.needShipping, cartSettingsShipping.needShipping) &&
        Objects.equals(this.provinces, cartSettingsShipping.provinces) &&
        Objects.equals(this.shipOnDate, cartSettingsShipping.shipOnDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deliverOnDate, estimates, needShipping, provinces, shipOnDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CartSettingsShipping {\n");
    
    sb.append("    deliverOnDate: ").append(toIndentedString(deliverOnDate)).append("\n");
    sb.append("    estimates: ").append(toIndentedString(estimates)).append("\n");
    sb.append("    needShipping: ").append(toIndentedString(needShipping)).append("\n");
    sb.append("    provinces: ").append(toIndentedString(provinces)).append("\n");
    sb.append("    shipOnDate: ").append(toIndentedString(shipOnDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

