/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * Currency
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-06-01T10:15:42.787-04:00")



public class Currency {
  @SerializedName("currency_code")
  private String currencyCode = null;

  @SerializedName("exchange_rate")
  private BigDecimal exchangeRate = null;

  @SerializedName("localized")
  private BigDecimal localized = null;

  @SerializedName("localized_formatted")
  private String localizedFormatted = null;

  @SerializedName("value")
  private BigDecimal value = null;

  public Currency currencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
    return this;
  }

   /**
   * Currency code of the localized value
   * @return currencyCode
  **/
  @ApiModelProperty(value = "Currency code of the localized value")
  public String getCurrencyCode() {
    return currencyCode;
  }

  public void setCurrencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
  }

  public Currency exchangeRate(BigDecimal exchangeRate) {
    this.exchangeRate = exchangeRate;
    return this;
  }

   /**
   * Exchange rate used to localize
   * @return exchangeRate
  **/
  @ApiModelProperty(value = "Exchange rate used to localize")
  public BigDecimal getExchangeRate() {
    return exchangeRate;
  }

  public void setExchangeRate(BigDecimal exchangeRate) {
    this.exchangeRate = exchangeRate;
  }

  public Currency localized(BigDecimal localized) {
    this.localized = localized;
    return this;
  }

   /**
   * Value localized to the customer
   * @return localized
  **/
  @ApiModelProperty(value = "Value localized to the customer")
  public BigDecimal getLocalized() {
    return localized;
  }

  public void setLocalized(BigDecimal localized) {
    this.localized = localized;
  }

  public Currency localizedFormatted(String localizedFormatted) {
    this.localizedFormatted = localizedFormatted;
    return this;
  }

   /**
   * Value localized and formatted for the customer
   * @return localizedFormatted
  **/
  @ApiModelProperty(value = "Value localized and formatted for the customer")
  public String getLocalizedFormatted() {
    return localizedFormatted;
  }

  public void setLocalizedFormatted(String localizedFormatted) {
    this.localizedFormatted = localizedFormatted;
  }

  public Currency value(BigDecimal value) {
    this.value = value;
    return this;
  }

   /**
   * Value in base currency
   * @return value
  **/
  @ApiModelProperty(value = "Value in base currency")
  public BigDecimal getValue() {
    return value;
  }

  public void setValue(BigDecimal value) {
    this.value = value;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Currency currency = (Currency) o;
    return Objects.equals(this.currencyCode, currency.currencyCode) &&
        Objects.equals(this.exchangeRate, currency.exchangeRate) &&
        Objects.equals(this.localized, currency.localized) &&
        Objects.equals(this.localizedFormatted, currency.localizedFormatted) &&
        Objects.equals(this.value, currency.value);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currencyCode, exchangeRate, localized, localizedFormatted, value);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Currency {\n");
    
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    exchangeRate: ").append(toIndentedString(exchangeRate)).append("\n");
    sb.append("    localized: ").append(toIndentedString(localized)).append("\n");
    sb.append("    localizedFormatted: ").append(toIndentedString(localizedFormatted)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

