/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.TaxCity;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

/**
 * TaxCounty
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-02-12T12:57:19.250-05:00")



public class TaxCounty {
  @SerializedName("accounting_code")
  private String accountingCode = null;

  @SerializedName("cities")
  private List<TaxCity> cities = null;

  @SerializedName("county")
  private String county = null;

  @SerializedName("county_oid")
  private Integer countyOid = null;

  @SerializedName("dont_collect_city")
  private Boolean dontCollectCity = null;

  @SerializedName("dont_collect_county")
  private Boolean dontCollectCounty = null;

  @SerializedName("dont_collect_postal_code")
  private Boolean dontCollectPostalCode = null;

  @SerializedName("state_oid")
  private Integer stateOid = null;

  @SerializedName("tax_rate")
  private BigDecimal taxRate = null;

  @SerializedName("tax_rate_formatted")
  private String taxRateFormatted = null;

  public TaxCounty accountingCode(String accountingCode) {
    this.accountingCode = accountingCode;
    return this;
  }

   /**
   * Accounting code for programs such as QuickBooks
   * @return accountingCode
  **/
  @ApiModelProperty(value = "Accounting code for programs such as QuickBooks")
  public String getAccountingCode() {
    return accountingCode;
  }

  public void setAccountingCode(String accountingCode) {
    this.accountingCode = accountingCode;
  }

  public TaxCounty cities(List<TaxCity> cities) {
    this.cities = cities;
    return this;
  }

  public TaxCounty addCitiesItem(TaxCity citiesItem) {
    if (this.cities == null) {
      this.cities = new ArrayList<TaxCity>();
    }
    this.cities.add(citiesItem);
    return this;
  }

   /**
   * Cities within this city
   * @return cities
  **/
  @ApiModelProperty(value = "Cities within this city")
  public List<TaxCity> getCities() {
    return cities;
  }

  public void setCities(List<TaxCity> cities) {
    this.cities = cities;
  }

  public TaxCounty county(String county) {
    this.county = county;
    return this;
  }

   /**
   * County
   * @return county
  **/
  @ApiModelProperty(value = "County")
  public String getCounty() {
    return county;
  }

  public void setCounty(String county) {
    this.county = county;
  }

  public TaxCounty countyOid(Integer countyOid) {
    this.countyOid = countyOid;
    return this;
  }

   /**
   * Tax record object identifier used internally by database
   * @return countyOid
  **/
  @ApiModelProperty(value = "Tax record object identifier used internally by database")
  public Integer getCountyOid() {
    return countyOid;
  }

  public void setCountyOid(Integer countyOid) {
    this.countyOid = countyOid;
  }

  public TaxCounty dontCollectCity(Boolean dontCollectCity) {
    this.dontCollectCity = dontCollectCity;
    return this;
  }

   /**
   * Flag instructing engine to not collect city tax for this county
   * @return dontCollectCity
  **/
  @ApiModelProperty(value = "Flag instructing engine to not collect city tax for this county")
  public Boolean isDontCollectCity() {
    return dontCollectCity;
  }

  public void setDontCollectCity(Boolean dontCollectCity) {
    this.dontCollectCity = dontCollectCity;
  }

  public TaxCounty dontCollectCounty(Boolean dontCollectCounty) {
    this.dontCollectCounty = dontCollectCounty;
    return this;
  }

   /**
   * Flag instructing engine to not collect county tax for this county
   * @return dontCollectCounty
  **/
  @ApiModelProperty(value = "Flag instructing engine to not collect county tax for this county")
  public Boolean isDontCollectCounty() {
    return dontCollectCounty;
  }

  public void setDontCollectCounty(Boolean dontCollectCounty) {
    this.dontCollectCounty = dontCollectCounty;
  }

  public TaxCounty dontCollectPostalCode(Boolean dontCollectPostalCode) {
    this.dontCollectPostalCode = dontCollectPostalCode;
    return this;
  }

   /**
   * Flag instructing engine to not collect postal code tax for this county
   * @return dontCollectPostalCode
  **/
  @ApiModelProperty(value = "Flag instructing engine to not collect postal code tax for this county")
  public Boolean isDontCollectPostalCode() {
    return dontCollectPostalCode;
  }

  public void setDontCollectPostalCode(Boolean dontCollectPostalCode) {
    this.dontCollectPostalCode = dontCollectPostalCode;
  }

  public TaxCounty stateOid(Integer stateOid) {
    this.stateOid = stateOid;
    return this;
  }

   /**
   * Tax record object identifier used internally by database
   * @return stateOid
  **/
  @ApiModelProperty(value = "Tax record object identifier used internally by database")
  public Integer getStateOid() {
    return stateOid;
  }

  public void setStateOid(Integer stateOid) {
    this.stateOid = stateOid;
  }

  public TaxCounty taxRate(BigDecimal taxRate) {
    this.taxRate = taxRate;
    return this;
  }

   /**
   * Tax Rate
   * @return taxRate
  **/
  @ApiModelProperty(value = "Tax Rate")
  public BigDecimal getTaxRate() {
    return taxRate;
  }

  public void setTaxRate(BigDecimal taxRate) {
    this.taxRate = taxRate;
  }

  public TaxCounty taxRateFormatted(String taxRateFormatted) {
    this.taxRateFormatted = taxRateFormatted;
    return this;
  }

   /**
   * Tax rate formatted
   * @return taxRateFormatted
  **/
  @ApiModelProperty(value = "Tax rate formatted")
  public String getTaxRateFormatted() {
    return taxRateFormatted;
  }

  public void setTaxRateFormatted(String taxRateFormatted) {
    this.taxRateFormatted = taxRateFormatted;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TaxCounty taxCounty = (TaxCounty) o;
    return Objects.equals(this.accountingCode, taxCounty.accountingCode) &&
        Objects.equals(this.cities, taxCounty.cities) &&
        Objects.equals(this.county, taxCounty.county) &&
        Objects.equals(this.countyOid, taxCounty.countyOid) &&
        Objects.equals(this.dontCollectCity, taxCounty.dontCollectCity) &&
        Objects.equals(this.dontCollectCounty, taxCounty.dontCollectCounty) &&
        Objects.equals(this.dontCollectPostalCode, taxCounty.dontCollectPostalCode) &&
        Objects.equals(this.stateOid, taxCounty.stateOid) &&
        Objects.equals(this.taxRate, taxCounty.taxRate) &&
        Objects.equals(this.taxRateFormatted, taxCounty.taxRateFormatted);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountingCode, cities, county, countyOid, dontCollectCity, dontCollectCounty, dontCollectPostalCode, stateOid, taxRate, taxRateFormatted);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TaxCounty {\n");
    
    sb.append("    accountingCode: ").append(toIndentedString(accountingCode)).append("\n");
    sb.append("    cities: ").append(toIndentedString(cities)).append("\n");
    sb.append("    county: ").append(toIndentedString(county)).append("\n");
    sb.append("    countyOid: ").append(toIndentedString(countyOid)).append("\n");
    sb.append("    dontCollectCity: ").append(toIndentedString(dontCollectCity)).append("\n");
    sb.append("    dontCollectCounty: ").append(toIndentedString(dontCollectCounty)).append("\n");
    sb.append("    dontCollectPostalCode: ").append(toIndentedString(dontCollectPostalCode)).append("\n");
    sb.append("    stateOid: ").append(toIndentedString(stateOid)).append("\n");
    sb.append("    taxRate: ").append(toIndentedString(taxRate)).append("\n");
    sb.append("    taxRateFormatted: ").append(toIndentedString(taxRateFormatted)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

