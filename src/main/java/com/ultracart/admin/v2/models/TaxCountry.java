/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.TaxState;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

/**
 * TaxCountry
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-06-16T12:57:58.126-04:00")



public class TaxCountry {
  @SerializedName("accounting_code")
  private String accountingCode = null;

  @SerializedName("country_code")
  private String countryCode = null;

  @SerializedName("country_oid")
  private Integer countryOid = null;

  @SerializedName("states")
  private List<TaxState> states = null;

  @SerializedName("tax_gift_charge")
  private Boolean taxGiftCharge = null;

  @SerializedName("tax_gift_wrap")
  private Boolean taxGiftWrap = null;

  @SerializedName("tax_rate")
  private BigDecimal taxRate = null;

  @SerializedName("tax_rate_formatted")
  private String taxRateFormatted = null;

  @SerializedName("tax_shipping")
  private Boolean taxShipping = null;

  public TaxCountry accountingCode(String accountingCode) {
    this.accountingCode = accountingCode;
    return this;
  }

   /**
   * Accounting code for programs such as QuickBooks
   * @return accountingCode
  **/
  @ApiModelProperty(value = "Accounting code for programs such as QuickBooks")
  public String getAccountingCode() {
    return accountingCode;
  }

  public void setAccountingCode(String accountingCode) {
    this.accountingCode = accountingCode;
  }

  public TaxCountry countryCode(String countryCode) {
    this.countryCode = countryCode;
    return this;
  }

   /**
   * Country code (2 characters
   * @return countryCode
  **/
  @ApiModelProperty(value = "Country code (2 characters")
  public String getCountryCode() {
    return countryCode;
  }

  public void setCountryCode(String countryCode) {
    this.countryCode = countryCode;
  }

  public TaxCountry countryOid(Integer countryOid) {
    this.countryOid = countryOid;
    return this;
  }

   /**
   * Tax record object identifier used internally by database
   * @return countryOid
  **/
  @ApiModelProperty(value = "Tax record object identifier used internally by database")
  public Integer getCountryOid() {
    return countryOid;
  }

  public void setCountryOid(Integer countryOid) {
    this.countryOid = countryOid;
  }

  public TaxCountry states(List<TaxState> states) {
    this.states = states;
    return this;
  }

  public TaxCountry addStatesItem(TaxState statesItem) {
    if (this.states == null) {
      this.states = new ArrayList<TaxState>();
    }
    this.states.add(statesItem);
    return this;
  }

   /**
   * States (or regions or territories) within this country
   * @return states
  **/
  @ApiModelProperty(value = "States (or regions or territories) within this country")
  public List<TaxState> getStates() {
    return states;
  }

  public void setStates(List<TaxState> states) {
    this.states = states;
  }

  public TaxCountry taxGiftCharge(Boolean taxGiftCharge) {
    this.taxGiftCharge = taxGiftCharge;
    return this;
  }

   /**
   * True if taxation within this jurisdiction should charge tax on gift charge
   * @return taxGiftCharge
  **/
  @ApiModelProperty(value = "True if taxation within this jurisdiction should charge tax on gift charge")
  public Boolean isTaxGiftCharge() {
    return taxGiftCharge;
  }

  public void setTaxGiftCharge(Boolean taxGiftCharge) {
    this.taxGiftCharge = taxGiftCharge;
  }

  public TaxCountry taxGiftWrap(Boolean taxGiftWrap) {
    this.taxGiftWrap = taxGiftWrap;
    return this;
  }

   /**
   * True if taxation within this jurisdiction should charge tax on gift wrap
   * @return taxGiftWrap
  **/
  @ApiModelProperty(value = "True if taxation within this jurisdiction should charge tax on gift wrap")
  public Boolean isTaxGiftWrap() {
    return taxGiftWrap;
  }

  public void setTaxGiftWrap(Boolean taxGiftWrap) {
    this.taxGiftWrap = taxGiftWrap;
  }

  public TaxCountry taxRate(BigDecimal taxRate) {
    this.taxRate = taxRate;
    return this;
  }

   /**
   * Tax Rate
   * @return taxRate
  **/
  @ApiModelProperty(value = "Tax Rate")
  public BigDecimal getTaxRate() {
    return taxRate;
  }

  public void setTaxRate(BigDecimal taxRate) {
    this.taxRate = taxRate;
  }

  public TaxCountry taxRateFormatted(String taxRateFormatted) {
    this.taxRateFormatted = taxRateFormatted;
    return this;
  }

   /**
   * Tax rate formatted
   * @return taxRateFormatted
  **/
  @ApiModelProperty(value = "Tax rate formatted")
  public String getTaxRateFormatted() {
    return taxRateFormatted;
  }

  public void setTaxRateFormatted(String taxRateFormatted) {
    this.taxRateFormatted = taxRateFormatted;
  }

  public TaxCountry taxShipping(Boolean taxShipping) {
    this.taxShipping = taxShipping;
    return this;
  }

   /**
   * True if taxation within this jurisdiction should charge tax on shipping
   * @return taxShipping
  **/
  @ApiModelProperty(value = "True if taxation within this jurisdiction should charge tax on shipping")
  public Boolean isTaxShipping() {
    return taxShipping;
  }

  public void setTaxShipping(Boolean taxShipping) {
    this.taxShipping = taxShipping;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TaxCountry taxCountry = (TaxCountry) o;
    return Objects.equals(this.accountingCode, taxCountry.accountingCode) &&
        Objects.equals(this.countryCode, taxCountry.countryCode) &&
        Objects.equals(this.countryOid, taxCountry.countryOid) &&
        Objects.equals(this.states, taxCountry.states) &&
        Objects.equals(this.taxGiftCharge, taxCountry.taxGiftCharge) &&
        Objects.equals(this.taxGiftWrap, taxCountry.taxGiftWrap) &&
        Objects.equals(this.taxRate, taxCountry.taxRate) &&
        Objects.equals(this.taxRateFormatted, taxCountry.taxRateFormatted) &&
        Objects.equals(this.taxShipping, taxCountry.taxShipping);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountingCode, countryCode, countryOid, states, taxGiftCharge, taxGiftWrap, taxRate, taxRateFormatted, taxShipping);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TaxCountry {\n");
    
    sb.append("    accountingCode: ").append(toIndentedString(accountingCode)).append("\n");
    sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
    sb.append("    countryOid: ").append(toIndentedString(countryOid)).append("\n");
    sb.append("    states: ").append(toIndentedString(states)).append("\n");
    sb.append("    taxGiftCharge: ").append(toIndentedString(taxGiftCharge)).append("\n");
    sb.append("    taxGiftWrap: ").append(toIndentedString(taxGiftWrap)).append("\n");
    sb.append("    taxRate: ").append(toIndentedString(taxRate)).append("\n");
    sb.append("    taxRateFormatted: ").append(toIndentedString(taxRateFormatted)).append("\n");
    sb.append("    taxShipping: ").append(toIndentedString(taxShipping)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

