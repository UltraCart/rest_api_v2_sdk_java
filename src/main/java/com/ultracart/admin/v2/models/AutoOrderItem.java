/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.AutoOrderItemFutureSchedule;
import com.ultracart.admin.v2.models.AutoOrderItemOption;
import com.ultracart.admin.v2.models.AutoOrderItemSimpleSchedule;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * AutoOrderItem
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-01-05T11:02:37.171-05:00[America/Indianapolis]")
public class AutoOrderItem {
  public static final String SERIALIZED_NAME_ARBITRARY_ITEM_ID = "arbitrary_item_id";
  @SerializedName(SERIALIZED_NAME_ARBITRARY_ITEM_ID)
  private String arbitraryItemId;

  public static final String SERIALIZED_NAME_ARBITRARY_PERCENTAGE_DISCOUNT = "arbitrary_percentage_discount";
  @SerializedName(SERIALIZED_NAME_ARBITRARY_PERCENTAGE_DISCOUNT)
  private BigDecimal arbitraryPercentageDiscount;

  public static final String SERIALIZED_NAME_ARBITRARY_QUANTITY = "arbitrary_quantity";
  @SerializedName(SERIALIZED_NAME_ARBITRARY_QUANTITY)
  private BigDecimal arbitraryQuantity;

  public static final String SERIALIZED_NAME_ARBITRARY_SCHEDULE_DAYS = "arbitrary_schedule_days";
  @SerializedName(SERIALIZED_NAME_ARBITRARY_SCHEDULE_DAYS)
  private Integer arbitraryScheduleDays;

  public static final String SERIALIZED_NAME_ARBITRARY_UNIT_COST = "arbitrary_unit_cost";
  @SerializedName(SERIALIZED_NAME_ARBITRARY_UNIT_COST)
  private BigDecimal arbitraryUnitCost;

  public static final String SERIALIZED_NAME_ARBITRARY_UNIT_COST_REMAINING_ORDERS = "arbitrary_unit_cost_remaining_orders";
  @SerializedName(SERIALIZED_NAME_ARBITRARY_UNIT_COST_REMAINING_ORDERS)
  private Integer arbitraryUnitCostRemainingOrders;

  public static final String SERIALIZED_NAME_AUTO_ORDER_ITEM_OID = "auto_order_item_oid";
  @SerializedName(SERIALIZED_NAME_AUTO_ORDER_ITEM_OID)
  private Integer autoOrderItemOid;

  /**
   * Frequency of the rebill if not a fixed schedule
   */
  @JsonAdapter(FrequencyEnum.Adapter.class)
  public enum FrequencyEnum {
    WEEKLY("Weekly"),
    
    BIWEEKLY("Biweekly"),
    
    EVERY_("Every..."),
    
    EVERY_10_DAYS("Every 10 Days"),
    
    EVERY_24_DAYS("Every 24 Days"),
    
    EVERY_28_DAYS("Every 28 Days"),
    
    MONTHLY("Monthly"),
    
    EVERY_45_DAYS("Every 45 Days"),
    
    EVERY_2_MONTHS("Every 2 Months"),
    
    EVERY_3_MONTHS("Every 3 Months"),
    
    EVERY_4_MONTHS("Every 4 Months"),
    
    EVERY_6_MONTHS("Every 6 Months"),
    
    YEARLY("Yearly");

    private String value;

    FrequencyEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static FrequencyEnum fromValue(String value) {
      for (FrequencyEnum b : FrequencyEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<FrequencyEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final FrequencyEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public FrequencyEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return FrequencyEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_FREQUENCY = "frequency";
  @SerializedName(SERIALIZED_NAME_FREQUENCY)
  private FrequencyEnum frequency;

  public static final String SERIALIZED_NAME_FUTURE_SCHEDULES = "future_schedules";
  @SerializedName(SERIALIZED_NAME_FUTURE_SCHEDULES)
  private List<AutoOrderItemFutureSchedule> futureSchedules = null;

  public static final String SERIALIZED_NAME_LAST_ORDER_DTS = "last_order_dts";
  @SerializedName(SERIALIZED_NAME_LAST_ORDER_DTS)
  private String lastOrderDts;

  public static final String SERIALIZED_NAME_LIFE_TIME_VALUE = "life_time_value";
  @SerializedName(SERIALIZED_NAME_LIFE_TIME_VALUE)
  private BigDecimal lifeTimeValue;

  public static final String SERIALIZED_NAME_NEXT_PRESHIPMENT_NOTICE_DTS = "next_preshipment_notice_dts";
  @SerializedName(SERIALIZED_NAME_NEXT_PRESHIPMENT_NOTICE_DTS)
  private String nextPreshipmentNoticeDts;

  public static final String SERIALIZED_NAME_NEXT_SHIPMENT_DTS = "next_shipment_dts";
  @SerializedName(SERIALIZED_NAME_NEXT_SHIPMENT_DTS)
  private String nextShipmentDts;

  public static final String SERIALIZED_NAME_NO_ORDER_AFTER_DTS = "no_order_after_dts";
  @SerializedName(SERIALIZED_NAME_NO_ORDER_AFTER_DTS)
  private String noOrderAfterDts;

  public static final String SERIALIZED_NAME_NUMBER_OF_REBILLS = "number_of_rebills";
  @SerializedName(SERIALIZED_NAME_NUMBER_OF_REBILLS)
  private Integer numberOfRebills;

  public static final String SERIALIZED_NAME_OPTIONS = "options";
  @SerializedName(SERIALIZED_NAME_OPTIONS)
  private List<AutoOrderItemOption> options = null;

  public static final String SERIALIZED_NAME_ORIGINAL_ITEM_ID = "original_item_id";
  @SerializedName(SERIALIZED_NAME_ORIGINAL_ITEM_ID)
  private String originalItemId;

  public static final String SERIALIZED_NAME_ORIGINAL_QUANTITY = "original_quantity";
  @SerializedName(SERIALIZED_NAME_ORIGINAL_QUANTITY)
  private BigDecimal originalQuantity;

  public static final String SERIALIZED_NAME_PAYPAL_PAYER_ID = "paypal_payer_id";
  @SerializedName(SERIALIZED_NAME_PAYPAL_PAYER_ID)
  private String paypalPayerId;

  public static final String SERIALIZED_NAME_PAYPAL_RECURRING_PAYMENT_PROFILE_ID = "paypal_recurring_payment_profile_id";
  @SerializedName(SERIALIZED_NAME_PAYPAL_RECURRING_PAYMENT_PROFILE_ID)
  private String paypalRecurringPaymentProfileId;

  public static final String SERIALIZED_NAME_PRESHIPMENT_NOTICE_SENT = "preshipment_notice_sent";
  @SerializedName(SERIALIZED_NAME_PRESHIPMENT_NOTICE_SENT)
  private Boolean preshipmentNoticeSent;

  public static final String SERIALIZED_NAME_REBILL_VALUE = "rebill_value";
  @SerializedName(SERIALIZED_NAME_REBILL_VALUE)
  private BigDecimal rebillValue;

  public static final String SERIALIZED_NAME_REMAINING_REPEAT_COUNT = "remaining_repeat_count";
  @SerializedName(SERIALIZED_NAME_REMAINING_REPEAT_COUNT)
  private Integer remainingRepeatCount;

  public static final String SERIALIZED_NAME_SIMPLE_SCHEDULE = "simple_schedule";
  @SerializedName(SERIALIZED_NAME_SIMPLE_SCHEDULE)
  private AutoOrderItemSimpleSchedule simpleSchedule;

  public AutoOrderItem() { 
  }

  public AutoOrderItem arbitraryItemId(String arbitraryItemId) {
    
    this.arbitraryItemId = arbitraryItemId;
    return this;
  }

   /**
   * Arbitrary item id that should be rebilled instead of the normal schedule
   * @return arbitraryItemId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Arbitrary item id that should be rebilled instead of the normal schedule")

  public String getArbitraryItemId() {
    return arbitraryItemId;
  }


  public void setArbitraryItemId(String arbitraryItemId) {
    this.arbitraryItemId = arbitraryItemId;
  }


  public AutoOrderItem arbitraryPercentageDiscount(BigDecimal arbitraryPercentageDiscount) {
    
    this.arbitraryPercentageDiscount = arbitraryPercentageDiscount;
    return this;
  }

   /**
   * An arbitrary percentage discount to provide on future rebills
   * @return arbitraryPercentageDiscount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An arbitrary percentage discount to provide on future rebills")

  public BigDecimal getArbitraryPercentageDiscount() {
    return arbitraryPercentageDiscount;
  }


  public void setArbitraryPercentageDiscount(BigDecimal arbitraryPercentageDiscount) {
    this.arbitraryPercentageDiscount = arbitraryPercentageDiscount;
  }


  public AutoOrderItem arbitraryQuantity(BigDecimal arbitraryQuantity) {
    
    this.arbitraryQuantity = arbitraryQuantity;
    return this;
  }

   /**
   * Arbitrary quantity to rebill
   * @return arbitraryQuantity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Arbitrary quantity to rebill")

  public BigDecimal getArbitraryQuantity() {
    return arbitraryQuantity;
  }


  public void setArbitraryQuantity(BigDecimal arbitraryQuantity) {
    this.arbitraryQuantity = arbitraryQuantity;
  }


  public AutoOrderItem arbitraryScheduleDays(Integer arbitraryScheduleDays) {
    
    this.arbitraryScheduleDays = arbitraryScheduleDays;
    return this;
  }

   /**
   * The number of days to rebill if the frequency is set to an arbitrary number of days
   * @return arbitraryScheduleDays
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of days to rebill if the frequency is set to an arbitrary number of days")

  public Integer getArbitraryScheduleDays() {
    return arbitraryScheduleDays;
  }


  public void setArbitraryScheduleDays(Integer arbitraryScheduleDays) {
    this.arbitraryScheduleDays = arbitraryScheduleDays;
  }


  public AutoOrderItem arbitraryUnitCost(BigDecimal arbitraryUnitCost) {
    
    this.arbitraryUnitCost = arbitraryUnitCost;
    return this;
  }

   /**
   * Arbitrary unit cost that rebills of this item should occur at
   * @return arbitraryUnitCost
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Arbitrary unit cost that rebills of this item should occur at")

  public BigDecimal getArbitraryUnitCost() {
    return arbitraryUnitCost;
  }


  public void setArbitraryUnitCost(BigDecimal arbitraryUnitCost) {
    this.arbitraryUnitCost = arbitraryUnitCost;
  }


  public AutoOrderItem arbitraryUnitCostRemainingOrders(Integer arbitraryUnitCostRemainingOrders) {
    
    this.arbitraryUnitCostRemainingOrders = arbitraryUnitCostRemainingOrders;
    return this;
  }

   /**
   * The number of rebills to give the arbitrary unit cost on before reverting to normal pricing.
   * @return arbitraryUnitCostRemainingOrders
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of rebills to give the arbitrary unit cost on before reverting to normal pricing.")

  public Integer getArbitraryUnitCostRemainingOrders() {
    return arbitraryUnitCostRemainingOrders;
  }


  public void setArbitraryUnitCostRemainingOrders(Integer arbitraryUnitCostRemainingOrders) {
    this.arbitraryUnitCostRemainingOrders = arbitraryUnitCostRemainingOrders;
  }


  public AutoOrderItem autoOrderItemOid(Integer autoOrderItemOid) {
    
    this.autoOrderItemOid = autoOrderItemOid;
    return this;
  }

   /**
   * Primary key of AutoOrderItem
   * @return autoOrderItemOid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Primary key of AutoOrderItem")

  public Integer getAutoOrderItemOid() {
    return autoOrderItemOid;
  }


  public void setAutoOrderItemOid(Integer autoOrderItemOid) {
    this.autoOrderItemOid = autoOrderItemOid;
  }


  public AutoOrderItem frequency(FrequencyEnum frequency) {
    
    this.frequency = frequency;
    return this;
  }

   /**
   * Frequency of the rebill if not a fixed schedule
   * @return frequency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Frequency of the rebill if not a fixed schedule")

  public FrequencyEnum getFrequency() {
    return frequency;
  }


  public void setFrequency(FrequencyEnum frequency) {
    this.frequency = frequency;
  }


  public AutoOrderItem futureSchedules(List<AutoOrderItemFutureSchedule> futureSchedules) {
    
    this.futureSchedules = futureSchedules;
    return this;
  }

  public AutoOrderItem addFutureSchedulesItem(AutoOrderItemFutureSchedule futureSchedulesItem) {
    if (this.futureSchedules == null) {
      this.futureSchedules = new ArrayList<>();
    }
    this.futureSchedules.add(futureSchedulesItem);
    return this;
  }

   /**
   * The future rebill schedule for this item up to the next ten rebills
   * @return futureSchedules
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The future rebill schedule for this item up to the next ten rebills")

  public List<AutoOrderItemFutureSchedule> getFutureSchedules() {
    return futureSchedules;
  }


  public void setFutureSchedules(List<AutoOrderItemFutureSchedule> futureSchedules) {
    this.futureSchedules = futureSchedules;
  }


  public AutoOrderItem lastOrderDts(String lastOrderDts) {
    
    this.lastOrderDts = lastOrderDts;
    return this;
  }

   /**
   * Date/time of the last order of this item
   * @return lastOrderDts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Date/time of the last order of this item")

  public String getLastOrderDts() {
    return lastOrderDts;
  }


  public void setLastOrderDts(String lastOrderDts) {
    this.lastOrderDts = lastOrderDts;
  }


  public AutoOrderItem lifeTimeValue(BigDecimal lifeTimeValue) {
    
    this.lifeTimeValue = lifeTimeValue;
    return this;
  }

   /**
   * The life time value of this item including the original purchase
   * @return lifeTimeValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The life time value of this item including the original purchase")

  public BigDecimal getLifeTimeValue() {
    return lifeTimeValue;
  }


  public void setLifeTimeValue(BigDecimal lifeTimeValue) {
    this.lifeTimeValue = lifeTimeValue;
  }


  public AutoOrderItem nextPreshipmentNoticeDts(String nextPreshipmentNoticeDts) {
    
    this.nextPreshipmentNoticeDts = nextPreshipmentNoticeDts;
    return this;
  }

   /**
   * The date/time of when the next pre-shipment notice should be sent
   * @return nextPreshipmentNoticeDts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date/time of when the next pre-shipment notice should be sent")

  public String getNextPreshipmentNoticeDts() {
    return nextPreshipmentNoticeDts;
  }


  public void setNextPreshipmentNoticeDts(String nextPreshipmentNoticeDts) {
    this.nextPreshipmentNoticeDts = nextPreshipmentNoticeDts;
  }


  public AutoOrderItem nextShipmentDts(String nextShipmentDts) {
    
    this.nextShipmentDts = nextShipmentDts;
    return this;
  }

   /**
   * Date/time that this item is scheduled to rebill
   * @return nextShipmentDts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Date/time that this item is scheduled to rebill")

  public String getNextShipmentDts() {
    return nextShipmentDts;
  }


  public void setNextShipmentDts(String nextShipmentDts) {
    this.nextShipmentDts = nextShipmentDts;
  }


  public AutoOrderItem noOrderAfterDts(String noOrderAfterDts) {
    
    this.noOrderAfterDts = noOrderAfterDts;
    return this;
  }

   /**
   * Date/time after which no additional rebills of this item should occur
   * @return noOrderAfterDts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Date/time after which no additional rebills of this item should occur")

  public String getNoOrderAfterDts() {
    return noOrderAfterDts;
  }


  public void setNoOrderAfterDts(String noOrderAfterDts) {
    this.noOrderAfterDts = noOrderAfterDts;
  }


  public AutoOrderItem numberOfRebills(Integer numberOfRebills) {
    
    this.numberOfRebills = numberOfRebills;
    return this;
  }

   /**
   * The number of times this item has rebilled
   * @return numberOfRebills
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of times this item has rebilled")

  public Integer getNumberOfRebills() {
    return numberOfRebills;
  }


  public void setNumberOfRebills(Integer numberOfRebills) {
    this.numberOfRebills = numberOfRebills;
  }


  public AutoOrderItem options(List<AutoOrderItemOption> options) {
    
    this.options = options;
    return this;
  }

  public AutoOrderItem addOptionsItem(AutoOrderItemOption optionsItem) {
    if (this.options == null) {
      this.options = new ArrayList<>();
    }
    this.options.add(optionsItem);
    return this;
  }

   /**
   * Options associated with this item
   * @return options
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Options associated with this item")

  public List<AutoOrderItemOption> getOptions() {
    return options;
  }


  public void setOptions(List<AutoOrderItemOption> options) {
    this.options = options;
  }


  public AutoOrderItem originalItemId(String originalItemId) {
    
    this.originalItemId = originalItemId;
    return this;
  }

   /**
   * The original item id purchased.  This item controls scheduling.  If you wish to modify a schedule, for example, from monthly to yearly, change this item from your monthly item to your yearly item, and then change the next_shipment_dts to your desired date.
   * @return originalItemId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The original item id purchased.  This item controls scheduling.  If you wish to modify a schedule, for example, from monthly to yearly, change this item from your monthly item to your yearly item, and then change the next_shipment_dts to your desired date.")

  public String getOriginalItemId() {
    return originalItemId;
  }


  public void setOriginalItemId(String originalItemId) {
    this.originalItemId = originalItemId;
  }


  public AutoOrderItem originalQuantity(BigDecimal originalQuantity) {
    
    this.originalQuantity = originalQuantity;
    return this;
  }

   /**
   * The original quantity purchased
   * @return originalQuantity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The original quantity purchased")

  public BigDecimal getOriginalQuantity() {
    return originalQuantity;
  }


  public void setOriginalQuantity(BigDecimal originalQuantity) {
    this.originalQuantity = originalQuantity;
  }


  public AutoOrderItem paypalPayerId(String paypalPayerId) {
    
    this.paypalPayerId = paypalPayerId;
    return this;
  }

   /**
   * The PayPal Payer ID tied to this item
   * @return paypalPayerId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The PayPal Payer ID tied to this item")

  public String getPaypalPayerId() {
    return paypalPayerId;
  }


  public void setPaypalPayerId(String paypalPayerId) {
    this.paypalPayerId = paypalPayerId;
  }


  public AutoOrderItem paypalRecurringPaymentProfileId(String paypalRecurringPaymentProfileId) {
    
    this.paypalRecurringPaymentProfileId = paypalRecurringPaymentProfileId;
    return this;
  }

   /**
   * The PayPal Profile ID tied to this item
   * @return paypalRecurringPaymentProfileId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The PayPal Profile ID tied to this item")

  public String getPaypalRecurringPaymentProfileId() {
    return paypalRecurringPaymentProfileId;
  }


  public void setPaypalRecurringPaymentProfileId(String paypalRecurringPaymentProfileId) {
    this.paypalRecurringPaymentProfileId = paypalRecurringPaymentProfileId;
  }


  public AutoOrderItem preshipmentNoticeSent(Boolean preshipmentNoticeSent) {
    
    this.preshipmentNoticeSent = preshipmentNoticeSent;
    return this;
  }

   /**
   * True if the preshipment notice associated with the next rebill has been sent
   * @return preshipmentNoticeSent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if the preshipment notice associated with the next rebill has been sent")

  public Boolean getPreshipmentNoticeSent() {
    return preshipmentNoticeSent;
  }


  public void setPreshipmentNoticeSent(Boolean preshipmentNoticeSent) {
    this.preshipmentNoticeSent = preshipmentNoticeSent;
  }


  public AutoOrderItem rebillValue(BigDecimal rebillValue) {
    
    this.rebillValue = rebillValue;
    return this;
  }

   /**
   * The value of the rebills of this item
   * @return rebillValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The value of the rebills of this item")

  public BigDecimal getRebillValue() {
    return rebillValue;
  }


  public void setRebillValue(BigDecimal rebillValue) {
    this.rebillValue = rebillValue;
  }


  public AutoOrderItem remainingRepeatCount(Integer remainingRepeatCount) {
    
    this.remainingRepeatCount = remainingRepeatCount;
    return this;
  }

   /**
   * The number of rebills remaining before this item is complete
   * @return remainingRepeatCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of rebills remaining before this item is complete")

  public Integer getRemainingRepeatCount() {
    return remainingRepeatCount;
  }


  public void setRemainingRepeatCount(Integer remainingRepeatCount) {
    this.remainingRepeatCount = remainingRepeatCount;
  }


  public AutoOrderItem simpleSchedule(AutoOrderItemSimpleSchedule simpleSchedule) {
    
    this.simpleSchedule = simpleSchedule;
    return this;
  }

   /**
   * Get simpleSchedule
   * @return simpleSchedule
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AutoOrderItemSimpleSchedule getSimpleSchedule() {
    return simpleSchedule;
  }


  public void setSimpleSchedule(AutoOrderItemSimpleSchedule simpleSchedule) {
    this.simpleSchedule = simpleSchedule;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AutoOrderItem autoOrderItem = (AutoOrderItem) o;
    return Objects.equals(this.arbitraryItemId, autoOrderItem.arbitraryItemId) &&
        Objects.equals(this.arbitraryPercentageDiscount, autoOrderItem.arbitraryPercentageDiscount) &&
        Objects.equals(this.arbitraryQuantity, autoOrderItem.arbitraryQuantity) &&
        Objects.equals(this.arbitraryScheduleDays, autoOrderItem.arbitraryScheduleDays) &&
        Objects.equals(this.arbitraryUnitCost, autoOrderItem.arbitraryUnitCost) &&
        Objects.equals(this.arbitraryUnitCostRemainingOrders, autoOrderItem.arbitraryUnitCostRemainingOrders) &&
        Objects.equals(this.autoOrderItemOid, autoOrderItem.autoOrderItemOid) &&
        Objects.equals(this.frequency, autoOrderItem.frequency) &&
        Objects.equals(this.futureSchedules, autoOrderItem.futureSchedules) &&
        Objects.equals(this.lastOrderDts, autoOrderItem.lastOrderDts) &&
        Objects.equals(this.lifeTimeValue, autoOrderItem.lifeTimeValue) &&
        Objects.equals(this.nextPreshipmentNoticeDts, autoOrderItem.nextPreshipmentNoticeDts) &&
        Objects.equals(this.nextShipmentDts, autoOrderItem.nextShipmentDts) &&
        Objects.equals(this.noOrderAfterDts, autoOrderItem.noOrderAfterDts) &&
        Objects.equals(this.numberOfRebills, autoOrderItem.numberOfRebills) &&
        Objects.equals(this.options, autoOrderItem.options) &&
        Objects.equals(this.originalItemId, autoOrderItem.originalItemId) &&
        Objects.equals(this.originalQuantity, autoOrderItem.originalQuantity) &&
        Objects.equals(this.paypalPayerId, autoOrderItem.paypalPayerId) &&
        Objects.equals(this.paypalRecurringPaymentProfileId, autoOrderItem.paypalRecurringPaymentProfileId) &&
        Objects.equals(this.preshipmentNoticeSent, autoOrderItem.preshipmentNoticeSent) &&
        Objects.equals(this.rebillValue, autoOrderItem.rebillValue) &&
        Objects.equals(this.remainingRepeatCount, autoOrderItem.remainingRepeatCount) &&
        Objects.equals(this.simpleSchedule, autoOrderItem.simpleSchedule);
  }

  @Override
  public int hashCode() {
    return Objects.hash(arbitraryItemId, arbitraryPercentageDiscount, arbitraryQuantity, arbitraryScheduleDays, arbitraryUnitCost, arbitraryUnitCostRemainingOrders, autoOrderItemOid, frequency, futureSchedules, lastOrderDts, lifeTimeValue, nextPreshipmentNoticeDts, nextShipmentDts, noOrderAfterDts, numberOfRebills, options, originalItemId, originalQuantity, paypalPayerId, paypalRecurringPaymentProfileId, preshipmentNoticeSent, rebillValue, remainingRepeatCount, simpleSchedule);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AutoOrderItem {\n");
    sb.append("    arbitraryItemId: ").append(toIndentedString(arbitraryItemId)).append("\n");
    sb.append("    arbitraryPercentageDiscount: ").append(toIndentedString(arbitraryPercentageDiscount)).append("\n");
    sb.append("    arbitraryQuantity: ").append(toIndentedString(arbitraryQuantity)).append("\n");
    sb.append("    arbitraryScheduleDays: ").append(toIndentedString(arbitraryScheduleDays)).append("\n");
    sb.append("    arbitraryUnitCost: ").append(toIndentedString(arbitraryUnitCost)).append("\n");
    sb.append("    arbitraryUnitCostRemainingOrders: ").append(toIndentedString(arbitraryUnitCostRemainingOrders)).append("\n");
    sb.append("    autoOrderItemOid: ").append(toIndentedString(autoOrderItemOid)).append("\n");
    sb.append("    frequency: ").append(toIndentedString(frequency)).append("\n");
    sb.append("    futureSchedules: ").append(toIndentedString(futureSchedules)).append("\n");
    sb.append("    lastOrderDts: ").append(toIndentedString(lastOrderDts)).append("\n");
    sb.append("    lifeTimeValue: ").append(toIndentedString(lifeTimeValue)).append("\n");
    sb.append("    nextPreshipmentNoticeDts: ").append(toIndentedString(nextPreshipmentNoticeDts)).append("\n");
    sb.append("    nextShipmentDts: ").append(toIndentedString(nextShipmentDts)).append("\n");
    sb.append("    noOrderAfterDts: ").append(toIndentedString(noOrderAfterDts)).append("\n");
    sb.append("    numberOfRebills: ").append(toIndentedString(numberOfRebills)).append("\n");
    sb.append("    options: ").append(toIndentedString(options)).append("\n");
    sb.append("    originalItemId: ").append(toIndentedString(originalItemId)).append("\n");
    sb.append("    originalQuantity: ").append(toIndentedString(originalQuantity)).append("\n");
    sb.append("    paypalPayerId: ").append(toIndentedString(paypalPayerId)).append("\n");
    sb.append("    paypalRecurringPaymentProfileId: ").append(toIndentedString(paypalRecurringPaymentProfileId)).append("\n");
    sb.append("    preshipmentNoticeSent: ").append(toIndentedString(preshipmentNoticeSent)).append("\n");
    sb.append("    rebillValue: ").append(toIndentedString(rebillValue)).append("\n");
    sb.append("    remainingRepeatCount: ").append(toIndentedString(remainingRepeatCount)).append("\n");
    sb.append("    simpleSchedule: ").append(toIndentedString(simpleSchedule)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("arbitrary_item_id");
    openapiFields.add("arbitrary_percentage_discount");
    openapiFields.add("arbitrary_quantity");
    openapiFields.add("arbitrary_schedule_days");
    openapiFields.add("arbitrary_unit_cost");
    openapiFields.add("arbitrary_unit_cost_remaining_orders");
    openapiFields.add("auto_order_item_oid");
    openapiFields.add("frequency");
    openapiFields.add("future_schedules");
    openapiFields.add("last_order_dts");
    openapiFields.add("life_time_value");
    openapiFields.add("next_preshipment_notice_dts");
    openapiFields.add("next_shipment_dts");
    openapiFields.add("no_order_after_dts");
    openapiFields.add("number_of_rebills");
    openapiFields.add("options");
    openapiFields.add("original_item_id");
    openapiFields.add("original_quantity");
    openapiFields.add("paypal_payer_id");
    openapiFields.add("paypal_recurring_payment_profile_id");
    openapiFields.add("preshipment_notice_sent");
    openapiFields.add("rebill_value");
    openapiFields.add("remaining_repeat_count");
    openapiFields.add("simple_schedule");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to AutoOrderItem
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (AutoOrderItem.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in AutoOrderItem is not found in the empty JSON string", AutoOrderItem.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!AutoOrderItem.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AutoOrderItem` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("arbitrary_item_id") != null && !jsonObj.get("arbitrary_item_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `arbitrary_item_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("arbitrary_item_id").toString()));
      }
      if (jsonObj.get("frequency") != null && !jsonObj.get("frequency").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `frequency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("frequency").toString()));
      }
      JsonArray jsonArrayfutureSchedules = jsonObj.getAsJsonArray("future_schedules");
      if (jsonArrayfutureSchedules != null) {
        // ensure the json data is an array
        if (!jsonObj.get("future_schedules").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `future_schedules` to be an array in the JSON string but got `%s`", jsonObj.get("future_schedules").toString()));
        }

        // validate the optional field `future_schedules` (array)
        for (int i = 0; i < jsonArrayfutureSchedules.size(); i++) {
          AutoOrderItemFutureSchedule.validateJsonObject(jsonArrayfutureSchedules.get(i).getAsJsonObject());
        };
      }
      if (jsonObj.get("last_order_dts") != null && !jsonObj.get("last_order_dts").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_order_dts` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_order_dts").toString()));
      }
      if (jsonObj.get("next_preshipment_notice_dts") != null && !jsonObj.get("next_preshipment_notice_dts").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `next_preshipment_notice_dts` to be a primitive type in the JSON string but got `%s`", jsonObj.get("next_preshipment_notice_dts").toString()));
      }
      if (jsonObj.get("next_shipment_dts") != null && !jsonObj.get("next_shipment_dts").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `next_shipment_dts` to be a primitive type in the JSON string but got `%s`", jsonObj.get("next_shipment_dts").toString()));
      }
      if (jsonObj.get("no_order_after_dts") != null && !jsonObj.get("no_order_after_dts").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `no_order_after_dts` to be a primitive type in the JSON string but got `%s`", jsonObj.get("no_order_after_dts").toString()));
      }
      JsonArray jsonArrayoptions = jsonObj.getAsJsonArray("options");
      if (jsonArrayoptions != null) {
        // ensure the json data is an array
        if (!jsonObj.get("options").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `options` to be an array in the JSON string but got `%s`", jsonObj.get("options").toString()));
        }

        // validate the optional field `options` (array)
        for (int i = 0; i < jsonArrayoptions.size(); i++) {
          AutoOrderItemOption.validateJsonObject(jsonArrayoptions.get(i).getAsJsonObject());
        };
      }
      if (jsonObj.get("original_item_id") != null && !jsonObj.get("original_item_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `original_item_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("original_item_id").toString()));
      }
      if (jsonObj.get("paypal_payer_id") != null && !jsonObj.get("paypal_payer_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `paypal_payer_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("paypal_payer_id").toString()));
      }
      if (jsonObj.get("paypal_recurring_payment_profile_id") != null && !jsonObj.get("paypal_recurring_payment_profile_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `paypal_recurring_payment_profile_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("paypal_recurring_payment_profile_id").toString()));
      }
      // validate the optional field `simple_schedule`
      if (jsonObj.getAsJsonObject("simple_schedule") != null) {
        AutoOrderItemSimpleSchedule.validateJsonObject(jsonObj.getAsJsonObject("simple_schedule"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AutoOrderItem.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AutoOrderItem' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AutoOrderItem> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AutoOrderItem.class));

       return (TypeAdapter<T>) new TypeAdapter<AutoOrderItem>() {
           @Override
           public void write(JsonWriter out, AutoOrderItem value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AutoOrderItem read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AutoOrderItem given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AutoOrderItem
  * @throws IOException if the JSON string is invalid with respect to AutoOrderItem
  */
  public static AutoOrderItem fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AutoOrderItem.class);
  }

 /**
  * Convert an instance of AutoOrderItem to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

