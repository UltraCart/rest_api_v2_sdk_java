/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * OrderEdiDocument
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2025-10-14T11:50:44.731-04:00")



public class OrderEdiDocument {
  /**
   * Direction the document flowed
   */
  @JsonAdapter(DirectionEnum.Adapter.class)
  public enum DirectionEnum {
    INBOUND("inbound"),
    
    OUTBOUND("outbound");

    private String value;

    DirectionEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static DirectionEnum fromValue(String text) {
      for (DirectionEnum b : DirectionEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<DirectionEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DirectionEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public DirectionEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return DirectionEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("direction")
  private DirectionEnum direction = null;

  @SerializedName("doc_dts")
  private String docDts = null;

  @SerializedName("document")
  private String document = null;

  @SerializedName("document_type_description")
  private String documentTypeDescription = null;

  @SerializedName("document_type_number")
  private Integer documentTypeNumber = null;

  @SerializedName("external_id")
  private String externalId = null;

  @SerializedName("functional_acknowledgement")
  private String functionalAcknowledgement = null;

  @SerializedName("functional_acknowledgement_dts")
  private String functionalAcknowledgementDts = null;

  @SerializedName("functional_acknowledgement_pending")
  private Boolean functionalAcknowledgementPending = null;

  @SerializedName("group_control_number")
  private Integer groupControlNumber = null;

  @SerializedName("internal_id")
  private String internalId = null;

  @SerializedName("merchant_id")
  private String merchantId = null;

  @SerializedName("order_id")
  private String orderId = null;

  @SerializedName("test_mode")
  private Boolean testMode = null;

  public OrderEdiDocument direction(DirectionEnum direction) {
    this.direction = direction;
    return this;
  }

   /**
   * Direction the document flowed
   * @return direction
  **/
  @ApiModelProperty(value = "Direction the document flowed")
  public DirectionEnum getDirection() {
    return direction;
  }

  public void setDirection(DirectionEnum direction) {
    this.direction = direction;
  }

  public OrderEdiDocument docDts(String docDts) {
    this.docDts = docDts;
    return this;
  }

   /**
   * Date/time the document was created/received
   * @return docDts
  **/
  @ApiModelProperty(value = "Date/time the document was created/received")
  public String getDocDts() {
    return docDts;
  }

  public void setDocDts(String docDts) {
    this.docDts = docDts;
  }

  public OrderEdiDocument document(String document) {
    this.document = document;
    return this;
  }

   /**
   * Get document
   * @return document
  **/
  @ApiModelProperty(value = "")
  public String getDocument() {
    return document;
  }

  public void setDocument(String document) {
    this.document = document;
  }

  public OrderEdiDocument documentTypeDescription(String documentTypeDescription) {
    this.documentTypeDescription = documentTypeDescription;
    return this;
  }

   /**
   * Get documentTypeDescription
   * @return documentTypeDescription
  **/
  @ApiModelProperty(value = "")
  public String getDocumentTypeDescription() {
    return documentTypeDescription;
  }

  public void setDocumentTypeDescription(String documentTypeDescription) {
    this.documentTypeDescription = documentTypeDescription;
  }

  public OrderEdiDocument documentTypeNumber(Integer documentTypeNumber) {
    this.documentTypeNumber = documentTypeNumber;
    return this;
  }

   /**
   * Get documentTypeNumber
   * @return documentTypeNumber
  **/
  @ApiModelProperty(value = "")
  public Integer getDocumentTypeNumber() {
    return documentTypeNumber;
  }

  public void setDocumentTypeNumber(Integer documentTypeNumber) {
    this.documentTypeNumber = documentTypeNumber;
  }

  public OrderEdiDocument externalId(String externalId) {
    this.externalId = externalId;
    return this;
  }

   /**
   * Get externalId
   * @return externalId
  **/
  @ApiModelProperty(value = "")
  public String getExternalId() {
    return externalId;
  }

  public void setExternalId(String externalId) {
    this.externalId = externalId;
  }

  public OrderEdiDocument functionalAcknowledgement(String functionalAcknowledgement) {
    this.functionalAcknowledgement = functionalAcknowledgement;
    return this;
  }

   /**
   * Get functionalAcknowledgement
   * @return functionalAcknowledgement
  **/
  @ApiModelProperty(value = "")
  public String getFunctionalAcknowledgement() {
    return functionalAcknowledgement;
  }

  public void setFunctionalAcknowledgement(String functionalAcknowledgement) {
    this.functionalAcknowledgement = functionalAcknowledgement;
  }

  public OrderEdiDocument functionalAcknowledgementDts(String functionalAcknowledgementDts) {
    this.functionalAcknowledgementDts = functionalAcknowledgementDts;
    return this;
  }

   /**
   * Get functionalAcknowledgementDts
   * @return functionalAcknowledgementDts
  **/
  @ApiModelProperty(value = "")
  public String getFunctionalAcknowledgementDts() {
    return functionalAcknowledgementDts;
  }

  public void setFunctionalAcknowledgementDts(String functionalAcknowledgementDts) {
    this.functionalAcknowledgementDts = functionalAcknowledgementDts;
  }

  public OrderEdiDocument functionalAcknowledgementPending(Boolean functionalAcknowledgementPending) {
    this.functionalAcknowledgementPending = functionalAcknowledgementPending;
    return this;
  }

   /**
   * Get functionalAcknowledgementPending
   * @return functionalAcknowledgementPending
  **/
  @ApiModelProperty(value = "")
  public Boolean isFunctionalAcknowledgementPending() {
    return functionalAcknowledgementPending;
  }

  public void setFunctionalAcknowledgementPending(Boolean functionalAcknowledgementPending) {
    this.functionalAcknowledgementPending = functionalAcknowledgementPending;
  }

  public OrderEdiDocument groupControlNumber(Integer groupControlNumber) {
    this.groupControlNumber = groupControlNumber;
    return this;
  }

   /**
   * Get groupControlNumber
   * @return groupControlNumber
  **/
  @ApiModelProperty(value = "")
  public Integer getGroupControlNumber() {
    return groupControlNumber;
  }

  public void setGroupControlNumber(Integer groupControlNumber) {
    this.groupControlNumber = groupControlNumber;
  }

  public OrderEdiDocument internalId(String internalId) {
    this.internalId = internalId;
    return this;
  }

   /**
   * Get internalId
   * @return internalId
  **/
  @ApiModelProperty(value = "")
  public String getInternalId() {
    return internalId;
  }

  public void setInternalId(String internalId) {
    this.internalId = internalId;
  }

  public OrderEdiDocument merchantId(String merchantId) {
    this.merchantId = merchantId;
    return this;
  }

   /**
   * Get merchantId
   * @return merchantId
  **/
  @ApiModelProperty(value = "")
  public String getMerchantId() {
    return merchantId;
  }

  public void setMerchantId(String merchantId) {
    this.merchantId = merchantId;
  }

  public OrderEdiDocument orderId(String orderId) {
    this.orderId = orderId;
    return this;
  }

   /**
   * Get orderId
   * @return orderId
  **/
  @ApiModelProperty(value = "")
  public String getOrderId() {
    return orderId;
  }

  public void setOrderId(String orderId) {
    this.orderId = orderId;
  }

  public OrderEdiDocument testMode(Boolean testMode) {
    this.testMode = testMode;
    return this;
  }

   /**
   * Get testMode
   * @return testMode
  **/
  @ApiModelProperty(value = "")
  public Boolean isTestMode() {
    return testMode;
  }

  public void setTestMode(Boolean testMode) {
    this.testMode = testMode;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderEdiDocument orderEdiDocument = (OrderEdiDocument) o;
    return Objects.equals(this.direction, orderEdiDocument.direction) &&
        Objects.equals(this.docDts, orderEdiDocument.docDts) &&
        Objects.equals(this.document, orderEdiDocument.document) &&
        Objects.equals(this.documentTypeDescription, orderEdiDocument.documentTypeDescription) &&
        Objects.equals(this.documentTypeNumber, orderEdiDocument.documentTypeNumber) &&
        Objects.equals(this.externalId, orderEdiDocument.externalId) &&
        Objects.equals(this.functionalAcknowledgement, orderEdiDocument.functionalAcknowledgement) &&
        Objects.equals(this.functionalAcknowledgementDts, orderEdiDocument.functionalAcknowledgementDts) &&
        Objects.equals(this.functionalAcknowledgementPending, orderEdiDocument.functionalAcknowledgementPending) &&
        Objects.equals(this.groupControlNumber, orderEdiDocument.groupControlNumber) &&
        Objects.equals(this.internalId, orderEdiDocument.internalId) &&
        Objects.equals(this.merchantId, orderEdiDocument.merchantId) &&
        Objects.equals(this.orderId, orderEdiDocument.orderId) &&
        Objects.equals(this.testMode, orderEdiDocument.testMode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(direction, docDts, document, documentTypeDescription, documentTypeNumber, externalId, functionalAcknowledgement, functionalAcknowledgementDts, functionalAcknowledgementPending, groupControlNumber, internalId, merchantId, orderId, testMode);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderEdiDocument {\n");
    
    sb.append("    direction: ").append(toIndentedString(direction)).append("\n");
    sb.append("    docDts: ").append(toIndentedString(docDts)).append("\n");
    sb.append("    document: ").append(toIndentedString(document)).append("\n");
    sb.append("    documentTypeDescription: ").append(toIndentedString(documentTypeDescription)).append("\n");
    sb.append("    documentTypeNumber: ").append(toIndentedString(documentTypeNumber)).append("\n");
    sb.append("    externalId: ").append(toIndentedString(externalId)).append("\n");
    sb.append("    functionalAcknowledgement: ").append(toIndentedString(functionalAcknowledgement)).append("\n");
    sb.append("    functionalAcknowledgementDts: ").append(toIndentedString(functionalAcknowledgementDts)).append("\n");
    sb.append("    functionalAcknowledgementPending: ").append(toIndentedString(functionalAcknowledgementPending)).append("\n");
    sb.append("    groupControlNumber: ").append(toIndentedString(groupControlNumber)).append("\n");
    sb.append("    internalId: ").append(toIndentedString(internalId)).append("\n");
    sb.append("    merchantId: ").append(toIndentedString(merchantId)).append("\n");
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    testMode: ").append(toIndentedString(testMode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

