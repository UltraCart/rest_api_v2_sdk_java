/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * OrderEdiDocument
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-20T10:38:24.317-05:00[America/Indianapolis]")
public class OrderEdiDocument {
  /**
   * Direction the document flowed
   */
  @JsonAdapter(DirectionEnum.Adapter.class)
  public enum DirectionEnum {
    INBOUND("inbound"),
    
    OUTBOUND("outbound");

    private String value;

    DirectionEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static DirectionEnum fromValue(String value) {
      for (DirectionEnum b : DirectionEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<DirectionEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DirectionEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public DirectionEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return DirectionEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_DIRECTION = "direction";
  @SerializedName(SERIALIZED_NAME_DIRECTION)
  private DirectionEnum direction;

  public static final String SERIALIZED_NAME_DOC_DTS = "doc_dts";
  @SerializedName(SERIALIZED_NAME_DOC_DTS)
  private String docDts;

  public static final String SERIALIZED_NAME_DOCUMENT = "document";
  @SerializedName(SERIALIZED_NAME_DOCUMENT)
  private String document;

  public static final String SERIALIZED_NAME_DOCUMENT_TYPE_DESCRIPTION = "document_type_description";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_TYPE_DESCRIPTION)
  private String documentTypeDescription;

  public static final String SERIALIZED_NAME_DOCUMENT_TYPE_NUMBER = "document_type_number";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_TYPE_NUMBER)
  private Integer documentTypeNumber;

  public static final String SERIALIZED_NAME_EXTERNAL_ID = "external_id";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_ID)
  private String externalId;

  public static final String SERIALIZED_NAME_FUNCTIONAL_ACKNOWLEDGEMENT = "functional_acknowledgement";
  @SerializedName(SERIALIZED_NAME_FUNCTIONAL_ACKNOWLEDGEMENT)
  private String functionalAcknowledgement;

  public static final String SERIALIZED_NAME_FUNCTIONAL_ACKNOWLEDGEMENT_DTS = "functional_acknowledgement_dts";
  @SerializedName(SERIALIZED_NAME_FUNCTIONAL_ACKNOWLEDGEMENT_DTS)
  private String functionalAcknowledgementDts;

  public static final String SERIALIZED_NAME_FUNCTIONAL_ACKNOWLEDGEMENT_PENDING = "functional_acknowledgement_pending";
  @SerializedName(SERIALIZED_NAME_FUNCTIONAL_ACKNOWLEDGEMENT_PENDING)
  private Boolean functionalAcknowledgementPending;

  public static final String SERIALIZED_NAME_GROUP_CONTROL_NUMBER = "group_control_number";
  @SerializedName(SERIALIZED_NAME_GROUP_CONTROL_NUMBER)
  private Integer groupControlNumber;

  public static final String SERIALIZED_NAME_INTERNAL_ID = "internal_id";
  @SerializedName(SERIALIZED_NAME_INTERNAL_ID)
  private String internalId;

  public static final String SERIALIZED_NAME_MERCHANT_ID = "merchant_id";
  @SerializedName(SERIALIZED_NAME_MERCHANT_ID)
  private String merchantId;

  public static final String SERIALIZED_NAME_ORDER_ID = "order_id";
  @SerializedName(SERIALIZED_NAME_ORDER_ID)
  private String orderId;

  public static final String SERIALIZED_NAME_TEST_MODE = "test_mode";
  @SerializedName(SERIALIZED_NAME_TEST_MODE)
  private Boolean testMode;

  public OrderEdiDocument() { 
  }

  public OrderEdiDocument direction(DirectionEnum direction) {
    
    this.direction = direction;
    return this;
  }

   /**
   * Direction the document flowed
   * @return direction
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Direction the document flowed")

  public DirectionEnum getDirection() {
    return direction;
  }


  public void setDirection(DirectionEnum direction) {
    this.direction = direction;
  }


  public OrderEdiDocument docDts(String docDts) {
    
    this.docDts = docDts;
    return this;
  }

   /**
   * Date/time the document was created/received
   * @return docDts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Date/time the document was created/received")

  public String getDocDts() {
    return docDts;
  }


  public void setDocDts(String docDts) {
    this.docDts = docDts;
  }


  public OrderEdiDocument document(String document) {
    
    this.document = document;
    return this;
  }

   /**
   * Get document
   * @return document
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDocument() {
    return document;
  }


  public void setDocument(String document) {
    this.document = document;
  }


  public OrderEdiDocument documentTypeDescription(String documentTypeDescription) {
    
    this.documentTypeDescription = documentTypeDescription;
    return this;
  }

   /**
   * Get documentTypeDescription
   * @return documentTypeDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDocumentTypeDescription() {
    return documentTypeDescription;
  }


  public void setDocumentTypeDescription(String documentTypeDescription) {
    this.documentTypeDescription = documentTypeDescription;
  }


  public OrderEdiDocument documentTypeNumber(Integer documentTypeNumber) {
    
    this.documentTypeNumber = documentTypeNumber;
    return this;
  }

   /**
   * Get documentTypeNumber
   * @return documentTypeNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getDocumentTypeNumber() {
    return documentTypeNumber;
  }


  public void setDocumentTypeNumber(Integer documentTypeNumber) {
    this.documentTypeNumber = documentTypeNumber;
  }


  public OrderEdiDocument externalId(String externalId) {
    
    this.externalId = externalId;
    return this;
  }

   /**
   * Get externalId
   * @return externalId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getExternalId() {
    return externalId;
  }


  public void setExternalId(String externalId) {
    this.externalId = externalId;
  }


  public OrderEdiDocument functionalAcknowledgement(String functionalAcknowledgement) {
    
    this.functionalAcknowledgement = functionalAcknowledgement;
    return this;
  }

   /**
   * Get functionalAcknowledgement
   * @return functionalAcknowledgement
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFunctionalAcknowledgement() {
    return functionalAcknowledgement;
  }


  public void setFunctionalAcknowledgement(String functionalAcknowledgement) {
    this.functionalAcknowledgement = functionalAcknowledgement;
  }


  public OrderEdiDocument functionalAcknowledgementDts(String functionalAcknowledgementDts) {
    
    this.functionalAcknowledgementDts = functionalAcknowledgementDts;
    return this;
  }

   /**
   * Get functionalAcknowledgementDts
   * @return functionalAcknowledgementDts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFunctionalAcknowledgementDts() {
    return functionalAcknowledgementDts;
  }


  public void setFunctionalAcknowledgementDts(String functionalAcknowledgementDts) {
    this.functionalAcknowledgementDts = functionalAcknowledgementDts;
  }


  public OrderEdiDocument functionalAcknowledgementPending(Boolean functionalAcknowledgementPending) {
    
    this.functionalAcknowledgementPending = functionalAcknowledgementPending;
    return this;
  }

   /**
   * Get functionalAcknowledgementPending
   * @return functionalAcknowledgementPending
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getFunctionalAcknowledgementPending() {
    return functionalAcknowledgementPending;
  }


  public void setFunctionalAcknowledgementPending(Boolean functionalAcknowledgementPending) {
    this.functionalAcknowledgementPending = functionalAcknowledgementPending;
  }


  public OrderEdiDocument groupControlNumber(Integer groupControlNumber) {
    
    this.groupControlNumber = groupControlNumber;
    return this;
  }

   /**
   * Get groupControlNumber
   * @return groupControlNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getGroupControlNumber() {
    return groupControlNumber;
  }


  public void setGroupControlNumber(Integer groupControlNumber) {
    this.groupControlNumber = groupControlNumber;
  }


  public OrderEdiDocument internalId(String internalId) {
    
    this.internalId = internalId;
    return this;
  }

   /**
   * Get internalId
   * @return internalId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getInternalId() {
    return internalId;
  }


  public void setInternalId(String internalId) {
    this.internalId = internalId;
  }


  public OrderEdiDocument merchantId(String merchantId) {
    
    this.merchantId = merchantId;
    return this;
  }

   /**
   * Get merchantId
   * @return merchantId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMerchantId() {
    return merchantId;
  }


  public void setMerchantId(String merchantId) {
    this.merchantId = merchantId;
  }


  public OrderEdiDocument orderId(String orderId) {
    
    this.orderId = orderId;
    return this;
  }

   /**
   * Get orderId
   * @return orderId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOrderId() {
    return orderId;
  }


  public void setOrderId(String orderId) {
    this.orderId = orderId;
  }


  public OrderEdiDocument testMode(Boolean testMode) {
    
    this.testMode = testMode;
    return this;
  }

   /**
   * Get testMode
   * @return testMode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getTestMode() {
    return testMode;
  }


  public void setTestMode(Boolean testMode) {
    this.testMode = testMode;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderEdiDocument orderEdiDocument = (OrderEdiDocument) o;
    return Objects.equals(this.direction, orderEdiDocument.direction) &&
        Objects.equals(this.docDts, orderEdiDocument.docDts) &&
        Objects.equals(this.document, orderEdiDocument.document) &&
        Objects.equals(this.documentTypeDescription, orderEdiDocument.documentTypeDescription) &&
        Objects.equals(this.documentTypeNumber, orderEdiDocument.documentTypeNumber) &&
        Objects.equals(this.externalId, orderEdiDocument.externalId) &&
        Objects.equals(this.functionalAcknowledgement, orderEdiDocument.functionalAcknowledgement) &&
        Objects.equals(this.functionalAcknowledgementDts, orderEdiDocument.functionalAcknowledgementDts) &&
        Objects.equals(this.functionalAcknowledgementPending, orderEdiDocument.functionalAcknowledgementPending) &&
        Objects.equals(this.groupControlNumber, orderEdiDocument.groupControlNumber) &&
        Objects.equals(this.internalId, orderEdiDocument.internalId) &&
        Objects.equals(this.merchantId, orderEdiDocument.merchantId) &&
        Objects.equals(this.orderId, orderEdiDocument.orderId) &&
        Objects.equals(this.testMode, orderEdiDocument.testMode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(direction, docDts, document, documentTypeDescription, documentTypeNumber, externalId, functionalAcknowledgement, functionalAcknowledgementDts, functionalAcknowledgementPending, groupControlNumber, internalId, merchantId, orderId, testMode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderEdiDocument {\n");
    sb.append("    direction: ").append(toIndentedString(direction)).append("\n");
    sb.append("    docDts: ").append(toIndentedString(docDts)).append("\n");
    sb.append("    document: ").append(toIndentedString(document)).append("\n");
    sb.append("    documentTypeDescription: ").append(toIndentedString(documentTypeDescription)).append("\n");
    sb.append("    documentTypeNumber: ").append(toIndentedString(documentTypeNumber)).append("\n");
    sb.append("    externalId: ").append(toIndentedString(externalId)).append("\n");
    sb.append("    functionalAcknowledgement: ").append(toIndentedString(functionalAcknowledgement)).append("\n");
    sb.append("    functionalAcknowledgementDts: ").append(toIndentedString(functionalAcknowledgementDts)).append("\n");
    sb.append("    functionalAcknowledgementPending: ").append(toIndentedString(functionalAcknowledgementPending)).append("\n");
    sb.append("    groupControlNumber: ").append(toIndentedString(groupControlNumber)).append("\n");
    sb.append("    internalId: ").append(toIndentedString(internalId)).append("\n");
    sb.append("    merchantId: ").append(toIndentedString(merchantId)).append("\n");
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    testMode: ").append(toIndentedString(testMode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("direction");
    openapiFields.add("doc_dts");
    openapiFields.add("document");
    openapiFields.add("document_type_description");
    openapiFields.add("document_type_number");
    openapiFields.add("external_id");
    openapiFields.add("functional_acknowledgement");
    openapiFields.add("functional_acknowledgement_dts");
    openapiFields.add("functional_acknowledgement_pending");
    openapiFields.add("group_control_number");
    openapiFields.add("internal_id");
    openapiFields.add("merchant_id");
    openapiFields.add("order_id");
    openapiFields.add("test_mode");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to OrderEdiDocument
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (OrderEdiDocument.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in OrderEdiDocument is not found in the empty JSON string", OrderEdiDocument.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!OrderEdiDocument.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OrderEdiDocument` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("direction") != null && !jsonObj.get("direction").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `direction` to be a primitive type in the JSON string but got `%s`", jsonObj.get("direction").toString()));
      }
      if (jsonObj.get("doc_dts") != null && !jsonObj.get("doc_dts").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `doc_dts` to be a primitive type in the JSON string but got `%s`", jsonObj.get("doc_dts").toString()));
      }
      if (jsonObj.get("document") != null && !jsonObj.get("document").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `document` to be a primitive type in the JSON string but got `%s`", jsonObj.get("document").toString()));
      }
      if (jsonObj.get("document_type_description") != null && !jsonObj.get("document_type_description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `document_type_description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("document_type_description").toString()));
      }
      if (jsonObj.get("external_id") != null && !jsonObj.get("external_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `external_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("external_id").toString()));
      }
      if (jsonObj.get("functional_acknowledgement") != null && !jsonObj.get("functional_acknowledgement").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `functional_acknowledgement` to be a primitive type in the JSON string but got `%s`", jsonObj.get("functional_acknowledgement").toString()));
      }
      if (jsonObj.get("functional_acknowledgement_dts") != null && !jsonObj.get("functional_acknowledgement_dts").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `functional_acknowledgement_dts` to be a primitive type in the JSON string but got `%s`", jsonObj.get("functional_acknowledgement_dts").toString()));
      }
      if (jsonObj.get("internal_id") != null && !jsonObj.get("internal_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `internal_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("internal_id").toString()));
      }
      if (jsonObj.get("merchant_id") != null && !jsonObj.get("merchant_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `merchant_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("merchant_id").toString()));
      }
      if (jsonObj.get("order_id") != null && !jsonObj.get("order_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `order_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("order_id").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OrderEdiDocument.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OrderEdiDocument' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OrderEdiDocument> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OrderEdiDocument.class));

       return (TypeAdapter<T>) new TypeAdapter<OrderEdiDocument>() {
           @Override
           public void write(JsonWriter out, OrderEdiDocument value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OrderEdiDocument read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of OrderEdiDocument given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of OrderEdiDocument
  * @throws IOException if the JSON string is invalid with respect to OrderEdiDocument
  */
  public static OrderEdiDocument fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OrderEdiDocument.class);
  }

 /**
  * Convert an instance of OrderEdiDocument to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

