/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * StoreFront
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-07T01:56:11.152-05:00[America/Indianapolis]")
public class StoreFront {
  public static final String SERIALIZED_NAME_HOST_ALIAS1 = "host_alias1";
  @SerializedName(SERIALIZED_NAME_HOST_ALIAS1)
  private String hostAlias1;

  public static final String SERIALIZED_NAME_HOST_ALIAS2 = "host_alias2";
  @SerializedName(SERIALIZED_NAME_HOST_ALIAS2)
  private String hostAlias2;

  public static final String SERIALIZED_NAME_HOST_ALIAS3 = "host_alias3";
  @SerializedName(SERIALIZED_NAME_HOST_ALIAS3)
  private String hostAlias3;

  public static final String SERIALIZED_NAME_HOST_ALIAS4 = "host_alias4";
  @SerializedName(SERIALIZED_NAME_HOST_ALIAS4)
  private String hostAlias4;

  public static final String SERIALIZED_NAME_HOST_ALIAS5 = "host_alias5";
  @SerializedName(SERIALIZED_NAME_HOST_ALIAS5)
  private String hostAlias5;

  public static final String SERIALIZED_NAME_HOST_NAME = "host_name";
  @SerializedName(SERIALIZED_NAME_HOST_NAME)
  private String hostName;

  public static final String SERIALIZED_NAME_LOCKED = "locked";
  @SerializedName(SERIALIZED_NAME_LOCKED)
  private Boolean locked;

  public static final String SERIALIZED_NAME_MERCHANT_ID = "merchant_id";
  @SerializedName(SERIALIZED_NAME_MERCHANT_ID)
  private String merchantId;

  public static final String SERIALIZED_NAME_REDIRECT_ALIASES = "redirect_aliases";
  @SerializedName(SERIALIZED_NAME_REDIRECT_ALIASES)
  private Boolean redirectAliases;

  public static final String SERIALIZED_NAME_STOREFRONT_OID = "storefront_oid";
  @SerializedName(SERIALIZED_NAME_STOREFRONT_OID)
  private Integer storefrontOid;

  public static final String SERIALIZED_NAME_UNLOCK_PASSWORD = "unlock_password";
  @SerializedName(SERIALIZED_NAME_UNLOCK_PASSWORD)
  private String unlockPassword;

  public StoreFront() { 
  }

  public StoreFront hostAlias1(String hostAlias1) {
    
    this.hostAlias1 = hostAlias1;
    return this;
  }

   /**
   * Get hostAlias1
   * @return hostAlias1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getHostAlias1() {
    return hostAlias1;
  }


  public void setHostAlias1(String hostAlias1) {
    this.hostAlias1 = hostAlias1;
  }


  public StoreFront hostAlias2(String hostAlias2) {
    
    this.hostAlias2 = hostAlias2;
    return this;
  }

   /**
   * Get hostAlias2
   * @return hostAlias2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getHostAlias2() {
    return hostAlias2;
  }


  public void setHostAlias2(String hostAlias2) {
    this.hostAlias2 = hostAlias2;
  }


  public StoreFront hostAlias3(String hostAlias3) {
    
    this.hostAlias3 = hostAlias3;
    return this;
  }

   /**
   * Get hostAlias3
   * @return hostAlias3
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getHostAlias3() {
    return hostAlias3;
  }


  public void setHostAlias3(String hostAlias3) {
    this.hostAlias3 = hostAlias3;
  }


  public StoreFront hostAlias4(String hostAlias4) {
    
    this.hostAlias4 = hostAlias4;
    return this;
  }

   /**
   * Get hostAlias4
   * @return hostAlias4
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getHostAlias4() {
    return hostAlias4;
  }


  public void setHostAlias4(String hostAlias4) {
    this.hostAlias4 = hostAlias4;
  }


  public StoreFront hostAlias5(String hostAlias5) {
    
    this.hostAlias5 = hostAlias5;
    return this;
  }

   /**
   * Get hostAlias5
   * @return hostAlias5
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getHostAlias5() {
    return hostAlias5;
  }


  public void setHostAlias5(String hostAlias5) {
    this.hostAlias5 = hostAlias5;
  }


  public StoreFront hostName(String hostName) {
    
    this.hostName = hostName;
    return this;
  }

   /**
   * Get hostName
   * @return hostName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getHostName() {
    return hostName;
  }


  public void setHostName(String hostName) {
    this.hostName = hostName;
  }


  public StoreFront locked(Boolean locked) {
    
    this.locked = locked;
    return this;
  }

   /**
   * Get locked
   * @return locked
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getLocked() {
    return locked;
  }


  public void setLocked(Boolean locked) {
    this.locked = locked;
  }


  public StoreFront merchantId(String merchantId) {
    
    this.merchantId = merchantId;
    return this;
  }

   /**
   * Get merchantId
   * @return merchantId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMerchantId() {
    return merchantId;
  }


  public void setMerchantId(String merchantId) {
    this.merchantId = merchantId;
  }


  public StoreFront redirectAliases(Boolean redirectAliases) {
    
    this.redirectAliases = redirectAliases;
    return this;
  }

   /**
   * Get redirectAliases
   * @return redirectAliases
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getRedirectAliases() {
    return redirectAliases;
  }


  public void setRedirectAliases(Boolean redirectAliases) {
    this.redirectAliases = redirectAliases;
  }


  public StoreFront storefrontOid(Integer storefrontOid) {
    
    this.storefrontOid = storefrontOid;
    return this;
  }

   /**
   * Get storefrontOid
   * @return storefrontOid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getStorefrontOid() {
    return storefrontOid;
  }


  public void setStorefrontOid(Integer storefrontOid) {
    this.storefrontOid = storefrontOid;
  }


  public StoreFront unlockPassword(String unlockPassword) {
    
    this.unlockPassword = unlockPassword;
    return this;
  }

   /**
   * Get unlockPassword
   * @return unlockPassword
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUnlockPassword() {
    return unlockPassword;
  }


  public void setUnlockPassword(String unlockPassword) {
    this.unlockPassword = unlockPassword;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StoreFront storeFront = (StoreFront) o;
    return Objects.equals(this.hostAlias1, storeFront.hostAlias1) &&
        Objects.equals(this.hostAlias2, storeFront.hostAlias2) &&
        Objects.equals(this.hostAlias3, storeFront.hostAlias3) &&
        Objects.equals(this.hostAlias4, storeFront.hostAlias4) &&
        Objects.equals(this.hostAlias5, storeFront.hostAlias5) &&
        Objects.equals(this.hostName, storeFront.hostName) &&
        Objects.equals(this.locked, storeFront.locked) &&
        Objects.equals(this.merchantId, storeFront.merchantId) &&
        Objects.equals(this.redirectAliases, storeFront.redirectAliases) &&
        Objects.equals(this.storefrontOid, storeFront.storefrontOid) &&
        Objects.equals(this.unlockPassword, storeFront.unlockPassword);
  }

  @Override
  public int hashCode() {
    return Objects.hash(hostAlias1, hostAlias2, hostAlias3, hostAlias4, hostAlias5, hostName, locked, merchantId, redirectAliases, storefrontOid, unlockPassword);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StoreFront {\n");
    sb.append("    hostAlias1: ").append(toIndentedString(hostAlias1)).append("\n");
    sb.append("    hostAlias2: ").append(toIndentedString(hostAlias2)).append("\n");
    sb.append("    hostAlias3: ").append(toIndentedString(hostAlias3)).append("\n");
    sb.append("    hostAlias4: ").append(toIndentedString(hostAlias4)).append("\n");
    sb.append("    hostAlias5: ").append(toIndentedString(hostAlias5)).append("\n");
    sb.append("    hostName: ").append(toIndentedString(hostName)).append("\n");
    sb.append("    locked: ").append(toIndentedString(locked)).append("\n");
    sb.append("    merchantId: ").append(toIndentedString(merchantId)).append("\n");
    sb.append("    redirectAliases: ").append(toIndentedString(redirectAliases)).append("\n");
    sb.append("    storefrontOid: ").append(toIndentedString(storefrontOid)).append("\n");
    sb.append("    unlockPassword: ").append(toIndentedString(unlockPassword)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("host_alias1");
    openapiFields.add("host_alias2");
    openapiFields.add("host_alias3");
    openapiFields.add("host_alias4");
    openapiFields.add("host_alias5");
    openapiFields.add("host_name");
    openapiFields.add("locked");
    openapiFields.add("merchant_id");
    openapiFields.add("redirect_aliases");
    openapiFields.add("storefront_oid");
    openapiFields.add("unlock_password");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to StoreFront
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (StoreFront.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in StoreFront is not found in the empty JSON string", StoreFront.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!StoreFront.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `StoreFront` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("host_alias1") != null && !jsonObj.get("host_alias1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `host_alias1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("host_alias1").toString()));
      }
      if (jsonObj.get("host_alias2") != null && !jsonObj.get("host_alias2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `host_alias2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("host_alias2").toString()));
      }
      if (jsonObj.get("host_alias3") != null && !jsonObj.get("host_alias3").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `host_alias3` to be a primitive type in the JSON string but got `%s`", jsonObj.get("host_alias3").toString()));
      }
      if (jsonObj.get("host_alias4") != null && !jsonObj.get("host_alias4").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `host_alias4` to be a primitive type in the JSON string but got `%s`", jsonObj.get("host_alias4").toString()));
      }
      if (jsonObj.get("host_alias5") != null && !jsonObj.get("host_alias5").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `host_alias5` to be a primitive type in the JSON string but got `%s`", jsonObj.get("host_alias5").toString()));
      }
      if (jsonObj.get("host_name") != null && !jsonObj.get("host_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `host_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("host_name").toString()));
      }
      if (jsonObj.get("merchant_id") != null && !jsonObj.get("merchant_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `merchant_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("merchant_id").toString()));
      }
      if (jsonObj.get("unlock_password") != null && !jsonObj.get("unlock_password").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `unlock_password` to be a primitive type in the JSON string but got `%s`", jsonObj.get("unlock_password").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!StoreFront.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'StoreFront' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<StoreFront> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(StoreFront.class));

       return (TypeAdapter<T>) new TypeAdapter<StoreFront>() {
           @Override
           public void write(JsonWriter out, StoreFront value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public StoreFront read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of StoreFront given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of StoreFront
  * @throws IOException if the JSON string is invalid with respect to StoreFront
  */
  public static StoreFront fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, StoreFront.class);
  }

 /**
  * Convert an instance of StoreFront to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

