/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.ReportDataSetRow;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * ReportDataSetPage
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2025-04-16T14:51:12.703-04:00")



public class ReportDataSetPage {
  @SerializedName("data_set_uuid")
  private String dataSetUuid = null;

  @SerializedName("merchant_id")
  private String merchantId = null;

  @SerializedName("next_page_token")
  private String nextPageToken = null;

  @SerializedName("next_start_index")
  private Integer nextStartIndex = null;

  @SerializedName("page_number")
  private Integer pageNumber = null;

  @SerializedName("row_count")
  private Integer rowCount = null;

  @SerializedName("rows")
  private List<ReportDataSetRow> rows = null;

  @SerializedName("rows_s3_url")
  private String rowsS3Url = null;

  @SerializedName("start_index")
  private Integer startIndex = null;

  @SerializedName("table_id")
  private String tableId = null;

  public ReportDataSetPage dataSetUuid(String dataSetUuid) {
    this.dataSetUuid = dataSetUuid;
    return this;
  }

   /**
   * A unique identifier assigned to the data set that is returned.
   * @return dataSetUuid
  **/
  @ApiModelProperty(value = "A unique identifier assigned to the data set that is returned.")
  public String getDataSetUuid() {
    return dataSetUuid;
  }

  public void setDataSetUuid(String dataSetUuid) {
    this.dataSetUuid = dataSetUuid;
  }

  public ReportDataSetPage merchantId(String merchantId) {
    this.merchantId = merchantId;
    return this;
  }

   /**
   * Merchant that owns this data set
   * @return merchantId
  **/
  @ApiModelProperty(value = "Merchant that owns this data set")
  public String getMerchantId() {
    return merchantId;
  }

  public void setMerchantId(String merchantId) {
    this.merchantId = merchantId;
  }

  public ReportDataSetPage nextPageToken(String nextPageToken) {
    this.nextPageToken = nextPageToken;
    return this;
  }

   /**
   * Get nextPageToken
   * @return nextPageToken
  **/
  @ApiModelProperty(value = "")
  public String getNextPageToken() {
    return nextPageToken;
  }

  public void setNextPageToken(String nextPageToken) {
    this.nextPageToken = nextPageToken;
  }

  public ReportDataSetPage nextStartIndex(Integer nextStartIndex) {
    this.nextStartIndex = nextStartIndex;
    return this;
  }

   /**
   * Get nextStartIndex
   * @return nextStartIndex
  **/
  @ApiModelProperty(value = "")
  public Integer getNextStartIndex() {
    return nextStartIndex;
  }

  public void setNextStartIndex(Integer nextStartIndex) {
    this.nextStartIndex = nextStartIndex;
  }

  public ReportDataSetPage pageNumber(Integer pageNumber) {
    this.pageNumber = pageNumber;
    return this;
  }

   /**
   * Get pageNumber
   * @return pageNumber
  **/
  @ApiModelProperty(value = "")
  public Integer getPageNumber() {
    return pageNumber;
  }

  public void setPageNumber(Integer pageNumber) {
    this.pageNumber = pageNumber;
  }

  public ReportDataSetPage rowCount(Integer rowCount) {
    this.rowCount = rowCount;
    return this;
  }

   /**
   * Get rowCount
   * @return rowCount
  **/
  @ApiModelProperty(value = "")
  public Integer getRowCount() {
    return rowCount;
  }

  public void setRowCount(Integer rowCount) {
    this.rowCount = rowCount;
  }

  public ReportDataSetPage rows(List<ReportDataSetRow> rows) {
    this.rows = rows;
    return this;
  }

  public ReportDataSetPage addRowsItem(ReportDataSetRow rowsItem) {
    if (this.rows == null) {
      this.rows = new ArrayList<ReportDataSetRow>();
    }
    this.rows.add(rowsItem);
    return this;
  }

   /**
   * Rows returned for the data set
   * @return rows
  **/
  @ApiModelProperty(value = "Rows returned for the data set")
  public List<ReportDataSetRow> getRows() {
    return rows;
  }

  public void setRows(List<ReportDataSetRow> rows) {
    this.rows = rows;
  }

  public ReportDataSetPage rowsS3Url(String rowsS3Url) {
    this.rowsS3Url = rowsS3Url;
    return this;
  }

   /**
   * Signed S3 URL where the page rows can be downloaded from
   * @return rowsS3Url
  **/
  @ApiModelProperty(value = "Signed S3 URL where the page rows can be downloaded from")
  public String getRowsS3Url() {
    return rowsS3Url;
  }

  public void setRowsS3Url(String rowsS3Url) {
    this.rowsS3Url = rowsS3Url;
  }

  public ReportDataSetPage startIndex(Integer startIndex) {
    this.startIndex = startIndex;
    return this;
  }

   /**
   * Zero based index of the starting row
   * @return startIndex
  **/
  @ApiModelProperty(value = "Zero based index of the starting row")
  public Integer getStartIndex() {
    return startIndex;
  }

  public void setStartIndex(Integer startIndex) {
    this.startIndex = startIndex;
  }

  public ReportDataSetPage tableId(String tableId) {
    this.tableId = tableId;
    return this;
  }

   /**
   * The BigQuery destination table id that contains the result.
   * @return tableId
  **/
  @ApiModelProperty(value = "The BigQuery destination table id that contains the result.")
  public String getTableId() {
    return tableId;
  }

  public void setTableId(String tableId) {
    this.tableId = tableId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReportDataSetPage reportDataSetPage = (ReportDataSetPage) o;
    return Objects.equals(this.dataSetUuid, reportDataSetPage.dataSetUuid) &&
        Objects.equals(this.merchantId, reportDataSetPage.merchantId) &&
        Objects.equals(this.nextPageToken, reportDataSetPage.nextPageToken) &&
        Objects.equals(this.nextStartIndex, reportDataSetPage.nextStartIndex) &&
        Objects.equals(this.pageNumber, reportDataSetPage.pageNumber) &&
        Objects.equals(this.rowCount, reportDataSetPage.rowCount) &&
        Objects.equals(this.rows, reportDataSetPage.rows) &&
        Objects.equals(this.rowsS3Url, reportDataSetPage.rowsS3Url) &&
        Objects.equals(this.startIndex, reportDataSetPage.startIndex) &&
        Objects.equals(this.tableId, reportDataSetPage.tableId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dataSetUuid, merchantId, nextPageToken, nextStartIndex, pageNumber, rowCount, rows, rowsS3Url, startIndex, tableId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReportDataSetPage {\n");
    
    sb.append("    dataSetUuid: ").append(toIndentedString(dataSetUuid)).append("\n");
    sb.append("    merchantId: ").append(toIndentedString(merchantId)).append("\n");
    sb.append("    nextPageToken: ").append(toIndentedString(nextPageToken)).append("\n");
    sb.append("    nextStartIndex: ").append(toIndentedString(nextStartIndex)).append("\n");
    sb.append("    pageNumber: ").append(toIndentedString(pageNumber)).append("\n");
    sb.append("    rowCount: ").append(toIndentedString(rowCount)).append("\n");
    sb.append("    rows: ").append(toIndentedString(rows)).append("\n");
    sb.append("    rowsS3Url: ").append(toIndentedString(rowsS3Url)).append("\n");
    sb.append("    startIndex: ").append(toIndentedString(startIndex)).append("\n");
    sb.append("    tableId: ").append(toIndentedString(tableId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

