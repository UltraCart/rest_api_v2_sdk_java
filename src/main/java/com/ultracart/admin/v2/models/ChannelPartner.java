/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * ChannelPartner
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2025-04-22T12:11:36.362-04:00")



public class ChannelPartner {
  @SerializedName("channel_partner_oid")
  private Integer channelPartnerOid = null;

  @SerializedName("code")
  private String code = null;

  @SerializedName("communication_method")
  private String communicationMethod = null;

  @SerializedName("dont_hold_shipment")
  private Boolean dontHoldShipment = null;

  @SerializedName("inactive")
  private Boolean inactive = null;

  @SerializedName("merchant_id")
  private String merchantId = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("skip_customer_emails")
  private Boolean skipCustomerEmails = null;

  public ChannelPartner channelPartnerOid(Integer channelPartnerOid) {
    this.channelPartnerOid = channelPartnerOid;
    return this;
  }

   /**
   * Channel partner object id
   * @return channelPartnerOid
  **/
  @ApiModelProperty(value = "Channel partner object id")
  public Integer getChannelPartnerOid() {
    return channelPartnerOid;
  }

  public void setChannelPartnerOid(Integer channelPartnerOid) {
    this.channelPartnerOid = channelPartnerOid;
  }

  public ChannelPartner code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Code associated with the channel partner
   * @return code
  **/
  @ApiModelProperty(value = "Code associated with the channel partner")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public ChannelPartner communicationMethod(String communicationMethod) {
    this.communicationMethod = communicationMethod;
    return this;
  }

   /**
   * Communication method of the channel partner
   * @return communicationMethod
  **/
  @ApiModelProperty(value = "Communication method of the channel partner")
  public String getCommunicationMethod() {
    return communicationMethod;
  }

  public void setCommunicationMethod(String communicationMethod) {
    this.communicationMethod = communicationMethod;
  }

  public ChannelPartner dontHoldShipment(Boolean dontHoldShipment) {
    this.dontHoldShipment = dontHoldShipment;
    return this;
  }

   /**
   * True if shipments should immediately process for this channel partner.
   * @return dontHoldShipment
  **/
  @ApiModelProperty(value = "True if shipments should immediately process for this channel partner.")
  public Boolean isDontHoldShipment() {
    return dontHoldShipment;
  }

  public void setDontHoldShipment(Boolean dontHoldShipment) {
    this.dontHoldShipment = dontHoldShipment;
  }

  public ChannelPartner inactive(Boolean inactive) {
    this.inactive = inactive;
    return this;
  }

   /**
   * True if the channel partner is inactive
   * @return inactive
  **/
  @ApiModelProperty(value = "True if the channel partner is inactive")
  public Boolean isInactive() {
    return inactive;
  }

  public void setInactive(Boolean inactive) {
    this.inactive = inactive;
  }

  public ChannelPartner merchantId(String merchantId) {
    this.merchantId = merchantId;
    return this;
  }

   /**
   * Merchant ID of the channel partner
   * @return merchantId
  **/
  @ApiModelProperty(value = "Merchant ID of the channel partner")
  public String getMerchantId() {
    return merchantId;
  }

  public void setMerchantId(String merchantId) {
    this.merchantId = merchantId;
  }

  public ChannelPartner name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of the channel partner
   * @return name
  **/
  @ApiModelProperty(value = "Name of the channel partner")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ChannelPartner skipCustomerEmails(Boolean skipCustomerEmails) {
    this.skipCustomerEmails = skipCustomerEmails;
    return this;
  }

   /**
   * True if emails to the customer are skipped for this channel partner.
   * @return skipCustomerEmails
  **/
  @ApiModelProperty(value = "True if emails to the customer are skipped for this channel partner.")
  public Boolean isSkipCustomerEmails() {
    return skipCustomerEmails;
  }

  public void setSkipCustomerEmails(Boolean skipCustomerEmails) {
    this.skipCustomerEmails = skipCustomerEmails;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChannelPartner channelPartner = (ChannelPartner) o;
    return Objects.equals(this.channelPartnerOid, channelPartner.channelPartnerOid) &&
        Objects.equals(this.code, channelPartner.code) &&
        Objects.equals(this.communicationMethod, channelPartner.communicationMethod) &&
        Objects.equals(this.dontHoldShipment, channelPartner.dontHoldShipment) &&
        Objects.equals(this.inactive, channelPartner.inactive) &&
        Objects.equals(this.merchantId, channelPartner.merchantId) &&
        Objects.equals(this.name, channelPartner.name) &&
        Objects.equals(this.skipCustomerEmails, channelPartner.skipCustomerEmails);
  }

  @Override
  public int hashCode() {
    return Objects.hash(channelPartnerOid, code, communicationMethod, dontHoldShipment, inactive, merchantId, name, skipCustomerEmails);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChannelPartner {\n");
    
    sb.append("    channelPartnerOid: ").append(toIndentedString(channelPartnerOid)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    communicationMethod: ").append(toIndentedString(communicationMethod)).append("\n");
    sb.append("    dontHoldShipment: ").append(toIndentedString(dontHoldShipment)).append("\n");
    sb.append("    inactive: ").append(toIndentedString(inactive)).append("\n");
    sb.append("    merchantId: ").append(toIndentedString(merchantId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    skipCustomerEmails: ").append(toIndentedString(skipCustomerEmails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

