/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * ChannelPartnerShipToPreference
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2025-08-04T14:34:21.528-04:00")



public class ChannelPartnerShipToPreference {
  @SerializedName("additional_kit_component_item_ids")
  private List<String> additionalKitComponentItemIds = null;

  @SerializedName("channel_partner_oid")
  private Integer channelPartnerOid = null;

  @SerializedName("channel_partner_ship_to_preference_oid")
  private Integer channelPartnerShipToPreferenceOid = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("merchant_id")
  private String merchantId = null;

  @SerializedName("return_policy")
  private String returnPolicy = null;

  @SerializedName("ship_to_edi_code")
  private String shipToEdiCode = null;

  public ChannelPartnerShipToPreference additionalKitComponentItemIds(List<String> additionalKitComponentItemIds) {
    this.additionalKitComponentItemIds = additionalKitComponentItemIds;
    return this;
  }

  public ChannelPartnerShipToPreference addAdditionalKitComponentItemIdsItem(String additionalKitComponentItemIdsItem) {
    if (this.additionalKitComponentItemIds == null) {
      this.additionalKitComponentItemIds = new ArrayList<String>();
    }
    this.additionalKitComponentItemIds.add(additionalKitComponentItemIdsItem);
    return this;
  }

   /**
   * Additional item ids to add as kit components to the order with a zero price.
   * @return additionalKitComponentItemIds
  **/
  @ApiModelProperty(value = "Additional item ids to add as kit components to the order with a zero price.")
  public List<String> getAdditionalKitComponentItemIds() {
    return additionalKitComponentItemIds;
  }

  public void setAdditionalKitComponentItemIds(List<String> additionalKitComponentItemIds) {
    this.additionalKitComponentItemIds = additionalKitComponentItemIds;
  }

  public ChannelPartnerShipToPreference channelPartnerOid(Integer channelPartnerOid) {
    this.channelPartnerOid = channelPartnerOid;
    return this;
  }

   /**
   * The channel partner object identifier this preference is associated with
   * @return channelPartnerOid
  **/
  @ApiModelProperty(value = "The channel partner object identifier this preference is associated with")
  public Integer getChannelPartnerOid() {
    return channelPartnerOid;
  }

  public void setChannelPartnerOid(Integer channelPartnerOid) {
    this.channelPartnerOid = channelPartnerOid;
  }

  public ChannelPartnerShipToPreference channelPartnerShipToPreferenceOid(Integer channelPartnerShipToPreferenceOid) {
    this.channelPartnerShipToPreferenceOid = channelPartnerShipToPreferenceOid;
    return this;
  }

   /**
   * Object identifier for the ship to preference
   * @return channelPartnerShipToPreferenceOid
  **/
  @ApiModelProperty(value = "Object identifier for the ship to preference")
  public Integer getChannelPartnerShipToPreferenceOid() {
    return channelPartnerShipToPreferenceOid;
  }

  public void setChannelPartnerShipToPreferenceOid(Integer channelPartnerShipToPreferenceOid) {
    this.channelPartnerShipToPreferenceOid = channelPartnerShipToPreferenceOid;
  }

  public ChannelPartnerShipToPreference description(String description) {
    this.description = description;
    return this;
  }

   /**
   * A description that is meaningful to the merchant.
   * @return description
  **/
  @ApiModelProperty(value = "A description that is meaningful to the merchant.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ChannelPartnerShipToPreference merchantId(String merchantId) {
    this.merchantId = merchantId;
    return this;
  }

   /**
   * The merchant id that owns the channel partner
   * @return merchantId
  **/
  @ApiModelProperty(value = "The merchant id that owns the channel partner")
  public String getMerchantId() {
    return merchantId;
  }

  public void setMerchantId(String merchantId) {
    this.merchantId = merchantId;
  }

  public ChannelPartnerShipToPreference returnPolicy(String returnPolicy) {
    this.returnPolicy = returnPolicy;
    return this;
  }

   /**
   * Alternate return policy to print on the packing slip.
   * @return returnPolicy
  **/
  @ApiModelProperty(value = "Alternate return policy to print on the packing slip.")
  public String getReturnPolicy() {
    return returnPolicy;
  }

  public void setReturnPolicy(String returnPolicy) {
    this.returnPolicy = returnPolicy;
  }

  public ChannelPartnerShipToPreference shipToEdiCode(String shipToEdiCode) {
    this.shipToEdiCode = shipToEdiCode;
    return this;
  }

   /**
   * The ship to EDI code that the preferences are for
   * @return shipToEdiCode
  **/
  @ApiModelProperty(value = "The ship to EDI code that the preferences are for")
  public String getShipToEdiCode() {
    return shipToEdiCode;
  }

  public void setShipToEdiCode(String shipToEdiCode) {
    this.shipToEdiCode = shipToEdiCode;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChannelPartnerShipToPreference channelPartnerShipToPreference = (ChannelPartnerShipToPreference) o;
    return Objects.equals(this.additionalKitComponentItemIds, channelPartnerShipToPreference.additionalKitComponentItemIds) &&
        Objects.equals(this.channelPartnerOid, channelPartnerShipToPreference.channelPartnerOid) &&
        Objects.equals(this.channelPartnerShipToPreferenceOid, channelPartnerShipToPreference.channelPartnerShipToPreferenceOid) &&
        Objects.equals(this.description, channelPartnerShipToPreference.description) &&
        Objects.equals(this.merchantId, channelPartnerShipToPreference.merchantId) &&
        Objects.equals(this.returnPolicy, channelPartnerShipToPreference.returnPolicy) &&
        Objects.equals(this.shipToEdiCode, channelPartnerShipToPreference.shipToEdiCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(additionalKitComponentItemIds, channelPartnerOid, channelPartnerShipToPreferenceOid, description, merchantId, returnPolicy, shipToEdiCode);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChannelPartnerShipToPreference {\n");
    
    sb.append("    additionalKitComponentItemIds: ").append(toIndentedString(additionalKitComponentItemIds)).append("\n");
    sb.append("    channelPartnerOid: ").append(toIndentedString(channelPartnerOid)).append("\n");
    sb.append("    channelPartnerShipToPreferenceOid: ").append(toIndentedString(channelPartnerShipToPreferenceOid)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    merchantId: ").append(toIndentedString(merchantId)).append("\n");
    sb.append("    returnPolicy: ").append(toIndentedString(returnPolicy)).append("\n");
    sb.append("    shipToEdiCode: ").append(toIndentedString(shipToEdiCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

