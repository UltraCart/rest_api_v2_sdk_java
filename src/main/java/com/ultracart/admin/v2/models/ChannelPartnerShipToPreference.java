/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * ChannelPartnerShipToPreference
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-01-13T14:58:56.471-05:00[America/Indianapolis]")
public class ChannelPartnerShipToPreference {
  public static final String SERIALIZED_NAME_ADDITIONAL_KIT_COMPONENT_ITEM_IDS = "additional_kit_component_item_ids";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_KIT_COMPONENT_ITEM_IDS)
  private List<String> additionalKitComponentItemIds = null;

  public static final String SERIALIZED_NAME_CHANNEL_PARTNER_OID = "channel_partner_oid";
  @SerializedName(SERIALIZED_NAME_CHANNEL_PARTNER_OID)
  private Integer channelPartnerOid;

  public static final String SERIALIZED_NAME_CHANNEL_PARTNER_SHIP_TO_PREFERENCE_OID = "channel_partner_ship_to_preference_oid";
  @SerializedName(SERIALIZED_NAME_CHANNEL_PARTNER_SHIP_TO_PREFERENCE_OID)
  private Integer channelPartnerShipToPreferenceOid;

  public static final String SERIALIZED_NAME_MERCHANT_ID = "merchant_id";
  @SerializedName(SERIALIZED_NAME_MERCHANT_ID)
  private String merchantId;

  public static final String SERIALIZED_NAME_RETURN_POLICY = "return_policy";
  @SerializedName(SERIALIZED_NAME_RETURN_POLICY)
  private String returnPolicy;

  public static final String SERIALIZED_NAME_SHIP_TO_EDI_CODE = "ship_to_edi_code";
  @SerializedName(SERIALIZED_NAME_SHIP_TO_EDI_CODE)
  private String shipToEdiCode;

  public ChannelPartnerShipToPreference() { 
  }

  public ChannelPartnerShipToPreference additionalKitComponentItemIds(List<String> additionalKitComponentItemIds) {
    
    this.additionalKitComponentItemIds = additionalKitComponentItemIds;
    return this;
  }

  public ChannelPartnerShipToPreference addAdditionalKitComponentItemIdsItem(String additionalKitComponentItemIdsItem) {
    if (this.additionalKitComponentItemIds == null) {
      this.additionalKitComponentItemIds = new ArrayList<>();
    }
    this.additionalKitComponentItemIds.add(additionalKitComponentItemIdsItem);
    return this;
  }

   /**
   * Additional item ids to add as kit components to the order with a zero price.
   * @return additionalKitComponentItemIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Additional item ids to add as kit components to the order with a zero price.")

  public List<String> getAdditionalKitComponentItemIds() {
    return additionalKitComponentItemIds;
  }


  public void setAdditionalKitComponentItemIds(List<String> additionalKitComponentItemIds) {
    this.additionalKitComponentItemIds = additionalKitComponentItemIds;
  }


  public ChannelPartnerShipToPreference channelPartnerOid(Integer channelPartnerOid) {
    
    this.channelPartnerOid = channelPartnerOid;
    return this;
  }

   /**
   * The channel partner object identifier this preference is associated with
   * @return channelPartnerOid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The channel partner object identifier this preference is associated with")

  public Integer getChannelPartnerOid() {
    return channelPartnerOid;
  }


  public void setChannelPartnerOid(Integer channelPartnerOid) {
    this.channelPartnerOid = channelPartnerOid;
  }


  public ChannelPartnerShipToPreference channelPartnerShipToPreferenceOid(Integer channelPartnerShipToPreferenceOid) {
    
    this.channelPartnerShipToPreferenceOid = channelPartnerShipToPreferenceOid;
    return this;
  }

   /**
   * Object identifier for the ship to preference
   * @return channelPartnerShipToPreferenceOid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Object identifier for the ship to preference")

  public Integer getChannelPartnerShipToPreferenceOid() {
    return channelPartnerShipToPreferenceOid;
  }


  public void setChannelPartnerShipToPreferenceOid(Integer channelPartnerShipToPreferenceOid) {
    this.channelPartnerShipToPreferenceOid = channelPartnerShipToPreferenceOid;
  }


  public ChannelPartnerShipToPreference merchantId(String merchantId) {
    
    this.merchantId = merchantId;
    return this;
  }

   /**
   * The merchant id that owns the channel partner
   * @return merchantId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The merchant id that owns the channel partner")

  public String getMerchantId() {
    return merchantId;
  }


  public void setMerchantId(String merchantId) {
    this.merchantId = merchantId;
  }


  public ChannelPartnerShipToPreference returnPolicy(String returnPolicy) {
    
    this.returnPolicy = returnPolicy;
    return this;
  }

   /**
   * Alternate return policy to print on the packing slip.
   * @return returnPolicy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Alternate return policy to print on the packing slip.")

  public String getReturnPolicy() {
    return returnPolicy;
  }


  public void setReturnPolicy(String returnPolicy) {
    this.returnPolicy = returnPolicy;
  }


  public ChannelPartnerShipToPreference shipToEdiCode(String shipToEdiCode) {
    
    this.shipToEdiCode = shipToEdiCode;
    return this;
  }

   /**
   * The ship to EDI code that the preferences are for
   * @return shipToEdiCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ship to EDI code that the preferences are for")

  public String getShipToEdiCode() {
    return shipToEdiCode;
  }


  public void setShipToEdiCode(String shipToEdiCode) {
    this.shipToEdiCode = shipToEdiCode;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChannelPartnerShipToPreference channelPartnerShipToPreference = (ChannelPartnerShipToPreference) o;
    return Objects.equals(this.additionalKitComponentItemIds, channelPartnerShipToPreference.additionalKitComponentItemIds) &&
        Objects.equals(this.channelPartnerOid, channelPartnerShipToPreference.channelPartnerOid) &&
        Objects.equals(this.channelPartnerShipToPreferenceOid, channelPartnerShipToPreference.channelPartnerShipToPreferenceOid) &&
        Objects.equals(this.merchantId, channelPartnerShipToPreference.merchantId) &&
        Objects.equals(this.returnPolicy, channelPartnerShipToPreference.returnPolicy) &&
        Objects.equals(this.shipToEdiCode, channelPartnerShipToPreference.shipToEdiCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(additionalKitComponentItemIds, channelPartnerOid, channelPartnerShipToPreferenceOid, merchantId, returnPolicy, shipToEdiCode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChannelPartnerShipToPreference {\n");
    sb.append("    additionalKitComponentItemIds: ").append(toIndentedString(additionalKitComponentItemIds)).append("\n");
    sb.append("    channelPartnerOid: ").append(toIndentedString(channelPartnerOid)).append("\n");
    sb.append("    channelPartnerShipToPreferenceOid: ").append(toIndentedString(channelPartnerShipToPreferenceOid)).append("\n");
    sb.append("    merchantId: ").append(toIndentedString(merchantId)).append("\n");
    sb.append("    returnPolicy: ").append(toIndentedString(returnPolicy)).append("\n");
    sb.append("    shipToEdiCode: ").append(toIndentedString(shipToEdiCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("additional_kit_component_item_ids");
    openapiFields.add("channel_partner_oid");
    openapiFields.add("channel_partner_ship_to_preference_oid");
    openapiFields.add("merchant_id");
    openapiFields.add("return_policy");
    openapiFields.add("ship_to_edi_code");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ChannelPartnerShipToPreference
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (ChannelPartnerShipToPreference.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in ChannelPartnerShipToPreference is not found in the empty JSON string", ChannelPartnerShipToPreference.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!ChannelPartnerShipToPreference.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ChannelPartnerShipToPreference` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      // ensure the json data is an array
      if (jsonObj.get("additional_kit_component_item_ids") != null && !jsonObj.get("additional_kit_component_item_ids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `additional_kit_component_item_ids` to be an array in the JSON string but got `%s`", jsonObj.get("additional_kit_component_item_ids").toString()));
      }
      if (jsonObj.get("merchant_id") != null && !jsonObj.get("merchant_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `merchant_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("merchant_id").toString()));
      }
      if (jsonObj.get("return_policy") != null && !jsonObj.get("return_policy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `return_policy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("return_policy").toString()));
      }
      if (jsonObj.get("ship_to_edi_code") != null && !jsonObj.get("ship_to_edi_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ship_to_edi_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ship_to_edi_code").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ChannelPartnerShipToPreference.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ChannelPartnerShipToPreference' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ChannelPartnerShipToPreference> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ChannelPartnerShipToPreference.class));

       return (TypeAdapter<T>) new TypeAdapter<ChannelPartnerShipToPreference>() {
           @Override
           public void write(JsonWriter out, ChannelPartnerShipToPreference value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ChannelPartnerShipToPreference read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ChannelPartnerShipToPreference given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ChannelPartnerShipToPreference
  * @throws IOException if the JSON string is invalid with respect to ChannelPartnerShipToPreference
  */
  public static ChannelPartnerShipToPreference fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ChannelPartnerShipToPreference.class);
  }

 /**
  * Convert an instance of ChannelPartnerShipToPreference to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

