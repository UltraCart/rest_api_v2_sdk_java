/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * OrderFormat
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-05-01T22:01:03.096-04:00")
public class OrderFormat {
  @SerializedName("context")
  private String context = null;

  @SerializedName("dont_link_email_to_search")
  private Boolean dontLinkEmailToSearch = null;

  @SerializedName("email_as_link")
  private Boolean emailAsLink = null;

  @SerializedName("filter_distribution_center_oid")
  private Integer filterDistributionCenterOid = null;

  @SerializedName("filter_to_items_in_contact_oid")
  private Integer filterToItemsInContactOid = null;

  /**
   * The desired format.
   */
  @JsonAdapter(FormatEnum.Adapter.class)
  public enum FormatEnum {
    TEXT("text"),
    
    DIV("div"),
    
    TABLE("table"),
    
    EMAIL("email");

    private String value;

    FormatEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static FormatEnum fromValue(String text) {
      for (FormatEnum b : FormatEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<FormatEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final FormatEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public FormatEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return FormatEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("format")
  private FormatEnum format = null;

  @SerializedName("hide_bill_to_address")
  private Boolean hideBillToAddress = null;

  @SerializedName("hide_price_information")
  private Boolean hidePriceInformation = null;

  @SerializedName("link_file_attachments")
  private Boolean linkFileAttachments = null;

  @SerializedName("show_contact_info")
  private Boolean showContactInfo = null;

  @SerializedName("show_in_merchant_currency")
  private Boolean showInMerchantCurrency = null;

  @SerializedName("show_internal_information")
  private Boolean showInternalInformation = null;

  @SerializedName("show_merchant_notes")
  private Boolean showMerchantNotes = null;

  @SerializedName("show_non_sensitive_payment_info")
  private Boolean showNonSensitivePaymentInfo = null;

  @SerializedName("show_payment_info")
  private Boolean showPaymentInfo = null;

  @SerializedName("translate")
  private Boolean translate = null;

  public OrderFormat context(String context) {
    this.context = context;
    return this;
  }

   /**
   * The context to generate the order view for.
   * @return context
  **/
  @ApiModelProperty(value = "The context to generate the order view for.")
  public String getContext() {
    return context;
  }

  public void setContext(String context) {
    this.context = context;
  }

  public OrderFormat dontLinkEmailToSearch(Boolean dontLinkEmailToSearch) {
    this.dontLinkEmailToSearch = dontLinkEmailToSearch;
    return this;
  }

   /**
   * True to not link the email address to the order search
   * @return dontLinkEmailToSearch
  **/
  @ApiModelProperty(value = "True to not link the email address to the order search")
  public Boolean isDontLinkEmailToSearch() {
    return dontLinkEmailToSearch;
  }

  public void setDontLinkEmailToSearch(Boolean dontLinkEmailToSearch) {
    this.dontLinkEmailToSearch = dontLinkEmailToSearch;
  }

  public OrderFormat emailAsLink(Boolean emailAsLink) {
    this.emailAsLink = emailAsLink;
    return this;
  }

   /**
   * True to make the email address a clickable mailto link
   * @return emailAsLink
  **/
  @ApiModelProperty(value = "True to make the email address a clickable mailto link")
  public Boolean isEmailAsLink() {
    return emailAsLink;
  }

  public void setEmailAsLink(Boolean emailAsLink) {
    this.emailAsLink = emailAsLink;
  }

  public OrderFormat filterDistributionCenterOid(Integer filterDistributionCenterOid) {
    this.filterDistributionCenterOid = filterDistributionCenterOid;
    return this;
  }

   /**
   * Specify a distribution center oid to filter the items displayed to that particular distribution center.
   * @return filterDistributionCenterOid
  **/
  @ApiModelProperty(value = "Specify a distribution center oid to filter the items displayed to that particular distribution center.")
  public Integer getFilterDistributionCenterOid() {
    return filterDistributionCenterOid;
  }

  public void setFilterDistributionCenterOid(Integer filterDistributionCenterOid) {
    this.filterDistributionCenterOid = filterDistributionCenterOid;
  }

  public OrderFormat filterToItemsInContactOid(Integer filterToItemsInContactOid) {
    this.filterToItemsInContactOid = filterToItemsInContactOid;
    return this;
  }

   /**
   * The container oid to filter items to.
   * @return filterToItemsInContactOid
  **/
  @ApiModelProperty(value = "The container oid to filter items to.")
  public Integer getFilterToItemsInContactOid() {
    return filterToItemsInContactOid;
  }

  public void setFilterToItemsInContactOid(Integer filterToItemsInContactOid) {
    this.filterToItemsInContactOid = filterToItemsInContactOid;
  }

  public OrderFormat format(FormatEnum format) {
    this.format = format;
    return this;
  }

   /**
   * The desired format.
   * @return format
  **/
  @ApiModelProperty(value = "The desired format.")
  public FormatEnum getFormat() {
    return format;
  }

  public void setFormat(FormatEnum format) {
    this.format = format;
  }

  public OrderFormat hideBillToAddress(Boolean hideBillToAddress) {
    this.hideBillToAddress = hideBillToAddress;
    return this;
  }

   /**
   * True to ide the bill to address
   * @return hideBillToAddress
  **/
  @ApiModelProperty(value = "True to ide the bill to address")
  public Boolean isHideBillToAddress() {
    return hideBillToAddress;
  }

  public void setHideBillToAddress(Boolean hideBillToAddress) {
    this.hideBillToAddress = hideBillToAddress;
  }

  public OrderFormat hidePriceInformation(Boolean hidePriceInformation) {
    this.hidePriceInformation = hidePriceInformation;
    return this;
  }

   /**
   * True to hide price information
   * @return hidePriceInformation
  **/
  @ApiModelProperty(value = "True to hide price information")
  public Boolean isHidePriceInformation() {
    return hidePriceInformation;
  }

  public void setHidePriceInformation(Boolean hidePriceInformation) {
    this.hidePriceInformation = hidePriceInformation;
  }

  public OrderFormat linkFileAttachments(Boolean linkFileAttachments) {
    this.linkFileAttachments = linkFileAttachments;
    return this;
  }

   /**
   * True to link file attachments for download
   * @return linkFileAttachments
  **/
  @ApiModelProperty(value = "True to link file attachments for download")
  public Boolean isLinkFileAttachments() {
    return linkFileAttachments;
  }

  public void setLinkFileAttachments(Boolean linkFileAttachments) {
    this.linkFileAttachments = linkFileAttachments;
  }

  public OrderFormat showContactInfo(Boolean showContactInfo) {
    this.showContactInfo = showContactInfo;
    return this;
  }

   /**
   * True to show contact information
   * @return showContactInfo
  **/
  @ApiModelProperty(value = "True to show contact information")
  public Boolean isShowContactInfo() {
    return showContactInfo;
  }

  public void setShowContactInfo(Boolean showContactInfo) {
    this.showContactInfo = showContactInfo;
  }

  public OrderFormat showInMerchantCurrency(Boolean showInMerchantCurrency) {
    this.showInMerchantCurrency = showInMerchantCurrency;
    return this;
  }

   /**
   * True to show the order in the merchant currency
   * @return showInMerchantCurrency
  **/
  @ApiModelProperty(value = "True to show the order in the merchant currency")
  public Boolean isShowInMerchantCurrency() {
    return showInMerchantCurrency;
  }

  public void setShowInMerchantCurrency(Boolean showInMerchantCurrency) {
    this.showInMerchantCurrency = showInMerchantCurrency;
  }

  public OrderFormat showInternalInformation(Boolean showInternalInformation) {
    this.showInternalInformation = showInternalInformation;
    return this;
  }

   /**
   * True to show internal information about the order
   * @return showInternalInformation
  **/
  @ApiModelProperty(value = "True to show internal information about the order")
  public Boolean isShowInternalInformation() {
    return showInternalInformation;
  }

  public void setShowInternalInformation(Boolean showInternalInformation) {
    this.showInternalInformation = showInternalInformation;
  }

  public OrderFormat showMerchantNotes(Boolean showMerchantNotes) {
    this.showMerchantNotes = showMerchantNotes;
    return this;
  }

   /**
   * True to show merchant notes
   * @return showMerchantNotes
  **/
  @ApiModelProperty(value = "True to show merchant notes")
  public Boolean isShowMerchantNotes() {
    return showMerchantNotes;
  }

  public void setShowMerchantNotes(Boolean showMerchantNotes) {
    this.showMerchantNotes = showMerchantNotes;
  }

  public OrderFormat showNonSensitivePaymentInfo(Boolean showNonSensitivePaymentInfo) {
    this.showNonSensitivePaymentInfo = showNonSensitivePaymentInfo;
    return this;
  }

   /**
   * True to show non-sensitive payment information
   * @return showNonSensitivePaymentInfo
  **/
  @ApiModelProperty(value = "True to show non-sensitive payment information")
  public Boolean isShowNonSensitivePaymentInfo() {
    return showNonSensitivePaymentInfo;
  }

  public void setShowNonSensitivePaymentInfo(Boolean showNonSensitivePaymentInfo) {
    this.showNonSensitivePaymentInfo = showNonSensitivePaymentInfo;
  }

  public OrderFormat showPaymentInfo(Boolean showPaymentInfo) {
    this.showPaymentInfo = showPaymentInfo;
    return this;
  }

   /**
   * True to show payment information
   * @return showPaymentInfo
  **/
  @ApiModelProperty(value = "True to show payment information")
  public Boolean isShowPaymentInfo() {
    return showPaymentInfo;
  }

  public void setShowPaymentInfo(Boolean showPaymentInfo) {
    this.showPaymentInfo = showPaymentInfo;
  }

  public OrderFormat translate(Boolean translate) {
    this.translate = translate;
    return this;
  }

   /**
   * True to translate the order into the native language of the customer
   * @return translate
  **/
  @ApiModelProperty(value = "True to translate the order into the native language of the customer")
  public Boolean isTranslate() {
    return translate;
  }

  public void setTranslate(Boolean translate) {
    this.translate = translate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderFormat orderFormat = (OrderFormat) o;
    return Objects.equals(this.context, orderFormat.context) &&
        Objects.equals(this.dontLinkEmailToSearch, orderFormat.dontLinkEmailToSearch) &&
        Objects.equals(this.emailAsLink, orderFormat.emailAsLink) &&
        Objects.equals(this.filterDistributionCenterOid, orderFormat.filterDistributionCenterOid) &&
        Objects.equals(this.filterToItemsInContactOid, orderFormat.filterToItemsInContactOid) &&
        Objects.equals(this.format, orderFormat.format) &&
        Objects.equals(this.hideBillToAddress, orderFormat.hideBillToAddress) &&
        Objects.equals(this.hidePriceInformation, orderFormat.hidePriceInformation) &&
        Objects.equals(this.linkFileAttachments, orderFormat.linkFileAttachments) &&
        Objects.equals(this.showContactInfo, orderFormat.showContactInfo) &&
        Objects.equals(this.showInMerchantCurrency, orderFormat.showInMerchantCurrency) &&
        Objects.equals(this.showInternalInformation, orderFormat.showInternalInformation) &&
        Objects.equals(this.showMerchantNotes, orderFormat.showMerchantNotes) &&
        Objects.equals(this.showNonSensitivePaymentInfo, orderFormat.showNonSensitivePaymentInfo) &&
        Objects.equals(this.showPaymentInfo, orderFormat.showPaymentInfo) &&
        Objects.equals(this.translate, orderFormat.translate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(context, dontLinkEmailToSearch, emailAsLink, filterDistributionCenterOid, filterToItemsInContactOid, format, hideBillToAddress, hidePriceInformation, linkFileAttachments, showContactInfo, showInMerchantCurrency, showInternalInformation, showMerchantNotes, showNonSensitivePaymentInfo, showPaymentInfo, translate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderFormat {\n");
    
    sb.append("    context: ").append(toIndentedString(context)).append("\n");
    sb.append("    dontLinkEmailToSearch: ").append(toIndentedString(dontLinkEmailToSearch)).append("\n");
    sb.append("    emailAsLink: ").append(toIndentedString(emailAsLink)).append("\n");
    sb.append("    filterDistributionCenterOid: ").append(toIndentedString(filterDistributionCenterOid)).append("\n");
    sb.append("    filterToItemsInContactOid: ").append(toIndentedString(filterToItemsInContactOid)).append("\n");
    sb.append("    format: ").append(toIndentedString(format)).append("\n");
    sb.append("    hideBillToAddress: ").append(toIndentedString(hideBillToAddress)).append("\n");
    sb.append("    hidePriceInformation: ").append(toIndentedString(hidePriceInformation)).append("\n");
    sb.append("    linkFileAttachments: ").append(toIndentedString(linkFileAttachments)).append("\n");
    sb.append("    showContactInfo: ").append(toIndentedString(showContactInfo)).append("\n");
    sb.append("    showInMerchantCurrency: ").append(toIndentedString(showInMerchantCurrency)).append("\n");
    sb.append("    showInternalInformation: ").append(toIndentedString(showInternalInformation)).append("\n");
    sb.append("    showMerchantNotes: ").append(toIndentedString(showMerchantNotes)).append("\n");
    sb.append("    showNonSensitivePaymentInfo: ").append(toIndentedString(showNonSensitivePaymentInfo)).append("\n");
    sb.append("    showPaymentInfo: ").append(toIndentedString(showPaymentInfo)).append("\n");
    sb.append("    translate: ").append(toIndentedString(translate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

