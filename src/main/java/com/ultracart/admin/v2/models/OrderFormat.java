/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * OrderFormat
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-08-10T16:36:11.743-04:00[America/Indianapolis]")
public class OrderFormat {
  public static final String SERIALIZED_NAME_CONTEXT = "context";
  @SerializedName(SERIALIZED_NAME_CONTEXT)
  private String context;

  public static final String SERIALIZED_NAME_DONT_LINK_EMAIL_TO_SEARCH = "dont_link_email_to_search";
  @SerializedName(SERIALIZED_NAME_DONT_LINK_EMAIL_TO_SEARCH)
  private Boolean dontLinkEmailToSearch;

  public static final String SERIALIZED_NAME_EMAIL_AS_LINK = "email_as_link";
  @SerializedName(SERIALIZED_NAME_EMAIL_AS_LINK)
  private Boolean emailAsLink;

  public static final String SERIALIZED_NAME_FILTER_DISTRIBUTION_CENTER_OID = "filter_distribution_center_oid";
  @SerializedName(SERIALIZED_NAME_FILTER_DISTRIBUTION_CENTER_OID)
  private Integer filterDistributionCenterOid;

  public static final String SERIALIZED_NAME_FILTER_TO_ITEMS_IN_CONTAINER_OID = "filter_to_items_in_container_oid";
  @SerializedName(SERIALIZED_NAME_FILTER_TO_ITEMS_IN_CONTAINER_OID)
  private Integer filterToItemsInContainerOid;

  /**
   * The desired format.
   */
  @JsonAdapter(FormatEnum.Adapter.class)
  public enum FormatEnum {
    TEXT("text"),
    
    DIV("div"),
    
    TABLE("table"),
    
    EMAIL("email");

    private String value;

    FormatEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static FormatEnum fromValue(String value) {
      for (FormatEnum b : FormatEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<FormatEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final FormatEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public FormatEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return FormatEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_FORMAT = "format";
  @SerializedName(SERIALIZED_NAME_FORMAT)
  private FormatEnum format;

  public static final String SERIALIZED_NAME_HIDE_BILL_TO_ADDRESS = "hide_bill_to_address";
  @SerializedName(SERIALIZED_NAME_HIDE_BILL_TO_ADDRESS)
  private Boolean hideBillToAddress;

  public static final String SERIALIZED_NAME_HIDE_PRICE_INFORMATION = "hide_price_information";
  @SerializedName(SERIALIZED_NAME_HIDE_PRICE_INFORMATION)
  private Boolean hidePriceInformation;

  public static final String SERIALIZED_NAME_LINK_FILE_ATTACHMENTS = "link_file_attachments";
  @SerializedName(SERIALIZED_NAME_LINK_FILE_ATTACHMENTS)
  private Boolean linkFileAttachments;

  public static final String SERIALIZED_NAME_SHOW_CONTACT_INFO = "show_contact_info";
  @SerializedName(SERIALIZED_NAME_SHOW_CONTACT_INFO)
  private Boolean showContactInfo;

  public static final String SERIALIZED_NAME_SHOW_IN_MERCHANT_CURRENCY = "show_in_merchant_currency";
  @SerializedName(SERIALIZED_NAME_SHOW_IN_MERCHANT_CURRENCY)
  private Boolean showInMerchantCurrency;

  public static final String SERIALIZED_NAME_SHOW_INTERNAL_INFORMATION = "show_internal_information";
  @SerializedName(SERIALIZED_NAME_SHOW_INTERNAL_INFORMATION)
  private Boolean showInternalInformation;

  public static final String SERIALIZED_NAME_SHOW_MERCHANT_NOTES = "show_merchant_notes";
  @SerializedName(SERIALIZED_NAME_SHOW_MERCHANT_NOTES)
  private Boolean showMerchantNotes;

  public static final String SERIALIZED_NAME_SHOW_NON_SENSITIVE_PAYMENT_INFO = "show_non_sensitive_payment_info";
  @SerializedName(SERIALIZED_NAME_SHOW_NON_SENSITIVE_PAYMENT_INFO)
  private Boolean showNonSensitivePaymentInfo;

  public static final String SERIALIZED_NAME_SHOW_PAYMENT_INFO = "show_payment_info";
  @SerializedName(SERIALIZED_NAME_SHOW_PAYMENT_INFO)
  private Boolean showPaymentInfo;

  public static final String SERIALIZED_NAME_TRANSLATE = "translate";
  @SerializedName(SERIALIZED_NAME_TRANSLATE)
  private Boolean translate;

  public OrderFormat() { 
  }

  public OrderFormat context(String context) {
    
    this.context = context;
    return this;
  }

   /**
   * The context to generate the order view for.
   * @return context
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The context to generate the order view for.")

  public String getContext() {
    return context;
  }


  public void setContext(String context) {
    this.context = context;
  }


  public OrderFormat dontLinkEmailToSearch(Boolean dontLinkEmailToSearch) {
    
    this.dontLinkEmailToSearch = dontLinkEmailToSearch;
    return this;
  }

   /**
   * True to not link the email address to the order search
   * @return dontLinkEmailToSearch
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True to not link the email address to the order search")

  public Boolean getDontLinkEmailToSearch() {
    return dontLinkEmailToSearch;
  }


  public void setDontLinkEmailToSearch(Boolean dontLinkEmailToSearch) {
    this.dontLinkEmailToSearch = dontLinkEmailToSearch;
  }


  public OrderFormat emailAsLink(Boolean emailAsLink) {
    
    this.emailAsLink = emailAsLink;
    return this;
  }

   /**
   * True to make the email address a clickable mailto link
   * @return emailAsLink
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True to make the email address a clickable mailto link")

  public Boolean getEmailAsLink() {
    return emailAsLink;
  }


  public void setEmailAsLink(Boolean emailAsLink) {
    this.emailAsLink = emailAsLink;
  }


  public OrderFormat filterDistributionCenterOid(Integer filterDistributionCenterOid) {
    
    this.filterDistributionCenterOid = filterDistributionCenterOid;
    return this;
  }

   /**
   * Specify a distribution center oid to filter the items displayed to that particular distribution center.
   * @return filterDistributionCenterOid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specify a distribution center oid to filter the items displayed to that particular distribution center.")

  public Integer getFilterDistributionCenterOid() {
    return filterDistributionCenterOid;
  }


  public void setFilterDistributionCenterOid(Integer filterDistributionCenterOid) {
    this.filterDistributionCenterOid = filterDistributionCenterOid;
  }


  public OrderFormat filterToItemsInContainerOid(Integer filterToItemsInContainerOid) {
    
    this.filterToItemsInContainerOid = filterToItemsInContainerOid;
    return this;
  }

   /**
   * The container oid to filter items to.
   * @return filterToItemsInContainerOid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The container oid to filter items to.")

  public Integer getFilterToItemsInContainerOid() {
    return filterToItemsInContainerOid;
  }


  public void setFilterToItemsInContainerOid(Integer filterToItemsInContainerOid) {
    this.filterToItemsInContainerOid = filterToItemsInContainerOid;
  }


  public OrderFormat format(FormatEnum format) {
    
    this.format = format;
    return this;
  }

   /**
   * The desired format.
   * @return format
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The desired format.")

  public FormatEnum getFormat() {
    return format;
  }


  public void setFormat(FormatEnum format) {
    this.format = format;
  }


  public OrderFormat hideBillToAddress(Boolean hideBillToAddress) {
    
    this.hideBillToAddress = hideBillToAddress;
    return this;
  }

   /**
   * True to ide the bill to address
   * @return hideBillToAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True to ide the bill to address")

  public Boolean getHideBillToAddress() {
    return hideBillToAddress;
  }


  public void setHideBillToAddress(Boolean hideBillToAddress) {
    this.hideBillToAddress = hideBillToAddress;
  }


  public OrderFormat hidePriceInformation(Boolean hidePriceInformation) {
    
    this.hidePriceInformation = hidePriceInformation;
    return this;
  }

   /**
   * True to hide price information
   * @return hidePriceInformation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True to hide price information")

  public Boolean getHidePriceInformation() {
    return hidePriceInformation;
  }


  public void setHidePriceInformation(Boolean hidePriceInformation) {
    this.hidePriceInformation = hidePriceInformation;
  }


  public OrderFormat linkFileAttachments(Boolean linkFileAttachments) {
    
    this.linkFileAttachments = linkFileAttachments;
    return this;
  }

   /**
   * True to link file attachments for download
   * @return linkFileAttachments
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True to link file attachments for download")

  public Boolean getLinkFileAttachments() {
    return linkFileAttachments;
  }


  public void setLinkFileAttachments(Boolean linkFileAttachments) {
    this.linkFileAttachments = linkFileAttachments;
  }


  public OrderFormat showContactInfo(Boolean showContactInfo) {
    
    this.showContactInfo = showContactInfo;
    return this;
  }

   /**
   * True to show contact information
   * @return showContactInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True to show contact information")

  public Boolean getShowContactInfo() {
    return showContactInfo;
  }


  public void setShowContactInfo(Boolean showContactInfo) {
    this.showContactInfo = showContactInfo;
  }


  public OrderFormat showInMerchantCurrency(Boolean showInMerchantCurrency) {
    
    this.showInMerchantCurrency = showInMerchantCurrency;
    return this;
  }

   /**
   * True to show the order in the merchant currency
   * @return showInMerchantCurrency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True to show the order in the merchant currency")

  public Boolean getShowInMerchantCurrency() {
    return showInMerchantCurrency;
  }


  public void setShowInMerchantCurrency(Boolean showInMerchantCurrency) {
    this.showInMerchantCurrency = showInMerchantCurrency;
  }


  public OrderFormat showInternalInformation(Boolean showInternalInformation) {
    
    this.showInternalInformation = showInternalInformation;
    return this;
  }

   /**
   * True to show internal information about the order
   * @return showInternalInformation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True to show internal information about the order")

  public Boolean getShowInternalInformation() {
    return showInternalInformation;
  }


  public void setShowInternalInformation(Boolean showInternalInformation) {
    this.showInternalInformation = showInternalInformation;
  }


  public OrderFormat showMerchantNotes(Boolean showMerchantNotes) {
    
    this.showMerchantNotes = showMerchantNotes;
    return this;
  }

   /**
   * True to show merchant notes
   * @return showMerchantNotes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True to show merchant notes")

  public Boolean getShowMerchantNotes() {
    return showMerchantNotes;
  }


  public void setShowMerchantNotes(Boolean showMerchantNotes) {
    this.showMerchantNotes = showMerchantNotes;
  }


  public OrderFormat showNonSensitivePaymentInfo(Boolean showNonSensitivePaymentInfo) {
    
    this.showNonSensitivePaymentInfo = showNonSensitivePaymentInfo;
    return this;
  }

   /**
   * True to show non-sensitive payment information
   * @return showNonSensitivePaymentInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True to show non-sensitive payment information")

  public Boolean getShowNonSensitivePaymentInfo() {
    return showNonSensitivePaymentInfo;
  }


  public void setShowNonSensitivePaymentInfo(Boolean showNonSensitivePaymentInfo) {
    this.showNonSensitivePaymentInfo = showNonSensitivePaymentInfo;
  }


  public OrderFormat showPaymentInfo(Boolean showPaymentInfo) {
    
    this.showPaymentInfo = showPaymentInfo;
    return this;
  }

   /**
   * True to show payment information
   * @return showPaymentInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True to show payment information")

  public Boolean getShowPaymentInfo() {
    return showPaymentInfo;
  }


  public void setShowPaymentInfo(Boolean showPaymentInfo) {
    this.showPaymentInfo = showPaymentInfo;
  }


  public OrderFormat translate(Boolean translate) {
    
    this.translate = translate;
    return this;
  }

   /**
   * True to translate the order into the native language of the customer
   * @return translate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True to translate the order into the native language of the customer")

  public Boolean getTranslate() {
    return translate;
  }


  public void setTranslate(Boolean translate) {
    this.translate = translate;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderFormat orderFormat = (OrderFormat) o;
    return Objects.equals(this.context, orderFormat.context) &&
        Objects.equals(this.dontLinkEmailToSearch, orderFormat.dontLinkEmailToSearch) &&
        Objects.equals(this.emailAsLink, orderFormat.emailAsLink) &&
        Objects.equals(this.filterDistributionCenterOid, orderFormat.filterDistributionCenterOid) &&
        Objects.equals(this.filterToItemsInContainerOid, orderFormat.filterToItemsInContainerOid) &&
        Objects.equals(this.format, orderFormat.format) &&
        Objects.equals(this.hideBillToAddress, orderFormat.hideBillToAddress) &&
        Objects.equals(this.hidePriceInformation, orderFormat.hidePriceInformation) &&
        Objects.equals(this.linkFileAttachments, orderFormat.linkFileAttachments) &&
        Objects.equals(this.showContactInfo, orderFormat.showContactInfo) &&
        Objects.equals(this.showInMerchantCurrency, orderFormat.showInMerchantCurrency) &&
        Objects.equals(this.showInternalInformation, orderFormat.showInternalInformation) &&
        Objects.equals(this.showMerchantNotes, orderFormat.showMerchantNotes) &&
        Objects.equals(this.showNonSensitivePaymentInfo, orderFormat.showNonSensitivePaymentInfo) &&
        Objects.equals(this.showPaymentInfo, orderFormat.showPaymentInfo) &&
        Objects.equals(this.translate, orderFormat.translate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(context, dontLinkEmailToSearch, emailAsLink, filterDistributionCenterOid, filterToItemsInContainerOid, format, hideBillToAddress, hidePriceInformation, linkFileAttachments, showContactInfo, showInMerchantCurrency, showInternalInformation, showMerchantNotes, showNonSensitivePaymentInfo, showPaymentInfo, translate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderFormat {\n");
    sb.append("    context: ").append(toIndentedString(context)).append("\n");
    sb.append("    dontLinkEmailToSearch: ").append(toIndentedString(dontLinkEmailToSearch)).append("\n");
    sb.append("    emailAsLink: ").append(toIndentedString(emailAsLink)).append("\n");
    sb.append("    filterDistributionCenterOid: ").append(toIndentedString(filterDistributionCenterOid)).append("\n");
    sb.append("    filterToItemsInContainerOid: ").append(toIndentedString(filterToItemsInContainerOid)).append("\n");
    sb.append("    format: ").append(toIndentedString(format)).append("\n");
    sb.append("    hideBillToAddress: ").append(toIndentedString(hideBillToAddress)).append("\n");
    sb.append("    hidePriceInformation: ").append(toIndentedString(hidePriceInformation)).append("\n");
    sb.append("    linkFileAttachments: ").append(toIndentedString(linkFileAttachments)).append("\n");
    sb.append("    showContactInfo: ").append(toIndentedString(showContactInfo)).append("\n");
    sb.append("    showInMerchantCurrency: ").append(toIndentedString(showInMerchantCurrency)).append("\n");
    sb.append("    showInternalInformation: ").append(toIndentedString(showInternalInformation)).append("\n");
    sb.append("    showMerchantNotes: ").append(toIndentedString(showMerchantNotes)).append("\n");
    sb.append("    showNonSensitivePaymentInfo: ").append(toIndentedString(showNonSensitivePaymentInfo)).append("\n");
    sb.append("    showPaymentInfo: ").append(toIndentedString(showPaymentInfo)).append("\n");
    sb.append("    translate: ").append(toIndentedString(translate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("context");
    openapiFields.add("dont_link_email_to_search");
    openapiFields.add("email_as_link");
    openapiFields.add("filter_distribution_center_oid");
    openapiFields.add("filter_to_items_in_container_oid");
    openapiFields.add("format");
    openapiFields.add("hide_bill_to_address");
    openapiFields.add("hide_price_information");
    openapiFields.add("link_file_attachments");
    openapiFields.add("show_contact_info");
    openapiFields.add("show_in_merchant_currency");
    openapiFields.add("show_internal_information");
    openapiFields.add("show_merchant_notes");
    openapiFields.add("show_non_sensitive_payment_info");
    openapiFields.add("show_payment_info");
    openapiFields.add("translate");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to OrderFormat
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (OrderFormat.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in OrderFormat is not found in the empty JSON string", OrderFormat.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!OrderFormat.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OrderFormat` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("context") != null && !jsonObj.get("context").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `context` to be a primitive type in the JSON string but got `%s`", jsonObj.get("context").toString()));
      }
      if (jsonObj.get("format") != null && !jsonObj.get("format").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `format` to be a primitive type in the JSON string but got `%s`", jsonObj.get("format").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OrderFormat.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OrderFormat' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OrderFormat> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OrderFormat.class));

       return (TypeAdapter<T>) new TypeAdapter<OrderFormat>() {
           @Override
           public void write(JsonWriter out, OrderFormat value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OrderFormat read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of OrderFormat given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of OrderFormat
  * @throws IOException if the JSON string is invalid with respect to OrderFormat
  */
  public static OrderFormat fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OrderFormat.class);
  }

 /**
  * Convert an instance of OrderFormat to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

