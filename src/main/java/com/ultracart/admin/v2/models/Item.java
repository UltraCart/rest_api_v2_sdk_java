/*
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ultracart.admin.v2.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ultracart.admin.v2.models.ItemAccounting;
import com.ultracart.admin.v2.models.ItemAmember;
import com.ultracart.admin.v2.models.ItemAutoOrder;
import com.ultracart.admin.v2.models.ItemCCBill;
import com.ultracart.admin.v2.models.ItemChannelPartnerMapping;
import com.ultracart.admin.v2.models.ItemChargeback;
import com.ultracart.admin.v2.models.ItemCheckout;
import com.ultracart.admin.v2.models.ItemContent;
import com.ultracart.admin.v2.models.ItemDigitalDelivery;
import com.ultracart.admin.v2.models.ItemEbay;
import com.ultracart.admin.v2.models.ItemEmailNotifications;
import com.ultracart.admin.v2.models.ItemEnrollment123;
import com.ultracart.admin.v2.models.ItemFulfillmentAddon;
import com.ultracart.admin.v2.models.ItemGiftCertificate;
import com.ultracart.admin.v2.models.ItemGoogleProductSearch;
import com.ultracart.admin.v2.models.ItemIdentifiers;
import com.ultracart.admin.v2.models.ItemInstantPaymentNotifications;
import com.ultracart.admin.v2.models.ItemInternal;
import com.ultracart.admin.v2.models.ItemKitDefinition;
import com.ultracart.admin.v2.models.ItemOption;
import com.ultracart.admin.v2.models.ItemPaymentProcessing;
import com.ultracart.admin.v2.models.ItemPhysical;
import com.ultracart.admin.v2.models.ItemPricing;
import com.ultracart.admin.v2.models.ItemProperty;
import com.ultracart.admin.v2.models.ItemRealtimePricing;
import com.ultracart.admin.v2.models.ItemRelated;
import com.ultracart.admin.v2.models.ItemReporting;
import com.ultracart.admin.v2.models.ItemRestriction;
import com.ultracart.admin.v2.models.ItemRevguard;
import com.ultracart.admin.v2.models.ItemReviews;
import com.ultracart.admin.v2.models.ItemSalesforce;
import com.ultracart.admin.v2.models.ItemShipping;
import com.ultracart.admin.v2.models.ItemTags;
import com.ultracart.admin.v2.models.ItemTax;
import com.ultracart.admin.v2.models.ItemThirdPartyEmailMarketing;
import com.ultracart.admin.v2.models.ItemVariantItem;
import com.ultracart.admin.v2.models.ItemVariation;
import com.ultracart.admin.v2.models.ItemWishlistMember;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.ultracart.admin.v2.util.JSON;

/**
 * Item
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-09-29T15:24:19.342-04:00[America/Indianapolis]")
public class Item {
  public static final String SERIALIZED_NAME_ACCOUNTING = "accounting";
  @SerializedName(SERIALIZED_NAME_ACCOUNTING)
  private ItemAccounting accounting;

  public static final String SERIALIZED_NAME_AMEMBER = "amember";
  @SerializedName(SERIALIZED_NAME_AMEMBER)
  private ItemAmember amember;

  public static final String SERIALIZED_NAME_AUTO_ORDER = "auto_order";
  @SerializedName(SERIALIZED_NAME_AUTO_ORDER)
  private ItemAutoOrder autoOrder;

  public static final String SERIALIZED_NAME_CCBILL = "ccbill";
  @SerializedName(SERIALIZED_NAME_CCBILL)
  private ItemCCBill ccbill;

  public static final String SERIALIZED_NAME_CHANNEL_PARTNER_ITEM_MAPPINGS = "channel_partner_item_mappings";
  @SerializedName(SERIALIZED_NAME_CHANNEL_PARTNER_ITEM_MAPPINGS)
  private List<ItemChannelPartnerMapping> channelPartnerItemMappings = null;

  public static final String SERIALIZED_NAME_CHARGEBACK = "chargeback";
  @SerializedName(SERIALIZED_NAME_CHARGEBACK)
  private ItemChargeback chargeback;

  public static final String SERIALIZED_NAME_CHECKOUT = "checkout";
  @SerializedName(SERIALIZED_NAME_CHECKOUT)
  private ItemCheckout checkout;

  public static final String SERIALIZED_NAME_CONTENT = "content";
  @SerializedName(SERIALIZED_NAME_CONTENT)
  private ItemContent content;

  public static final String SERIALIZED_NAME_CREATION_DTS = "creation_dts";
  @SerializedName(SERIALIZED_NAME_CREATION_DTS)
  private String creationDts;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DESCRIPTION_TRANSLATED_TEXT_INSTANCE_OID = "description_translated_text_instance_oid";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION_TRANSLATED_TEXT_INSTANCE_OID)
  private Integer descriptionTranslatedTextInstanceOid;

  public static final String SERIALIZED_NAME_DIGITAL_DELIVERY = "digital_delivery";
  @SerializedName(SERIALIZED_NAME_DIGITAL_DELIVERY)
  private ItemDigitalDelivery digitalDelivery;

  public static final String SERIALIZED_NAME_EBAY = "ebay";
  @SerializedName(SERIALIZED_NAME_EBAY)
  private ItemEbay ebay;

  public static final String SERIALIZED_NAME_EMAIL_NOTIFICATIONS = "email_notifications";
  @SerializedName(SERIALIZED_NAME_EMAIL_NOTIFICATIONS)
  private ItemEmailNotifications emailNotifications;

  public static final String SERIALIZED_NAME_ENROLLMENT123 = "enrollment123";
  @SerializedName(SERIALIZED_NAME_ENROLLMENT123)
  private ItemEnrollment123 enrollment123;

  public static final String SERIALIZED_NAME_FULFILLMENT_ADDONS = "fulfillment_addons";
  @SerializedName(SERIALIZED_NAME_FULFILLMENT_ADDONS)
  private List<ItemFulfillmentAddon> fulfillmentAddons = null;

  public static final String SERIALIZED_NAME_GIFT_CERTIFICATE = "gift_certificate";
  @SerializedName(SERIALIZED_NAME_GIFT_CERTIFICATE)
  private ItemGiftCertificate giftCertificate;

  public static final String SERIALIZED_NAME_GOOGLE_PRODUCT_SEARCH = "google_product_search";
  @SerializedName(SERIALIZED_NAME_GOOGLE_PRODUCT_SEARCH)
  private ItemGoogleProductSearch googleProductSearch;

  public static final String SERIALIZED_NAME_IDENTIFIERS = "identifiers";
  @SerializedName(SERIALIZED_NAME_IDENTIFIERS)
  private ItemIdentifiers identifiers;

  public static final String SERIALIZED_NAME_INACTIVE = "inactive";
  @SerializedName(SERIALIZED_NAME_INACTIVE)
  private Boolean inactive;

  public static final String SERIALIZED_NAME_INSTANT_PAYMENT_NOTIFICATIONS = "instant_payment_notifications";
  @SerializedName(SERIALIZED_NAME_INSTANT_PAYMENT_NOTIFICATIONS)
  private ItemInstantPaymentNotifications instantPaymentNotifications;

  public static final String SERIALIZED_NAME_INTERNAL = "internal";
  @SerializedName(SERIALIZED_NAME_INTERNAL)
  private ItemInternal internal;

  public static final String SERIALIZED_NAME_KIT = "kit";
  @SerializedName(SERIALIZED_NAME_KIT)
  private Boolean kit;

  public static final String SERIALIZED_NAME_KIT_COMPONENT_ONLY = "kit_component_only";
  @SerializedName(SERIALIZED_NAME_KIT_COMPONENT_ONLY)
  private Boolean kitComponentOnly;

  public static final String SERIALIZED_NAME_KIT_DEFINITION = "kit_definition";
  @SerializedName(SERIALIZED_NAME_KIT_DEFINITION)
  private ItemKitDefinition kitDefinition;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_DTS = "last_modified_dts";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_DTS)
  private String lastModifiedDts;

  public static final String SERIALIZED_NAME_MERCHANT_ID = "merchant_id";
  @SerializedName(SERIALIZED_NAME_MERCHANT_ID)
  private String merchantId;

  public static final String SERIALIZED_NAME_MERCHANT_ITEM_ID = "merchant_item_id";
  @SerializedName(SERIALIZED_NAME_MERCHANT_ITEM_ID)
  private String merchantItemId;

  public static final String SERIALIZED_NAME_MERCHANT_ITEM_OID = "merchant_item_oid";
  @SerializedName(SERIALIZED_NAME_MERCHANT_ITEM_OID)
  private Integer merchantItemOid;

  public static final String SERIALIZED_NAME_OPTIONS = "options";
  @SerializedName(SERIALIZED_NAME_OPTIONS)
  private List<ItemOption> options = null;

  public static final String SERIALIZED_NAME_PARENT_CATEGORY_ID = "parent_category_id";
  @SerializedName(SERIALIZED_NAME_PARENT_CATEGORY_ID)
  private Integer parentCategoryId;

  public static final String SERIALIZED_NAME_PARENT_CATEGORY_PATH = "parent_category_path";
  @SerializedName(SERIALIZED_NAME_PARENT_CATEGORY_PATH)
  private String parentCategoryPath;

  public static final String SERIALIZED_NAME_PAYMENT_PROCESSING = "payment_processing";
  @SerializedName(SERIALIZED_NAME_PAYMENT_PROCESSING)
  private ItemPaymentProcessing paymentProcessing;

  public static final String SERIALIZED_NAME_PHYSICAL = "physical";
  @SerializedName(SERIALIZED_NAME_PHYSICAL)
  private ItemPhysical physical;

  public static final String SERIALIZED_NAME_PRICING = "pricing";
  @SerializedName(SERIALIZED_NAME_PRICING)
  private ItemPricing pricing;

  public static final String SERIALIZED_NAME_PROPERTIES = "properties";
  @SerializedName(SERIALIZED_NAME_PROPERTIES)
  private List<ItemProperty> properties = null;

  public static final String SERIALIZED_NAME_REALTIME_PRICING = "realtime_pricing";
  @SerializedName(SERIALIZED_NAME_REALTIME_PRICING)
  private ItemRealtimePricing realtimePricing;

  public static final String SERIALIZED_NAME_RECOMMEND_REPLENISHMENT_DAYS = "recommend_replenishment_days";
  @SerializedName(SERIALIZED_NAME_RECOMMEND_REPLENISHMENT_DAYS)
  private Integer recommendReplenishmentDays;

  public static final String SERIALIZED_NAME_RELATED = "related";
  @SerializedName(SERIALIZED_NAME_RELATED)
  private ItemRelated related;

  public static final String SERIALIZED_NAME_REPORTING = "reporting";
  @SerializedName(SERIALIZED_NAME_REPORTING)
  private ItemReporting reporting;

  public static final String SERIALIZED_NAME_RESTRICTION = "restriction";
  @SerializedName(SERIALIZED_NAME_RESTRICTION)
  private ItemRestriction restriction;

  public static final String SERIALIZED_NAME_REVGUARD = "revguard";
  @SerializedName(SERIALIZED_NAME_REVGUARD)
  private ItemRevguard revguard;

  public static final String SERIALIZED_NAME_REVIEWS = "reviews";
  @SerializedName(SERIALIZED_NAME_REVIEWS)
  private ItemReviews reviews;

  public static final String SERIALIZED_NAME_SALESFORCE = "salesforce";
  @SerializedName(SERIALIZED_NAME_SALESFORCE)
  private ItemSalesforce salesforce;

  public static final String SERIALIZED_NAME_SHIPPING = "shipping";
  @SerializedName(SERIALIZED_NAME_SHIPPING)
  private ItemShipping shipping;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private ItemTags tags;

  public static final String SERIALIZED_NAME_TAX = "tax";
  @SerializedName(SERIALIZED_NAME_TAX)
  private ItemTax tax;

  public static final String SERIALIZED_NAME_THIRD_PARTY_EMAIL_MARKETING = "third_party_email_marketing";
  @SerializedName(SERIALIZED_NAME_THIRD_PARTY_EMAIL_MARKETING)
  private List<ItemThirdPartyEmailMarketing> thirdPartyEmailMarketing = null;

  public static final String SERIALIZED_NAME_VARIANT_ITEMS = "variant_items";
  @SerializedName(SERIALIZED_NAME_VARIANT_ITEMS)
  private List<ItemVariantItem> variantItems = null;

  public static final String SERIALIZED_NAME_VARIATIONS = "variations";
  @SerializedName(SERIALIZED_NAME_VARIATIONS)
  private List<ItemVariation> variations = null;

  public static final String SERIALIZED_NAME_WISHLIST_MEMBER = "wishlist_member";
  @SerializedName(SERIALIZED_NAME_WISHLIST_MEMBER)
  private ItemWishlistMember wishlistMember;

  public Item() { 
  }

  public Item accounting(ItemAccounting accounting) {
    
    this.accounting = accounting;
    return this;
  }

   /**
   * Get accounting
   * @return accounting
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ItemAccounting getAccounting() {
    return accounting;
  }


  public void setAccounting(ItemAccounting accounting) {
    this.accounting = accounting;
  }


  public Item amember(ItemAmember amember) {
    
    this.amember = amember;
    return this;
  }

   /**
   * Get amember
   * @return amember
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ItemAmember getAmember() {
    return amember;
  }


  public void setAmember(ItemAmember amember) {
    this.amember = amember;
  }


  public Item autoOrder(ItemAutoOrder autoOrder) {
    
    this.autoOrder = autoOrder;
    return this;
  }

   /**
   * Get autoOrder
   * @return autoOrder
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ItemAutoOrder getAutoOrder() {
    return autoOrder;
  }


  public void setAutoOrder(ItemAutoOrder autoOrder) {
    this.autoOrder = autoOrder;
  }


  public Item ccbill(ItemCCBill ccbill) {
    
    this.ccbill = ccbill;
    return this;
  }

   /**
   * Get ccbill
   * @return ccbill
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ItemCCBill getCcbill() {
    return ccbill;
  }


  public void setCcbill(ItemCCBill ccbill) {
    this.ccbill = ccbill;
  }


  public Item channelPartnerItemMappings(List<ItemChannelPartnerMapping> channelPartnerItemMappings) {
    
    this.channelPartnerItemMappings = channelPartnerItemMappings;
    return this;
  }

  public Item addChannelPartnerItemMappingsItem(ItemChannelPartnerMapping channelPartnerItemMappingsItem) {
    if (this.channelPartnerItemMappings == null) {
      this.channelPartnerItemMappings = new ArrayList<>();
    }
    this.channelPartnerItemMappings.add(channelPartnerItemMappingsItem);
    return this;
  }

   /**
   * Channel Partner Item Mapping
   * @return channelPartnerItemMappings
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Channel Partner Item Mapping")

  public List<ItemChannelPartnerMapping> getChannelPartnerItemMappings() {
    return channelPartnerItemMappings;
  }


  public void setChannelPartnerItemMappings(List<ItemChannelPartnerMapping> channelPartnerItemMappings) {
    this.channelPartnerItemMappings = channelPartnerItemMappings;
  }


  public Item chargeback(ItemChargeback chargeback) {
    
    this.chargeback = chargeback;
    return this;
  }

   /**
   * Get chargeback
   * @return chargeback
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ItemChargeback getChargeback() {
    return chargeback;
  }


  public void setChargeback(ItemChargeback chargeback) {
    this.chargeback = chargeback;
  }


  public Item checkout(ItemCheckout checkout) {
    
    this.checkout = checkout;
    return this;
  }

   /**
   * Get checkout
   * @return checkout
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ItemCheckout getCheckout() {
    return checkout;
  }


  public void setCheckout(ItemCheckout checkout) {
    this.checkout = checkout;
  }


  public Item content(ItemContent content) {
    
    this.content = content;
    return this;
  }

   /**
   * Get content
   * @return content
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ItemContent getContent() {
    return content;
  }


  public void setContent(ItemContent content) {
    this.content = content;
  }


  public Item creationDts(String creationDts) {
    
    this.creationDts = creationDts;
    return this;
  }

   /**
   * Date/time of creation
   * @return creationDts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Date/time of creation")

  public String getCreationDts() {
    return creationDts;
  }


  public void setCreationDts(String creationDts) {
    this.creationDts = creationDts;
  }


  public Item description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Description of the item up to 500 characters.
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Description of the item up to 500 characters.")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public Item descriptionTranslatedTextInstanceOid(Integer descriptionTranslatedTextInstanceOid) {
    
    this.descriptionTranslatedTextInstanceOid = descriptionTranslatedTextInstanceOid;
    return this;
  }

   /**
   * Description translated text instance id
   * @return descriptionTranslatedTextInstanceOid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Description translated text instance id")

  public Integer getDescriptionTranslatedTextInstanceOid() {
    return descriptionTranslatedTextInstanceOid;
  }


  public void setDescriptionTranslatedTextInstanceOid(Integer descriptionTranslatedTextInstanceOid) {
    this.descriptionTranslatedTextInstanceOid = descriptionTranslatedTextInstanceOid;
  }


  public Item digitalDelivery(ItemDigitalDelivery digitalDelivery) {
    
    this.digitalDelivery = digitalDelivery;
    return this;
  }

   /**
   * Get digitalDelivery
   * @return digitalDelivery
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ItemDigitalDelivery getDigitalDelivery() {
    return digitalDelivery;
  }


  public void setDigitalDelivery(ItemDigitalDelivery digitalDelivery) {
    this.digitalDelivery = digitalDelivery;
  }


  public Item ebay(ItemEbay ebay) {
    
    this.ebay = ebay;
    return this;
  }

   /**
   * Get ebay
   * @return ebay
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ItemEbay getEbay() {
    return ebay;
  }


  public void setEbay(ItemEbay ebay) {
    this.ebay = ebay;
  }


  public Item emailNotifications(ItemEmailNotifications emailNotifications) {
    
    this.emailNotifications = emailNotifications;
    return this;
  }

   /**
   * Get emailNotifications
   * @return emailNotifications
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ItemEmailNotifications getEmailNotifications() {
    return emailNotifications;
  }


  public void setEmailNotifications(ItemEmailNotifications emailNotifications) {
    this.emailNotifications = emailNotifications;
  }


  public Item enrollment123(ItemEnrollment123 enrollment123) {
    
    this.enrollment123 = enrollment123;
    return this;
  }

   /**
   * Get enrollment123
   * @return enrollment123
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ItemEnrollment123 getEnrollment123() {
    return enrollment123;
  }


  public void setEnrollment123(ItemEnrollment123 enrollment123) {
    this.enrollment123 = enrollment123;
  }


  public Item fulfillmentAddons(List<ItemFulfillmentAddon> fulfillmentAddons) {
    
    this.fulfillmentAddons = fulfillmentAddons;
    return this;
  }

  public Item addFulfillmentAddonsItem(ItemFulfillmentAddon fulfillmentAddonsItem) {
    if (this.fulfillmentAddons == null) {
      this.fulfillmentAddons = new ArrayList<>();
    }
    this.fulfillmentAddons.add(fulfillmentAddonsItem);
    return this;
  }

   /**
   * Fulfillment Add-ons
   * @return fulfillmentAddons
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Fulfillment Add-ons")

  public List<ItemFulfillmentAddon> getFulfillmentAddons() {
    return fulfillmentAddons;
  }


  public void setFulfillmentAddons(List<ItemFulfillmentAddon> fulfillmentAddons) {
    this.fulfillmentAddons = fulfillmentAddons;
  }


  public Item giftCertificate(ItemGiftCertificate giftCertificate) {
    
    this.giftCertificate = giftCertificate;
    return this;
  }

   /**
   * Get giftCertificate
   * @return giftCertificate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ItemGiftCertificate getGiftCertificate() {
    return giftCertificate;
  }


  public void setGiftCertificate(ItemGiftCertificate giftCertificate) {
    this.giftCertificate = giftCertificate;
  }


  public Item googleProductSearch(ItemGoogleProductSearch googleProductSearch) {
    
    this.googleProductSearch = googleProductSearch;
    return this;
  }

   /**
   * Get googleProductSearch
   * @return googleProductSearch
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ItemGoogleProductSearch getGoogleProductSearch() {
    return googleProductSearch;
  }


  public void setGoogleProductSearch(ItemGoogleProductSearch googleProductSearch) {
    this.googleProductSearch = googleProductSearch;
  }


  public Item identifiers(ItemIdentifiers identifiers) {
    
    this.identifiers = identifiers;
    return this;
  }

   /**
   * Get identifiers
   * @return identifiers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ItemIdentifiers getIdentifiers() {
    return identifiers;
  }


  public void setIdentifiers(ItemIdentifiers identifiers) {
    this.identifiers = identifiers;
  }


  public Item inactive(Boolean inactive) {
    
    this.inactive = inactive;
    return this;
  }

   /**
   * True if this item is inactive and can not be purchased
   * @return inactive
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if this item is inactive and can not be purchased")

  public Boolean getInactive() {
    return inactive;
  }


  public void setInactive(Boolean inactive) {
    this.inactive = inactive;
  }


  public Item instantPaymentNotifications(ItemInstantPaymentNotifications instantPaymentNotifications) {
    
    this.instantPaymentNotifications = instantPaymentNotifications;
    return this;
  }

   /**
   * Get instantPaymentNotifications
   * @return instantPaymentNotifications
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ItemInstantPaymentNotifications getInstantPaymentNotifications() {
    return instantPaymentNotifications;
  }


  public void setInstantPaymentNotifications(ItemInstantPaymentNotifications instantPaymentNotifications) {
    this.instantPaymentNotifications = instantPaymentNotifications;
  }


  public Item internal(ItemInternal internal) {
    
    this.internal = internal;
    return this;
  }

   /**
   * Get internal
   * @return internal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ItemInternal getInternal() {
    return internal;
  }


  public void setInternal(ItemInternal internal) {
    this.internal = internal;
  }


  public Item kit(Boolean kit) {
    
    this.kit = kit;
    return this;
  }

   /**
   * True if this item is a kit
   * @return kit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if this item is a kit")

  public Boolean getKit() {
    return kit;
  }


  public void setKit(Boolean kit) {
    this.kit = kit;
  }


  public Item kitComponentOnly(Boolean kitComponentOnly) {
    
    this.kitComponentOnly = kitComponentOnly;
    return this;
  }

   /**
   * True if this item can only be usd as a kit component
   * @return kitComponentOnly
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if this item can only be usd as a kit component")

  public Boolean getKitComponentOnly() {
    return kitComponentOnly;
  }


  public void setKitComponentOnly(Boolean kitComponentOnly) {
    this.kitComponentOnly = kitComponentOnly;
  }


  public Item kitDefinition(ItemKitDefinition kitDefinition) {
    
    this.kitDefinition = kitDefinition;
    return this;
  }

   /**
   * Get kitDefinition
   * @return kitDefinition
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ItemKitDefinition getKitDefinition() {
    return kitDefinition;
  }


  public void setKitDefinition(ItemKitDefinition kitDefinition) {
    this.kitDefinition = kitDefinition;
  }


  public Item lastModifiedDts(String lastModifiedDts) {
    
    this.lastModifiedDts = lastModifiedDts;
    return this;
  }

   /**
   * Date/time of last modification
   * @return lastModifiedDts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Date/time of last modification")

  public String getLastModifiedDts() {
    return lastModifiedDts;
  }


  public void setLastModifiedDts(String lastModifiedDts) {
    this.lastModifiedDts = lastModifiedDts;
  }


  public Item merchantId(String merchantId) {
    
    this.merchantId = merchantId;
    return this;
  }

   /**
   * UltraCart merchant ID owning item
   * @return merchantId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "UltraCart merchant ID owning item")

  public String getMerchantId() {
    return merchantId;
  }


  public void setMerchantId(String merchantId) {
    this.merchantId = merchantId;
  }


  public Item merchantItemId(String merchantItemId) {
    
    this.merchantItemId = merchantItemId;
    return this;
  }

   /**
   * Unique item id assigned to this item
   * @return merchantItemId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unique item id assigned to this item")

  public String getMerchantItemId() {
    return merchantItemId;
  }


  public void setMerchantItemId(String merchantItemId) {
    this.merchantItemId = merchantItemId;
  }


  public Item merchantItemOid(Integer merchantItemOid) {
    
    this.merchantItemOid = merchantItemOid;
    return this;
  }

   /**
   * Unique object identifier for this item
   * @return merchantItemOid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unique object identifier for this item")

  public Integer getMerchantItemOid() {
    return merchantItemOid;
  }


  public void setMerchantItemOid(Integer merchantItemOid) {
    this.merchantItemOid = merchantItemOid;
  }


  public Item options(List<ItemOption> options) {
    
    this.options = options;
    return this;
  }

  public Item addOptionsItem(ItemOption optionsItem) {
    if (this.options == null) {
      this.options = new ArrayList<>();
    }
    this.options.add(optionsItem);
    return this;
  }

   /**
   * Options
   * @return options
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Options")

  public List<ItemOption> getOptions() {
    return options;
  }


  public void setOptions(List<ItemOption> options) {
    this.options = options;
  }


  public Item parentCategoryId(Integer parentCategoryId) {
    
    this.parentCategoryId = parentCategoryId;
    return this;
  }

   /**
   * Parent category of the item.  Zero indicates the root folder.
   * @return parentCategoryId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Parent category of the item.  Zero indicates the root folder.")

  public Integer getParentCategoryId() {
    return parentCategoryId;
  }


  public void setParentCategoryId(Integer parentCategoryId) {
    this.parentCategoryId = parentCategoryId;
  }


  public Item parentCategoryPath(String parentCategoryPath) {
    
    this.parentCategoryPath = parentCategoryPath;
    return this;
  }

   /**
   * Parent category path.  / indicates the root folder.
   * @return parentCategoryPath
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Parent category path.  / indicates the root folder.")

  public String getParentCategoryPath() {
    return parentCategoryPath;
  }


  public void setParentCategoryPath(String parentCategoryPath) {
    this.parentCategoryPath = parentCategoryPath;
  }


  public Item paymentProcessing(ItemPaymentProcessing paymentProcessing) {
    
    this.paymentProcessing = paymentProcessing;
    return this;
  }

   /**
   * Get paymentProcessing
   * @return paymentProcessing
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ItemPaymentProcessing getPaymentProcessing() {
    return paymentProcessing;
  }


  public void setPaymentProcessing(ItemPaymentProcessing paymentProcessing) {
    this.paymentProcessing = paymentProcessing;
  }


  public Item physical(ItemPhysical physical) {
    
    this.physical = physical;
    return this;
  }

   /**
   * Get physical
   * @return physical
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ItemPhysical getPhysical() {
    return physical;
  }


  public void setPhysical(ItemPhysical physical) {
    this.physical = physical;
  }


  public Item pricing(ItemPricing pricing) {
    
    this.pricing = pricing;
    return this;
  }

   /**
   * Get pricing
   * @return pricing
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ItemPricing getPricing() {
    return pricing;
  }


  public void setPricing(ItemPricing pricing) {
    this.pricing = pricing;
  }


  public Item properties(List<ItemProperty> properties) {
    
    this.properties = properties;
    return this;
  }

  public Item addPropertiesItem(ItemProperty propertiesItem) {
    if (this.properties == null) {
      this.properties = new ArrayList<>();
    }
    this.properties.add(propertiesItem);
    return this;
  }

   /**
   * Properties
   * @return properties
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Properties")

  public List<ItemProperty> getProperties() {
    return properties;
  }


  public void setProperties(List<ItemProperty> properties) {
    this.properties = properties;
  }


  public Item realtimePricing(ItemRealtimePricing realtimePricing) {
    
    this.realtimePricing = realtimePricing;
    return this;
  }

   /**
   * Get realtimePricing
   * @return realtimePricing
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ItemRealtimePricing getRealtimePricing() {
    return realtimePricing;
  }


  public void setRealtimePricing(ItemRealtimePricing realtimePricing) {
    this.realtimePricing = realtimePricing;
  }


  public Item recommendReplenishmentDays(Integer recommendReplenishmentDays) {
    
    this.recommendReplenishmentDays = recommendReplenishmentDays;
    return this;
  }

   /**
   * Number of days to recommend replenishment after.  Null is not configured.  Set to zero to disable.
   * @return recommendReplenishmentDays
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Number of days to recommend replenishment after.  Null is not configured.  Set to zero to disable.")

  public Integer getRecommendReplenishmentDays() {
    return recommendReplenishmentDays;
  }


  public void setRecommendReplenishmentDays(Integer recommendReplenishmentDays) {
    this.recommendReplenishmentDays = recommendReplenishmentDays;
  }


  public Item related(ItemRelated related) {
    
    this.related = related;
    return this;
  }

   /**
   * Get related
   * @return related
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ItemRelated getRelated() {
    return related;
  }


  public void setRelated(ItemRelated related) {
    this.related = related;
  }


  public Item reporting(ItemReporting reporting) {
    
    this.reporting = reporting;
    return this;
  }

   /**
   * Get reporting
   * @return reporting
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ItemReporting getReporting() {
    return reporting;
  }


  public void setReporting(ItemReporting reporting) {
    this.reporting = reporting;
  }


  public Item restriction(ItemRestriction restriction) {
    
    this.restriction = restriction;
    return this;
  }

   /**
   * Get restriction
   * @return restriction
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ItemRestriction getRestriction() {
    return restriction;
  }


  public void setRestriction(ItemRestriction restriction) {
    this.restriction = restriction;
  }


  public Item revguard(ItemRevguard revguard) {
    
    this.revguard = revguard;
    return this;
  }

   /**
   * Get revguard
   * @return revguard
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ItemRevguard getRevguard() {
    return revguard;
  }


  public void setRevguard(ItemRevguard revguard) {
    this.revguard = revguard;
  }


  public Item reviews(ItemReviews reviews) {
    
    this.reviews = reviews;
    return this;
  }

   /**
   * Get reviews
   * @return reviews
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ItemReviews getReviews() {
    return reviews;
  }


  public void setReviews(ItemReviews reviews) {
    this.reviews = reviews;
  }


  public Item salesforce(ItemSalesforce salesforce) {
    
    this.salesforce = salesforce;
    return this;
  }

   /**
   * Get salesforce
   * @return salesforce
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ItemSalesforce getSalesforce() {
    return salesforce;
  }


  public void setSalesforce(ItemSalesforce salesforce) {
    this.salesforce = salesforce;
  }


  public Item shipping(ItemShipping shipping) {
    
    this.shipping = shipping;
    return this;
  }

   /**
   * Get shipping
   * @return shipping
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ItemShipping getShipping() {
    return shipping;
  }


  public void setShipping(ItemShipping shipping) {
    this.shipping = shipping;
  }


  public Item tags(ItemTags tags) {
    
    this.tags = tags;
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ItemTags getTags() {
    return tags;
  }


  public void setTags(ItemTags tags) {
    this.tags = tags;
  }


  public Item tax(ItemTax tax) {
    
    this.tax = tax;
    return this;
  }

   /**
   * Get tax
   * @return tax
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ItemTax getTax() {
    return tax;
  }


  public void setTax(ItemTax tax) {
    this.tax = tax;
  }


  public Item thirdPartyEmailMarketing(List<ItemThirdPartyEmailMarketing> thirdPartyEmailMarketing) {
    
    this.thirdPartyEmailMarketing = thirdPartyEmailMarketing;
    return this;
  }

  public Item addThirdPartyEmailMarketingItem(ItemThirdPartyEmailMarketing thirdPartyEmailMarketingItem) {
    if (this.thirdPartyEmailMarketing == null) {
      this.thirdPartyEmailMarketing = new ArrayList<>();
    }
    this.thirdPartyEmailMarketing.add(thirdPartyEmailMarketingItem);
    return this;
  }

   /**
   * 3rd Party Email Marketing
   * @return thirdPartyEmailMarketing
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "3rd Party Email Marketing")

  public List<ItemThirdPartyEmailMarketing> getThirdPartyEmailMarketing() {
    return thirdPartyEmailMarketing;
  }


  public void setThirdPartyEmailMarketing(List<ItemThirdPartyEmailMarketing> thirdPartyEmailMarketing) {
    this.thirdPartyEmailMarketing = thirdPartyEmailMarketing;
  }


  public Item variantItems(List<ItemVariantItem> variantItems) {
    
    this.variantItems = variantItems;
    return this;
  }

  public Item addVariantItemsItem(ItemVariantItem variantItemsItem) {
    if (this.variantItems == null) {
      this.variantItems = new ArrayList<>();
    }
    this.variantItems.add(variantItemsItem);
    return this;
  }

   /**
   * Variant Items
   * @return variantItems
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Variant Items")

  public List<ItemVariantItem> getVariantItems() {
    return variantItems;
  }


  public void setVariantItems(List<ItemVariantItem> variantItems) {
    this.variantItems = variantItems;
  }


  public Item variations(List<ItemVariation> variations) {
    
    this.variations = variations;
    return this;
  }

  public Item addVariationsItem(ItemVariation variationsItem) {
    if (this.variations == null) {
      this.variations = new ArrayList<>();
    }
    this.variations.add(variationsItem);
    return this;
  }

   /**
   * Variations
   * @return variations
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Variations")

  public List<ItemVariation> getVariations() {
    return variations;
  }


  public void setVariations(List<ItemVariation> variations) {
    this.variations = variations;
  }


  public Item wishlistMember(ItemWishlistMember wishlistMember) {
    
    this.wishlistMember = wishlistMember;
    return this;
  }

   /**
   * Get wishlistMember
   * @return wishlistMember
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ItemWishlistMember getWishlistMember() {
    return wishlistMember;
  }


  public void setWishlistMember(ItemWishlistMember wishlistMember) {
    this.wishlistMember = wishlistMember;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Item item = (Item) o;
    return Objects.equals(this.accounting, item.accounting) &&
        Objects.equals(this.amember, item.amember) &&
        Objects.equals(this.autoOrder, item.autoOrder) &&
        Objects.equals(this.ccbill, item.ccbill) &&
        Objects.equals(this.channelPartnerItemMappings, item.channelPartnerItemMappings) &&
        Objects.equals(this.chargeback, item.chargeback) &&
        Objects.equals(this.checkout, item.checkout) &&
        Objects.equals(this.content, item.content) &&
        Objects.equals(this.creationDts, item.creationDts) &&
        Objects.equals(this.description, item.description) &&
        Objects.equals(this.descriptionTranslatedTextInstanceOid, item.descriptionTranslatedTextInstanceOid) &&
        Objects.equals(this.digitalDelivery, item.digitalDelivery) &&
        Objects.equals(this.ebay, item.ebay) &&
        Objects.equals(this.emailNotifications, item.emailNotifications) &&
        Objects.equals(this.enrollment123, item.enrollment123) &&
        Objects.equals(this.fulfillmentAddons, item.fulfillmentAddons) &&
        Objects.equals(this.giftCertificate, item.giftCertificate) &&
        Objects.equals(this.googleProductSearch, item.googleProductSearch) &&
        Objects.equals(this.identifiers, item.identifiers) &&
        Objects.equals(this.inactive, item.inactive) &&
        Objects.equals(this.instantPaymentNotifications, item.instantPaymentNotifications) &&
        Objects.equals(this.internal, item.internal) &&
        Objects.equals(this.kit, item.kit) &&
        Objects.equals(this.kitComponentOnly, item.kitComponentOnly) &&
        Objects.equals(this.kitDefinition, item.kitDefinition) &&
        Objects.equals(this.lastModifiedDts, item.lastModifiedDts) &&
        Objects.equals(this.merchantId, item.merchantId) &&
        Objects.equals(this.merchantItemId, item.merchantItemId) &&
        Objects.equals(this.merchantItemOid, item.merchantItemOid) &&
        Objects.equals(this.options, item.options) &&
        Objects.equals(this.parentCategoryId, item.parentCategoryId) &&
        Objects.equals(this.parentCategoryPath, item.parentCategoryPath) &&
        Objects.equals(this.paymentProcessing, item.paymentProcessing) &&
        Objects.equals(this.physical, item.physical) &&
        Objects.equals(this.pricing, item.pricing) &&
        Objects.equals(this.properties, item.properties) &&
        Objects.equals(this.realtimePricing, item.realtimePricing) &&
        Objects.equals(this.recommendReplenishmentDays, item.recommendReplenishmentDays) &&
        Objects.equals(this.related, item.related) &&
        Objects.equals(this.reporting, item.reporting) &&
        Objects.equals(this.restriction, item.restriction) &&
        Objects.equals(this.revguard, item.revguard) &&
        Objects.equals(this.reviews, item.reviews) &&
        Objects.equals(this.salesforce, item.salesforce) &&
        Objects.equals(this.shipping, item.shipping) &&
        Objects.equals(this.tags, item.tags) &&
        Objects.equals(this.tax, item.tax) &&
        Objects.equals(this.thirdPartyEmailMarketing, item.thirdPartyEmailMarketing) &&
        Objects.equals(this.variantItems, item.variantItems) &&
        Objects.equals(this.variations, item.variations) &&
        Objects.equals(this.wishlistMember, item.wishlistMember);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accounting, amember, autoOrder, ccbill, channelPartnerItemMappings, chargeback, checkout, content, creationDts, description, descriptionTranslatedTextInstanceOid, digitalDelivery, ebay, emailNotifications, enrollment123, fulfillmentAddons, giftCertificate, googleProductSearch, identifiers, inactive, instantPaymentNotifications, internal, kit, kitComponentOnly, kitDefinition, lastModifiedDts, merchantId, merchantItemId, merchantItemOid, options, parentCategoryId, parentCategoryPath, paymentProcessing, physical, pricing, properties, realtimePricing, recommendReplenishmentDays, related, reporting, restriction, revguard, reviews, salesforce, shipping, tags, tax, thirdPartyEmailMarketing, variantItems, variations, wishlistMember);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Item {\n");
    sb.append("    accounting: ").append(toIndentedString(accounting)).append("\n");
    sb.append("    amember: ").append(toIndentedString(amember)).append("\n");
    sb.append("    autoOrder: ").append(toIndentedString(autoOrder)).append("\n");
    sb.append("    ccbill: ").append(toIndentedString(ccbill)).append("\n");
    sb.append("    channelPartnerItemMappings: ").append(toIndentedString(channelPartnerItemMappings)).append("\n");
    sb.append("    chargeback: ").append(toIndentedString(chargeback)).append("\n");
    sb.append("    checkout: ").append(toIndentedString(checkout)).append("\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("    creationDts: ").append(toIndentedString(creationDts)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    descriptionTranslatedTextInstanceOid: ").append(toIndentedString(descriptionTranslatedTextInstanceOid)).append("\n");
    sb.append("    digitalDelivery: ").append(toIndentedString(digitalDelivery)).append("\n");
    sb.append("    ebay: ").append(toIndentedString(ebay)).append("\n");
    sb.append("    emailNotifications: ").append(toIndentedString(emailNotifications)).append("\n");
    sb.append("    enrollment123: ").append(toIndentedString(enrollment123)).append("\n");
    sb.append("    fulfillmentAddons: ").append(toIndentedString(fulfillmentAddons)).append("\n");
    sb.append("    giftCertificate: ").append(toIndentedString(giftCertificate)).append("\n");
    sb.append("    googleProductSearch: ").append(toIndentedString(googleProductSearch)).append("\n");
    sb.append("    identifiers: ").append(toIndentedString(identifiers)).append("\n");
    sb.append("    inactive: ").append(toIndentedString(inactive)).append("\n");
    sb.append("    instantPaymentNotifications: ").append(toIndentedString(instantPaymentNotifications)).append("\n");
    sb.append("    internal: ").append(toIndentedString(internal)).append("\n");
    sb.append("    kit: ").append(toIndentedString(kit)).append("\n");
    sb.append("    kitComponentOnly: ").append(toIndentedString(kitComponentOnly)).append("\n");
    sb.append("    kitDefinition: ").append(toIndentedString(kitDefinition)).append("\n");
    sb.append("    lastModifiedDts: ").append(toIndentedString(lastModifiedDts)).append("\n");
    sb.append("    merchantId: ").append(toIndentedString(merchantId)).append("\n");
    sb.append("    merchantItemId: ").append(toIndentedString(merchantItemId)).append("\n");
    sb.append("    merchantItemOid: ").append(toIndentedString(merchantItemOid)).append("\n");
    sb.append("    options: ").append(toIndentedString(options)).append("\n");
    sb.append("    parentCategoryId: ").append(toIndentedString(parentCategoryId)).append("\n");
    sb.append("    parentCategoryPath: ").append(toIndentedString(parentCategoryPath)).append("\n");
    sb.append("    paymentProcessing: ").append(toIndentedString(paymentProcessing)).append("\n");
    sb.append("    physical: ").append(toIndentedString(physical)).append("\n");
    sb.append("    pricing: ").append(toIndentedString(pricing)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("    realtimePricing: ").append(toIndentedString(realtimePricing)).append("\n");
    sb.append("    recommendReplenishmentDays: ").append(toIndentedString(recommendReplenishmentDays)).append("\n");
    sb.append("    related: ").append(toIndentedString(related)).append("\n");
    sb.append("    reporting: ").append(toIndentedString(reporting)).append("\n");
    sb.append("    restriction: ").append(toIndentedString(restriction)).append("\n");
    sb.append("    revguard: ").append(toIndentedString(revguard)).append("\n");
    sb.append("    reviews: ").append(toIndentedString(reviews)).append("\n");
    sb.append("    salesforce: ").append(toIndentedString(salesforce)).append("\n");
    sb.append("    shipping: ").append(toIndentedString(shipping)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    tax: ").append(toIndentedString(tax)).append("\n");
    sb.append("    thirdPartyEmailMarketing: ").append(toIndentedString(thirdPartyEmailMarketing)).append("\n");
    sb.append("    variantItems: ").append(toIndentedString(variantItems)).append("\n");
    sb.append("    variations: ").append(toIndentedString(variations)).append("\n");
    sb.append("    wishlistMember: ").append(toIndentedString(wishlistMember)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("accounting");
    openapiFields.add("amember");
    openapiFields.add("auto_order");
    openapiFields.add("ccbill");
    openapiFields.add("channel_partner_item_mappings");
    openapiFields.add("chargeback");
    openapiFields.add("checkout");
    openapiFields.add("content");
    openapiFields.add("creation_dts");
    openapiFields.add("description");
    openapiFields.add("description_translated_text_instance_oid");
    openapiFields.add("digital_delivery");
    openapiFields.add("ebay");
    openapiFields.add("email_notifications");
    openapiFields.add("enrollment123");
    openapiFields.add("fulfillment_addons");
    openapiFields.add("gift_certificate");
    openapiFields.add("google_product_search");
    openapiFields.add("identifiers");
    openapiFields.add("inactive");
    openapiFields.add("instant_payment_notifications");
    openapiFields.add("internal");
    openapiFields.add("kit");
    openapiFields.add("kit_component_only");
    openapiFields.add("kit_definition");
    openapiFields.add("last_modified_dts");
    openapiFields.add("merchant_id");
    openapiFields.add("merchant_item_id");
    openapiFields.add("merchant_item_oid");
    openapiFields.add("options");
    openapiFields.add("parent_category_id");
    openapiFields.add("parent_category_path");
    openapiFields.add("payment_processing");
    openapiFields.add("physical");
    openapiFields.add("pricing");
    openapiFields.add("properties");
    openapiFields.add("realtime_pricing");
    openapiFields.add("recommend_replenishment_days");
    openapiFields.add("related");
    openapiFields.add("reporting");
    openapiFields.add("restriction");
    openapiFields.add("revguard");
    openapiFields.add("reviews");
    openapiFields.add("salesforce");
    openapiFields.add("shipping");
    openapiFields.add("tags");
    openapiFields.add("tax");
    openapiFields.add("third_party_email_marketing");
    openapiFields.add("variant_items");
    openapiFields.add("variations");
    openapiFields.add("wishlist_member");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to Item
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (Item.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in Item is not found in the empty JSON string", Item.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!Item.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Item` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      // validate the optional field `accounting`
      if (jsonObj.getAsJsonObject("accounting") != null) {
        ItemAccounting.validateJsonObject(jsonObj.getAsJsonObject("accounting"));
      }
      // validate the optional field `amember`
      if (jsonObj.getAsJsonObject("amember") != null) {
        ItemAmember.validateJsonObject(jsonObj.getAsJsonObject("amember"));
      }
      // validate the optional field `auto_order`
      if (jsonObj.getAsJsonObject("auto_order") != null) {
        ItemAutoOrder.validateJsonObject(jsonObj.getAsJsonObject("auto_order"));
      }
      // validate the optional field `ccbill`
      if (jsonObj.getAsJsonObject("ccbill") != null) {
        ItemCCBill.validateJsonObject(jsonObj.getAsJsonObject("ccbill"));
      }
      JsonArray jsonArraychannelPartnerItemMappings = jsonObj.getAsJsonArray("channel_partner_item_mappings");
      if (jsonArraychannelPartnerItemMappings != null) {
        // ensure the json data is an array
        if (!jsonObj.get("channel_partner_item_mappings").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `channel_partner_item_mappings` to be an array in the JSON string but got `%s`", jsonObj.get("channel_partner_item_mappings").toString()));
        }

        // validate the optional field `channel_partner_item_mappings` (array)
        for (int i = 0; i < jsonArraychannelPartnerItemMappings.size(); i++) {
          ItemChannelPartnerMapping.validateJsonObject(jsonArraychannelPartnerItemMappings.get(i).getAsJsonObject());
        };
      }
      // validate the optional field `chargeback`
      if (jsonObj.getAsJsonObject("chargeback") != null) {
        ItemChargeback.validateJsonObject(jsonObj.getAsJsonObject("chargeback"));
      }
      // validate the optional field `checkout`
      if (jsonObj.getAsJsonObject("checkout") != null) {
        ItemCheckout.validateJsonObject(jsonObj.getAsJsonObject("checkout"));
      }
      // validate the optional field `content`
      if (jsonObj.getAsJsonObject("content") != null) {
        ItemContent.validateJsonObject(jsonObj.getAsJsonObject("content"));
      }
      if (jsonObj.get("creation_dts") != null && !jsonObj.get("creation_dts").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `creation_dts` to be a primitive type in the JSON string but got `%s`", jsonObj.get("creation_dts").toString()));
      }
      if (jsonObj.get("description") != null && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      // validate the optional field `digital_delivery`
      if (jsonObj.getAsJsonObject("digital_delivery") != null) {
        ItemDigitalDelivery.validateJsonObject(jsonObj.getAsJsonObject("digital_delivery"));
      }
      // validate the optional field `ebay`
      if (jsonObj.getAsJsonObject("ebay") != null) {
        ItemEbay.validateJsonObject(jsonObj.getAsJsonObject("ebay"));
      }
      // validate the optional field `email_notifications`
      if (jsonObj.getAsJsonObject("email_notifications") != null) {
        ItemEmailNotifications.validateJsonObject(jsonObj.getAsJsonObject("email_notifications"));
      }
      // validate the optional field `enrollment123`
      if (jsonObj.getAsJsonObject("enrollment123") != null) {
        ItemEnrollment123.validateJsonObject(jsonObj.getAsJsonObject("enrollment123"));
      }
      JsonArray jsonArrayfulfillmentAddons = jsonObj.getAsJsonArray("fulfillment_addons");
      if (jsonArrayfulfillmentAddons != null) {
        // ensure the json data is an array
        if (!jsonObj.get("fulfillment_addons").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `fulfillment_addons` to be an array in the JSON string but got `%s`", jsonObj.get("fulfillment_addons").toString()));
        }

        // validate the optional field `fulfillment_addons` (array)
        for (int i = 0; i < jsonArrayfulfillmentAddons.size(); i++) {
          ItemFulfillmentAddon.validateJsonObject(jsonArrayfulfillmentAddons.get(i).getAsJsonObject());
        };
      }
      // validate the optional field `gift_certificate`
      if (jsonObj.getAsJsonObject("gift_certificate") != null) {
        ItemGiftCertificate.validateJsonObject(jsonObj.getAsJsonObject("gift_certificate"));
      }
      // validate the optional field `google_product_search`
      if (jsonObj.getAsJsonObject("google_product_search") != null) {
        ItemGoogleProductSearch.validateJsonObject(jsonObj.getAsJsonObject("google_product_search"));
      }
      // validate the optional field `identifiers`
      if (jsonObj.getAsJsonObject("identifiers") != null) {
        ItemIdentifiers.validateJsonObject(jsonObj.getAsJsonObject("identifiers"));
      }
      // validate the optional field `instant_payment_notifications`
      if (jsonObj.getAsJsonObject("instant_payment_notifications") != null) {
        ItemInstantPaymentNotifications.validateJsonObject(jsonObj.getAsJsonObject("instant_payment_notifications"));
      }
      // validate the optional field `internal`
      if (jsonObj.getAsJsonObject("internal") != null) {
        ItemInternal.validateJsonObject(jsonObj.getAsJsonObject("internal"));
      }
      // validate the optional field `kit_definition`
      if (jsonObj.getAsJsonObject("kit_definition") != null) {
        ItemKitDefinition.validateJsonObject(jsonObj.getAsJsonObject("kit_definition"));
      }
      if (jsonObj.get("last_modified_dts") != null && !jsonObj.get("last_modified_dts").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_modified_dts` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_modified_dts").toString()));
      }
      if (jsonObj.get("merchant_id") != null && !jsonObj.get("merchant_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `merchant_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("merchant_id").toString()));
      }
      if (jsonObj.get("merchant_item_id") != null && !jsonObj.get("merchant_item_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `merchant_item_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("merchant_item_id").toString()));
      }
      JsonArray jsonArrayoptions = jsonObj.getAsJsonArray("options");
      if (jsonArrayoptions != null) {
        // ensure the json data is an array
        if (!jsonObj.get("options").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `options` to be an array in the JSON string but got `%s`", jsonObj.get("options").toString()));
        }

        // validate the optional field `options` (array)
        for (int i = 0; i < jsonArrayoptions.size(); i++) {
          ItemOption.validateJsonObject(jsonArrayoptions.get(i).getAsJsonObject());
        };
      }
      if (jsonObj.get("parent_category_path") != null && !jsonObj.get("parent_category_path").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `parent_category_path` to be a primitive type in the JSON string but got `%s`", jsonObj.get("parent_category_path").toString()));
      }
      // validate the optional field `payment_processing`
      if (jsonObj.getAsJsonObject("payment_processing") != null) {
        ItemPaymentProcessing.validateJsonObject(jsonObj.getAsJsonObject("payment_processing"));
      }
      // validate the optional field `physical`
      if (jsonObj.getAsJsonObject("physical") != null) {
        ItemPhysical.validateJsonObject(jsonObj.getAsJsonObject("physical"));
      }
      // validate the optional field `pricing`
      if (jsonObj.getAsJsonObject("pricing") != null) {
        ItemPricing.validateJsonObject(jsonObj.getAsJsonObject("pricing"));
      }
      JsonArray jsonArrayproperties = jsonObj.getAsJsonArray("properties");
      if (jsonArrayproperties != null) {
        // ensure the json data is an array
        if (!jsonObj.get("properties").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `properties` to be an array in the JSON string but got `%s`", jsonObj.get("properties").toString()));
        }

        // validate the optional field `properties` (array)
        for (int i = 0; i < jsonArrayproperties.size(); i++) {
          ItemProperty.validateJsonObject(jsonArrayproperties.get(i).getAsJsonObject());
        };
      }
      // validate the optional field `realtime_pricing`
      if (jsonObj.getAsJsonObject("realtime_pricing") != null) {
        ItemRealtimePricing.validateJsonObject(jsonObj.getAsJsonObject("realtime_pricing"));
      }
      // validate the optional field `related`
      if (jsonObj.getAsJsonObject("related") != null) {
        ItemRelated.validateJsonObject(jsonObj.getAsJsonObject("related"));
      }
      // validate the optional field `reporting`
      if (jsonObj.getAsJsonObject("reporting") != null) {
        ItemReporting.validateJsonObject(jsonObj.getAsJsonObject("reporting"));
      }
      // validate the optional field `restriction`
      if (jsonObj.getAsJsonObject("restriction") != null) {
        ItemRestriction.validateJsonObject(jsonObj.getAsJsonObject("restriction"));
      }
      // validate the optional field `revguard`
      if (jsonObj.getAsJsonObject("revguard") != null) {
        ItemRevguard.validateJsonObject(jsonObj.getAsJsonObject("revguard"));
      }
      // validate the optional field `reviews`
      if (jsonObj.getAsJsonObject("reviews") != null) {
        ItemReviews.validateJsonObject(jsonObj.getAsJsonObject("reviews"));
      }
      // validate the optional field `salesforce`
      if (jsonObj.getAsJsonObject("salesforce") != null) {
        ItemSalesforce.validateJsonObject(jsonObj.getAsJsonObject("salesforce"));
      }
      // validate the optional field `shipping`
      if (jsonObj.getAsJsonObject("shipping") != null) {
        ItemShipping.validateJsonObject(jsonObj.getAsJsonObject("shipping"));
      }
      // validate the optional field `tags`
      if (jsonObj.getAsJsonObject("tags") != null) {
        ItemTags.validateJsonObject(jsonObj.getAsJsonObject("tags"));
      }
      // validate the optional field `tax`
      if (jsonObj.getAsJsonObject("tax") != null) {
        ItemTax.validateJsonObject(jsonObj.getAsJsonObject("tax"));
      }
      JsonArray jsonArraythirdPartyEmailMarketing = jsonObj.getAsJsonArray("third_party_email_marketing");
      if (jsonArraythirdPartyEmailMarketing != null) {
        // ensure the json data is an array
        if (!jsonObj.get("third_party_email_marketing").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `third_party_email_marketing` to be an array in the JSON string but got `%s`", jsonObj.get("third_party_email_marketing").toString()));
        }

        // validate the optional field `third_party_email_marketing` (array)
        for (int i = 0; i < jsonArraythirdPartyEmailMarketing.size(); i++) {
          ItemThirdPartyEmailMarketing.validateJsonObject(jsonArraythirdPartyEmailMarketing.get(i).getAsJsonObject());
        };
      }
      JsonArray jsonArrayvariantItems = jsonObj.getAsJsonArray("variant_items");
      if (jsonArrayvariantItems != null) {
        // ensure the json data is an array
        if (!jsonObj.get("variant_items").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `variant_items` to be an array in the JSON string but got `%s`", jsonObj.get("variant_items").toString()));
        }

        // validate the optional field `variant_items` (array)
        for (int i = 0; i < jsonArrayvariantItems.size(); i++) {
          ItemVariantItem.validateJsonObject(jsonArrayvariantItems.get(i).getAsJsonObject());
        };
      }
      JsonArray jsonArrayvariations = jsonObj.getAsJsonArray("variations");
      if (jsonArrayvariations != null) {
        // ensure the json data is an array
        if (!jsonObj.get("variations").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `variations` to be an array in the JSON string but got `%s`", jsonObj.get("variations").toString()));
        }

        // validate the optional field `variations` (array)
        for (int i = 0; i < jsonArrayvariations.size(); i++) {
          ItemVariation.validateJsonObject(jsonArrayvariations.get(i).getAsJsonObject());
        };
      }
      // validate the optional field `wishlist_member`
      if (jsonObj.getAsJsonObject("wishlist_member") != null) {
        ItemWishlistMember.validateJsonObject(jsonObj.getAsJsonObject("wishlist_member"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Item.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Item' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Item> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Item.class));

       return (TypeAdapter<T>) new TypeAdapter<Item>() {
           @Override
           public void write(JsonWriter out, Item value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Item read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of Item given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of Item
  * @throws IOException if the JSON string is invalid with respect to Item
  */
  public static Item fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Item.class);
  }

 /**
  * Convert an instance of Item to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

